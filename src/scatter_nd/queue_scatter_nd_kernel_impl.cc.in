/*
 * Copyright Codeplay Software Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "portdnn/mem_object.h"
#include "portdnn/status.h"

#include "src/scatter_nd/queue_scatter_nd_kernel_impl.h"

#include "portdnn/scatter_nd/operators.h"
#include "portdnn/scatter_nd/sizes.h"

// clang-format off
#define SNN_DATA_TYPE        @DATA_TYPE@
#define SNN_INDEX_TYPE       @INDEX_TYPE@
#define SNN_SCATTER_ND_TYPE  @SCATTERND_TYPE@
#define SNN_INDEX_DEPTH      @INDEX_DEPTH@
#define SNN_VECTOR_WIDTH     @VECTOR_WIDTH@

// clang-format on

namespace sycldnn {
namespace scatter_nd {
namespace internal {

#ifdef SNN_ENABLE_USM
template SNNStatus
queue_scatter_nd<SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_SCATTER_ND_TYPE,
                 SNN_INDEX_DEPTH, SNN_VECTOR_WIDTH>(
    USMMemObject<SNN_INDEX_TYPE const>& ind_mem,
    USMMemObject<SNN_DATA_TYPE const>& upd_mem,
    USMMemObject<SNN_DATA_TYPE>& out_mem, ScatterNDSizes const& sizes,
    cl::sycl::queue& queue, const std::vector<cl::sycl::event>& events);
#endif
template SNNStatus
queue_scatter_nd<SNN_DATA_TYPE, SNN_INDEX_TYPE, SNN_SCATTER_ND_TYPE,
                 SNN_INDEX_DEPTH, SNN_VECTOR_WIDTH>(
    BufferMemObject<SNN_INDEX_TYPE const>& ind_mem,
    BufferMemObject<SNN_DATA_TYPE const>& upd_mem,
    BufferMemObject<SNN_DATA_TYPE>& out_mem, ScatterNDSizes const& sizes,
    cl::sycl::queue& queue, const std::vector<cl::sycl::event>& events);

}  // namespace internal
}  // namespace scatter_nd
}  // namespace sycldnn
