/*
 * Copyright Codeplay Software Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "src/roi_align/queue_roi_align_kernel_impl.h"

#include "portdnn/mem_object.h"
#include "portdnn/status.h"

#include "portdnn/roi_align/operators.h"
#include "portdnn/roi_align/params.h"

#include <CL/sycl.hpp>

// clang-format off
#define SNN_DATA_TYPE             @DATA_TYPE@
#define SNN_BATCH_INDICES_TYPE    @BI_TYPE@
#define SNN_INDEX_TYPE            @INDEX_TYPE@
#define SNN_OPERATOR              @OPERATOR@
// clang-format on

namespace sycldnn {
namespace roi_align {
namespace internal {

template SNNStatus
queue_roi_align<SNN_DATA_TYPE, SNN_BATCH_INDICES_TYPE, SNN_INDEX_TYPE,
                SNN_OPERATOR, BufferMemObject>(
    BufferMemObject<SNN_DATA_TYPE const>& in_mem,
    BufferMemObject<SNN_DATA_TYPE const>& roi_mem,
    BufferMemObject<SNN_BATCH_INDICES_TYPE const>& batch_indices_mem,
    BufferMemObject<SNN_DATA_TYPE>& out_mem, const RoiAlignParams& rap,
    size_t threads, cl::sycl::queue& queue,
    const std::vector<cl::sycl::event>& events);

#ifdef SNN_ENABLE_USM

template SNNStatus queue_roi_align<SNN_DATA_TYPE, SNN_BATCH_INDICES_TYPE,
                                   SNN_INDEX_TYPE, SNN_OPERATOR, USMMemObject>(
    USMMemObject<SNN_DATA_TYPE const>& in_mem,
    USMMemObject<SNN_DATA_TYPE const>& roi_mem,
    USMMemObject<SNN_BATCH_INDICES_TYPE const>& batch_indices_mem,
    USMMemObject<SNN_DATA_TYPE>& out_mem, const RoiAlignParams& rap,
    size_t threads, cl::sycl::queue& queue,
    const std::vector<cl::sycl::event>& events);

#endif  // SNN_ENABLE_USM

}  // namespace internal
}  // namespace roi_align
}  // namespace sycldnn
