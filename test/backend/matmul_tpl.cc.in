/*
 * Copyright Codeplay Software Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "test/backend/matmul_backend_test_fixture_impl.h"

#ifdef SNN_TEST_EIGEN
#include "portdnn/backend/eigen_backend.h"
#include "portdnn/backend/eigen_backend_with_snn_matmul.h"
#endif  // SNN_TEST_EIGEN

#ifdef SNN_TEST_SYCLBLAS
#include "portdnn/backend/sycl_blas_backend.h"
#endif  // SNN_TEST_SYCLBLAS

// clang-format off
#define DATA_TYPE_  ${DATA_TYPE}
#define INDEX_TYPE_ ${INDEX_TYPE}
#define BACKEND_TYPE_ ${BACKEND_TYPE}
// clang-format on

using sycldnn::backend::BACKEND_TYPE_;

#define INSTANTIATE_TEMPLATES(TRANSA, TRANSB)                                 \
  template void BackendMatmul<BACKEND_TYPE_>::test_square_matmul<             \
      TRANSA, TRANSB, DATA_TYPE_, INDEX_TYPE_>(                               \
      std::vector<DATA_TYPE_> const& lhs, std::vector<DATA_TYPE_> const& rhs, \
      std::vector<DATA_TYPE_> const& expected, INDEX_TYPE_ dim);              \
  template void BackendMatmul<BACKEND_TYPE_>::test_square_batch_matmul<       \
      TRANSA, TRANSB, DATA_TYPE_, INDEX_TYPE_>(                               \
      std::vector<DATA_TYPE_> const& lhs, std::vector<DATA_TYPE_> const& rhs, \
      std::vector<DATA_TYPE_> const& expected, INDEX_TYPE_ batch,             \
      INDEX_TYPE_ dim)

INSTANTIATE_TEMPLATES(true, true);
INSTANTIATE_TEMPLATES(false, true);
INSTANTIATE_TEMPLATES(true, false);
INSTANTIATE_TEMPLATES(false, false);
