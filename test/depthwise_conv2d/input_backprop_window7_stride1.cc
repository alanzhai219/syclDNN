/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_depthwise_conv2d_tests.py.
// Results calculated using Tensorflow v2.11.0.

#include <gtest/gtest.h>

#include "portdnn/padding_mode.h"

#include "test/types/cartesian_product.h"
#include "test/types/kernel_data_types.h"
#include "test/types/test_backend_types.h"
#include "test/types/to_gtest_types.h"

#include "test/depthwise_conv2d/window_stride_fixture.h"

#include <array>
#include <vector>

using DataTypeList = sycldnn::types::KernelDataTypes;
using Backends = sycldnn::types::DefaultBackendTypes;

using SNNTypePairs =
    sycldnn::types::CartesianProduct<DataTypeList, Backends>::type;
using GTestTypePairs = sycldnn::types::ToGTestTypes<SNNTypePairs>::type;

template <typename Pair>
using InputBackpropWindow7Stride1 =
    sycldnn::depthwise_conv2d::WindowStrideTest<Pair, 7, 1>;
TYPED_TEST_SUITE(InputBackpropWindow7Stride1, GTestTypePairs);
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1876.,  2610.,  3458.,  4424.,  4830.,  4550.,  4140.,  3596.,
      3840.,  5225.,  6790.,  8540.,  9170.,  8485.,  7600.,  6510.,
      6850.,  9185.,  11781., 14644., 15547., 14211., 12590., 10678.,
      11130., 14770., 18767., 23128., 24353., 22064., 19390., 16324.,
      16394., 21490., 26999., 32928., 34153., 30632., 26670., 22260.,
      20998., 27215., 33831., 40852., 42049., 37341., 32210., 26650.,
      23660., 30475., 37660., 45220., 46340., 40915., 35100., 28890.,
      24156., 30990., 38150., 45640., 46634., 41018., 35060., 28756.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  14.,  11.,  35.,  45.,
      55.,  65.,  75.,  85.,  56.,  39.,  105., 115., 125., 135., 145.,
      155., 98.,  67.,  175., 185., 195., 205., 215., 225., 140., 95.,
      245., 255., 265., 275., 285., 295., 182., 123., 315., 325., 335.,
      345., 355., 365., 224., 151., 385., 395., 405., 415., 425., 435.,
      266., 129., 304., 311., 318., 325., 332., 339., 196.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      14144.,  19760.,  26272.,  33712.,  36904.,  34864.,  31800.,  27680.,
      29340.,  40025.,  52130.,  65695.,  70665.,  65510.,  58775.,  50420.,
      52784.,  70900.,  91080.,  113372., 120512., 110304., 97840.,  83072.,
      86268.,  114625., 145810., 179879., 189581., 171934., 151235., 127428.,
      127932., 167825., 210994., 257495., 267197., 239806., 208915., 174468.,
      164864., 213760., 265824., 321104., 330596., 293688., 253420., 209744.,
      186380., 240125., 296810., 356475., 365365., 322670., 276875., 227940.,
      190688., 244680., 301264., 360472., 368368., 324064., 277040., 227264.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,   42.,   62.,   82.,   102.,  122.,  95.,   64.,   224.,
      296.,  368.,  440.,  512.,  584.,  396.,  260.,  728.,  800.,  872.,
      944.,  1016., 1088., 704.,  456.,  1232., 1304., 1376., 1448., 1520.,
      1592., 1012., 652.,  1736., 1808., 1880., 1952., 2024., 2096., 1320.,
      848.,  2240., 2312., 2384., 2456., 2528., 2600., 1628., 1044., 2744.,
      2816., 2888., 2960., 3032., 3104., 1936., 941.,  2246., 2298., 2350.,
      2402., 2454., 2506., 1463.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      109728.,  153640.,  204656.,  263032.,  288344.,  272816.,  249160.,
      217120.,  229240.,  313150.,  408340.,  515130.,  554610.,  514660.,
      462150.,  396760.,  414256.,  556940.,  716040.,  891940.,  948724.,
      868968.,  771260.,  655216.,  679112.,  902930.,  1149260., 1418550.,
      1495774., 1357244., 1194410., 1006824., 1010632., 1326290., 1668044.,
      2036342., 2113566., 1897532., 1653610., 1381352., 1306480., 1694300.,
      2107368., 2546068., 2621668., 2329416., 2010380., 1664176., 1479480.,
      1906350., 2356660., 2830730., 2901570., 2562820., 2199350., 1810840.,
      1515296., 1944520., 2394416., 2865240., 2928184., 2576240., 2202600.,
      1807008.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,   140.,   284.,   428.,   572.,   716.,   860.,   694.,
      420.,  1576.,  2120.,  2664.,  3208.,  3752.,  4296.,  2964.,
      1876., 5384.,  5928.,  6472.,  7016.,  7560.,  8104.,  5316.,
      3332., 9192.,  9736.,  10280., 10824., 11368., 11912., 7668.,
      4788., 13000., 13544., 14088., 14632., 15176., 15720., 10020.,
      6244., 16808., 17352., 17896., 18440., 18984., 19528., 12372.,
      7700., 20616., 21160., 21704., 22248., 22792., 23336., 14724.,
      7166., 17228., 17628., 18028., 18428., 18828., 19228., 11286.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6640.,   7504.,   9320.,   10440.,  12440.,  13832.,  16016.,  17696.,
      17584.,  19320.,  16664.,  18200.,  15240.,  16560.,  13296.,  14384.,
      13980.,  15360.,  19125.,  20900.,  24970.,  27160.,  31535.,  34160.,
      33985.,  36680.,  31570.,  33940.,  28375.,  30400.,  24380.,  26040.,
      25384.,  27400.,  34160.,  36740.,  43956.,  47124.,  54796.,  58576.,
      58324.,  62188.,  53460.,  56844.,  47480.,  50360.,  40360.,  42712.,
      41748.,  44520.,  55545.,  59080.,  70742.,  75068.,  87367.,  92512.,
      92169.,  97412.,  83678.,  88256.,  73675.,  77560.,  62132.,  65296.,
      62356.,  65576.,  81865.,  85960.,  102998., 107996., 125783., 131712.,
      130585., 136612., 117278., 122528., 102235., 106680., 85428.,  89040.,
      80872.,  83992.,  104900., 108860., 130500., 135324., 157696., 163408.,
      162400., 168196., 144324., 149364., 124580., 128840., 103144., 106600.,
      91740.,  94640.,  118225., 121900., 146170., 150640., 175595., 180880.,
      180005., 185360., 159010., 163660., 136475., 140400., 112380., 115560.,
      94064.,  96624.,  120720., 123960., 148664., 152600., 177912., 182560.,
      181832., 186536., 159992., 164072., 136800., 140240., 112240., 115024.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    6.,    16.,   14.,   28.,   22.,   40.,   30.,   52.,
      38.,   64.,   46.,   76.,   39.,   56.,   20.,   44.,   84.,   140.,
      116.,  180.,  148.,  220.,  180.,  260.,  212.,  300.,  244.,  340.,
      172.,  224.,  104.,  156.,  308.,  420.,  340.,  460.,  372.,  500.,
      404.,  540.,  436.,  580.,  468.,  620.,  312.,  392.,  188.,  268.,
      532.,  700.,  564.,  740.,  596.,  780.,  628.,  820.,  660.,  860.,
      692.,  900.,  452.,  560.,  272.,  380.,  756.,  980.,  788.,  1020.,
      820.,  1060., 852.,  1100., 884.,  1140., 916.,  1180., 592.,  728.,
      356.,  492.,  980.,  1260., 1012., 1300., 1044., 1340., 1076., 1380.,
      1108., 1420., 1140., 1460., 732.,  896.,  440.,  604.,  1204., 1540.,
      1236., 1580., 1268., 1620., 1300., 1660., 1332., 1700., 1364., 1740.,
      872.,  1064., 425.,  516.,  1030., 1216., 1054., 1244., 1078., 1272.,
      1102., 1300., 1126., 1328., 1150., 1356., 679.,  784.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      51440.,   58288.,   72380.,   81260.,   96808.,   107848.,  124852.,
      138180.,  137284.,  151060.,  130312.,  142504.,  119340.,  129820.,
      104240.,  112880.,  109140.,  120100.,  149525.,  163625.,  195470.,
      212870.,  247135.,  267995.,  266595.,  288015.,  247910.,  266750.,
      223025.,  239125.,  191780.,  204980.,  199112.,  215144.,  268210.,
      288730.,  345420.,  370620.,  430934.,  461006.,  458990.,  489734.,
      421020.,  447948.,  374170.,  397090.,  318248.,  336968.,  328524.,
      350588.,  437395.,  465535.,  557410.,  591850.,  688793.,  729757.,
      727013.,  768761.,  660394.,  696850.,  581735.,  612675.,  490812.,
      516012.,  492492.,  518140.,  646835.,  679455.,  814114.,  853930.,
      994553.,  1041789., 1032773., 1080793., 927850.,  969682.,  809095.,
      844515.,  676284.,  705068.,  640808.,  665672.,  831370.,  862930.,
      1034460., 1072908., 1250270., 1295798., 1287734., 1333934., 1144620.,
      1184796., 988210.,  1022170., 818312.,  845864.,  728180.,  751300.,
      938525.,  967825.,  1160510., 1196150., 1394295., 1436435., 1429435.,
      1472135., 1262870., 1299950., 1084025., 1115325., 892740.,  918100.,
      747440.,  767856.,  959340.,  985180.,  1181512., 1212904., 1414084.,
      1451156., 1445332., 1482852., 1271848., 1304392., 1087580., 1115020.,
      892400.,  914608.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   90.,    194.,  146.,   282.,  202.,
      370.,   258.,   458.,   314.,   546.,   281.,  413.,   118.,  302.,
      572.,   1004.,  812.,   1308.,  1052.,  1612., 1292.,  1916., 1532.,
      2220.,  1772.,  2524.,  1278.,  1686.,  734.,  1142.,  2252., 3132.,
      2492.,  3436.,  2732.,  3740.,  2972.,  4044., 3212.,  4348., 3452.,
      4652.,  2342.,  2974.,  1350.,  1982.,  3932., 5260.,  4172., 5564.,
      4412.,  5868.,  4652.,  6172.,  4892.,  6476., 5132.,  6780., 3406.,
      4262.,  1966.,  2822.,  5612.,  7388.,  5852., 7692.,  6092., 7996.,
      6332.,  8300.,  6572.,  8604.,  6812.,  8908., 4470.,  5550., 2582.,
      3662.,  7292.,  9516.,  7532.,  9820.,  7772., 10124., 8012., 10428.,
      8252.,  10732., 8492.,  11036., 5534.,  6838., 3198.,  4502., 8972.,
      11644., 9212.,  11948., 9452.,  12252., 9692., 12556., 9932., 12860.,
      10172., 13164., 6598.,  8126.,  3221.,  3945., 7874.,  9354., 8058.,
      9570.,  8242.,  9786.,  8426.,  10002., 8610., 10218., 8794., 10434.,
      5225.,  6061.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      404832.,   459360.,   570360.,   641080.,   763664.,   851600.,
      985768.,   1091944.,  1084776.,  1194536.,  1030544.,  1127696.,
      944440.,   1027960.,  825440.,   894304.,   862360.,   949720.,
      1182350.,  1294750.,  1546660.,  1685380.,  1956570.,  2122890.,
      2111690.,  2282490.,  1964740.,  2114980.,  1768350.,  1896750.,
      1521240.,  1626520.,  1577104.,  1704976.,  2125460.,  2289140.,
      2738520.,  2939544.,  3417820.,  3657724.,  3641596.,  3886876.,
      3341592.,  3556440.,  2970740.,  3153620.,  2527504.,  2676880.,
      2606408.,  2782472.,  3471370.,  3695930.,  4425260.,  4700108.,
      5469870.,  5796798.,  5774846.,  6108046.,  5247116.,  5538092.,
      4623290.,  4870250.,  3901576.,  4102728.,  3914568.,  4119304.,
      5142410.,  5402810.,  6473516.,  6791372.,  7909678.,  8286782.,
      8214654.,  8598030.,  7381388.,  7715372.,  6437690.,  6720490.,
      5381768.,  5611592.,  5101840.,  5300368.,  6619700.,  6871700.,
      8237592.,  8544600.,  9957052.,  10320604., 10256092., 10625020.,
      9117144.,  9437976.,  7872020.,  8143220.,  6519184.,  6739216.,
      5802520.,  5987160.,  7479150.,  7713150.,  9248740.,  9533380.,
      11112570., 11449130., 11393130., 11734170., 10066180., 10362340.,
      8641150.,  8891150.,  7116760.,  7319320.,  5959264.,  6122336.,
      7649080.,  7855480.,  9420944.,  9671696.,  11275880., 11572008.,
      11525416., 11825128., 10142480., 10402448., 8673400.,  8892600.,
      7117152.,  7294560.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,    174.,    220.,   764.,   636.,   1436.,  1052.,  2108.,  1468.,
      2780.,  1884.,   3452.,  2300.,  4124.,  2126.,  3166.,  780.,   2220.,
      4184.,  7576.,   6040.,  9944.,  7896.,  12312., 9752.,  14680., 11608.,
      17048., 13464.,  19416., 9836.,  13068., 5484.,  8716.,  17176., 24152.,
      19032., 26520.,  20888., 28888., 22744., 31256., 24600., 33624., 26456.,
      35992., 18124.,  23148., 10188., 15212., 30168., 40728., 32024., 43096.,
      33880., 45464.,  35736., 47832., 37592., 50200., 39448., 52568., 26412.,
      33228., 14892.,  21708., 43160., 57304., 45016., 59672., 46872., 62040.,
      48728., 64408.,  50584., 66776., 52440., 69144., 34700., 43308., 19596.,
      28204., 56152.,  73880., 58008., 76248., 59864., 78616., 61720., 80984.,
      63576., 83352.,  65432., 85720., 42988., 53388., 24300., 34700., 69144.,
      90456., 71000.,  92824., 72856., 95192., 74712., 97560., 76568., 99928.,
      78424., 102296., 51276., 63468., 25054., 30830., 61532., 73340., 62972.,
      75036., 64412.,  76732., 65852., 78428., 67292., 80124., 68732., 81820.,
      40974., 47646.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      24880.,  26560.,  28272.,  30016.,  35100.,  37280.,  39500.,  41760.,
      47048.,  49760.,  52520.,  55328.,  60788.,  64064.,  67396.,  70784.,
      66948.,  70336.,  73780.,  77280.,  63656.,  66656.,  69704.,  72800.,
      58380.,  60960.,  63580.,  66240.,  51056.,  53184.,  55344.,  57536.,
      53220.,  55920.,  58660.,  61440.,  73025.,  76500.,  80025.,  83600.,
      95590.,  99880.,  104230., 108640., 120995., 126140., 131355., 136640.,
      130655., 135940., 141295., 146720., 121630., 126280., 130990., 135760.,
      109525., 113500., 117525., 121600., 94260.,  97520.,  100820., 104160.,
      97576.,  101536., 105544., 109600., 131570., 136640., 141770., 146960.,
      169596., 175824., 182124., 188496., 211750., 219184., 226702., 234304.,
      225694., 233296., 240982., 248752., 207180., 213840., 220572., 227376.,
      184250., 189920., 195650., 201440., 156808., 161440., 166120., 170848.,
      161532., 166992., 172508., 178080., 215215., 222180., 229215., 236320.,
      274442., 282968., 291578., 300272., 339325., 349468., 359709., 370048.,
      358337., 368676., 379113., 389648., 325682., 334712., 343826., 353024.,
      287035., 294700., 302435., 310240., 242284., 248528., 254828., 261184.,
      243068., 249424., 255836., 262304., 319375., 327460., 335615., 343840.,
      402122., 411992., 421946., 431984., 491421., 503132., 514941., 526848.,
      510433., 522340., 534345., 546448., 458738., 469112., 479570., 490112.,
      400155., 408940., 417795., 426720., 334572., 341712., 348908., 356160.,
      317320., 323488., 329704., 335968., 411770., 419600., 427490., 435440.,
      512460., 522000., 531612., 541296., 619486., 630784., 642166., 653632.,
      638134., 649600., 661150., 672784., 567324., 577296., 587340., 597456.,
      489890., 498320., 506810., 515360., 405736., 412576., 419464., 426400.,
      361220., 366960., 372740., 378560., 465625., 472900., 480225., 487600.,
      575830., 584680., 593590., 602560., 691915., 702380., 712915., 723520.,
      709415., 720020., 730695., 741440., 626830., 636040., 645310., 654640.,
      538125., 545900., 553725., 561600., 443220., 449520., 455860., 462240.,
      371184., 376256., 381360., 386496., 476460., 482880., 489340., 495840.,
      586856., 594656., 602504., 610400., 702436., 711648., 720916., 730240.,
      718004., 727328., 736708., 746144., 631880., 639968., 648104., 656288.,
      540380., 547200., 554060., 560960., 443440., 448960., 454512., 460096.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    9.,    16.,   10.,   24.,   42.,   64.,   34.,   56.,
      82.,   112.,  58.,   88.,   122.,  160.,  82.,   120.,  162.,  208.,
      106.,  152.,  202.,  256.,  130.,  184.,  242.,  304.,  125.,  156.,
      189.,  224.,  38.,   80.,   126.,  176.,  236.,  336.,  444.,  560.,
      348.,  464.,  588.,  720.,  460.,  592.,  732.,  880.,  572.,  720.,
      876.,  1040., 684.,  848.,  1020., 1200., 796.,  976.,  1164., 1360.,
      590.,  688.,  790.,  896.,  318.,  416.,  518.,  624.,  1020., 1232.,
      1452., 1680., 1132., 1360., 1596., 1840., 1244., 1488., 1740., 2000.,
      1356., 1616., 1884., 2160., 1468., 1744., 2028., 2320., 1580., 1872.,
      2172., 2480., 1094., 1248., 1406., 1568., 598.,  752.,  910.,  1072.,
      1804., 2128., 2460., 2800., 1916., 2256., 2604., 2960., 2028., 2384.,
      2748., 3120., 2140., 2512., 2892., 3280., 2252., 2640., 3036., 3440.,
      2364., 2768., 3180., 3600., 1598., 1808., 2022., 2240., 878.,  1088.,
      1302., 1520., 2588., 3024., 3468., 3920., 2700., 3152., 3612., 4080.,
      2812., 3280., 3756., 4240., 2924., 3408., 3900., 4400., 3036., 3536.,
      4044., 4560., 3148., 3664., 4188., 4720., 2102., 2368., 2638., 2912.,
      1158., 1424., 1694., 1968., 3372., 3920., 4476., 5040., 3484., 4048.,
      4620., 5200., 3596., 4176., 4764., 5360., 3708., 4304., 4908., 5520.,
      3820., 4432., 5052., 5680., 3932., 4560., 5196., 5840., 2606., 2928.,
      3254., 3584., 1438., 1760., 2086., 2416., 4156., 4816., 5484., 6160.,
      4268., 4944., 5628., 6320., 4380., 5072., 5772., 6480., 4492., 5200.,
      5916., 6640., 4604., 5328., 6060., 6800., 4716., 5456., 6204., 6960.,
      3110., 3488., 3870., 4256., 1521., 1700., 1881., 2064., 3754., 4120.,
      4490., 4864., 3842., 4216., 4594., 4976., 3930., 4312., 4698., 5088.,
      4018., 4408., 4802., 5200., 4106., 4504., 4906., 5312., 4194., 4600.,
      5010., 5424., 2509., 2716., 2925., 3136.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      195728.,  209104.,  222736.,  236624.,  276500.,  293860.,  311540.,
      329540.,  371032.,  392632.,  414616.,  436984.,  479836.,  505932.,
      532476.,  559468.,  528892.,  555884.,  583324.,  611212.,  503320.,
      527224.,  551512.,  576184.,  461940.,  482500.,  503380.,  524580.,
      404240.,  421200.,  438416.,  455888.,  420420.,  441940.,  463780.,
      485940.,  577325.,  605025.,  633125.,  661625.,  756230.,  790430.,
      825110.,  860270.,  957775.,  998795.,  1040375., 1082515., 1034775.,
      1076915., 1119615., 1162875., 963830.,  1000910., 1038470., 1076510.,
      868325.,  900025.,  932125.,  964625.,  747620.,  773620.,  799940.,
      826580.,  772760.,  804344.,  836312.,  868664.,  1042510., 1082950.,
      1123870., 1165270., 1344420., 1394100., 1444356., 1495188., 1679258.,
      1738562., 1798538., 1859186., 1790474., 1851122., 1912442., 1974434.,
      1644228., 1697364., 1751076., 1805364., 1462750., 1507990., 1553710.,
      1599910., 1245272., 1282232., 1319576., 1357304., 1281420., 1324988.,
      1369004., 1413468., 1707895., 1763475., 1819615., 1876315., 2178610.,
      2246650., 2315362., 2384746., 2694461., 2775409., 2857141., 2939657.,
      2846165., 2928681., 3011981., 3096065., 2587522., 2659594., 2732338.,
      2805754., 2281055., 2342235., 2403975., 2466275., 1925868., 1975708.,
      2025996., 2076732., 1931916., 1982652., 2033836., 2085468., 2538935.,
      2603475., 2668575., 2734235., 3197362., 3276154., 3355618., 3435754.,
      3908093., 4001585., 4095861., 4190921., 4059797., 4154857., 4250701.,
      4347329., 3649282., 3732106., 3815602., 3899770., 3183775., 3253915.,
      3324615., 3395875., 2662380., 2719388., 2776844., 2834748., 2526296.,
      2575544., 2625176., 2675192., 3278590., 3341110., 3404110., 3467590.,
      4080708., 4156884., 4233636., 4310964., 4933418., 5023634., 5114522.,
      5206082., 5082266., 5173826., 5266058., 5358962., 4518756., 4598388.,
      4678596., 4759380., 3902350., 3969670., 4037470., 4105750., 3232280.,
      3286904., 3341912., 3397304., 2878340., 2924180., 2970340., 3016820.,
      3710525., 3768625., 3827125., 3886025., 4589030., 4659710., 4730870.,
      4802510., 5514495., 5598075., 5682215., 5766915., 5654215., 5738915.,
      5824175., 5909995., 4996310., 5069870., 5143910., 5218430., 4289525.,
      4351625., 4414125., 4477025., 3533220., 3583540., 3634180., 3685140.,
      2959376., 2999888., 3040656., 3081680., 3798900., 3850180., 3901780.,
      3953700., 4679320., 4741624., 4804312., 4867384., 5601148., 5674732.,
      5748764., 5823244., 5725468., 5799948., 5874876., 5950252., 5038936.,
      5103544., 5168536., 5233912., 4309460., 4363940., 4418740., 4473860.,
      3536528., 3580624., 3624976., 3669584.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    61.,    113.,   58.,    162.,   298.,   466.,   234.,
      402.,   602.,   834.,   410.,   642.,   906.,   1202.,  586.,   882.,
      1210.,  1570.,  762.,   1122.,  1514.,  1938.,  938.,   1362.,  1818.,
      2306.,  941.,   1185.,  1445.,  1721.,  226.,   554.,   914.,   1306.,
      1700.,  2484.,  3332.,  4244.,  2564.,  3476.,  4452.,  5492.,  3428.,
      4468.,  5572.,  6740.,  4292.,  5460.,  6692.,  7988.,  5156.,  6452.,
      7812.,  9236.,  6020.,  7444.,  8932.,  10484., 4530.,  5306.,  6114.,
      6954.,  2354.,  3130.,  3938.,  4778.,  7748.,  9428.,  11172., 12980.,
      8612.,  10420., 12292., 14228., 9476.,  11412., 13412., 15476., 10340.,
      12404., 14532., 16724., 11204., 13396., 15652., 17972., 12068., 14388.,
      16772., 19220., 8450.,  9674.,  10930., 12218., 4482.,  5706.,  6962.,
      8250.,  13796., 16372., 19012., 21716., 14660., 17364., 20132., 22964.,
      15524., 18356., 21252., 24212., 16388., 19348., 22372., 25460., 17252.,
      20340., 23492., 26708., 18116., 21332., 24612., 27956., 12370., 14042.,
      15746., 17482., 6610.,  8282.,  9986.,  11722., 19844., 23316., 26852.,
      30452., 20708., 24308., 27972., 31700., 21572., 25300., 29092., 32948.,
      22436., 26292., 30212., 34196., 23300., 27284., 31332., 35444., 24164.,
      28276., 32452., 36692., 16290., 18410., 20562., 22746., 8738.,  10858.,
      13010., 15194., 25892., 30260., 34692., 39188., 26756., 31252., 35812.,
      40436., 27620., 32244., 36932., 41684., 28484., 33236., 38052., 42932.,
      29348., 34228., 39172., 44180., 30212., 35220., 40292., 45428., 20210.,
      22778., 25378., 28010., 10866., 13434., 16034., 18666., 31940., 37204.,
      42532., 47924., 32804., 38196., 43652., 49172., 33668., 39188., 44772.,
      50420., 34532., 40180., 45892., 51668., 35396., 41172., 47012., 52916.,
      36260., 42164., 48132., 54164., 24130., 27146., 30194., 33274., 11813.,
      13241., 14685., 16145., 29306., 32226., 35178., 38162., 29994., 32978.,
      35994., 39042., 30682., 33730., 36810., 39922., 31370., 34482., 37626.,
      40802., 32058., 35234., 38442., 41682., 32746., 35986., 39258., 42562.,
      19661., 21313., 22981., 24665.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1552608.,  1659360.,  1768160.,  1879008.,  2194840.,  2333400.,
      2474520.,  2618200.,  2946896.,  3119312.,  3294800.,  3473360.,
      3812872.,  4021192.,  4233096.,  4448584.,  4204424.,  4419912.,
      4638984.,  4861640.,  4002896.,  4193744.,  4387664.,  4584656.,
      3675160.,  3839320.,  4006040.,  4175320.,  3217120.,  3352544.,
      3490016.,  3629536.,  3124952.,  3264024.,  3405656.,  3549848.,
      4232750.,  4404798.,  4580046.,  4758494.,  5450692.,  5658276.,
      5869700.,  6084964.,  6783898.,  7029578.,  7279738.,  7534378.,
      7300474.,  7555114.,  7814234.,  8077834.,  6644740.,  6867172.,
      7093444.,  7323556.,  5825614.,  6013278.,  6204142.,  6398206.,
      4837976.,  4988312.,  5141208.,  5296664.,  4581968.,  4735952.,
      4893008.,  5053136.,  5825956.,  6017924.,  6213732.,  6413380.,
      7195768.,  7428792.,  7666424.,  7908664.,  8697548.,  8974700.,
      9257228.,  9545132.,  9258252.,  9546156.,  9839436.,  10138092.,
      8274936.,  8527416.,  8784504.,  9046200.,  7108452.,  7322436.,
      7540260.,  7761924.,  5752656.,  5925072.,  6100560.,  6279120.,
      5321544.,  5505800.,  5693640.,  5885064.,  6560762.,  6791850.,
      7027418.,  7267466.,  7956844.,  8238348.,  8525228.,  8817484.,
      9516958.,  9852462.,  10194238., 10542286., 10171966., 10520014.,
      10874334., 11234926., 9056300.,  9361868.,  9672812.,  9989132.,
      7722330.,  7981834.,  8245818.,  8514282.,  6162888.,  6372744.,
      6586184.,  6803208.,  5451592.,  5660424.,  5872840.,  6088840.,
      6522618.,  6784426.,  7050714.,  7321482.,  7775084.,  8093452.,
      8417196.,  8746316.,  9216158.,  9594670.,  9979454.,  10370510.,
      9871166.,  10262222., 10659550., 11063150., 8759852.,  9102284.,
      9450092.,  9803276.,  7405658.,  7695882.,  7990586.,  8289770.,
      5801416.,  6035848.,  6273864.,  6515464.,  4440912.,  4637904.,
      4837968.,  5041104.,  6019300.,  6265028.,  6514596.,  6768004.,
      7766520.,  8064056.,  8366200.,  8672952.,  9688716.,  10041132.,
      10398924., 10762092., 10321100., 10684268., 11052812., 11426732.,
      9427320.,  9744312.,  10065912., 10392120., 8307364.,  8575108.,
      8846692.,  9122116.,  6955088.,  7170512.,  7389008.,  7610576.,
      5687768.,  5857560.,  6029912.,  6204824.,  7250926.,  7461374.,
      7675022.,  7891870.,  8954948.,  9208612.,  9466116.,  9727460.,
      10804954., 11104394., 11408314., 11716714., 11364538., 11672938.,
      11985818., 12303178., 10108036., 10376548., 10648900., 10925092.,
      8657422.,  8883486.,  9112750.,  9345214.,  7007576.,  7188632.,
      7372248.,  7558424.,  4768480.,  4895712.,  5024992.,  5156320.,
      5736472.,  5892440.,  6050968.,  6212056.,  6802000.,  6988752.,
      7178576.,  7371472.,  7969160.,  8188744.,  8411912.,  8638664.,
      8405768.,  8632520.,  8862856.,  9096776.,  7312208.,  7509200.,
      7709264.,  7912400.,  6071960.,  6237144.,  6404888.,  6575192.,
      4680928.,  4812256.,  4945632.,  5081056.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    446.,    846.,    380.,    1180.,   2236.,   3548.,
      1724.,   3036.,   4604.,   6428.,   3068.,   4892.,   6972.,   9308.,
      4412.,   6748.,   9340.,   12188.,  5756.,   8604.,   11708.,  15068.,
      7100.,   10460.,  14076.,  17948.,  7294.,   9230.,   11294.,  13486.,
      1500.,   4092.,   6940.,   10044.,  12856.,  19064.,  25784.,  33016.,
      19640.,  26872.,  34616.,  42872.,  26424.,  34680.,  43448.,  52728.,
      33208.,  42488.,  52280.,  62584.,  39992.,  50296.,  61112.,  72440.,
      46776.,  58104.,  69944.,  82296.,  35484.,  41660.,  48092.,  54780.,
      18076.,  24252.,  30684.,  37372.,  60344.,  73720.,  87608.,  102008.,
      67128.,  81528.,  96440.,  111864., 73912.,  89336.,  105272., 121720.,
      80696.,  97144.,  114104., 131576., 87480.,  104952., 122936., 141432.,
      94264.,  112760., 131768., 151288., 66396.,  76156.,  86172.,  96444.,
      34652.,  44412.,  54428.,  64700.,  107832., 128376., 149432., 171000.,
      114616., 136184., 158264., 180856., 121400., 143992., 167096., 190712.,
      128184., 151800., 175928., 200568., 134968., 159608., 184760., 210424.,
      141752., 167416., 193592., 220280., 97308.,  110652., 124252., 138108.,
      51228.,  64572.,  78172.,  92028.,  155320., 183032., 211256., 239992.,
      162104., 190840., 220088., 249848., 168888., 198648., 228920., 259704.,
      175672., 206456., 237752., 269560., 182456., 214264., 246584., 279416.,
      189240., 222072., 255416., 289272., 128220., 145148., 162332., 179772.,
      67804.,  84732.,  101916., 119356., 202808., 237688., 273080., 308984.,
      209592., 245496., 281912., 318840., 216376., 253304., 290744., 328696.,
      223160., 261112., 299576., 338552., 229944., 268920., 308408., 348408.,
      236728., 276728., 317240., 358264., 159132., 179644., 200412., 221436.,
      84380.,  104892., 125660., 146684., 250296., 292344., 334904., 377976.,
      257080., 300152., 343736., 387832., 263864., 307960., 352568., 397688.,
      270648., 315768., 361400., 407544., 277432., 323576., 370232., 417400.,
      284216., 331384., 379064., 427256., 190044., 214140., 238492., 263100.,
      93086.,  104494., 116030., 127694., 231548., 254876., 278460., 302300.,
      236988., 260828., 284924., 309276., 242428., 266780., 291388., 316252.,
      247868., 272732., 297852., 323228., 253308., 278684., 304316., 330204.,
      258748., 284636., 310780., 337180., 155646., 168846., 182174., 195630.};
  const std::array<int, 4> in_shape = {{1, 8, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2048.,  2840.,  3752.,  4788.,  5194.,  5600.,  5240.,  4740.,  4096.,
      4220.,  5725.,  7420.,  9310.,  9940.,  10570., 9730.,  8675.,  7400.,
      7560.,  10110., 12936., 16044., 16947., 17850., 16248., 14340., 12120.,
      12320., 16310., 20678., 25431., 26656., 27881., 25172., 22050., 18508.,
      18242., 23870., 29939., 36456., 37681., 38906., 34811., 30240., 25186.,
      23424., 30315., 37632., 45381., 46578., 47775., 42348., 36465., 30120.,
      26430., 34000., 41965., 50330., 51450., 52570., 46345., 39700., 32630.,
      27008., 34610., 42560., 50862., 51856., 52850., 46424., 39630., 32464.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   10.,  16.,  22.,  28.,  34.,  32.,  21.,  12.,  38.,  80.,
      101., 122., 143., 164., 138., 84.,  47.,  122., 227., 248., 269., 290.,
      311., 250., 147., 82.,  206., 374., 395., 416., 437., 458., 362., 210.,
      117., 290., 521., 542., 563., 584., 605., 474., 273., 152., 374., 668.,
      689., 710., 731., 752., 586., 336., 187., 458., 815., 836., 857., 878.,
      899., 698., 399., 172., 391., 658., 673., 688., 703., 718., 533., 294.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      15472.,  21540.,  28552.,  36540.,  39732.,  42924.,  40264.,  36500.,
      31600.,  32300.,  43925.,  57050.,  71715.,  76685.,  81655.,  75290.,
      67225.,  57420.,  58344.,  78150.,  100140., 124362., 131502., 138642.,
      126348., 111630., 94440.,  95620.,  126735., 160846., 198009., 207711.,
      217413., 196462., 172235., 144676., 142492., 186585., 234178., 285327.,
      295029., 304731., 272818., 237125., 197596., 184056., 238290., 295908.,
      356958., 366450., 375942., 333348., 287130., 237240., 208340., 268075.,
      330950., 397005., 405895., 414785., 365750., 313375., 257620., 213328.,
      273420., 336280., 401940., 409836., 417732., 367000., 313340., 256720.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,   59.,   101.,  143.,  185.,  227.,  222.,  149.,
      70.,   244.,  538.,  694.,  850.,  1006., 1162., 996.,  614.,
      322.,  860.,  1630., 1786., 1942., 2098., 2254., 1836., 1090.,
      574.,  1476., 2722., 2878., 3034., 3190., 3346., 2676., 1566.,
      826.,  2092., 3814., 3970., 4126., 4282., 4438., 3516., 2042.,
      1078., 2708., 4906., 5062., 5218., 5374., 5530., 4356., 2518.,
      1330., 3324., 5998., 6154., 6310., 6466., 6622., 5196., 2994.,
      1283., 2938., 4973., 5087., 5201., 5315., 5429., 4050., 2243.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      120160.,  167640.,  222608.,  285320.,  310632.,  335944.,  315536.,
      286360.,  248160.,  252600.,  343950.,  447220.,  562730.,  602210.,
      641690.,  592180.,  529150.,  452280.,  458256.,  614340.,  787800.,
      979020.,  1035804., 1092588., 996312.,  880740.,  745488.,  753256.,
      998970.,  1268540., 1562414., 1639638., 1716862., 1552124., 1361290.,
      1143912., 1126216., 1475250., 1852172., 2257430., 2334654., 2411878.,
      2159948., 1877890., 1565256., 1459152., 1889460., 2346744., 2831388.,
      2906988., 2982588., 2645112., 2278740., 1883088., 1654360., 2128950.,
      2628580., 3153570., 3224410., 3295250., 2906020., 2490150., 2047320.,
      1695712., 2173560., 2673488., 3195752., 3258696., 3321640., 2918480.,
      2491960., 2041824.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,   140.,   394.,   706.,   1018.,  1330.,  1642.,  1644.,  1118.,
      460.,  1720.,  3908.,  5108.,  6308.,  7508.,  8708.,  7544.,  4684.,
      2364., 6424.,  12308., 13508., 14708., 15908., 17108., 14040., 8380.,
      4268., 11128., 20708., 21908., 23108., 24308., 25508., 20536., 12076.,
      6172., 15832., 29108., 30308., 31508., 32708., 33908., 27032., 15772.,
      8076., 20536., 37508., 38708., 39908., 41108., 42308., 33528., 19468.,
      9980., 25240., 45908., 47108., 48308., 49508., 50708., 40024., 23164.,
      9894., 22748., 38626., 39514., 40402., 41290., 42178., 31548., 17510.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7280.,   8192.,   10180.,  11360.,  13544.,  15008.,  17388.,  19152.,
      18956.,  20776.,  20524.,  22400.,  19304.,  20960.,  17540.,  18960.,
      15216.,  16384.,  15420.,  16880.,  21025.,  22900.,  27370.,  29680.,
      34475.,  37240.,  36925.,  39760.,  39375.,  42280.,  36370.,  38920.,
      32525.,  34700.,  27820.,  29600.,  28104.,  30240.,  37710.,  40440.,
      48396.,  51744.,  60186.,  64176.,  63714.,  67788.,  67242.,  71400.,
      61356.,  64992.,  54270.,  57360.,  45960.,  48480.,  46340.,  49280.,
      61495.,  65240.,  78134.,  82712.,  96285.,  101724., 101087., 106624.,
      105889., 111524., 95774.,  100688., 84035.,  88200.,  70644.,  74032.,
      69524.,  72968.,  91105.,  95480.,  114422., 119756., 139503., 145824.,
      144305., 150724., 149107., 155624., 133574., 139244., 116165., 120960.,
      96852.,  100744., 90360.,  93696.,  117030., 121260., 145380., 150528.,
      175434., 181524., 180138., 186312., 184842., 191100., 163956., 169392.,
      141270., 145860., 116760., 120480., 102620., 105720., 132075., 136000.,
      163090., 167860., 195685., 201320., 200095., 205800., 204505., 210280.,
      180370., 185380., 154575., 158800., 127100., 130520., 105296., 108032.,
      134980., 138440., 166040., 170240., 198492., 203448., 202412., 207424.,
      206332., 211400., 181304., 185696., 154820., 158520., 126864., 129856.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    6.,    16.,   19.,   40.,   37.,   64.,   55.,   88.,
      73.,   112.,  91.,   136.,  94.,   128.,  65.,   84.,   22.,   48.,
      92.,   152.,  218.,  320.,  290.,  404.,  362.,  488.,  434.,  572.,
      506.,  656.,  444.,  552.,  278.,  336.,  134.,  188.,  372.,  488.,
      722.,  908.,  794.,  992.,  866.,  1076., 938.,  1160., 1010., 1244.,
      836.,  1000., 502.,  588.,  246.,  328.,  652.,  824.,  1226., 1496.,
      1298., 1580., 1370., 1664., 1442., 1748., 1514., 1832., 1228., 1448.,
      726.,  840.,  358.,  468.,  932.,  1160., 1730., 2084., 1802., 2168.,
      1874., 2252., 1946., 2336., 2018., 2420., 1620., 1896., 950.,  1092.,
      470.,  608.,  1212., 1496., 2234., 2672., 2306., 2756., 2378., 2840.,
      2450., 2924., 2522., 3008., 2012., 2344., 1174., 1344., 582.,  748.,
      1492., 1832., 2738., 3260., 2810., 3344., 2882., 3428., 2954., 3512.,
      3026., 3596., 2404., 2792., 1398., 1596., 595.,  688.,  1374., 1564.,
      2341., 2632., 2395., 2692., 2449., 2752., 2503., 2812., 2557., 2872.,
      1918., 2132., 1067., 1176.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      56464.,   63696.,   79140.,   88500.,   105496.,  117112.,  135660.,
      149660.,  148092.,  162540.,  160524.,  175420.,  151192.,  164344.,
      137540.,  148820.,  119440.,  128720.,  120500.,  132100.,  164525.,
      179425.,  214430.,  232790.,  270375.,  292355.,  289835.,  312375.,
      309295.,  332395.,  285950.,  306230.,  255925.,  273225.,  219060.,
      233220.,  220632.,  237624.,  296310.,  318030.,  380580.,  407220.,
      473634.,  505386.,  501690.,  534114.,  529746.,  562842.,  483684.,
      512628.,  428070.,  452670.,  362712.,  382776.,  364924.,  388332.,
      484575.,  514395.,  616042.,  652498.,  759549.,  802865.,  797769.,
      841869.,  835989.,  880873.,  756490.,  795634.,  664055.,  697235.,
      558460.,  585452.,  549388.,  576828.,  720195.,  755055.,  904834.,
      947338.,  1103529., 1153901., 1141749., 1192905., 1179969., 1231909.,
      1057378., 1102570., 919835.,  958055.,  767116.,  798140.,  716280.,
      742872.,  927870.,  961590.,  1152852., 1193892., 1391418., 1439970.,
      1428882., 1478106., 1466346., 1516242., 1300884., 1344228., 1121070.,
      1157670., 926712.,  956376.,  814820.,  839540.,  1048825., 1080125.,
      1295270., 1333310., 1554315., 1599255., 1589455., 1634955., 1624595.,
      1670655., 1433030., 1472990., 1228225., 1261925., 1010020., 1037300.,
      836944.,  858768.,  1072980., 1100580., 1319992., 1353496., 1578108.,
      1617644., 1609356., 1649340., 1640604., 1681036., 1441720., 1476760.,
      1231220., 1260740., 1008976., 1032848.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   119.,   275.,   251.,   455.,   383.,
      635.,   515.,   815.,   647.,   995.,   690.,   954.,   485.,   633.,
      130.,   330.,   628.,   1092.,  1558.,  2350.,  2110.,  2998.,  2662.,
      3646.,  3214.,  4294.,  3766.,  4942.,  3348.,  4196.,  2114.,  2570.,
      970.,   1394.,  2756.,  3668.,  5422.,  6886.,  5974.,  7534.,  6526.,
      8182.,  7078.,  8830.,  7630.,  9478.,  6372.,  7668.,  3850.,  4530.,
      1810.,  2458.,  4884.,  6244.,  9286.,  11422., 9838.,  12070., 10390.,
      12718., 10942., 13366., 11494., 14014., 9396.,  11140., 5586.,  6490.,
      2650.,  3522.,  7012.,  8820.,  13150., 15958., 13702., 16606., 14254.,
      17254., 14806., 17902., 15358., 18550., 12420., 14612., 7322.,  8450.,
      3490.,  4586.,  9140.,  11396., 17014., 20494., 17566., 21142., 18118.,
      21790., 18670., 22438., 19222., 23086., 15444., 18084., 9058.,  10410.,
      4330.,  5650.,  11268., 13972., 20878., 25030., 21430., 25678., 21982.,
      26326., 22534., 26974., 23086., 27622., 18468., 21556., 10794., 12370.,
      4577.,  5317.,  10618., 12130., 18155., 20471., 18575., 20939., 18995.,
      21407., 19415., 21875., 19835., 22343., 14922., 16626., 8321.,  9189.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      444640.,   502240.,   623960.,   698520.,   832592.,   925136.,
      1071560.,  1183112.,  1170568.,  1285704.,  1269576.,  1388296.,
      1196624.,  1301456.,  1089240.,  1179160.,  946400.,   1020384.,
      952600.,   1045080.,  1301550.,  1420350.,  1697380.,  1843780.,
      2141370.,  2316650.,  2296490.,  2476250.,  2451610.,  2635850.,
      2267620.,  2429380.,  2030350.,  2168350.,  1738520.,  1851480.,
      1748304.,  1883856.,  2349060.,  2522340.,  3018360.,  3230904.,
      3757740.,  4011084.,  3981516.,  4240236.,  4205292.,  4469388.,
      3840888.,  4071864.,  3400260.,  3596580.,  2881872.,  3042000.,
      2896264.,  3083080.,  3847130.,  4085130.,  4892300.,  5183276.,
      6033566.,  6379310.,  6338542.,  6690558.,  6643518.,  7001806.,
      6013196.,  6325676.,  5279610.,  5544490.,  4440968.,  4656456.,
      4367944.,  4587016.,  5727050.,  6005370.,  7196588.,  7535948.,
      8778350.,  9180542.,  9083326.,  9491790.,  9388302.,  9803038.,
      8414252.,  8775116.,  7320810.,  7626010.,  6106184.,  6353928.,
      5703888.,  5916240.,  7389540.,  7658820.,  9182136.,  9509880.,
      11083212., 11470956., 11382252., 11775372., 11681292., 12079788.,
      10364088., 10710264., 8932260.,  9224580.,  7384272.,  7621200.,
      6494040.,  6691480.,  8359550.,  8609550.,  10324420., 10628260.,
      12389930., 12748890., 12670490., 13033930., 12951050., 13318970.,
      11424580., 11743780., 9792350.,  10061550., 8053080.,  8271000.,
      6673888.,  6848224.,  8556440.,  8776920.,  10526672., 10794320.,
      12585608., 12901448., 12835144., 13154568., 13084680., 13407688.,
      11498960., 11778896., 9820440.,  10056280., 8048096.,  8238816.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    826.,    2026.,   1834.,   3418.,
      2842.,   4810.,   3850.,   6202.,   4858.,   7594.,   5276.,   7356.,
      3742.,   4910.,   860.,    2428.,   4600.,   8248.,   11732.,  17972.,
      16052.,  23060.,  20372.,  28148.,  24692.,  33236.,  29012.,  38324.,
      25976.,  32696.,  16476.,  20092.,  7356.,   10716.,  21176.,  28408.,
      41972.,  53588.,  46292.,  58676.,  50612.,  63764.,  54932.,  68852.,
      59252.,  73940.,  49720.,  60024.,  30140.,  35548.,  13852.,  19004.,
      37752.,  48568.,  72212.,  89204.,  76532.,  94292.,  80852.,  99380.,
      85172.,  104468., 89492.,  109556., 73464.,  87352.,  43804.,  51004.,
      20348.,  27292.,  54328.,  68728.,  102452., 124820., 106772., 129908.,
      111092., 134996., 115412., 140084., 119732., 145172., 97208.,  114680.,
      57468.,  66460.,  26844.,  35580.,  70904.,  88888.,  132692., 160436.,
      137012., 165524., 141332., 170612., 145652., 175700., 149972., 180788.,
      120952., 142008., 71132.,  81916.,  33340.,  43868.,  87480.,  109048.,
      162932., 196052., 167252., 201140., 171572., 206228., 175892., 211316.,
      180212., 216404., 144696., 169336., 84796.,  97372.,  35886.,  41790.,
      83452.,  95516.,  142954., 161434., 146266., 165130., 149578., 168826.,
      152890., 172522., 156202., 176218., 117692., 131292., 65710.,  72638.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      27344.,  29120.,  30928.,  32768.,  38420.,  40720.,  43060.,  45440.,
      51320.,  54176.,  57080.,  60032.,  66108.,  69552.,  73052.,  76608.,
      72268.,  75824.,  79436.,  83104.,  78428.,  82096.,  85820.,  89600.,
      73976.,  77216.,  80504.,  83840.,  67380.,  70160.,  72980.,  75840.,
      58576.,  60864.,  63184.,  65536.,  58820.,  61680.,  64580.,  67520.,
      80425.,  84100.,  87825.,  91600.,  104950., 109480., 114070., 118720.,
      132475., 137900., 143395., 148960., 142135., 147700., 153335., 159040.,
      151795., 157500., 163275., 169120., 140470., 145480., 150550., 155680.,
      125825., 130100., 134425., 138800., 107780., 111280., 114820., 118400.,
      108216., 112416., 116664., 120960., 145470., 150840., 156270., 161760.,
      186996., 193584., 200244., 206976., 232890., 240744., 248682., 256704.,
      246834., 254856., 262962., 271152., 260778., 268968., 277242., 285600.,
      238260., 245424., 252660., 259968., 210990., 217080., 223230., 229440.,
      178872., 183840., 188856., 193920., 179564., 185360., 191212., 197120.,
      238595., 245980., 253435., 260960., 303506., 312536., 321650., 330848.,
      374409., 385140., 395969., 406896., 393421., 404348., 415373., 426496.,
      412433., 423556., 434777., 446096., 373394., 383096., 392882., 402752.,
      327915., 336140., 344435., 352800., 275884., 282576., 289324., 296128.,
      271292., 278096., 284956., 291872., 355775., 364420., 373135., 381920.,
      447146., 457688., 468314., 479024., 545517., 558012., 570605., 583296.,
      564529., 577220., 590009., 602896., 583541., 596428., 609413., 622496.,
      523082., 534296., 545594., 556976., 455175., 464660., 474215., 483840.,
      379708., 387408., 395164., 402976., 354840., 361440., 368088., 374784.,
      459750., 468120., 476550., 485040., 571332., 581520., 591780., 602112.,
      689682., 701736., 713874., 726096., 708330., 720552., 732858., 745248.,
      726978., 739368., 751842., 764400., 645060., 655824., 666660., 677568.,
      555990., 565080., 574230., 583440., 459672., 467040., 474456., 481920.,
      404340., 410480., 416660., 422880., 520525., 528300., 536125., 544000.,
      642910., 652360., 661870., 671440., 771575., 782740., 793975., 805280.,
      789075., 800380., 811755., 823200., 806575., 818020., 829535., 841120.,
      711550., 721480., 731470., 741520., 609925., 618300., 626725., 635200.,
      501620., 508400., 515220., 522080., 415760., 421184., 426640., 432128.,
      533060., 539920., 546820., 553760., 655832., 664160., 672536., 680960.,
      784140., 793968., 803852., 813792., 799708., 809648., 819644., 829696.,
      815276., 825328., 835436., 845600., 716504., 725216., 733976., 742784.,
      611940., 619280., 626660., 634080., 501520., 507456., 513424., 519424.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    43.,
      76.,    115.,   160.,   103.,   148.,   199.,   256.,   163.,   220.,
      283.,   352.,   223.,   292.,   367.,   448.,   283.,   364.,   451.,
      544.,   314.,   376.,   442.,   512.,   225.,   260.,   297.,   336.,
      42.,    88.,    138.,   192.,   260.,   368.,   484.,   608.,   686.,
      872.,   1070.,  1280.,  950.,   1160.,  1382.,  1616.,  1214.,  1448.,
      1694.,  1952.,  1478.,  1736.,  2006.,  2288.,  1742.,  2024.,  2318.,
      2624.,  1572.,  1776.,  1988.,  2208.,  1002.,  1112.,  1226.,  1344.,
      434.,   536.,   642.,   752.,   1268.,  1488.,  1716.,  1952.,  2534.,
      2888.,  3254.,  3632.,  2798.,  3176.,  3566.,  3968.,  3062.,  3464.,
      3878.,  4304.,  3326.,  3752.,  4190.,  4640.,  3590.,  4040.,  4502.,
      4976.,  3028.,  3344.,  3668.,  4000.,  1842.,  2008.,  2178.,  2352.,
      826.,   984.,   1146.,  1312.,  2276.,  2608.,  2948.,  3296.,  4382.,
      4904.,  5438.,  5984.,  4646.,  5192.,  5750.,  6320.,  4910.,  5480.,
      6062.,  6656.,  5174.,  5768.,  6374.,  6992.,  5438.,  6056.,  6686.,
      7328.,  4484.,  4912.,  5348.,  5792.,  2682.,  2904.,  3130.,  3360.,
      1218.,  1432.,  1650.,  1872.,  3284.,  3728.,  4180.,  4640.,  6230.,
      6920.,  7622.,  8336.,  6494.,  7208.,  7934.,  8672.,  6758.,  7496.,
      8246.,  9008.,  7022.,  7784.,  8558.,  9344.,  7286.,  8072.,  8870.,
      9680.,  5940.,  6480.,  7028.,  7584.,  3522.,  3800.,  4082.,  4368.,
      1610.,  1880.,  2154.,  2432.,  4292.,  4848.,  5412.,  5984.,  8078.,
      8936.,  9806.,  10688., 8342.,  9224.,  10118., 11024., 8606.,  9512.,
      10430., 11360., 8870.,  9800.,  10742., 11696., 9134.,  10088., 11054.,
      12032., 7396.,  8048.,  8708.,  9376.,  4362.,  4696.,  5034.,  5376.,
      2002.,  2328.,  2658.,  2992.,  5300.,  5968.,  6644.,  7328.,  9926.,
      10952., 11990., 13040., 10190., 11240., 12302., 13376., 10454., 11528.,
      12614., 13712., 10718., 11816., 12926., 14048., 10982., 12104., 13238.,
      14384., 8852.,  9616.,  10388., 11168., 5202.,  5592.,  5986.,  6384.,
      2197.,  2380.,  2565.,  2752.,  5122.,  5496.,  5874.,  6256.,  8791.,
      9364.,  9943.,  10528., 8995.,  9580.,  10171., 10768., 9199.,  9796.,
      10399., 11008., 9403.,  10012., 10627., 11248., 9607.,  10228., 10855.,
      11488., 7250.,  7672.,  8098.,  8528.,  4053.,  4268.,  4485.,  4704.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      215248.,  229392.,  243792.,  258448.,  302820.,  321140.,  339780.,
      358740.,  404920.,  427672.,  450808.,  474328.,  522060.,  549500.,
      577388.,  605724.,  571116.,  599452.,  628236.,  657468.,  620172.,
      649404.,  679084.,  709212.,  585400.,  611224.,  637432.,  664024.,
      533540.,  555700.,  578180.,  600980.,  464080.,  482320.,  500816.,
      519568.,  464900.,  487700.,  510820.,  534260.,  636125.,  665425.,
      695125.,  725225.,  830630.,  866750.,  903350.,  940430.,  1049055.,
      1092315., 1136135., 1180515., 1126055., 1170435., 1215375., 1260875.,
      1203055., 1248555., 1294615., 1341235., 1113830., 1153790., 1194230.,
      1235150., 998125.,  1032225., 1066725., 1101625., 855300.,  883220.,
      911460.,  940020.,  857400.,  890904.,  924792.,  959064.,  1153110.,
      1195950., 1239270., 1283070., 1482900., 1535460., 1588596., 1642308.,
      1847538., 1910202., 1973538., 2037546., 1958754., 2022762., 2087442.,
      2152794., 2069970., 2135322., 2201346., 2268042., 1891860., 1949028.,
      2006772., 2065092., 1675830., 1724430., 1773510., 1823070., 1421112.,
      1460760., 1500792., 1541208., 1425004., 1471260., 1517964., 1565116.,
      1894095., 1953035., 2012535., 2072595., 2410114., 2482186., 2554930.,
      2628346., 2973957., 3059609., 3146045., 3233265., 3125661., 3212881.,
      3300885., 3389673., 3277365., 3366153., 3455725., 3546081., 2967874.,
      3045322., 3123442., 3202234., 2606975., 2672635., 2738855., 2805635.,
      2193772., 2247196., 2301068., 2355388., 2156812., 2211132., 2265900.,
      2321116., 2829015., 2898035., 2967615., 3037755., 3556210., 3640378.,
      3725218., 3810730., 4339293., 4439057., 4539605., 4640937., 4490997.,
      4592329., 4694445., 4797345., 4642701., 4745601., 4849285., 4953753.,
      4162354., 4251898., 4342114., 4433002., 3622535., 3698275., 3774575.,
      3851435., 3022348., 3083836., 3145772., 3208156., 2825592., 2878296.,
      2931384., 2984856., 3661350., 3728190., 3795510., 3863310., 4550388.,
      4631748., 4713684., 4796196., 5493474., 5589738., 5686674., 5784282.,
      5642322., 5739930., 5838210., 5937162., 5791170., 5890122., 5989746.,
      6090042., 5139060., 5225028., 5311572., 5398692., 4429830., 4502430.,
      4575510., 4649070., 3662712., 3721560., 3780792., 3840408., 3222500.,
      3271540., 3320900., 3370580., 4148725., 4210825., 4273325., 4336225.,
      5124470., 5199950., 5275910., 5352350., 6150375., 6239555., 6329295.,
      6419595., 6290095., 6380395., 6471255., 6562675., 6429815., 6521235.,
      6613215., 6705755., 5672630., 5751950., 5831750., 5912030., 4862725.,
      4929625., 4996925., 5064625., 3999460., 4053620., 4108100., 4162900.,
      3315280., 3358608., 3402192., 3446032., 4250820., 4305620., 4360740.,
      4416180., 5230072., 5296600., 5363512., 5430808., 6253548., 6332060.,
      6411020., 6490428., 6377868., 6457276., 6537132., 6617436., 6502188.,
      6582492., 6663244., 6744444., 5714680., 5784280., 5854264., 5924632.,
      4880900., 4939540., 4998500., 5057780., 4000336., 4047760., 4095440.,
      4143376.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    61.,     113.,    58.,    162.,   298.,    466.,
      287.,   539.,   839.,    1187.,   743.,   1091.,  1487.,   1931.,
      1199.,  1643.,  2135.,   2675.,   1655.,  2195.,  2783.,   3419.,
      2111.,  2747.,  3431.,   4163.,   2394.,  2882.,  3402.,   3954.,
      1733.,  2009.,  2301.,   2609.,   250.,   610.,   1002.,   1426.,
      1876.,  2724.,  3636.,   4612.,   5134.,  6598.,  8158.,   9814.,
      7198.,  8854.,  10606.,  12454.,  9262.,  11110., 13054.,  15094.,
      11326., 13366., 15502.,  17734.,  13390., 15622., 17950.,  20374.,
      12180., 13796., 15476.,  17220.,  7802.,  8674.,  9578.,   10514.,
      3274.,  4082.,  4922.,   5794.,   9716.,  11460., 13268.,  15140.,
      19582., 22390., 25294.,  28294.,  21646., 24646., 27742.,  30934.,
      23710., 26902., 30190.,  33574.,  25774., 29158., 32638.,  36214.,
      27838., 31414., 35086.,  38854.,  23604., 26116., 28692.,  31332.,
      14410., 15730., 17082.,  18466.,  6298.,  7554.,  8842.,   10162.,
      17556., 20196., 22900.,  25668.,  34030., 38182., 42430.,  46774.,
      36094., 40438., 44878.,  49414.,  38158., 42694., 47326.,  52054.,
      40222., 44950., 49774.,  54694.,  42286., 47206., 52222.,  57334.,
      35028., 38436., 41908.,  45444.,  21018., 22786., 24586.,  26418.,
      9322.,  11026., 12762.,  14530.,  25396., 28932., 32532.,  36196.,
      48478., 53974., 59566.,  65254.,  50542., 56230., 62014.,  67894.,
      52606., 58486., 64462.,  70534.,  54670., 60742., 66910.,  73174.,
      56734., 62998., 69358.,  75814.,  46452., 50756., 55124.,  59556.,
      27626., 29842., 32090.,  34370.,  12346., 14498., 16682.,  18898.,
      33236., 37668., 42164.,  46724.,  62926., 69766., 76702.,  83734.,
      64990., 72022., 79150.,  86374.,  67054., 74278., 81598.,  89014.,
      69118., 76534., 84046.,  91654.,  71182., 78790., 86494.,  94294.,
      57876., 63076., 68340.,  73668.,  34234., 36898., 39594.,  42322.,
      15370., 17970., 20602.,  23266.,  41076., 46404., 51796.,  57252.,
      77374., 85558., 93838.,  102214., 79438., 87814., 96286.,  104854.,
      81502., 90070., 98734.,  107494., 83566., 92326., 101182., 110134.,
      85630., 94582., 103630., 112774., 69300., 75396., 81556.,  87780.,
      40842., 43954., 47098.,  50274.,  17213., 18673., 20149.,  21641.,
      40234., 43218., 46234.,  49282.,  69191., 73763., 78383.,  83051.,
      70799., 75467., 80183.,  84947.,  72407., 77171., 81983.,  86843.,
      74015., 78875., 83783.,  88739.,  75623., 80579., 85583.,  90635.,
      57162., 60530., 63930.,  67362.,  31997., 33713., 35445.,  37193.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1708000.,  1820896.,  1935840.,  2052832.,  2404440.,  2550680.,
      2699480.,  2850840.,  3211728.,  3385168.,  3561680.,  3741264.,
      4106312.,  4309000.,  4515272.,  4725128.,  4427208.,  4628872.,
      4834120.,  5042952.,  4715336.,  4915976.,  5120200.,  5328008.,
      4309456.,  4482896.,  4659408.,  4838992.,  3767128.,  3911320.,
      4058072.,  4207384.,  3084256.,  3197152.,  3312096.,  3429088.,
      3479512.,  3628824.,  3780696.,  3935128.,  4701550.,  4886398.,
      5074446.,  5265694.,  5809476.,  6024228.,  6242820.,  6465252.,
      7010138.,  7257354.,  7509050.,  7765226.,  7226682.,  7474666.,
      7727130.,  7984074.,  7410458.,  7659210.,  7912442.,  8170154.,
      6477892.,  6690596.,  6907140.,  7127524.,  5366574.,  5540670.,
      5717966.,  5898462.,  4071384.,  4204312.,  4339800.,  4477848.,
      5257168.,  5426512.,  5598928.,  5774416.,  6675588.,  6886756.,
      7101764.,  7320612.,  7771320.,  8019192.,  8271672.,  8528760.,
      8981612.,  9269260.,  9562284.,  9860684.,  9012908.,  9303116.,
      9598700.,  9899660.,  9011436.,  9304204.,  9602348.,  9905868.,
      7675576.,  7927544.,  8184120.,  8445304.,  6135044.,  6343140.,
      6555076.,  6770852.,  4383696.,  4544848.,  4709072.,  4876368.,
      6336456.,  6542216.,  6751560.,  6964488.,  7817626.,  8075594.,
      8338042.,  8604970.,  8783916.,  9089484.,  9400428.,  9716748.,
      9902974.,  10259726., 10622750., 10992046., 9799198.,  10160302.,
      10527678., 10901326., 9662654.,  10028110., 10399838., 10777838.,
      8108332.,  8424140.,  8745324.,  9071884.,  6307034.,  6569610.,
      6836666.,  7108202.,  4251592.,  4457352.,  4666696.,  4879624.,
      6740296.,  6953224.,  7169736.,  7389832.,  8031866.,  8296746.,
      8566106.,  8839946.,  8578156.,  8890380.,  9207980.,  9530956.,
      9276190.,  9639342.,  10008766., 10384462., 8741310.,  9100622.,
      9466206.,  9838062.,  8375390.,  8739054.,  9108990.,  9485198.,
      7793004.,  8107276.,  8426924.,  8751948.,  6964666.,  7225962.,
      7491738.,  7761994.,  5883208.,  6087944.,  6296264.,  6508168.,
      5374672.,  5574736.,  5777872.,  5984080.,  6992196.,  7239716.,
      7491076.,  7746276.,  8670008.,  8959864.,  9254328.,  9553400.,
      10484908., 10820172., 11160812., 11506828., 10517228., 10846860.,
      11181868., 11522252., 10947884., 11280076., 11617644., 11960588.,
      9679160.,  9964920.,  10255288., 10550264., 8183236.,  8419492.,
      8659588.,  8903524.,  6453968.,  6637648.,  6824400.,  7014224.,
      6030424.,  6201240.,  6374616.,  6550552.,  7389710.,  7599390.,
      7812270.,  8028350.,  8549892.,  8792804.,  9039556.,  9290148.,
      9816122.,  10094826., 10378010., 10665674., 9316890.,  9588170.,
      9863930.,  10144170., 9445370.,  9717418.,  9993946.,  10274954.,
      8023300.,  8255972.,  8492484.,  8732836.,  6409166.,  6599902.,
      6793838.,  6990974.,  4597848.,  4744088.,  4892888.,  5044248.,
      4255200.,  4380384.,  4507616.,  4636896.,  4707544.,  4858904.,
      5012824.,  5169304.,  5247184.,  5426768.,  5609424.,  5795152.,
      5878216.,  6088072.,  6301512.,  6518536.,  5424968.,  5633800.,
      5846216.,  6062216.,  5861576.,  6077576.,  6297160.,  6520328.,
      5014736.,  5202512.,  5393360.,  5587280.,  4027352.,  4184856.,
      4344920.,  4507544.,  2895328.,  3020512.,  3147744.,  3277024.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    446.,    846.,    380.,    1180.,   2236.,   3548.,
      2074.,   4042.,   6394.,   9130.,   5626.,   8362.,   11482.,  14986.,
      9178.,   12682.,  16570.,  20842.,  12730.,  17002.,  21658.,  26698.,
      16282.,  21322.,  26746.,  32554.,  18684.,  22556.,  26684.,  31068.,
      13598.,  15790.,  18110.,  20558.,  1660.,   4508.,   7612.,   10972.,
      14200.,  20920.,  28152.,  35896.,  39668.,  51284.,  63668.,  76820.,
      55988.,  69140.,  83060.,  97748.,  72308.,  86996.,  102452., 118676.,
      88628.,  104852., 121844., 139604., 104948., 122708., 141236., 160532.,
      95864.,  108728., 122104., 135992., 61564.,  68508.,  75708.,  83164.,
      25404.,  31836.,  38524.,  45468.,  76024.,  89912.,  104312., 119224.,
      153908., 176276., 199412., 223316., 170228., 194132., 218804., 244244.,
      186548., 211988., 238196., 265172., 202868., 229844., 257588., 286100.,
      219188., 247700., 276980., 307028., 186360., 206392., 226936., 247992.,
      113980., 124508., 135292., 146332., 49148.,  59164.,  69436.,  79964.,
      137848., 158904., 180472., 202552., 268148., 301268., 335156., 369812.,
      284468., 319124., 354548., 390740., 300788., 336980., 373940., 411668.,
      317108., 354836., 393332., 432596., 333428., 372692., 412724., 453524.,
      276856., 304056., 331768., 359992., 166396., 180508., 194876., 209500.,
      72892.,  86492.,  100348., 114460., 199672., 227896., 256632., 285880.,
      382388., 426260., 470900., 516308., 398708., 444116., 490292., 537236.,
      415028., 461972., 509684., 558164., 431348., 479828., 529076., 579092.,
      447668., 497684., 548468., 600020., 367352., 401720., 436600., 471992.,
      218812., 236508., 254460., 272668., 96636.,  113820., 131260., 148956.,
      261496., 296888., 332792., 369208., 496628., 551252., 606644., 662804.,
      512948., 569108., 626036., 683732., 529268., 586964., 645428., 704660.,
      545588., 604820., 664820., 725588., 561908., 622676., 684212., 746516.,
      457848., 499384., 541432., 583992., 271228., 292508., 314044., 335836.,
      120380., 141148., 162172., 183452., 323320., 365880., 408952., 452536.,
      610868., 676244., 742388., 809300., 627188., 694100., 761780., 830228.,
      643508., 711956., 781172., 851156., 659828., 729812., 800564., 872084.,
      676148., 747668., 819956., 893012., 548344., 597048., 646264., 695992.,
      323644., 348508., 373628., 399004., 136254., 147918., 159710., 171630.,
      318908., 342748., 366844., 391196., 548986., 585514., 622426., 659722.,
      561754., 599050., 636730., 674794., 574522., 612586., 651034., 689866.,
      587290., 626122., 665338., 704938., 600058., 639658., 679642., 720010.,
      453948., 480860., 508028., 535452., 254270., 267982., 281822., 295790.};
  const std::array<int, 4> in_shape = {{1, 8, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2220.,  3070.,  4046.,  5152.,  5558.,  5964.,  6370.,  5930.,  5340.,
      4596.,  4600.,  6225.,  8050.,  10080., 10710., 11340., 11970., 10975.,
      9750.,  8290.,  8270.,  11035., 14091., 17444., 18347., 19250., 20153.,
      18285., 16090., 13562., 13510., 17850., 22589., 27734., 28959., 30184.,
      31409., 28280., 24710., 20692., 20090., 26250., 32879., 39984., 41209.,
      42434., 43659., 38990., 33810., 28112., 25850., 33415., 41433., 49910.,
      51107., 52304., 53501., 47355., 40720., 33590., 29200., 37525., 46270.,
      55440., 56560., 57680., 58800., 51775., 44300., 36370., 29860., 38230.,
      46970., 56084., 57078., 58072., 59066., 51830., 44200., 36172.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   10.,  20.,   30.,   40.,   50.,   52.,   45.,  28.,
      13.,  41.,  86.,  150.,  186.,  222.,  258.,  239.,  191., 112.,
      55.,  139., 254., 402.,  438.,  474.,  510.,  449.,  345., 196.,
      97.,  237., 422., 654.,  690.,  726.,  762.,  659.,  499., 280.,
      139., 335., 590., 906.,  942.,  978.,  1014., 869.,  653., 364.,
      181., 433., 758., 1158., 1194., 1230., 1266., 1079., 807., 448.,
      223., 531., 926., 1410., 1446., 1482., 1518., 1289., 961., 532.,
      215., 478., 790., 1152., 1178., 1204., 1230., 1006., 727., 392.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      16800.,  23320.,  30832.,  39368.,  42560.,  45752.,  48944.,  45664.,
      41200.,  35520.,  35260.,  47825.,  61970.,  77735.,  82705.,  87675.,
      92645.,  85070.,  75675.,  64420.,  63904.,  85400.,  109200., 135352.,
      142492., 149632., 156772., 142392., 125420., 105808., 104972., 138845.,
      175882., 216139., 225841., 235543., 245245., 220990., 193235., 161924.,
      157052., 205345., 257362., 313159., 322861., 332563., 342265., 305830.,
      265335., 220724., 203248., 262820., 325992., 392812., 402304., 411796.,
      421288., 373008., 320840., 264736., 230300., 296025., 365090., 437535.,
      446425., 455315., 464205., 408830., 349875., 287300., 235968., 302160.,
      371296., 443408., 451304., 459200., 467096., 409936., 349640., 286176.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,   59.,   124.,   196.,   268.,   340.,   365.,  322.,  203.,
      76.,   264.,  580.,  1040.,  1312.,  1584.,  1856.,  1744., 1408., 832.,
      384.,  992.,  1840., 2944.,  3216.,  3488.,  3760.,  3340., 2584., 1476.,
      692.,  1720., 3100., 4848.,  5120.,  5392.,  5664.,  4936., 3760., 2120.,
      1000., 2448., 4360., 6752.,  7024.,  7296.,  7568.,  6532., 4936., 2764.,
      1308., 3176., 5620., 8656.,  8928.,  9200.,  9472.,  8128., 6112., 3408.,
      1616., 3904., 6880., 10560., 10832., 11104., 11376., 9724., 7288., 4052.,
      1625., 3630., 6023., 8812.,  9012.,  9212.,  9412.,  7721., 5594., 3023.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      130592.,  181640.,  240560.,  307608.,  332920.,  358232.,  383544.,
      358256.,  323560.,  279200.,  275960.,  374750.,  486100.,  610330.,
      649810.,  689290.,  728770.,  669700.,  596150.,  507800.,  502256.,
      671740.,  859560.,  1066100., 1122884., 1179668., 1236452., 1123656.,
      990220.,  835760.,  827400.,  1095010., 1387820., 1706278., 1783502.,
      1860726., 1937950., 1747004., 1528170., 1281000., 1241800., 1624210.,
      2036300., 2478518., 2555742., 2632966., 2710190., 2422364., 2102170.,
      1749160., 1611824., 2084620., 2586120., 3116708., 3192308., 3267908.,
      3343508., 2960808., 2547100., 2102000., 1829240., 2351550., 2900500.,
      3476410., 3547250., 3618090., 3688930., 3249220., 2780950., 2283800.,
      1876128., 2402600., 2952560., 3526264., 3589208., 3652152., 3715096.,
      3260720., 2781320., 2276640.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,    140.,   394.,   856.,   1400.,  1944.,  2488.,  2722.,  2428.,
      1542.,  500.,   1864.,  4220.,  7696.,  9808.,  11920., 14032., 13292.,
      10792., 6404.,  2852.,  7464.,  13964., 22480., 24592., 26704., 28816.,
      25724., 19976., 11444., 5204.,  13064., 23708., 37264., 39376., 41488.,
      43600., 38156., 29160., 16484., 7556.,  18664., 33452., 52048., 54160.,
      56272., 58384., 50588., 38344., 21524., 9908.,  24264., 43196., 66832.,
      68944., 71056., 73168., 63020., 47528., 26564., 12260., 29864., 52940.,
      81616., 83728., 85840., 87952., 75452., 56712., 31604., 12622., 28268.,
      47002., 68888., 70456., 72024., 73592., 60466., 43868., 23734.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7920.,   8880.,   11040.,  12280.,  14648.,  16184.,  18760.,  20608.,
      20328.,  22232.,  21896.,  23856.,  23464.,  25480.,  21944.,  23720.,
      19840.,  21360.,  17136.,  18384.,  16860.,  18400.,  22925.,  24900.,
      29770.,  32200.,  37415.,  40320.,  39865.,  42840.,  42315.,  45360.,
      44765.,  47880.,  41170.,  43900.,  36675.,  39000.,  31260.,  33160.,
      30824.,  33080.,  41260.,  44140.,  52836.,  56364.,  65576.,  69776.,
      69104.,  73388.,  72632.,  77000.,  76160.,  80612.,  69252.,  73140.,
      61060.,  64360.,  51560.,  54248.,  50932.,  54040.,  67445.,  71400.,
      85526.,  90356.,  105203., 110936., 110005., 115836., 114807., 120736.,
      119609., 125636., 107870., 113120., 94395.,  98840.,  79156.,  82768.,
      76692.,  80360.,  100345., 105000., 125846., 131516., 153223., 159936.,
      158025., 164836., 162827., 169736., 167629., 174636., 149870., 155960.,
      130095., 135240., 108276., 112448., 99848.,  103400., 129160., 133660.,
      160260., 165732., 193172., 199640., 197876., 204428., 202580., 209216.,
      207284., 214004., 183588., 189420., 157960., 162880., 130376., 134360.,
      113500., 116800., 145925., 150100., 180010., 185080., 215775., 221760.,
      220185., 226240., 224595., 230720., 229005., 235200., 201730., 207100.,
      172675., 177200., 141820., 145480., 116528., 119440., 149240., 152920.,
      183416., 187880., 219072., 224336., 222992., 228312., 226912., 232288.,
      230832., 236264., 202616., 207320., 172840., 176800., 141488., 144688.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    6.,    16.,   19.,   40.,   44.,   80.,   76.,   120.,
      108.,  160.,  140.,  200.,  157.,  208.,  142.,  180.,  91.,   112.,
      24.,   52.,   100.,  164.,  236.,  344.,  440.,  600.,  568.,  744.,
      696.,  888.,  824.,  1032., 788.,  956.,  644.,  764.,  384.,  448.,
      164.,  220.,  436.,  556.,  824.,  1016., 1336., 1608., 1464., 1752.,
      1592., 1896., 1720., 2040., 1544., 1796., 1204., 1380., 692.,  784.,
      304.,  388.,  772.,  948.,  1412., 1688., 2232., 2616., 2360., 2760.,
      2488., 2904., 2616., 3048., 2300., 2636., 1764., 1996., 1000., 1120.,
      444.,  556.,  1108., 1340., 2000., 2360., 3128., 3624., 3256., 3768.,
      3384., 3912., 3512., 4056., 3056., 3476., 2324., 2612., 1308., 1456.,
      584.,  724.,  1444., 1732., 2588., 3032., 4024., 4632., 4152., 4776.,
      4280., 4920., 4408., 5064., 3812., 4316., 2884., 3228., 1616., 1792.,
      724.,  892.,  1780., 2124., 3176., 3704., 4920., 5640., 5048., 5784.,
      5176., 5928., 5304., 6072., 4568., 5156., 3444., 3844., 1924., 2128.,
      765.,  860.,  1718., 1912., 2863., 3160., 4204., 4608., 4300., 4712.,
      4396., 4816., 4492., 4920., 3697., 4024., 2686., 2908., 1455., 1568.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      61488.,   69104.,   85900.,   95740.,   114184.,  126376.,  146468.,
      161140.,  158900.,  174020.,  171332.,  186900.,  183764.,  199780.,
      172072.,  186184.,  155740.,  167820.,  134640.,  144560.,  131860.,
      144100.,  179525.,  195225.,  233390.,  252710.,  293615.,  316715.,
      313075.,  336735.,  332535.,  356755.,  351995.,  376775.,  323990.,
      345710.,  288825.,  307325.,  246340.,  261460.,  242152.,  260104.,
      324410.,  347330.,  415740.,  443820.,  516334.,  549766.,  544390.,
      578494.,  572446.,  607222.,  600502.,  635950.,  546348.,  577308.,
      481970.,  508250.,  407176.,  428584.,  401324.,  426076.,  531755.,
      563255.,  674674.,  713146.,  830305.,  875973.,  868525.,  914977.,
      906745.,  953981.,  944965.,  992985.,  852586.,  894418.,  746375.,
      781795.,  626108.,  654892.,  606284.,  635516.,  793555.,  830655.,
      995554.,  1040746., 1212505., 1266013., 1250725., 1305017., 1288945.,
      1344021., 1327165., 1383025., 1186906., 1235458., 1030575., 1071595.,
      857948.,  891212.,  791752.,  820072.,  1024370., 1060250., 1271244.,
      1314876., 1532566., 1584142., 1570030., 1622278., 1607494., 1660414.,
      1644958., 1698550., 1457148., 1503660., 1253930., 1293170., 1035112.,
      1066888., 901460.,  927780.,  1159125., 1192425., 1430030., 1470470.,
      1714335., 1762075., 1749475., 1797775., 1784615., 1833475., 1819755.,
      1869175., 1603190., 1646030., 1372425., 1408525., 1127300., 1156500.,
      926448.,  949680.,  1186620., 1215980., 1458472., 1494088., 1742132.,
      1784132., 1773380., 1815828., 1804628., 1847524., 1835876., 1879220.,
      1611592., 1649128., 1374860., 1406460., 1125552., 1151088.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   119.,   275.,   292.,   564.,   532.,
      868.,   772.,   1172.,  1012.,  1476.,  1163.,  1559.,  1066.,  1362.,
      689.,   853.,   142.,   358.,   684.,   1180.,  1690.,  2530.,  3224.,
      4472.,  4216.,  5592.,  5208.,  6712.,  6200.,  7832.,  5986.,  7306.,
      4924.,  5868.,  2950.,  3454.,  1206.,  1646.,  3260.,  4204.,  6226.,
      7738.,  10168., 12312., 11160., 13432., 12152., 14552., 13144., 15672.,
      11866., 13858., 9292.,  10684., 5358.,  6086.,  2270.,  2934.,  5836.,
      7228.,  10762., 12946., 17112., 20152., 18104., 21272., 19096., 22392.,
      20088., 23512., 17746., 20410., 13660., 15500., 7766.,  8718.,  3334.,
      4222.,  8412.,  10252., 15298., 18154., 24056., 27992., 25048., 29112.,
      26040., 30232., 27032., 31352., 23626., 26962., 18028., 20316., 10174.,
      11350., 4398.,  5510.,  10988., 13276., 19834., 23362., 31000., 35832.,
      31992., 36952., 32984., 38072., 33976., 39192., 29506., 33514., 22396.,
      25132., 12582., 13982., 5462.,  6798.,  13564., 16300., 24370., 28570.,
      37944., 43672., 38936., 44792., 39928., 45912., 40920., 47032., 35386.,
      40066., 26764., 29948., 14990., 16614., 5933.,  6689.,  13362., 14906.,
      22319., 24683., 32836., 36052., 33588., 36868., 34340., 37684., 35092.,
      38500., 28931., 31535., 21050., 22818., 11417., 12317.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      484448.,   545120.,   677560.,   755960.,   901520.,   998672.,
      1157352.,  1274280.,  1256360.,  1376872.,  1355368.,  1479464.,
      1454376.,  1582056.,  1362704.,  1475216.,  1234040.,  1330360.,
      1067360.,  1146464.,  1042840.,  1140440.,  1420750.,  1545950.,
      1848100.,  2002180.,  2326170.,  2510410.,  2481290.,  2670010.,
      2636410.,  2829610.,  2791530.,  2989210.,  2570500.,  2743780.,
      2292350.,  2439950.,  1955800.,  2076440.,  1919504.,  2062736.,
      2572660.,  2755540.,  3298200.,  3522264.,  4097660.,  4364444.,
      4321436.,  4593596.,  4545212.,  4822748.,  4768988.,  5051900.,
      4340184.,  4587288.,  3829780.,  4039540.,  3236240.,  3407120.,
      3186120.,  3383688.,  4222890.,  4474330.,  5359340.,  5666444.,
      6597262.,  6961822.,  6902238.,  7273070.,  7207214.,  7584318.,
      7512190.,  7895566.,  6779276.,  7113260.,  5935930.,  6218730.,
      4980360.,  5210184.,  4821320.,  5054728.,  6311690.,  6607930.,
      7919660.,  8280524.,  9647022.,  10074302., 9951998.,  10385550.,
      10256974., 10696798., 10561950., 11008046., 9447116.,  9834860.,
      8203930.,  8531530.,  6830600.,  7096264.,  6305936.,  6532112.,
      8159380.,  8445940.,  10126680., 10475160., 12209372., 12621308.,
      12508412., 12925724., 12807452., 13230140., 13106492., 13534556.,
      11611032., 11982552., 9992500.,  10305940., 8249360.,  8503184.,
      7185560.,  7395800.,  9239950.,  9505950.,  11400100., 11723140.,
      13667290., 14048650., 13947850., 14333690., 14228410., 14618730.,
      14508970., 14903770., 12782980., 13125220., 10943550., 11231950.,
      8989400.,  9222680.,  7388512.,  7574112.,  9463800.,  9698360.,
      11632400., 11916944., 13895336., 14230888., 14144872., 14484008.,
      14394408., 14737128., 14643944., 14990248., 12855440., 13155344.,
      10967480., 11219960., 8979040.,  9183072.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    826.,    2026.,   2104.,   4216.,
      3960.,   6584.,   5816.,   8952.,   7672.,   11320.,  8938.,   12058.,
      8252.,   10588.,  5358.,   6654.,   940.,    2636.,   5016.,   8920.,
      12740.,  19364.,  24624.,  34480.,  32432.,  43312.,  40240.,  52144.,
      48048.,  60976.,  46628.,  57092.,  38488.,  45976.,  23116.,  27116.,
      9228.,   12716.,  25176.,  32664.,  48356.,  60356.,  79280.,  96304.,
      87088.,  105136., 94896.,  113968., 102704., 122800., 92996.,  108836.,
      72984.,  84056.,  42156.,  47948.,  17516.,  22796.,  45336.,  56408.,
      83972.,  101348., 133936., 158128., 141744., 166960., 149552., 175792.,
      157360., 184624., 139364., 160580., 107480., 122136., 61196.,  68780.,
      25804.,  32876.,  65496.,  80152.,  119588., 142340., 188592., 219952.,
      196400., 228784., 204208., 237616., 212016., 246448., 185732., 212324.,
      141976., 160216., 80236.,  89612.,  34092.,  42956.,  85656.,  103896.,
      155204., 183332., 243248., 281776., 251056., 290608., 258864., 299440.,
      266672., 308272., 232100., 264068., 176472., 198296., 99276.,  110444.,
      42380.,  53036.,  105816., 127640., 190820., 224324., 297904., 343600.,
      305712., 352432., 313520., 361264., 321328., 370096., 278468., 315812.,
      210968., 236376., 118316., 131276., 46718.,  52750.,  105372., 117692.,
      176218., 195082., 259512., 285176., 265464., 291640., 271416., 298104.,
      277368., 304568., 228874., 249658., 166652., 180764., 90446.,  97630.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      29808.,  31680.,  33584.,  35520.,  41740.,  44160.,  46620.,  49120.,
      55592.,  58592.,  61640.,  64736.,  71428.,  75040.,  78708.,  82432.,
      77588.,  81312.,  85092.,  88928.,  83748.,  87584.,  91476.,  95424.,
      89908.,  93856.,  97860.,  101920., 84296.,  87776.,  91304.,  94880.,
      76380.,  79360.,  82380.,  85440.,  66096.,  68544.,  71024.,  73536.,
      64420.,  67440.,  70500.,  73600.,  87825.,  91700.,  95625.,  99600.,
      114310., 119080., 123910., 128800., 143955., 149660., 155435., 161280.,
      153615., 159460., 165375., 171360., 163275., 169260., 175315., 181440.,
      172935., 179060., 185255., 191520., 159310., 164680., 170110., 175600.,
      142125., 146700., 151325., 156000., 121300., 125040., 128820., 132640.,
      118856., 123296., 127784., 132320., 159370., 165040., 170770., 176560.,
      204396., 211344., 218364., 225456., 254030., 262304., 270662., 279104.,
      267974., 276416., 284942., 293552., 281918., 290528., 299222., 308000.,
      295862., 304640., 313502., 322448., 269340., 277008., 284748., 292560.,
      237730., 244240., 250810., 257440., 200936., 206240., 211592., 216992.,
      197596., 203728., 209916., 216160., 261975., 269780., 277655., 285600.,
      332570., 342104., 351722., 361424., 409493., 420812., 432229., 443744.,
      428505., 440020., 451633., 463344., 447517., 459228., 471037., 482944.,
      466529., 478436., 490441., 502544., 421106., 431480., 441938., 452480.,
      368795., 377580., 386435., 395360., 309484., 316624., 323820., 331072.,
      299516., 306768., 314076., 321440., 392175., 401380., 410655., 420000.,
      492170., 503384., 514682., 526064., 599613., 612892., 626269., 639744.,
      618625., 632100., 645673., 659344., 637637., 651308., 665077., 678944.,
      656649., 670516., 684481., 698544., 587426., 599480., 611618., 623840.,
      510195., 520380., 530635., 540960., 424844., 433104., 441420., 449792.,
      392360., 399392., 406472., 413600., 507730., 516640., 525610., 534640.,
      630204., 641040., 651948., 662928., 759878., 772688., 785582., 798560.,
      778526., 791504., 804566., 817712., 797174., 810320., 823550., 836864.,
      815822., 829136., 842534., 856016., 722796., 734352., 745980., 757680.,
      622090., 631840., 641650., 651520., 513608., 521504., 529448., 537440.,
      447460., 454000., 460580., 467200., 575425., 583700., 592025., 600400.,
      709990., 720040., 730150., 740320., 851235., 863100., 875035., 887040.,
      868735., 880740., 892815., 904960., 886235., 898380., 910595., 922880.,
      903735., 916020., 928375., 940800., 796270., 806920., 817630., 828400.,
      681725., 690700., 699725., 708800., 560020., 567280., 574580., 581920.,
      460336., 466112., 471920., 477760., 589660., 596960., 604300., 611680.,
      724808., 733664., 742568., 751520., 865844., 876288., 886788., 897344.,
      881412., 891968., 902580., 913248., 896980., 907648., 918372., 929152.,
      912548., 923328., 934164., 945056., 801128., 810464., 819848., 829280.,
      683500., 691360., 699260., 707200., 559600., 565952., 572336., 578752.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    43.,
      76.,    115.,   160.,   116.,   176.,   244.,   320.,   228.,   304.,
      388.,   480.,   340.,   432.,   532.,   640.,   452.,   560.,   676.,
      800.,   535.,   628.,   727.,   832.,   498.,   568.,   642.,   720.,
      325.,   364.,   405.,   448.,   46.,    96.,    150.,   208.,   284.,
      400.,   524.,   656.,   746.,   944.,   1154.,  1376.,  1464.,  1760.,
      2072.,  2400.,  1944.,  2272.,  2616.,  2976.,  2424.,  2784.,  3160.,
      3552.,  2904.,  3296.,  3704.,  4128.,  2834.,  3152.,  3482.,  3824.,
      2348.,  2576.,  2812.,  3056.,  1414.,  1536.,  1662.,  1792.,  550.,
      656.,   766.,   880.,   1516.,  1744.,  1980.,  2224.,  2930.,  3296.,
      3674.,  4064.,  4824.,  5344.,  5880.,  6432.,  5304.,  5856.,  6424.,
      7008.,  5784.,  6368.,  6968.,  7584.,  6264.,  6880.,  7512.,  8160.,
      5690.,  6176.,  6674.,  7184.,  4476.,  4816.,  5164.,  5520.,  2590.,
      2768.,  2950.,  3136.,  1054.,  1216.,  1382.,  1552.,  2748.,  3088.,
      3436.,  3792.,  5114.,  5648.,  6194.,  6752.,  8184.,  8928.,  9688.,
      10464., 8664.,  9440.,  10232., 11040., 9144.,  9952.,  10776., 11616.,
      9624.,  10464., 11320., 12192., 8546.,  9200.,  9866.,  10544., 6604.,
      7056.,  7516.,  7984.,  3766.,  4000.,  4238.,  4480.,  1558.,  1776.,
      1998.,  2224.,  3980.,  4432.,  4892.,  5360.,  7298.,  8000.,  8714.,
      9440.,  11544., 12512., 13496., 14496., 12024., 13024., 14040., 15072.,
      12504., 13536., 14584., 15648., 12984., 14048., 15128., 16224., 11402.,
      12224., 13058., 13904., 8732.,  9296.,  9868.,  10448., 4942.,  5232.,
      5526.,  5824.,  2062.,  2336.,  2614.,  2896.,  5212.,  5776.,  6348.,
      6928.,  9482.,  10352., 11234., 12128., 14904., 16096., 17304., 18528.,
      15384., 16608., 17848., 19104., 15864., 17120., 18392., 19680., 16344.,
      17632., 18936., 20256., 14258., 15248., 16250., 17264., 10860., 11536.,
      12220., 12912., 6118.,  6464.,  6814.,  7168.,  2566.,  2896.,  3230.,
      3568.,  6444.,  7120.,  7804.,  8496.,  11666., 12704., 13754., 14816.,
      18264., 19680., 21112., 22560., 18744., 20192., 21656., 23136., 19224.,
      20704., 22200., 23712., 19704., 21216., 22744., 24288., 17114., 18272.,
      19442., 20624., 12988., 13776., 14572., 15376., 7294.,  7696.,  8102.,
      8512.,  2873.,  3060.,  3249.,  3440.,  6490.,  6872.,  7258.,  7648.,
      10867., 11452., 12043., 12640., 16020., 16816., 17620., 18432., 16388.,
      17200., 18020., 18848., 16756., 17584., 18420., 19264., 17124., 17968.,
      18820., 19680., 14143., 14788., 15439., 16096., 10306., 10744., 11186.,
      11632., 5597.,  5820.,  6045.,  6272.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      234768.,  249680.,  264848.,  280272.,  329140.,  348420.,  368020.,
      387940.,  438808.,  462712.,  487000.,  511672.,  564284.,  593068.,
      622300.,  651980.,  613340.,  643020.,  673148.,  703724.,  662396.,
      692972.,  723996.,  755468.,  711452.,  742924.,  774844.,  807212.,
      667480.,  695224.,  723352.,  751864.,  605140.,  628900.,  652980.,
      677380.,  523920.,  543440.,  563216.,  583248.,  509380.,  533460.,
      557860.,  582580.,  694925.,  725825.,  757125.,  788825.,  905030.,
      943070.,  981590.,  1020590., 1140335., 1185835., 1231895., 1278515.,
      1217335., 1263955., 1311135., 1358875., 1294335., 1342075., 1390375.,
      1439235., 1371335., 1420195., 1469615., 1519595., 1263830., 1306670.,
      1349990., 1393790., 1127925., 1164425., 1201325., 1238625., 962980.,
      992820.,  1022980., 1053460., 942040.,  977464.,  1013272., 1049464.,
      1263710., 1308950., 1354670., 1400870., 1621380., 1676820., 1732836.,
      1789428., 2015818., 2081842., 2148538., 2215906., 2127034., 2194402.,
      2262442., 2331154., 2238250., 2306962., 2376346., 2446402., 2349466.,
      2419522., 2490250., 2561650., 2139492., 2200692., 2262468., 2324820.,
      1888910., 1940870., 1993310., 2046230., 1596952., 1639288., 1682008.,
      1725112., 1568588., 1617532., 1666924., 1716764., 2080295., 2142595.,
      2205455., 2268875., 2641618., 2717722., 2794498., 2871946., 3253453.,
      3343809., 3434949., 3526873., 3405157., 3497081., 3589789., 3683281.,
      3556861., 3650353., 3744629., 3839689., 3708565., 3803625., 3899469.,
      3996097., 3348226., 3431050., 3514546., 3598714., 2932895., 3003035.,
      3073735., 3144995., 2461676., 2518684., 2576140., 2634044., 2381708.,
      2439612., 2497964., 2556764., 3119095., 3192595., 3266655., 3341275.,
      3915058., 4004602., 4094818., 4185706., 4770493., 4876529., 4983349.,
      5090953., 4922197., 5029801., 5138189., 5247361., 5073901., 5183073.,
      5293029., 5403769., 5225605., 5336345., 5447869., 5560177., 4675426.,
      4771690., 4868626., 4966234., 4061295., 4142635., 4224535., 4306995.,
      3382316., 3448284., 3514700., 3581564., 3124888., 3181048., 3237592.,
      3294520., 4044110., 4115270., 4186910., 4259030., 5020068., 5106612.,
      5193732., 5281428., 6053530., 6155842., 6258826., 6362482., 6202378.,
      6306034., 6410362., 6515362., 6351226., 6456226., 6561898., 6668242.,
      6500074., 6606418., 6713434., 6821122., 5759364., 5851668., 5944548.,
      6038004., 4957310., 5035190., 5113550., 5192390., 4093144., 4156216.,
      4219672., 4283512., 3566660., 3618900., 3671460., 3724340., 4586925.,
      4653025., 4719525., 4786425., 5659910., 5740190., 5820950., 5902190.,
      6786255., 6881035., 6976375., 7072275., 6925975., 7021875., 7118335.,
      7215355., 7065695., 7162715., 7260295., 7358435., 7205415., 7303555.,
      7402255., 7501515., 6348950., 6434030., 6519590., 6605630., 5435925.,
      5507625., 5579725., 5652225., 4465700., 4523700., 4582020., 4640660.,
      3671184., 3717328., 3763728., 3810384., 4702740., 4761060., 4819700.,
      4878660., 5780824., 5851576., 5922712., 5994232., 6905948., 6989388.,
      7073276., 7157612., 7030268., 7114604., 7199388., 7284620., 7154588.,
      7239820., 7325500., 7411628., 7278908., 7365036., 7451612., 7538636.,
      6390424., 6465016., 6539992., 6615352., 5452340., 5515140., 5578260.,
      5641700., 4464144., 4514896., 4565904., 4617168.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      287.,    539.,    839.,    1187.,   820.,    1284.,   1812.,   2404.,
      1684.,   2276.,   2932.,   3652.,   2548.,   3268.,   4052.,   4900.,
      3412.,   4260.,   5172.,   6148.,   4103.,   4835.,   5615.,   6443.,
      3850.,   4402.,   4986.,   5602.,   2525.,   2833.,   3157.,   3497.,
      274.,    666.,    1090.,   1546.,   2052.,   2964.,   3940.,   4980.,
      5590.,   7150.,   8806.,   10558.,  11144.,  13480.,  15944.,  18536.,
      14920.,  17512.,  20232.,  23080.,  18696.,  21544.,  24520.,  27624.,
      22472.,  25576.,  28808.,  32168.,  22054.,  24574.,  27190.,  29902.,
      18340.,  20148.,  22020.,  23956.,  11074.,  12042.,  13042.,  14074.,
      4194.,   5034.,   5906.,   6810.,   11684.,  13492.,  15364.,  17300.,
      22726.,  25630.,  28630.,  31726.,  37576.,  41704.,  45960.,  50344.,
      41352.,  45736.,  50248.,  54888.,  45128.,  49768.,  54536.,  59432.,
      48904.,  53800.,  58824.,  63976.,  44566.,  48430.,  52390.,  56446.,
      35140.,  37844.,  40612.,  43444.,  20370.,  21786.,  23234.,  24714.,
      8114.,   9402.,   10722.,  12074.,  21316.,  24020.,  26788.,  29620.,
      39862.,  44110.,  48454.,  52894.,  64008.,  69928.,  75976.,  82152.,
      67784.,  73960.,  80264.,  86696.,  71560.,  77992.,  84552.,  91240.,
      75336.,  82024.,  88840.,  95784.,  67078.,  72286.,  77590.,  82990.,
      51940.,  55540.,  59204.,  62932.,  29666.,  31530.,  33426.,  35354.,
      12034.,  13770.,  15538.,  17338.,  30948.,  34548.,  38212.,  41940.,
      56998.,  62590.,  68278.,  74062.,  90440.,  98152.,  105992., 113960.,
      94216.,  102184., 110280., 118504., 97992.,  106216., 114568., 123048.,
      101768., 110248., 118856., 127592., 89590.,  96142.,  102790., 109534.,
      68740.,  73236.,  77796.,  82420.,  38962.,  41274.,  43618.,  45994.,
      15954.,  18138.,  20354.,  22602.,  40580.,  45076.,  49636.,  54260.,
      74134.,  81070.,  88102.,  95230.,  116872., 126376., 136008., 145768.,
      120648., 130408., 140296., 150312., 124424., 134440., 144584., 154856.,
      128200., 138472., 148872., 159400., 112102., 119998., 127990., 136078.,
      85540.,  90932.,  96388.,  101908., 48258.,  51018.,  53810.,  56634.,
      19874.,  22506.,  25170.,  27866.,  50212.,  55604.,  61060.,  66580.,
      91270.,  99550.,  107926., 116398., 143304., 154600., 166024., 177576.,
      147080., 158632., 170312., 182120., 150856., 162664., 174600., 186664.,
      154632., 166696., 178888., 191208., 134614., 143854., 153190., 162622.,
      102340., 108628., 114980., 121396., 57554.,  60762.,  64002.,  67274.,
      22613.,  24105.,  25613.,  27137.,  51162.,  54210.,  57290.,  60402.,
      85775.,  90443.,  95159.,  99923.,  126580., 132932., 139348., 145828.,
      129492., 135972., 142516., 149124., 132404., 139012., 145684., 152420.,
      135316., 142052., 148852., 155716., 111863., 117011., 122207., 127451.,
      81578.,  85074.,  88602.,  92162.,  44333.,  46113.,  47909.,  49721.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x8x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1820384.,  1923040.,  2027744.,  2134496.,  2500376.,  2629720.,
      2761624.,  2896088.,  3269712.,  3427792.,  3588944.,  3753168.,
      4132488.,  4321352.,  4513800.,  4709832.,  4355080.,  4542920.,
      4734344.,  4929352.,  4544904.,  4731720.,  4922120.,  5116104.,
      4936456.,  5130440.,  5328008.,  5529160.,  4593488.,  4765904.,
      4941392.,  5119952.,  4136600.,  4285400.,  4436760.,  4590680.,
      3561696.,  3684832.,  3810016.,  3937248.,  3332312.,  3475480.,
      3621208.,  3769496.,  4368558.,  4541630.,  4717902.,  4897374.,
      5502660.,  5708196.,  5917572.,  6130788.,  6739738.,  6980298.,
      7225338.,  7474858.,  6857978.,  7099306.,  7345114.,  7595402.,
      6943450.,  7185546.,  7432122.,  7683178.,  7460026.,  7711082.,
      7966618.,  8226634.,  6747268.,  6966628.,  7189828.,  7416868.,
      5873166.,  6058270.,  6246574.,  6438078.,  4832600.,  4980888.,
      5131736.,  5285144.,  4971856.,  5140176.,  5311568.,  5486032.,
      6035300.,  6241092.,  6450724.,  6664196.,  7222520.,  7468856.,
      7719800.,  7975352.,  8539660.,  8829612.,  9124940.,  9425644.,
      8472652.,  8765164.,  9063052.,  9366316.,  8372876.,  8667948.,
      8968396.,  9274220.,  8933580.,  9239404.,  9550604.,  9867180.,
      7971192.,  8239032.,  8511480.,  8788536.,  6815396.,  7042180.,
      7272804.,  7507268.,  5460048.,  5642704.,  5828432.,  6017232.,
      5932104.,  6142984.,  6357448.,  6575496.,  6891322.,  7143402.,
      7399962.,  7661002.,  7984876.,  8281740.,  8583980.,  8891596.,
      9219934.,  9565166.,  9916670.,  10274446., 8914430.,  9255822.,
      9603486.,  9957422.,  8543390.,  8880942.,  9224766.,  9574862.,
      9029438.,  9371342.,  9719518.,  10073966., 7795244.,  8088524.,
      8387180.,  8691212.,  6552666.,  6801930.,  7055674.,  7313898.,
      5092808.,  5294472.,  5499720.,  5708552.,  6161224.,  6378248.,
      6598856.,  6823048.,  6521338.,  6781098.,  7045338.,  7314058.,
      7021932.,  7328012.,  7639468.,  7956300.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      9221854.,  9570158.,  9924734.,  10285582., 9478526.,  9831182.,
      10190110., 10555310., 8310956.,  8613452.,  8921324.,  9234572.,
      7358234.,  7615178.,  7876602.,  8142506.,  6182088.,  6389896.,
      6601288.,  6816264.,  6537808.,  6740944.,  6947152.,  7156432.,
      7861668.,  8102788.,  8347748.,  8596548.,  9311352.,  9593528.,
      9880312.,  10171704., 10893004., 11219308., 11550988., 11888044.,
      10695948., 11016620., 11342668., 11674092., 10433356., 10748396.,
      11068812., 11394604., 10438028., 10755628., 11078604., 11406956.,
      8728824.,  8999736.,  9275256.,  9555384.,  7484644.,  7713988.,
      7947172.,  8184196.,  6038864.,  6223568.,  6411344.,  6602192.,
      6602456.,  6774296.,  6948696.,  7125656.,  7195694.,  7396414.,
      7600334.,  7807454.,  7882692.,  8114852.,  8350852.,  8590692.,
      8668570.,  8934730.,  9205370.,  9480490.,  7939962.,  8198698.,
      8461914.,  8729610.,  7145818.,  7397130.,  7652922.,  7913194.,
      6848314.,  7100394.,  7356954.,  7617994.,  5195140.,  5408356.,
      5625412.,  5846308.,  4274574.,  4454558.,  4637742.,  4824126.,
      3191640.,  3335832.,  3482584.,  3631896.,  5128416.,  5267936.,
      5409504.,  5553120.,  4901272.,  5064408.,  5230104.,  5398360.,
      4751184.,  4939984.,  5131856.,  5326800.,  4682248.,  4898760.,
      5118856.,  5342536.,  4097928.,  4313416.,  4532488.,  4755144.,
      4529416.,  4743880.,  4961928.,  5183560.,  4928136.,  5141576.,
      5358600.,  5579208.,  4486736.,  4665296.,  4846928.,  5031632.,
      3981592.,  4131416.,  4283800.,  4438744.,  3337952.,  3456992.,
      3578080.,  3701216.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x8x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    6136.,    9784.,
      13944.,   18616.,   12920.,   17592.,   22776.,   28472.,   19704.,
      25400.,   31608.,   38328.,   26488.,   33208.,   40440.,   48184.,
      32122.,   37930.,   44122.,   50698.,   30268.,   34652.,   39292.,
      44188.,   19902.,   22350.,   24926.,   27630.,   1820.,    4924.,
      8284.,    11900.,   15544.,   22776.,   30520.,   38776.,   43220.,
      55604.,   68756.,   82676.,   86896.,   105456.,  125040.,  145648.,
      116848.,  137456.,  159088.,  181744.,  146800.,  169456.,  193136.,
      217840.,  176752.,  201456.,  227184.,  253936.,  173972.,  194036.,
      214868.,  236468.,  144952.,  159352.,  174264.,  189688.,  87644.,
      95356.,   103324.,  111548.,  32732.,   39420.,   46364.,   53564.,
      91704.,   106104.,  121016.,  136440.,  178964.,  202100.,  226004.,
      250676.,  296560.,  329456.,  363376.,  398320.,  326512.,  361456.,
      397424.,  434416.,  356464.,  393456.,  431472.,  470512.,  386416.,
      425456.,  465520.,  506608.,  352724.,  383540.,  415124.,  447476.,
      278456.,  300024.,  322104.,  344696.,  161564.,  172860.,  184412.,
      196220.,  63644.,   73916.,   84444.,   95228.,   167864.,  189432.,
      211512.,  234104.,  314708.,  348596.,  383252.,  418676.,  506224.,
      553456.,  601712.,  650992.,  536176.,  585456.,  635760.,  687088.,
      566128.,  617456.,  669808.,  723184.,  596080.,  649456.,  703856.,
      759280.,  531476.,  573044.,  615380.,  658484.,  411960.,  440696.,
      469944.,  499704.,  235484.,  250364.,  265500.,  280892.,  94556.,
      108412.,  122524.,  136892.,  244024.,  272760.,  302008.,  331768.,
      450452.,  495092.,  540500.,  586676.,  715888.,  777456.,  840048.,
      903664.,  745840.,  809456.,  874096.,  939760.,  775792.,  841456.,
      908144.,  975856.,  805744.,  873456.,  942192.,  1011952., 710228.,
      762548.,  815636.,  869492.,  545464.,  581368.,  617784.,  654712.,
      309404.,  327868.,  346588.,  365564.,  125468.,  142908.,  160604.,
      178556.,  320184.,  356088.,  392504.,  429432.,  586196.,  641588.,
      697748.,  754676.,  925552.,  1001456., 1078384., 1156336., 955504.,
      1033456., 1112432., 1192432., 985456.,  1065456., 1146480., 1228528.,
      1015408., 1097456., 1180528., 1264624., 888980.,  952052.,  1015892.,
      1080500., 678968.,  722040.,  765624.,  809720.,  383324.,  405372.,
      427676.,  450236.,  156380.,  177404.,  198684.,  220220.,  396344.,
      439416.,  483000.,  527096.,  721940.,  788084.,  854996.,  922676.,
      1135216., 1225456., 1316720., 1409008., 1165168., 1257456., 1350768.,
      1445104., 1195120., 1289456., 1384816., 1481200., 1225072., 1321456.,
      1418864., 1517296., 1067732., 1141556., 1216148., 1291508., 812472.,
      862712.,  913464.,  964728.,  457244.,  482876.,  508764.,  534908.,
      179422.,  191342.,  203390.,  215566.,  406268.,  430620.,  455228.,
      480092.,  681562.,  718858.,  756538.,  794602.,  1006328., 1057080.,
      1108344., 1160120., 1029496., 1081272., 1133560., 1186360., 1052664.,
      1105464., 1158776., 1212600., 1075832., 1129656., 1183992., 1238840.,
      889786.,  930922.,  972442.,  1014346., 649148.,  677084.,  705276.,
      733724.,  352894.,  367118.,  381470.,  395950.};
  const std::array<int, 4> in_shape = {{1, 8, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1876.,  2610.,  3458.,  4424.,  4830.,  4550.,  4140.,  3596.,  3840.,
      5225.,  6790.,  8540.,  9170.,  8485.,  7600.,  6510.,  6850.,  9185.,
      11781., 14644., 15547., 14211., 12590., 10678., 11130., 14770., 18767.,
      23128., 24353., 22064., 19390., 16324., 16394., 21490., 26999., 32928.,
      34153., 30632., 26670., 22260., 21658., 28210., 35231., 42728., 43953.,
      39200., 33950., 28196., 26182., 33815., 41895., 50428., 51625., 45693.,
      39290., 32410., 28540., 36675., 45220., 54180., 55300., 48715., 41700.,
      34250., 28508., 36510., 44870., 53592., 54586., 47930., 40900., 33492.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   7.,   10.,  13.,  16.,  19.,  14.,  11.,  35.,  45.,  55.,
      65.,  75.,  85.,  56.,  44.,  121., 142., 163., 184., 205., 226., 140.,
      107., 268., 289., 310., 331., 352., 373., 224., 170., 415., 436., 457.,
      478., 499., 520., 308., 233., 562., 583., 604., 625., 646., 667., 392.,
      296., 709., 730., 751., 772., 793., 814., 476., 309., 705., 723., 741.,
      759., 777., 795., 448., 215., 478., 489., 500., 511., 522., 533., 294.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      14144.,  19760.,  26272.,  33712.,  36904.,  34864.,  31800.,  27680.,
      29340.,  40025.,  52130.,  65695.,  70665.,  65510.,  58775.,  50420.,
      52784.,  70900.,  91080.,  113372., 120512., 110304., 97840.,  83072.,
      86268.,  114625., 145810., 179879., 189581., 171934., 151235., 127428.,
      127932., 167825., 210994., 257495., 267197., 239806., 208915., 174468.,
      169596., 221025., 276178., 335111., 344813., 307678., 266595., 221508.,
      205952., 266080., 329760., 397040., 406532., 359928., 309580., 255440.,
      225100., 289325., 356810., 427595., 436485., 384590., 329275., 270500.,
      225248., 288520., 354640., 423640., 431536., 378976., 323440., 264896.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,   42.,   62.,   82.,   102.,  122.,  95.,   64.,
      224.,  296.,  368.,  440.,  512.,  584.,  396.,  289.,  830.,
      986.,  1142., 1298., 1454., 1610., 1015., 751.,  1922., 2078.,
      2234., 2390., 2546., 2702., 1645., 1213., 3014., 3170., 3326.,
      3482., 3638., 3794., 2275., 1675., 4106., 4262., 4418., 4574.,
      4730., 4886., 2905., 2137., 5198., 5354., 5510., 5666., 5822.,
      5978., 3535., 2300., 5288., 5424., 5560., 5696., 5832., 5968.,
      3384., 1625., 3630., 3714., 3798., 3882., 3966., 4050., 2243.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      109728.,  153640.,  204656.,  263032.,  288344.,  272816.,  249160.,
      217120.,  229240.,  313150.,  408340.,  515130.,  554610.,  514660.,
      462150.,  396760.,  414256.,  556940.,  716040.,  891940.,  948724.,
      868968.,  771260.,  655216.,  679112.,  902930.,  1149260., 1418550.,
      1495774., 1357244., 1194410., 1006824., 1010632., 1326290., 1668044.,
      2036342., 2113566., 1897532., 1653610., 1381352., 1342152., 1749650.,
      2186828., 2654134., 2731358., 2437820., 2112810., 1755880., 1633648.,
      2110940., 2616552., 3150868., 3226468., 2857032., 2457740., 2028208.,
      1787960., 2298350., 2834740., 3397450., 3468290., 3056260., 2616950.,
      2150040., 1790752., 2293960., 2819888., 3368792., 3431736., 3014000.,
      2572520., 2107040.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,    140.,   284.,   428.,   572.,   716.,   860.,   694.,   420.,
      1576.,  2120.,  2664.,  3208.,  3752.,  4296.,  2964.,  2066.,  6100.,
      7300.,  8500.,  9700.,  10900., 12100., 7706.,  5594.,  14500., 15700.,
      16900., 18100., 19300., 20500., 12578., 9122.,  22900., 24100., 25300.,
      26500., 27700., 28900., 17450., 12650., 31300., 32500., 33700., 34900.,
      36100., 37300., 22322., 16178., 39700., 40900., 42100., 43300., 44500.,
      45700., 27194., 17716., 40904., 41960., 43016., 44072., 45128., 46184.,
      26276., 12622., 28268., 28924., 29580., 30236., 30892., 31548., 17510.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6640.,   7504.,   9320.,   10440.,  12440.,  13832.,  16016.,  17696.,
      17584.,  19320.,  16664.,  18200.,  15240.,  16560.,  13296.,  14384.,
      13980.,  15360.,  19125.,  20900.,  24970.,  27160.,  31535.,  34160.,
      33985.,  36680.,  31570.,  33940.,  28375.,  30400.,  24380.,  26040.,
      25384.,  27400.,  34160.,  36740.,  43956.,  47124.,  54796.,  58576.,
      58324.,  62188.,  53460.,  56844.,  47480.,  50360.,  40360.,  42712.,
      41748.,  44520.,  55545.,  59080.,  70742.,  75068.,  87367.,  92512.,
      92169.,  97412.,  83678.,  88256.,  73675.,  77560.,  62132.,  65296.,
      62356.,  65576.,  81865.,  85960.,  102998., 107996., 125783., 131712.,
      130585., 136612., 117278., 122528., 102235., 106680., 85428.,  89040.,
      82964.,  86632.,  108185., 112840., 135254., 140924., 164199., 170912.,
      169001., 175812., 150878., 156800., 130795., 135800., 108724., 112784.,
      101224., 104728., 130820., 135260., 162180., 167580., 195328., 201712.,
      200032., 206500., 177156., 182772., 152420., 157160., 125800., 129640.,
      110940., 114160., 142625., 146700., 175930., 180880., 210875., 216720.,
      215285., 221200., 189730., 194860., 162475., 166800., 133500., 137000.,
      111216., 114032., 142480., 146040., 175160., 179480., 209272., 214368.,
      213192., 218344., 187256., 191720., 159840., 163600., 130928., 133968.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    6.,    16.,   14.,   28.,   22.,   40.,   30.,   52.,
      38.,   64.,   46.,   76.,   39.,   56.,   20.,   44.,   84.,   140.,
      116.,  180.,  148.,  220.,  180.,  260.,  212.,  300.,  244.,  340.,
      172.,  224.,  113.,  176.,  346.,  484.,  418.,  568.,  490.,  652.,
      562.,  736.,  634.,  820.,  706.,  904.,  455.,  560.,  323.,  428.,
      850.,  1072., 922.,  1156., 994.,  1240., 1066., 1324., 1138., 1408.,
      1210., 1492., 749.,  896.,  533.,  680.,  1354., 1660., 1426., 1744.,
      1498., 1828., 1570., 1912., 1642., 1996., 1714., 2080., 1043., 1232.,
      743.,  932.,  1858., 2248., 1930., 2332., 2002., 2416., 2074., 2500.,
      2146., 2584., 2218., 2668., 1337., 1568., 953.,  1184., 2362., 2836.,
      2434., 2920., 2506., 3004., 2578., 3088., 2650., 3172., 2722., 3256.,
      1631., 1904., 1064., 1236., 2468., 2820., 2532., 2892., 2596., 2964.,
      2660., 3036., 2724., 3108., 2788., 3180., 1592., 1792., 765.,  860.,
      1718., 1912., 1758., 1956., 1798., 2000., 1838., 2044., 1878., 2088.,
      1918., 2132., 1067., 1176.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      51440.,   58288.,   72380.,   81260.,   96808.,   107848.,  124852.,
      138180.,  137284.,  151060.,  130312.,  142504.,  119340.,  129820.,
      104240.,  112880.,  109140.,  120100.,  149525.,  163625.,  195470.,
      212870.,  247135.,  267995.,  266595.,  288015.,  247910.,  266750.,
      223025.,  239125.,  191780.,  204980.,  199112.,  215144.,  268210.,
      288730.,  345420.,  370620.,  430934.,  461006.,  458990.,  489734.,
      421020.,  447948.,  374170.,  397090.,  318248.,  336968.,  328524.,
      350588.,  437395.,  465535.,  557410.,  591850.,  688793.,  729757.,
      727013.,  768761.,  660394.,  696850.,  581735.,  612675.,  490812.,
      516012.,  492492.,  518140.,  646835.,  679455.,  814114.,  853930.,
      994553.,  1041789., 1032773., 1080793., 927850.,  969682.,  809095.,
      844515.,  676284.,  705068.,  656460.,  685692.,  856275.,  893375.,
      1070818., 1116010., 1300313., 1353821., 1338533., 1392825., 1195306.,
      1242514., 1036455., 1076355., 861756.,  894124.,  802856.,  830792.,
      1037770., 1073170., 1286748., 1329804., 1549982., 1600886., 1587446.,
      1639022., 1406124., 1450908., 1209970., 1247770., 998792.,  1029416.,
      881140.,  906820.,  1132925., 1165425., 1397630., 1437110., 1675415.,
      1722035., 1710555., 1757735., 1507670., 1548590., 1291225., 1325725.,
      1061060., 1088980., 884144.,  906608.,  1132780., 1161180., 1392712.,
      1427176., 1664068., 1704724., 1695316., 1736420., 1489192., 1524808.,
      1271260., 1301260., 1041392., 1065648.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   90.,    194.,   146.,   282.,   202.,
      370.,   258.,   458.,   314.,   546.,   281.,   413.,   118.,   302.,
      572.,   1004.,  812.,   1308.,  1052.,  1612.,  1292.,  1916.,  1532.,
      2220.,  1772.,  2524.,  1278.,  1686.,  787.,   1279.,  2510.,  3590.,
      3062.,  4238.,  3614.,  4886.,  4166.,  5534.,  4718.,  6182.,  5270.,
      6830.,  3439.,  4267.,  2383.,  3211.,  6374.,  8126.,  6926.,  8774.,
      7478.,  9422.,  8030.,  10070., 8582.,  10718., 9134.,  11366., 5707.,
      6871.,  3979.,  5143.,  10238., 12662., 10790., 13310., 11342., 13958.,
      11894., 14606., 12446., 15254., 12998., 15902., 7975.,  9475.,  5575.,
      7075.,  14102., 17198., 14654., 17846., 15206., 18494., 15758., 19142.,
      16310., 19790., 16862., 20438., 10243., 12079., 7171.,  9007.,  17966.,
      21734., 18518., 22382., 19070., 23030., 19622., 23678., 20174., 24326.,
      20726., 24974., 12511., 14683., 8174.,  9542.,  19052., 21852., 19548.,
      22412., 20044., 22972., 20540., 23532., 21036., 24092., 21532., 24652.,
      12342., 13934., 5933.,  6689.,  13362., 14906., 13674., 15250., 13986.,
      15594., 14298., 15938., 14610., 16282., 14922., 16626., 8321.,  9189.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      404832.,   459360.,   570360.,   641080.,   763664.,   851600.,
      985768.,   1091944.,  1084776.,  1194536.,  1030544.,  1127696.,
      944440.,   1027960.,  825440.,   894304.,   862360.,   949720.,
      1182350.,  1294750.,  1546660.,  1685380.,  1956570.,  2122890.,
      2111690.,  2282490.,  1964740.,  2114980.,  1768350.,  1896750.,
      1521240.,  1626520.,  1577104.,  1704976.,  2125460.,  2289140.,
      2738520.,  2939544.,  3417820.,  3657724.,  3641596.,  3886876.,
      3341592.,  3556440.,  2970740.,  3153620.,  2527504.,  2676880.,
      2606408.,  2782472.,  3471370.,  3695930.,  4425260.,  4700108.,
      5469870.,  5796798.,  5774846.,  6108046.,  5247116.,  5538092.,
      4623290.,  4870250.,  3901576.,  4102728.,  3914568.,  4119304.,
      5142410.,  5402810.,  6473516.,  6791372.,  7909678.,  8286782.,
      8214654.,  8598030.,  7381388.,  7715372.,  6437690.,  6720490.,
      5381768.,  5611592.,  5222728.,  5456136.,  6813450.,  7109690.,
      8521772.,  8882636.,  10349486., 10776766., 10654462., 11088014.,
      9515660.,  9892652.,  8252090.,  8570730.,  6861960.,  7120456.,
      6395152.,  6618256.,  8267060.,  8549780.,  10251288., 10595160.,
      12349372., 12755932., 12648412., 13060348., 11204568., 11562264.,
      9642260.,  9944180.,  7959952.,  8204560.,  7023640.,  7228760.,
      9031150.,  9290750.,  11141860., 11457220., 13357050., 13729450.,
      13637610., 14014490., 12020740., 12347620., 10295550., 10571150.,
      8460760.,  8683800.,  7050848.,  7230304.,  9034040.,  9260920.,
      11107472., 11382800., 13272168., 13596968., 13521704., 13850088.,
      11878160., 12162704., 10140280., 10379960., 8307040.,  8500832.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    636.,    1436.,   1052.,   2108.,
      1468.,   2780.,   1884.,   3452.,   2300.,   4124.,   2126.,   3166.,
      780.,    2220.,   4184.,   7576.,   6040.,   9944.,   7896.,   12312.,
      9752.,   14680.,  11608.,  17048.,  13464.,  19416.,  9836.,   13068.,
      5834.,   9722.,   19060.,  27604.,  23380.,  32692.,  27700.,  37780.,
      32020.,  42868.,  36340.,  47956.,  40660.,  53044.,  26714.,  33290.,
      18266.,  24842.,  49300.,  63220.,  53620.,  68308.,  57940.,  73396.,
      62260.,  78484.,  66580.,  83572.,  70900.,  88660.,  44522.,  53786.,
      30698.,  39962.,  79540.,  98836.,  83860.,  103924., 88180.,  109012.,
      92500.,  114100., 96820.,  119188., 101140., 124276., 62330.,  74282.,
      43130.,  55082.,  109780., 134452., 114100., 139540., 118420., 144628.,
      122740., 149716., 127060., 154804., 131380., 159892., 80138.,  94778.,
      55562.,  70202.,  140020., 170068., 144340., 175156., 148660., 180244.,
      152980., 185332., 157300., 190420., 161620., 195508., 97946.,  115274.,
      64044.,  74956.,  149656., 171992., 153560., 176408., 157464., 180824.,
      161368., 185240., 165272., 189656., 169176., 194072., 97164.,  109868.,
      46718.,  52750.,  105372., 117692., 107836., 120412., 110300., 123132.,
      112764., 125852., 115228., 128572., 117692., 131292., 65710.,  72638.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      24880.,  26560.,  28272.,  30016.,  35100.,  37280.,  39500.,  41760.,
      47048.,  49760.,  52520.,  55328.,  60788.,  64064.,  67396.,  70784.,
      66948.,  70336.,  73780.,  77280.,  63656.,  66656.,  69704.,  72800.,
      58380.,  60960.,  63580.,  66240.,  51056.,  53184.,  55344.,  57536.,
      53220.,  55920.,  58660.,  61440.,  73025.,  76500.,  80025.,  83600.,
      95590.,  99880.,  104230., 108640., 120995., 126140., 131355., 136640.,
      130655., 135940., 141295., 146720., 121630., 126280., 130990., 135760.,
      109525., 113500., 117525., 121600., 94260.,  97520.,  100820., 104160.,
      97576.,  101536., 105544., 109600., 131570., 136640., 141770., 146960.,
      169596., 175824., 182124., 188496., 211750., 219184., 226702., 234304.,
      225694., 233296., 240982., 248752., 207180., 213840., 220572., 227376.,
      184250., 189920., 195650., 201440., 156808., 161440., 166120., 170848.,
      161532., 166992., 172508., 178080., 215215., 222180., 229215., 236320.,
      274442., 282968., 291578., 300272., 339325., 349468., 359709., 370048.,
      358337., 368676., 379113., 389648., 325682., 334712., 343826., 353024.,
      287035., 294700., 302435., 310240., 242284., 248528., 254828., 261184.,
      243068., 249424., 255836., 262304., 319375., 327460., 335615., 343840.,
      402122., 411992., 421946., 431984., 491421., 503132., 514941., 526848.,
      510433., 522340., 534345., 546448., 458738., 469112., 479570., 490112.,
      400155., 408940., 417795., 426720., 334572., 341712., 348908., 356160.,
      324604., 331856., 339164., 346528., 423535., 432740., 442015., 451360.,
      529802., 541016., 552314., 563696., 643517., 656796., 670173., 683648.,
      662529., 676004., 689577., 703248., 591794., 603512., 615314., 627200.,
      513275., 523180., 533155., 543200., 426860., 434896., 442988., 451136.,
      397960., 404896., 411880., 418912., 514490., 523280., 532130., 541040.,
      638028., 648720., 659484., 670320., 768670., 781312., 794038., 806848.,
      787318., 800128., 813022., 826000., 697500., 708624., 719820., 731088.,
      600290., 609680., 619130., 628640., 495592., 503200., 510856., 518560.,
      437380., 443760., 450180., 456640., 562425., 570500., 578625., 586800.,
      693910., 703720., 713590., 723520., 831915., 843500., 855155., 866880.,
      849415., 861140., 872935., 884800., 748750., 758920., 769150., 779440.,
      641325., 649900., 658525., 667200., 527060., 534000., 540980., 548000.,
      439280., 444864., 450480., 456128., 562860., 569920., 577020., 584160.,
      692072., 700640., 709256., 717920., 826980., 837088., 847252., 857472.,
      842548., 852768., 863044., 873376., 740168., 749024., 757928., 766880.,
      631900., 639360., 646860., 654400., 517680., 523712., 529776., 535872.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    34.,
      56.,    82.,    112.,   58.,    88.,    122.,   160.,   82.,    120.,
      162.,   208.,   106.,   152.,   202.,   256.,   130.,   184.,   242.,
      304.,   125.,   156.,   189.,   224.,   38.,    80.,    126.,   176.,
      236.,   336.,   444.,   560.,   348.,   464.,   588.,   720.,   460.,
      592.,   732.,   880.,   572.,   720.,   876.,   1040.,  684.,   848.,
      1020.,  1200.,  796.,   976.,   1164.,  1360.,  590.,   688.,   790.,
      896.,   335.,   452.,   575.,   704.,   1126.,  1384.,  1654.,  1936.,
      1390.,  1672.,  1966.,  2272.,  1654.,  1960.,  2278.,  2608.,  1918.,
      2248.,  2590.,  2944.,  2182.,  2536.,  2902.,  3280.,  2446.,  2824.,
      3214.,  3616.,  1619.,  1820.,  2027.,  2240.,  1091.,  1292.,  1499.,
      1712.,  2974.,  3400.,  3838.,  4288.,  3238.,  3688.,  4150.,  4624.,
      3502.,  3976.,  4462.,  4960.,  3766.,  4264.,  4774.,  5296.,  4030.,
      4552.,  5086.,  5632.,  4294.,  4840.,  5398.,  5968.,  2711.,  2996.,
      3287.,  3584.,  1847.,  2132.,  2423.,  2720.,  4822.,  5416.,  6022.,
      6640.,  5086.,  5704.,  6334.,  6976.,  5350.,  5992.,  6646.,  7312.,
      5614.,  6280.,  6958.,  7648.,  5878.,  6568.,  7270.,  7984.,  6142.,
      6856.,  7582.,  8320.,  3803.,  4172.,  4547.,  4928.,  2603.,  2972.,
      3347.,  3728.,  6670.,  7432.,  8206.,  8992.,  6934.,  7720.,  8518.,
      9328.,  7198.,  8008.,  8830.,  9664.,  7462.,  8296.,  9142.,  10000.,
      7726.,  8584.,  9454.,  10336., 7990.,  8872.,  9766.,  10672., 4895.,
      5348.,  5807.,  6272.,  3359.,  3812.,  4271.,  4736.,  8518.,  9448.,
      10390., 11344., 8782.,  9736.,  10702., 11680., 9046.,  10024., 11014.,
      12016., 9310.,  10312., 11326., 12352., 9574.,  10600., 11638., 12688.,
      9838.,  10888., 11950., 13024., 5987.,  6524.,  7067.,  7616.,  3918.,
      4256.,  4598.,  4944.,  9180.,  9872.,  10572., 11280., 9420.,  10128.,
      10844., 11568., 9660.,  10384., 11116., 11856., 9900.,  10640., 11388.,
      12144., 10140., 10896., 11660., 12432., 10380., 11152., 11932., 12720.,
      5974.,  6368.,  6766.,  7168.,  2873.,  3060.,  3249.,  3440.,  6490.,
      6872.,  7258.,  7648.,  6642.,  7032.,  7426.,  7824.,  6794.,  7192.,
      7594.,  8000.,  6946.,  7352.,  7762.,  8176.,  7098.,  7512.,  7930.,
      8352.,  7250.,  7672.,  8098.,  8528.,  4053.,  4268.,  4485.,  4704.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      195728.,  209104.,  222736.,  236624.,  276500.,  293860.,  311540.,
      329540.,  371032.,  392632.,  414616.,  436984.,  479836.,  505932.,
      532476.,  559468.,  528892.,  555884.,  583324.,  611212.,  503320.,
      527224.,  551512.,  576184.,  461940.,  482500.,  503380.,  524580.,
      404240.,  421200.,  438416.,  455888.,  420420.,  441940.,  463780.,
      485940.,  577325.,  605025.,  633125.,  661625.,  756230.,  790430.,
      825110.,  860270.,  957775.,  998795.,  1040375., 1082515., 1034775.,
      1076915., 1119615., 1162875., 963830.,  1000910., 1038470., 1076510.,
      868325.,  900025.,  932125.,  964625.,  747620.,  773620.,  799940.,
      826580.,  772760.,  804344.,  836312.,  868664.,  1042510., 1082950.,
      1123870., 1165270., 1344420., 1394100., 1444356., 1495188., 1679258.,
      1738562., 1798538., 1859186., 1790474., 1851122., 1912442., 1974434.,
      1644228., 1697364., 1751076., 1805364., 1462750., 1507990., 1553710.,
      1599910., 1245272., 1282232., 1319576., 1357304., 1281420., 1324988.,
      1369004., 1413468., 1707895., 1763475., 1819615., 1876315., 2178610.,
      2246650., 2315362., 2384746., 2694461., 2775409., 2857141., 2939657.,
      2846165., 2928681., 3011981., 3096065., 2587522., 2659594., 2732338.,
      2805754., 2281055., 2342235., 2403975., 2466275., 1925868., 1975708.,
      2025996., 2076732., 1931916., 1982652., 2033836., 2085468., 2538935.,
      2603475., 2668575., 2734235., 3197362., 3276154., 3355618., 3435754.,
      3908093., 4001585., 4095861., 4190921., 4059797., 4154857., 4250701.,
      4347329., 3649282., 3732106., 3815602., 3899770., 3183775., 3253915.,
      3324615., 3395875., 2662380., 2719388., 2776844., 2834748., 2582412.,
      2640316., 2698668., 2757468., 3369975., 3443475., 3517535., 3592155.,
      4216114., 4305658., 4395874., 4486762., 5121725., 5227761., 5334581.,
      5442185., 5273429., 5381033., 5489421., 5598593., 4711042., 4804618.,
      4898866., 4993786., 4086495., 4165595., 4245255., 4325475., 3398892.,
      3463068., 3527692., 3592764., 3169880., 3225272., 3281048., 3337208.,
      4098430., 4168630., 4239310., 4310470., 5082948., 5168340., 5254308.,
      5340852., 6124202., 6225170., 6326810., 6429122., 6273050., 6375362.,
      6478346., 6582002., 5557860., 5646708., 5736132., 5826132., 4783630.,
      4858630., 4934110., 5010070., 3949592., 4010360., 4071512., 4133048.,
      3486340., 3537300., 3588580., 3640180., 4483325., 4547825., 4612725.,
      4678025., 5531750., 5610110., 5688950., 5768270., 6632255., 6724795.,
      6817895., 6911555., 6771975., 6865635., 6959855., 7054635., 5969750.,
      6050990., 6132710., 6214910., 5113525., 5182025., 5250925., 5320225.,
      4202660., 4258100., 4313860., 4369940., 3503120., 3547728., 3592592.,
      3637712., 4488820., 4545220., 4601940., 4658980., 5519512., 5587960.,
      5656792., 5726008., 6595708., 6676460., 6757660., 6839308., 6720028.,
      6801676., 6883772., 6966316., 5903704., 5974456., 6045592., 6117112.,
      5040340., 5099940., 5159860., 5220100., 4129424., 4177616., 4226064.,
      4274768.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    61.,    113.,    58.,    162.,   298.,   466.,   234.,
      402.,   602.,   834.,   410.,    642.,   906.,   1202.,  586.,   882.,
      1210.,  1570.,  762.,   1122.,   1514.,  1938.,  938.,   1362.,  1818.,
      2306.,  941.,   1185.,  1445.,   1721.,  226.,   554.,   914.,   1306.,
      1700.,  2484.,  3332.,  4244.,   2564.,  3476.,  4452.,  5492.,  3428.,
      4468.,  5572.,  6740.,  4292.,   5460.,  6692.,  7988.,  5156.,  6452.,
      7812.,  9236.,  6020.,  7444.,   8932.,  10484., 4530.,  5306.,  6114.,
      6954.,  2455.,  3379.,  4351.,   5371.,  8510.,  10550., 12686., 14918.,
      10574., 12806., 15134., 17558.,  12638., 15062., 17582., 20198., 14702.,
      17318., 20030., 22838., 16766.,  19574., 22478., 25478., 18830., 21830.,
      24926., 28118., 12559., 14155.,  15799., 17491., 8335.,  9931.,  11575.,
      13267., 22958., 26342., 29822.,  33398., 25022., 28598., 32270., 36038.,
      27086., 30854., 34718., 38678.,  29150., 33110., 37166., 41318., 31214.,
      35366., 39614., 43958., 33278.,  37622., 42062., 46598., 21127., 23395.,
      25711., 28075., 14215., 16483.,  18799., 21163., 37406., 42134., 46958.,
      51878., 39470., 44390., 49406.,  54518., 41534., 46646., 51854., 57158.,
      43598., 48902., 54302., 59798.,  45662., 51158., 56750., 62438., 47726.,
      53414., 59198., 65078., 29695.,  32635., 35623., 38659., 20095., 23035.,
      26023., 29059., 51854., 57926.,  64094., 70358., 53918., 60182., 66542.,
      72998., 55982., 62438., 68990.,  75638., 58046., 64694., 71438., 78278.,
      60110., 66950., 73886., 80918.,  62174., 69206., 76334., 83558., 38263.,
      41875., 45535., 49243., 25975.,  29587., 33247., 36955., 66302., 73718.,
      81230., 88838., 68366., 75974.,  83678., 91478., 70430., 78230., 86126.,
      94118., 72494., 80486., 88574.,  96758., 74558., 82742., 91022., 99398.,
      76622., 84998., 93470., 102038., 46831., 51115., 55447., 59827., 30674.,
      33370., 36098., 38858., 72068.,  77588., 83172., 88820., 73956., 79604.,
      85316., 91092., 75844., 81620.,  87460., 93364., 77732., 83636., 89604.,
      95636., 79620., 85652., 91748.,  97908., 81508., 87668., 93892., 100180.,
      47010., 50154., 53330., 56538.,  22613., 24105., 25613., 27137., 51162.,
      54210., 57290., 60402., 52362.,  55474., 58618., 61794., 53562., 56738.,
      59946., 63186., 54762., 58002.,  61274., 64578., 55962., 59266., 62602.,
      65970., 57162., 60530., 63930.,  67362., 31997., 33713., 35445., 37193.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1552608.,  1659360.,  1768160.,  1879008.,  2194840.,  2333400.,
      2474520.,  2618200.,  2946896.,  3119312.,  3294800.,  3473360.,
      3812872.,  4021192.,  4233096.,  4448584.,  4204424.,  4419912.,
      4638984.,  4861640.,  4002896.,  4193744.,  4387664.,  4584656.,
      3675160.,  3839320.,  4006040.,  4175320.,  3217120.,  3352544.,
      3490016.,  3629536.,  3124952.,  3264024.,  3405656.,  3549848.,
      4232750.,  4404798.,  4580046.,  4758494.,  5450692.,  5658276.,
      5869700.,  6084964.,  6783898.,  7029578.,  7279738.,  7534378.,
      7300474.,  7555114.,  7814234.,  8077834.,  6644740.,  6867172.,
      7093444.,  7323556.,  5825614.,  6013278.,  6204142.,  6398206.,
      4837976.,  4988312.,  5141208.,  5296664.,  4581968.,  4735952.,
      4893008.,  5053136.,  5825956.,  6017924.,  6213732.,  6413380.,
      7195768.,  7428792.,  7666424.,  7908664.,  8697548.,  8974700.,
      9257228.,  9545132.,  9258252.,  9546156.,  9839436.,  10138092.,
      8274936.,  8527416.,  8784504.,  9046200.,  7108452.,  7322436.,
      7540260.,  7761924.,  5752656.,  5925072.,  6100560.,  6279120.,
      5321544.,  5505800.,  5693640.,  5885064.,  6560762.,  6791850.,
      7027418.,  7267466.,  7956844.,  8238348.,  8525228.,  8817484.,
      9516958.,  9852462.,  10194238., 10542286., 10171966., 10520014.,
      10874334., 11234926., 9056300.,  9361868.,  9672812.,  9989132.,
      7722330.,  7981834.,  8245818.,  8514282.,  6162888.,  6372744.,
      6586184.,  6803208.,  5451592.,  5660424.,  5872840.,  6088840.,
      6522618.,  6784426.,  7050714.,  7321482.,  7775084.,  8093452.,
      8417196.,  8746316.,  9216158.,  9594670.,  9979454.,  10370510.,
      9871166.,  10262222., 10659550., 11063150., 8759852.,  9102284.,
      9450092.,  9803276.,  7405658.,  7695882.,  7990586.,  8289770.,
      5801416.,  6035848.,  6273864.,  6515464.,  4447048.,  4647688.,
      4851912.,  5059720.,  6032890.,  6284458.,  6540506.,  6801034.,
      7791980.,  8098060.,  8409516.,  8726348.,  9731486.,  10095662.,
      10466110., 10842830., 10386494., 10763214., 11146206., 11535470.,
      9514028.,  9844172.,  10179692., 10520588., 8406874.,  8686858.,
      8971322.,  9260266.,  7057864.,  7284104.,  7513928.,  7747336.,
      5741392.,  5922000.,  6105680.,  6292432.,  7341796.,  7567044.,
      7796132.,  8029060.,  9094648.,  9367608.,  9645176.,  9927352.,
      11006092., 11329836., 11658956., 11993452., 11638476., 11972972.,
      12312844., 12658092., 10395000., 10687416., 10984440., 11286072.,
      8941732.,  9188996.,  9440100.,  9695044.,  7272528.,  7471568.,
      7673680.,  7878864.,  4869592.,  5014808.,  5162584.,  5312920.,
      5904622.,  6084350.,  6267278.,  6453406.,  7055940.,  7272740.,
      7493380.,  7717860.,  8328666.,  8585098.,  8846010.,  9111402.,
      8888250.,  9153642.,  9423514.,  9697866.,  7799428.,  8031076.,
      8266564.,  8505892.,  6541070.,  6736414.,  6934958.,  7136702.,
      5108056.,  5264536.,  5423576.,  5585176.,  4047584.,  4174816.,
      4304096.,  4435424.,  4573208.,  4729176.,  4887704.,  5048792.,
      5196368.,  5383120.,  5572944.,  5765840.,  5921160.,  6140744.,
      6363912.,  6590664.,  6357768.,  6584520.,  6814856.,  7048776.,
      5444432.,  5641424.,  5841488.,  6044624.,  4384408.,  4549592.,
      4717336.,  4887640.,  3173600.,  3304928.,  3438304.,  3573728.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    446.,    846.,    380.,    1180.,   2236.,   3548.,
      1724.,   3036.,   4604.,   6428.,   3068.,   4892.,   6972.,   9308.,
      4412.,   6748.,   9340.,   12188.,  5756.,   8604.,   11708.,  15068.,
      7100.,   10460.,  14076.,  17948.,  7294.,   9230.,   11294.,  13486.,
      1500.,   4092.,   6940.,   10044.,  12856.,  19064.,  25784.,  33016.,
      19640.,  26872.,  34616.,  42872.,  26424.,  34680.,  43448.,  52728.,
      33208.,  42488.,  52280.,  62584.,  39992.,  50296.,  61112.,  72440.,
      46776.,  58104.,  69944.,  82296.,  35484.,  41660.,  48092.,  54780.,
      18746.,  26090.,  33818.,  41930.,  66100.,  82324.,  99316.,  117076.,
      82420.,  100180., 118708., 138004., 98740.,  118036., 138100., 158932.,
      115060., 135892., 157492., 179860., 131380., 153748., 176884., 200788.,
      147700., 171604., 196276., 221716., 98906.,  111626., 124730., 138218.,
      65114.,  77834.,  90938.,  104426., 180340., 207316., 235060., 263572.,
      196660., 225172., 254452., 284500., 212980., 243028., 273844., 305428.,
      229300., 260884., 293236., 326356., 245620., 278740., 312628., 347284.,
      261940., 296596., 332020., 368212., 166778., 184874., 203354., 222218.,
      111482., 129578., 148058., 166922., 294580., 332308., 370804., 410068.,
      310900., 350164., 390196., 430996., 327220., 368020., 409588., 451924.,
      343540., 385876., 428980., 472852., 359860., 403732., 448372., 493780.,
      376180., 421588., 467764., 514708., 234650., 258122., 281978., 306218.,
      157850., 181322., 205178., 229418., 408820., 457300., 506548., 556564.,
      425140., 475156., 525940., 577492., 441460., 493012., 545332., 598420.,
      457780., 510868., 564724., 619348., 474100., 528724., 584116., 640276.,
      490420., 546580., 603508., 661204., 302522., 331370., 360602., 390218.,
      204218., 233066., 262298., 291914., 523060., 582292., 642292., 703060.,
      539380., 600148., 661684., 723988., 555700., 618004., 681076., 744916.,
      572020., 635860., 700468., 765844., 588340., 653716., 719860., 786772.,
      604660., 671572., 739252., 807700., 370394., 404618., 439226., 474218.,
      242716., 264252., 286044., 308092., 571064., 615160., 659768., 704888.,
      586040., 631160., 676792., 722936., 601016., 647160., 693816., 740984.,
      615992., 663160., 710840., 759032., 630968., 679160., 727864., 777080.,
      645944., 695160., 744888., 795128., 372956., 398076., 423452., 449084.,
      179422., 191342., 203390., 215566., 406268., 430620., 455228., 480092.,
      415804., 440668., 465788., 491164., 425340., 450716., 476348., 502236.,
      434876., 460764., 486908., 513308., 444412., 470812., 497468., 524380.,
      453948., 480860., 508028., 535452., 254270., 267982., 281822., 295790.};
  const std::array<int, 4> in_shape = {{1, 9, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2048.,  2840.,  3752.,  4788.,  5194.,  5600.,  5240.,  4740.,  4096.,
      4220.,  5725.,  7420.,  9310.,  9940.,  10570., 9730.,  8675.,  7400.,
      7560.,  10110., 12936., 16044., 16947., 17850., 16248., 14340., 12120.,
      12320., 16310., 20678., 25431., 26656., 27881., 25172., 22050., 18508.,
      18242., 23870., 29939., 36456., 37681., 38906., 34811., 30240., 25186.,
      24164., 31430., 39200., 47481., 48706., 49931., 44450., 38430., 31864.,
      29256., 37740., 46704., 56154., 57351., 58548., 51744., 44430., 36600.,
      31920., 40975., 50470., 60410., 61530., 62650., 55120., 47125., 38660.,
      31904., 40820., 50120., 59808., 60802., 61796., 54200., 46200., 37792.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,   10.,   16.,   22.,   28.,   34.,   32.,   21.,
      12.,  38.,  80.,   101.,  122.,  143.,  164.,  138.,  84.,
      54.,  144., 273.,  318.,  363.,  408.,  453.,  360.,  210.,
      138., 333., 588.,  633.,  678.,  723.,  768.,  591.,  336.,
      222., 522., 903.,  948.,  993.,  1038., 1083., 822.,  462.,
      306., 711., 1218., 1263., 1308., 1353., 1398., 1053., 588.,
      390., 900., 1533., 1578., 1623., 1668., 1713., 1284., 714.,
      424., 938., 1544., 1583., 1622., 1661., 1700., 1238., 672.,
      301., 652., 1054., 1078., 1102., 1126., 1150., 824.,  441.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      15472.,  21540.,  28552.,  36540.,  39732.,  42924.,  40264.,  36500.,
      31600.,  32300.,  43925.,  57050.,  71715.,  76685.,  81655.,  75290.,
      67225.,  57420.,  58344.,  78150.,  100140., 124362., 131502., 138642.,
      126348., 111630., 94440.,  95620.,  126735., 160846., 198009., 207711.,
      217413., 196462., 172235., 144676., 142492., 186585., 234178., 285327.,
      295029., 304731., 272818., 237125., 197596., 189364., 246435., 307510.,
      372645., 382347., 392049., 349174., 302015., 250516., 230280., 297150.,
      367836., 442386., 451878., 461370., 407868., 350310., 288648., 251900.,
      323425., 398450., 477015., 485905., 494795., 435410., 372325., 305500.,
      252208., 322740., 396328., 473004., 480900., 488796., 428776., 365540.,
      299056.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,   59.,    101.,   143.,   185.,   227.,   222.,  149.,
      70.,   244.,  538.,   694.,   850.,   1006.,  1162.,  996.,  614.,
      363.,  1002., 1941.,  2283.,  2625.,  2967.,  3309.,  2658., 1563.,
      993.,  2430., 4335.,  4677.,  5019.,  5361.,  5703.,  4422., 2529.,
      1623., 3858., 6729.,  7071.,  7413.,  7755.,  8097.,  6186., 3495.,
      2253., 5286., 9123.,  9465.,  9807.,  10149., 10491., 7950., 4461.,
      2883., 6714., 11517., 11859., 12201., 12543., 12885., 9714., 5427.,
      3214., 7140., 11794., 12094., 12394., 12694., 12994., 9492., 5166.,
      2309., 5014., 8123.,  8309.,  8495.,  8681.,  8867.,  6366., 3413.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      120160.,  167640.,  222608.,  285320.,  310632.,  335944.,  315536.,
      286360.,  248160.,  252600.,  343950.,  447220.,  562730.,  602210.,
      641690.,  592180.,  529150.,  452280.,  458256.,  614340.,  787800.,
      979020.,  1035804., 1092588., 996312.,  880740.,  745488.,  753256.,
      998970.,  1268540., 1562414., 1639638., 1716862., 1552124., 1361290.,
      1143912., 1126216., 1475250., 1852172., 2257430., 2334654., 2411878.,
      2159948., 1877890., 1565256., 1499176., 1951530., 2435804., 2952446.,
      3029670., 3106894., 2767772., 2394490., 1986600., 1827216., 2358180.,
      2919576., 3511788., 3587388., 3662988., 3238680., 2782020., 2292624.,
      2001400., 2569950., 3166420., 3791130., 3861970., 3932810., 3461140.,
      2959950., 2428920., 2005600., 2566680., 3152144., 3762248., 3825192.,
      3888136., 3410960., 2908120., 2379360.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,    140.,   394.,   706.,   1018.,  1330.,  1642.,   1644.,  1118.,
      460.,   1720.,  3908.,  5108.,  6308.,  7508.,  8708.,   7544.,  4684.,
      2634.,  7428.,  14574., 17238., 19902., 22566., 25230.,  20388., 12042.,
      7506.,  18516., 33222., 35886., 38550., 41214., 43878.,  34164., 19602.,
      12378., 29604., 51870., 54534., 57198., 59862., 62526.,  47940., 27162.,
      17250., 40692., 70518., 73182., 75846., 78510., 81174.,  61716., 34722.,
      22122., 51780., 89166., 91830., 94494., 97158., 99822.,  75492., 42282.,
      25004., 55672., 92132., 94484., 96836., 99188., 101540., 74296., 40492.,
      18078., 39308., 63754., 65218., 66682., 68146., 69610.,  50028., 26846.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7280.,   8192.,   10180.,  11360.,  13544.,  15008.,  17388.,  19152.,
      18956.,  20776.,  20524.,  22400.,  19304.,  20960.,  17540.,  18960.,
      15216.,  16384.,  15420.,  16880.,  21025.,  22900.,  27370.,  29680.,
      34475.,  37240.,  36925.,  39760.,  39375.,  42280.,  36370.,  38920.,
      32525.,  34700.,  27820.,  29600.,  28104.,  30240.,  37710.,  40440.,
      48396.,  51744.,  60186.,  64176.,  63714.,  67788.,  67242.,  71400.,
      61356.,  64992.,  54270.,  57360.,  45960.,  48480.,  46340.,  49280.,
      61495.,  65240.,  78134.,  82712.,  96285.,  101724., 101087., 106624.,
      105889., 111524., 95774.,  100688., 84035.,  88200.,  70644.,  74032.,
      69524.,  72968.,  91105.,  95480.,  114422., 119756., 139503., 145824.,
      144305., 150724., 149107., 155624., 133574., 139244., 116165., 120960.,
      96852.,  100744., 92708.,  96656.,  120715., 125720., 150710., 156800.,
      182721., 189924., 187523., 194824., 192325., 199724., 171374., 177800.,
      148295., 153720., 123060., 127456., 113256., 117024., 146190., 150960.,
      181020., 186816., 217770., 224616., 222474., 229404., 227178., 234192.,
      200892., 206976., 172590., 177720., 142248., 146400., 124220., 127680.,
      159525., 163900., 196570., 201880., 235375., 241640., 239785., 246120.,
      244195., 250600., 214930., 220480., 183825., 188500., 150860., 154640.,
      124592., 127616., 159460., 163280., 195848., 200480., 233772., 239232.,
      237692., 243208., 241612., 247184., 211976., 216800., 180740., 184800.,
      147888., 151168.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    6.,    16.,   19.,   40.,   37.,   64.,   55.,   88.,
      73.,   112.,  91.,   136.,  94.,   128.,  65.,   84.,   22.,   48.,
      92.,   152.,  218.,  320.,  290.,  404.,  362.,  488.,  434.,  572.,
      506.,  656.,  444.,  552.,  278.,  336.,  147.,  216.,  426.,  576.,
      849.,  1092., 1011., 1272., 1173., 1452., 1335., 1632., 1497., 1812.,
      1218., 1440., 723.,  840.,  441.,  552.,  1098., 1332., 1983., 2352.,
      2145., 2532., 2307., 2712., 2469., 2892., 2631., 3072., 2058., 2364.,
      1185., 1344., 735.,  888.,  1770., 2088., 3117., 3612., 3279., 3792.,
      3441., 3972., 3603., 4152., 3765., 4332., 2898., 3288., 1647., 1848.,
      1029., 1224., 2442., 2844., 4251., 4872., 4413., 5052., 4575., 5232.,
      4737., 5412., 4899., 5592., 3738., 4212., 2109., 2352., 1323., 1560.,
      3114., 3600., 5385., 6132., 5547., 6312., 5709., 6492., 5871., 6672.,
      6033., 6852., 4578., 5136., 2571., 2856., 1518., 1696., 3388., 3752.,
      5618., 6176., 5762., 6332., 5906., 6488., 6050., 6644., 6194., 6800.,
      4540., 4952., 2478., 2688., 1105., 1204., 2406., 2608., 3907., 4216.,
      3997., 4312., 4087., 4408., 4177., 4504., 4267., 4600., 3070., 3296.,
      1649., 1764.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      56464.,   63696.,   79140.,   88500.,   105496.,  117112.,  135660.,
      149660.,  148092.,  162540.,  160524.,  175420.,  151192.,  164344.,
      137540.,  148820.,  119440.,  128720.,  120500.,  132100.,  164525.,
      179425.,  214430.,  232790.,  270375.,  292355.,  289835.,  312375.,
      309295.,  332395.,  285950.,  306230.,  255925.,  273225.,  219060.,
      233220.,  220632.,  237624.,  296310.,  318030.,  380580.,  407220.,
      473634.,  505386.,  501690.,  534114.,  529746.,  562842.,  483684.,
      512628.,  428070.,  452670.,  362712.,  382776.,  364924.,  388332.,
      484575.,  514395.,  616042.,  652498.,  759549.,  802865.,  797769.,
      841869.,  835989.,  880873.,  756490.,  795634.,  664055.,  697235.,
      558460.,  585452.,  549388.,  576828.,  720195.,  755055.,  904834.,
      947338.,  1103529., 1153901., 1141749., 1192905., 1179969., 1231909.,
      1057378., 1102570., 919835.,  958055.,  767116.,  798140.,  733852.,
      765324.,  955815.,  995715.,  1193626., 1242178., 1447509., 1504937.,
      1485729., 1543941., 1523949., 1582945., 1358266., 1409506., 1175615.,
      1218875., 975772.,  1010828., 898584.,  928632.,  1160070., 1198110.,
      1436676., 1482900., 1728594., 1783194., 1766058., 1821330., 1803522.,
      1859466., 1595076., 1643604., 1370550., 1411470., 1129752., 1162872.,
      986900.,  1014500., 1267525., 1302425., 1562030., 1604390., 1870575.,
      1920555., 1905715., 1956255., 1940855., 1991955., 1708430., 1752710.,
      1461325., 1498625., 1199380., 1229540., 990736.,  1014864., 1268100.,
      1298580., 1557592., 1594552., 1859340., 1902908., 1890588., 1934604.,
      1921836., 1966300., 1686232., 1724728., 1437860., 1470260., 1176592.,
      1202768.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   119.,   275.,   251.,   455.,   383.,
      635.,   515.,   815.,   647.,   995.,   690.,   954.,   485.,   633.,
      130.,   330.,   628.,   1092.,  1558.,  2350.,  2110.,  2998.,  2662.,
      3646.,  3214.,  4294.,  3766.,  4942.,  3348.,  4196.,  2114.,  2570.,
      1047.,  1587.,  3126.,  4302.,  6333.,  8241.,  7593.,  9645.,  8853.,
      11049., 10113., 12453., 11373., 13857., 9318.,  11070., 5559.,  6483.,
      3315.,  4191.,  8334.,  10182., 15153., 18069., 16413., 19473., 17673.,
      20877., 18933., 22281., 20193., 23685., 15870., 18294., 9171.,  10431.,
      5583.,  6795.,  13542., 16062., 23973., 27897., 25233., 29301., 26493.,
      30705., 27753., 32109., 29013., 33513., 22422., 25518., 12783., 14379.,
      7851.,  9399.,  18750., 21942., 32793., 37725., 34053., 39129., 35313.,
      40533., 36573., 41937., 37833., 43341., 28974., 32742., 16395., 18327.,
      10119., 12003., 23958., 27822., 41613., 47553., 42873., 48957., 44133.,
      50361., 45393., 51765., 46653., 53169., 35526., 39966., 20007., 22275.,
      11794., 13210., 26388., 29284., 43846., 48286., 44974., 49510., 46102.,
      50734., 47230., 51958., 48358., 53182., 35508., 38788., 19410., 21082.,
      8645.,  9433.,  18850., 20458., 30647., 33107., 31355., 33863., 32063.,
      34619., 32771., 35375., 33479., 36131., 24114., 25914., 12965., 13881.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      444640.,   502240.,   623960.,   698520.,   832592.,   925136.,
      1071560.,  1183112.,  1170568.,  1285704.,  1269576.,  1388296.,
      1196624.,  1301456.,  1089240.,  1179160.,  946400.,   1020384.,
      952600.,   1045080.,  1301550.,  1420350.,  1697380.,  1843780.,
      2141370.,  2316650.,  2296490.,  2476250.,  2451610.,  2635850.,
      2267620.,  2429380.,  2030350.,  2168350.,  1738520.,  1851480.,
      1748304.,  1883856.,  2349060.,  2522340.,  3018360.,  3230904.,
      3757740.,  4011084.,  3981516.,  4240236.,  4205292.,  4469388.,
      3840888.,  4071864.,  3400260.,  3596580.,  2881872.,  3042000.,
      2896264.,  3083080.,  3847130.,  4085130.,  4892300.,  5183276.,
      6033566.,  6379310.,  6338542.,  6690558.,  6643518.,  7001806.,
      6013196.,  6325676.,  5279610.,  5544490.,  4440968.,  4656456.,
      4367944.,  4587016.,  5727050.,  6005370.,  7196588.,  7535948.,
      8778350.,  9180542.,  9083326.,  9491790.,  9388302.,  9803038.,
      8414252.,  8775116.,  7320810.,  7626010.,  6106184.,  6353928.,
      5839624.,  6090952.,  7606970.,  7925610.,  9500876.,  9888620.,
      11523134., 11981774., 11828110., 12293022., 12133086., 12604270.,
      10815308., 11224556., 9362010.,  9707530.,  7771400.,  8051400.,
      7158864.,  7398864.,  9242820.,  9546660.,  11447544., 11816760.,
      13774572., 14210700., 14073612., 14515116., 14372652., 14819532.,
      12712440., 13100088., 10923780., 11250660., 9005136.,  9269712.,
      7867800.,  8088280.,  10105550., 10384350., 12454180., 12792580.,
      14914970., 15314250., 15195530., 15599290., 15476090., 15884330.,
      13623460., 13977220., 11653550., 11951550., 9565080.,  9806040.,
      7901920.,  8094688.,  10114520., 10358040., 12424016., 12719312.,
      14831432., 15179528., 15080968., 15432648., 15330504., 15685768.,
      13451600., 13759184., 11470680., 11729560., 9386720.,  9595872.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    826.,    2026.,   1834.,   3418.,
      2842.,   4810.,   3850.,   6202.,   4858.,   7594.,   5276.,   7356.,
      3742.,   4910.,   860.,    2428.,   4600.,   8248.,   11732.,  17972.,
      16052.,  23060.,  20372.,  28148.,  24692.,  33236.,  29012.,  38324.,
      25976.,  32696.,  16476.,  20092.,  7866.,   12138.,  23892.,  33204.,
      48846.,  63966.,  58782.,  75054.,  68718.,  86142.,  78654.,  97230.,
      88590.,  108318., 72852.,  86772.,  43578.,  50922.,  25674.,  32634.,
      64884.,  79572.,  118398., 141582., 128334., 152670., 138270., 163758.,
      148206., 174846., 158142., 185934., 124596., 143892., 72138.,  82170.,
      43482.,  53130.,  105876., 125940., 187950., 219198., 197886., 230286.,
      207822., 241374., 217758., 252462., 227694., 263550., 176340., 201012.,
      100698., 113418., 61290.,  73626.,  146868., 172308., 257502., 296814.,
      267438., 307902., 277374., 318990., 287310., 330078., 297246., 341166.,
      228084., 258132., 129258., 144666., 79098.,  94122.,  187860., 218676.,
      327054., 374430., 336990., 385518., 346926., 396606., 356862., 407694.,
      366798., 418782., 279828., 315252., 157818., 175914., 92956.,  104252.,
      208248., 231352., 346388., 381812., 355316., 391508., 364244., 401204.,
      373172., 410900., 382100., 420596., 280824., 307000., 153628., 166972.,
      68382.,  74670.,  149212., 162044., 242746., 262378., 248362., 268378.,
      253978., 274378., 259594., 280378., 265210., 286378., 191132., 205500.,
      102814., 110126.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      27344.,  29120.,  30928.,  32768.,   38420.,  40720.,  43060.,  45440.,
      51320.,  54176.,  57080.,  60032.,   66108.,  69552.,  73052.,  76608.,
      72268.,  75824.,  79436.,  83104.,   78428.,  82096.,  85820.,  89600.,
      73976.,  77216.,  80504.,  83840.,   67380.,  70160.,  72980.,  75840.,
      58576.,  60864.,  63184.,  65536.,   58820.,  61680.,  64580.,  67520.,
      80425.,  84100.,  87825.,  91600.,   104950., 109480., 114070., 118720.,
      132475., 137900., 143395., 148960.,  142135., 147700., 153335., 159040.,
      151795., 157500., 163275., 169120.,  140470., 145480., 150550., 155680.,
      125825., 130100., 134425., 138800.,  107780., 111280., 114820., 118400.,
      108216., 112416., 116664., 120960.,  145470., 150840., 156270., 161760.,
      186996., 193584., 200244., 206976.,  232890., 240744., 248682., 256704.,
      246834., 254856., 262962., 271152.,  260778., 268968., 277242., 285600.,
      238260., 245424., 252660., 259968.,  210990., 217080., 223230., 229440.,
      178872., 183840., 188856., 193920.,  179564., 185360., 191212., 197120.,
      238595., 245980., 253435., 260960.,  303506., 312536., 321650., 330848.,
      374409., 385140., 395969., 406896.,  393421., 404348., 415373., 426496.,
      412433., 423556., 434777., 446096.,  373394., 383096., 392882., 402752.,
      327915., 336140., 344435., 352800.,  275884., 282576., 289324., 296128.,
      271292., 278096., 284956., 291872.,  355775., 364420., 373135., 381920.,
      447146., 457688., 468314., 479024.,  545517., 558012., 570605., 583296.,
      564529., 577220., 590009., 602896.,  583541., 596428., 609413., 622496.,
      523082., 534296., 545594., 556976.,  455175., 464660., 474215., 483840.,
      379708., 387408., 395164., 402976.,  363020., 370832., 378700., 386624.,
      472955., 482860., 492835., 502880.,  590786., 602840., 614978., 627200.,
      716625., 730884., 745241., 759696.,  735637., 750092., 764645., 779296.,
      754649., 769300., 784049., 798896.,  672770., 685496., 698306., 711200.,
      582435., 593180., 603995., 614880.,  483532., 492240., 501004., 509824.,
      445560., 453024., 460536., 468096.,  575310., 584760., 594270., 603840.,
      712596., 724080., 735636., 747264.,  857514., 871080., 884730., 898464.,
      876162., 889896., 903714., 917616.,  894810., 908712., 922698., 936768.,
      791508., 803568., 815700., 827904.,  680190., 690360., 700590., 710880.,
      560760., 568992., 577272., 585600.,  490020., 496880., 503780., 510720.,
      629425., 638100., 646825., 655600.,  775750., 786280., 796870., 807520.,
      929075., 941500., 953995., 966560.,  946575., 959140., 971775., 984480.,
      964075., 976780., 989555., 1002400., 848710., 859720., 870790., 881920.,
      726025., 735300., 744625., 754000.,  595940., 603440., 610980., 618560.,
      492368., 498368., 504400., 510464.,  630260., 637840., 645460., 653120.,
      774200., 783392., 792632., 801920.,  924252., 935088., 945980., 956928.,
      939820., 950768., 961772., 972832.,  955388., 966448., 977564., 988736.,
      838328., 847904., 857528., 867200.,  714900., 722960., 731060., 739200.,
      585040., 591552., 598096., 604672.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    43.,
      76.,    115.,   160.,   103.,   148.,   199.,   256.,   163.,   220.,
      283.,   352.,   223.,   292.,   367.,   448.,   283.,   364.,   451.,
      544.,   314.,   376.,   442.,   512.,   225.,   260.,   297.,   336.,
      42.,    88.,    138.,   192.,   260.,   368.,   484.,   608.,   686.,
      872.,   1070.,  1280.,  950.,   1160.,  1382.,  1616.,  1214.,  1448.,
      1694.,  1952.,  1478.,  1736.,  2006.,  2288.,  1742.,  2024.,  2318.,
      2624.,  1572.,  1776.,  1988.,  2208.,  1002.,  1112.,  1226.,  1344.,
      459.,   588.,   723.,   864.,   1422.,  1704.,  1998.,  2304.,  2937.,
      3396.,  3873.,  4368.,  3549.,  4044.,  4557.,  5088.,  4161.,  4692.,
      5241.,  5808.,  4773.,  5340.,  5925.,  6528.,  5385.,  5988.,  6609.,
      7248.,  4446.,  4872.,  5310.,  5760.,  2667.,  2892.,  3123.,  3360.,
      1551.,  1764.,  1983.,  2208.,  3942.,  4392.,  4854.,  5328.,  7221.,
      7932.,  8661.,  9408.,  7833.,  8580.,  9345.,  10128., 8445.,  9228.,
      10029., 10848., 9057.,  9876.,  10713., 11568., 9669.,  10524., 11397.,
      12288., 7638.,  8232.,  8838.,  9456.,  4431.,  4740.,  5055.,  5376.,
      2643.,  2940.,  3243.,  3552.,  6462.,  7080.,  7710.,  8352.,  11505.,
      12468., 13449., 14448., 12117., 13116., 14133., 15168., 12729., 13764.,
      14817., 15888., 13341., 14412., 15501., 16608., 13953., 15060., 16185.,
      17328., 10830., 11592., 12366., 13152., 6195.,  6588.,  6987.,  7392.,
      3735.,  4116.,  4503.,  4896.,  8982.,  9768.,  10566., 11376., 15789.,
      17004., 18237., 19488., 16401., 17652., 18921., 20208., 17013., 18300.,
      19605., 20928., 17625., 18948., 20289., 21648., 18237., 19596., 20973.,
      22368., 14022., 14952., 15894., 16848., 7959.,  8436.,  8919.,  9408.,
      4827.,  5292.,  5763.,  6240.,  11502., 12456., 13422., 14400., 20073.,
      21540., 23025., 24528., 20685., 22188., 23709., 25248., 21297., 22836.,
      24393., 25968., 21909., 23484., 25077., 26688., 22521., 24132., 25761.,
      27408., 17214., 18312., 19422., 20544., 9723.,  10284., 10851., 11424.,
      5722.,  6072.,  6426.,  6784.,  12836., 13552., 14276., 15008., 21374.,
      22472., 23582., 24704., 21926., 23048., 24182., 25328., 22478., 23624.,
      24782., 25952., 23030., 24200., 25382., 26576., 23582., 24776., 25982.,
      27200., 17348., 18160., 18980., 19808., 9498.,  9912.,  10330., 10752.,
      4225.,  4420.,  4617.,  4816.,  9226.,  9624.,  10026., 10432., 15019.,
      15628., 16243., 16864., 15367., 15988., 16615., 17248., 15715., 16348.,
      16987., 17632., 16063., 16708., 17359., 18016., 16411., 17068., 17731.,
      18400., 11834., 12280., 12730., 13184., 6369.,  6596.,  6825.,  7056.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      215248.,  229392.,  243792.,  258448.,  302820.,  321140.,  339780.,
      358740.,  404920.,  427672.,  450808.,  474328.,  522060.,  549500.,
      577388.,  605724.,  571116.,  599452.,  628236.,  657468.,  620172.,
      649404.,  679084.,  709212.,  585400.,  611224.,  637432.,  664024.,
      533540.,  555700.,  578180.,  600980.,  464080.,  482320.,  500816.,
      519568.,  464900.,  487700.,  510820.,  534260.,  636125.,  665425.,
      695125.,  725225.,  830630.,  866750.,  903350.,  940430.,  1049055.,
      1092315., 1136135., 1180515., 1126055., 1170435., 1215375., 1260875.,
      1203055., 1248555., 1294615., 1341235., 1113830., 1153790., 1194230.,
      1235150., 998125.,  1032225., 1066725., 1101625., 855300.,  883220.,
      911460.,  940020.,  857400.,  890904.,  924792.,  959064.,  1153110.,
      1195950., 1239270., 1283070., 1482900., 1535460., 1588596., 1642308.,
      1847538., 1910202., 1973538., 2037546., 1958754., 2022762., 2087442.,
      2152794., 2069970., 2135322., 2201346., 2268042., 1891860., 1949028.,
      2006772., 2065092., 1675830., 1724430., 1773510., 1823070., 1421112.,
      1460760., 1500792., 1541208., 1425004., 1471260., 1517964., 1565116.,
      1894095., 1953035., 2012535., 2072595., 2410114., 2482186., 2554930.,
      2628346., 2973957., 3059609., 3146045., 3233265., 3125661., 3212881.,
      3300885., 3389673., 3277365., 3366153., 3455725., 3546081., 2967874.,
      3045322., 3123442., 3202234., 2606975., 2672635., 2738855., 2805635.,
      2193772., 2247196., 2301068., 2355388., 2156812., 2211132., 2265900.,
      2321116., 2829015., 2898035., 2967615., 3037755., 3556210., 3640378.,
      3725218., 3810730., 4339293., 4439057., 4539605., 4640937., 4490997.,
      4592329., 4694445., 4797345., 4642701., 4745601., 4849285., 4953753.,
      4162354., 4251898., 4342114., 4433002., 3622535., 3698275., 3774575.,
      3851435., 3022348., 3083836., 3145772., 3208156., 2888620., 2951004.,
      3013836., 3077116., 3763935., 3843035., 3922695., 4002915., 4702306.,
      4798570., 4895506., 4993114., 5704629., 5818505., 5933165., 6048609.,
      5856333., 5971777., 6088005., 6205017., 6008037., 6125049., 6242845.,
      6361425., 5356834., 5458474., 5560786., 5663770., 4638095., 4723915.,
      4810295., 4897235., 3850924., 3920476., 3990476., 4060924., 3549624.,
      3609240., 3669240., 3729624., 4583670., 4659150., 4735110., 4811550.,
      5677908., 5769636., 5861940., 5954820., 6833106., 6941466., 7050498.,
      7160202., 6981954., 7091658., 7202034., 7313082., 7130802., 7241850.,
      7353570., 7465962., 6308052., 6404388., 6501300., 6598788., 5421270.,
      5502510., 5584230., 5666430., 4469688., 4535448., 4601592., 4668120.,
      3906500., 3961300., 4016420., 4071860., 5018125., 5087425., 5157125.,
      5227225., 6185030., 6269150., 6353750., 6438830., 7407855., 7507115.,
      7606935., 7707315., 7547575., 7647955., 7748895., 7850395., 7687295.,
      7788795., 7890855., 7993475., 6767750., 6855710., 6944150., 7033070.,
      5789725., 5863825., 5938325., 6013225., 4752580., 4812500., 4872740.,
      4933300., 3926992., 3974928., 4023120., 4071568., 5026980., 5087540.,
      5148420., 5209620., 6175288., 6248728., 6322552., 6396760., 7372428.,
      7459004., 7546028., 7633500., 7496748., 7584220., 7672140., 7760508.,
      7621068., 7709436., 7798252., 7887516., 6687544., 6764056., 6840952.,
      6918232., 5703140., 5767540., 5832260., 5897300., 4667344., 4719376.,
      4771664., 4824208.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      287.,    539.,    839.,    1187.,   743.,    1091.,   1487.,   1931.,
      1199.,   1643.,   2135.,   2675.,   1655.,   2195.,   2783.,   3419.,
      2111.,   2747.,   3431.,   4163.,   2394.,   2882.,   3402.,   3954.,
      1733.,   2009.,   2301.,   2609.,   250.,    610.,    1002.,   1426.,
      1876.,   2724.,   3636.,   4612.,   5134.,   6598.,   8158.,   9814.,
      7198.,   8854.,   10606.,  12454.,  9262.,   11110.,  13054.,  15094.,
      11326.,  13366.,  15502.,  17734.,  13390.,  15622.,  17950.,  20374.,
      12180.,  13796.,  15476.,  17220.,  7802.,   8674.,   9578.,   10514.,
      3423.,   4443.,   5511.,   6627.,   10830.,  13062.,  15390.,  17814.,
      22605.,  26241.,  30021.,  33945.,  27429.,  31353.,  35421.,  39633.,
      32253.,  36465.,  40821.,  45321.,  37077.,  41577.,  46221.,  51009.,
      41901.,  46689.,  51621.,  56697.,  34734.,  38118.,  41598.,  45174.,
      20895.,  22683.,  24519.,  26403.,  11991.,  13683.,  15423.,  17211.,
      30654.,  34230.,  37902.,  41670.,  56373.,  62025.,  67821.,  73761.,
      61197.,  67137.,  73221.,  79449.,  66021.,  72249.,  78621.,  85137.,
      70845.,  77361.,  84021.,  90825.,  75669.,  82473.,  89421.,  96513.,
      59934.,  64662.,  69486.,  74406.,  34839.,  37299.,  39807.,  42363.,
      20559.,  22923.,  25335.,  27795.,  50478.,  55398.,  60414.,  65526.,
      90141.,  97809.,  105621., 113577., 94965.,  102921., 111021., 119265.,
      99789.,  108033., 116421., 124953., 104613., 113145., 121821., 130641.,
      109437., 118257., 127221., 136329., 85134.,  91206.,  97374.,  103638.,
      48783.,  51915.,  55095.,  58323.,  29127.,  32163.,  35247.,  38379.,
      70302.,  76566.,  82926.,  89382.,  123909., 133593., 143421., 153393.,
      128733., 138705., 148821., 159081., 133557., 143817., 154221., 164769.,
      138381., 148929., 159621., 170457., 143205., 154041., 165021., 176145.,
      110334., 117750., 125262., 132870., 62727.,  66531.,  70383.,  74283.,
      37695.,  41403.,  45159.,  48963.,  90126.,  97734.,  105438., 113238.,
      157677., 169377., 181221., 193209., 162501., 174489., 186621., 198897.,
      167325., 179601., 192021., 204585., 172149., 184713., 197421., 210273.,
      176973., 189825., 202821., 215961., 135534., 144294., 153150., 162102.,
      76671.,  81147.,  85671.,  90243.,  45082.,  47874.,  50698.,  53554.,
      101268., 106980., 112756., 118596., 168814., 177574., 186430., 195382.,
      173182., 182134., 191182., 200326., 177550., 186694., 195934., 205270.,
      181918., 191254., 200686., 210214., 186286., 195814., 205438., 215158.,
      137172., 143652., 150196., 156804., 75162.,  78466.,  81802.,  85170.,
      33413.,  34969.,  36541.,  38129.,  73018.,  76194.,  79402.,  82642.,
      118943., 123803., 128711., 133667., 121703., 126659., 131663., 136715.,
      124463., 129515., 134615., 139763., 127223., 132371., 137567., 142811.,
      129983., 135227., 140519., 145859., 93786.,  97346.,  100938., 104562.,
      50501.,  52313.,  54141.,  55985.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1708000.,  1820896.,  1935840.,  2052832.,  2404440.,  2550680.,
      2699480.,  2850840.,  3211728.,  3385168.,  3561680.,  3741264.,
      4106312.,  4309000.,  4515272.,  4725128.,  4427208.,  4628872.,
      4834120.,  5042952.,  4715336.,  4915976.,  5120200.,  5328008.,
      4309456.,  4482896.,  4659408.,  4838992.,  3767128.,  3911320.,
      4058072.,  4207384.,  3084256.,  3197152.,  3312096.,  3429088.,
      3479512.,  3628824.,  3780696.,  3935128.,  4701550.,  4886398.,
      5074446.,  5265694.,  5809476.,  6024228.,  6242820.,  6465252.,
      7010138.,  7257354.,  7509050.,  7765226.,  7226682.,  7474666.,
      7727130.,  7984074.,  7410458.,  7659210.,  7912442.,  8170154.,
      6477892.,  6690596.,  6907140.,  7127524.,  5366574.,  5540670.,
      5717966.,  5898462.,  4071384.,  4204312.,  4339800.,  4477848.,
      5257168.,  5426512.,  5598928.,  5774416.,  6675588.,  6886756.,
      7101764.,  7320612.,  7771320.,  8019192.,  8271672.,  8528760.,
      8981612.,  9269260.,  9562284.,  9860684.,  9012908.,  9303116.,
      9598700.,  9899660.,  9011436.,  9304204.,  9602348.,  9905868.,
      7675576.,  7927544.,  8184120.,  8445304.,  6135044.,  6343140.,
      6555076.,  6770852.,  4383696.,  4544848.,  4709072.,  4876368.,
      6336456.,  6542216.,  6751560.,  6964488.,  7817626.,  8075594.,
      8338042.,  8604970.,  8783916.,  9089484.,  9400428.,  9716748.,
      9902974.,  10259726., 10622750., 10992046., 9799198.,  10160302.,
      10527678., 10901326., 9662654.,  10028110., 10399838., 10777838.,
      8108332.,  8424140.,  8745324.,  9071884.,  6307034.,  6569610.,
      6836666.,  7108202.,  4251592.,  4457352.,  4666696.,  4879624.,
      6740296.,  6953224.,  7169736.,  7389832.,  8031866.,  8296746.,
      8566106.,  8839946.,  8578156.,  8890380.,  9207980.,  9530956.,
      9276190.,  9639342.,  10008766., 10384462., 8741310.,  9100622.,
      9466206.,  9838062.,  8375390.,  8739054.,  9108990.,  9485198.,
      7793004.,  8107276.,  8426924.,  8751948.,  6964666.,  7225962.,
      7491738.,  7761994.,  5883208.,  6087944.,  6296264.,  6508168.,
      5435080.,  5646984.,  5862472.,  6081544.,  7094106.,  7357706.,
      7625786.,  7898346.,  8826028.,  9136716.,  9452780.,  9774220.,
      10708670., 11070030., 11437662., 11811566., 10763614., 11121134.,
      11484926., 11854990., 11216894., 11578766., 11946910., 12321326.,
      9968044.,  10280780., 10598892., 10922380., 8474266.,  8734282.,
      8998778.,  9267754.,  6728392.,  6932104.,  7139400.,  7350280.,
      6367696.,  6557520.,  6750416.,  6946384.,  7855620.,  8090340.,
      8328900.,  8571300.,  9164216.,  9438712.,  9717816.,  10001528.,
      10599660., 10917004., 11239724., 11567820., 10173228., 10484940.,
      10802028., 11124492., 10374508., 10688780., 11008428., 11333452.,
      8899512.,  9169912.,  9444920.,  9724536.,  7207556.,  7431012.,
      7658308.,  7889444.,  5292496.,  5465936.,  5642448.,  5822032.,
      4869336.,  5020696.,  5174616.,  5331096.,  5537454.,  5722814.,
      5911374.,  6103134.,  6319812.,  6541732.,  6767492.,  6997092.,
      7221530.,  7482570.,  7748090.,  8018090.,  6891258.,  7153066.,
      7419354.,  7690122.,  7450842.,  7721610.,  7996858.,  8276586.,
      6478276.,  6714532.,  6954628.,  7198564.,  5333102.,  5532286.,
      5734670.,  5940254.,  4010200.,  4169752.,  4331864.,  4496536.,
      3127264.,  3256544.,  3387872.,  3521248.,  2955608.,  3112088.,
      3271128.,  3432728.,  3923920.,  4109648.,  4298448.,  4490320.,
      4987720.,  5204744.,  5425352.,  5649544.,  5353672.,  5569672.,
      5789256.,  6012424.,  5790280.,  6013448.,  6240200.,  6470536.,
      5288912.,  5482832.,  5679824.,  5879888.,  4642904.,  4805528.,
      4970712.,  5138456.,  3848160.,  3977440.,  4108768.,  4242144.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    5626.,    8362.,
      11482.,   14986.,   9178.,    12682.,   16570.,   20842.,   12730.,
      17002.,   21658.,   26698.,   16282.,   21322.,   26746.,   32554.,
      18684.,   22556.,   26684.,   31068.,   13598.,   15790.,   18110.,
      20558.,   1660.,    4508.,    7612.,    10972.,   14200.,   20920.,
      28152.,   35896.,   39668.,   51284.,   63668.,   76820.,   55988.,
      69140.,   83060.,   97748.,   72308.,   86996.,   102452.,  118676.,
      88628.,   104852.,  121844.,  139604.,  104948.,  122708.,  141236.,
      160532.,  95864.,   108728.,  122104.,  135992.,  61564.,   68508.,
      75708.,   83164.,   26394.,   34506.,   43002.,   51882.,   84468.,
      102228.,  120756.,  140052.,  177294.,  206238.,  236334.,  267582.,
      215598.,  246846.,  279246.,  312798.,  253902.,  287454.,  322158.,
      358014.,  292206.,  328062.,  365070.,  403230.,  330510.,  368670.,
      407982.,  448446.,  274548.,  301524.,  329268.,  357780.,  165402.,
      179658.,  194298.,  209322.,  94266.,   107754.,  121626.,  135882.,
      241716.,  270228.,  299508.,  329556.,  445422.,  490494.,  536718.,
      584094.,  483726.,  531102.,  579630.,  629310.,  522030.,  571710.,
      622542.,  674526.,  560334.,  612318.,  665454.,  719742.,  598638.,
      652926.,  708366.,  764958.,  474804.,  512532.,  551028.,  590292.,
      276282.,  295914.,  315930.,  336330.,  162138.,  181002.,  200250.,
      219882.,  398964.,  438228.,  478260.,  519060.,  713550.,  774750.,
      837102.,  900606.,  751854.,  815358.,  880014.,  945822.,  790158.,
      855966.,  922926.,  991038.,  828462.,  896574.,  965838.,  1036254.,
      866766.,  937182.,  1008750., 1081470., 675060.,  723540.,  772788.,
      822804.,  387162.,  412170.,  437562.,  463338.,  230010.,  254250.,
      278874.,  303882.,  556212.,  606228.,  657012.,  708564.,  981678.,
      1059006., 1137486., 1217118., 1019982., 1099614., 1180398., 1262334.,
      1058286., 1140222., 1223310., 1307550., 1096590., 1180830., 1266222.,
      1352766., 1134894., 1221438., 1309134., 1397982., 875316.,  934548.,
      994548.,  1055316., 498042.,  528426.,  559194.,  590346.,  297882.,
      327498.,  357498.,  387882.,  713460.,  774228.,  835764.,  898068.,
      1249806., 1343262., 1437870., 1533630., 1288110., 1383870., 1480782.,
      1578846., 1326414., 1424478., 1523694., 1624062., 1364718., 1465086.,
      1566606., 1669278., 1403022., 1505694., 1609518., 1714494., 1075572.,
      1145556., 1216308., 1287828., 608922.,  644682.,  680826.,  717354.,
      357884.,  380188.,  402748.,  425564.,  804472.,  850104.,  896248.,
      942904.,  1341812., 1411796., 1482548., 1554068., 1376564., 1448084.,
      1520372., 1593428., 1411316., 1484372., 1558196., 1632788., 1446068.,
      1520660., 1596020., 1672148., 1480820., 1556948., 1633844., 1711508.,
      1090936., 1142712., 1195000., 1247800., 598012.,  624412.,  651068.,
      677980.,  265758.,  278190.,  290750.,  303438.,  580988.,  606364.,
      631996.,  657884.,  946714.,  985546.,  1024762., 1064362., 968698.,
      1008298., 1048282., 1088650., 990682.,  1031050., 1071802., 1112938.,
      1012666., 1053802., 1095322., 1137226., 1034650., 1076554., 1118842.,
      1161514., 746748.,  775196.,  803900.,  832860.,  402206.,  416686.,
      431294.,  446030.};
  const std::array<int, 4> in_shape = {{1, 9, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2220.,  3070.,  4046.,  5152.,  5558.,  5964.,  6370.,  5930.,  5340.,
      4596.,  4600.,  6225.,  8050.,  10080., 10710., 11340., 11970., 10975.,
      9750.,  8290.,  8270.,  11035., 14091., 17444., 18347., 19250., 20153.,
      18285., 16090., 13562., 13510., 17850., 22589., 27734., 28959., 30184.,
      31409., 28280., 24710., 20692., 20090., 26250., 32879., 39984., 41209.,
      42434., 43659., 38990., 33810., 28112., 26670., 34650., 43169., 52234.,
      53459., 54684., 55909., 49700., 42910., 35532., 32330., 41665., 51513.,
      61880., 63077., 64274., 65471., 57795., 49570., 40790., 35300., 45275.,
      55720., 66640., 67760., 68880., 70000., 61525., 52550., 43070., 35300.,
      45130., 55370., 66024., 67018., 68012., 69006., 60470., 51500., 42092.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,    10.,   20.,   30.,   40.,   50.,   52.,   45.,   28.,
      13.,  41.,   86.,   150.,  186.,  222.,  258.,  239.,  191.,  112.,
      64.,  167.,  312.,  502.,  580.,  658.,  736.,  645.,  494.,  280.,
      169., 398.,  690.,  1048., 1126., 1204., 1282., 1086., 809.,  448.,
      274., 629.,  1068., 1594., 1672., 1750., 1828., 1527., 1124., 616.,
      379., 860.,  1446., 2140., 2218., 2296., 2374., 1968., 1439., 784.,
      484., 1091., 1824., 2686., 2764., 2842., 2920., 2409., 1754., 952.,
      539., 1171., 1898., 2722., 2790., 2858., 2926., 2357., 1681., 896.,
      387., 826.,  1318., 1864., 1906., 1948., 1990., 1582., 1115., 588.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      16800.,  23320.,  30832.,  39368.,  42560.,  45752.,  48944.,  45664.,
      41200.,  35520.,  35260.,  47825.,  61970.,  77735.,  82705.,  87675.,
      92645.,  85070.,  75675.,  64420.,  63904.,  85400.,  109200., 135352.,
      142492., 149632., 156772., 142392., 125420., 105808., 104972., 138845.,
      175882., 216139., 225841., 235543., 245245., 220990., 193235., 161924.,
      157052., 205345., 257362., 313159., 322861., 332563., 342265., 305830.,
      265335., 220724., 209132., 271845., 338842., 410179., 419881., 429583.,
      439285., 390670., 337435., 279524., 254608., 328220., 405912., 487732.,
      497224., 506716., 516208., 455808., 391040., 321856., 278700., 357525.,
      440090., 526435., 535325., 544215., 553105., 486230., 415375., 340500.,
      279168., 356960., 438016., 522368., 530264., 538160., 546056., 478576.,
      407640., 333216.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    59.,    124.,   196.,   268.,   340.,   365.,   322.,
      203.,   76.,    264.,   580.,   1040.,  1312.,  1584.,  1856.,  1744.,
      1408.,  832.,   437.,   1174.,  2235.,  3644.,  4244.,  4844.,  5444.,
      4809.,  3706.,  2111.,  1235.,  2938.,  5133.,  7844.,  8444.,  9044.,
      9644.,  8211.,  6142.,  3413.,  2033.,  4702.,  8031.,  12044., 12644.,
      13244., 13844., 11613., 8578.,  4715.,  2831.,  6466.,  10929., 16244.,
      16844., 17444., 18044., 15015., 11014., 6017.,  3629.,  8230.,  13827.,
      20444., 21044., 21644., 22244., 18417., 13450., 7319.,  4128.,  8992.,
      14608., 20992., 21520., 22048., 22576., 18220., 13016., 6948.,  2993.,
      6398.,  10223., 14476., 14804., 15132., 15460., 12305., 8682.,  4583.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      130592.,  181640.,  240560.,  307608.,  332920.,  358232.,  383544.,
      358256.,  323560.,  279200.,  275960.,  374750.,  486100.,  610330.,
      649810.,  689290.,  728770.,  669700.,  596150.,  507800.,  502256.,
      671740.,  859560.,  1066100., 1122884., 1179668., 1236452., 1123656.,
      990220.,  835760.,  827400.,  1095010., 1387820., 1706278., 1783502.,
      1860726., 1937950., 1747004., 1528170., 1281000., 1241800., 1624210.,
      2036300., 2478518., 2555742., 2632966., 2710190., 2422364., 2102170.,
      1749160., 1656200., 2153410., 2684780., 3250758., 3327982., 3405206.,
      3482430., 3097724., 2676170., 2217320., 2020784., 2605420., 3222600.,
      3872708., 3948308., 4023908., 4099508., 3620328., 3106300., 2557040.,
      2214840., 2841550., 3498100., 4184810., 4255650., 4326490., 4397330.,
      3866020., 3302950., 2707800., 2220448., 2839400., 3484400., 4155704.,
      4218648., 4281592., 4344536., 3807920., 3243720., 2651680.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    856.,    1400.,   1944.,   2488.,   2722.,
      2428.,   1542.,   500.,    1864.,   4220.,   7696.,   9808.,   11920.,
      14032.,  13292.,  10792.,  6404.,   3202.,   8756.,   16854.,  27688.,
      32392.,  37096.,  41800.,  37086.,  28676.,  16378.,  9418.,   22532.,
      39534.,  60616.,  65320.,  70024.,  74728.,  63798.,  47828.,  26626.,
      15634.,  36308.,  62214.,  93544.,  98248.,  102952., 107656., 90510.,
      66980.,  36874.,  21850.,  50084.,  84894.,  126472., 131176., 135880.,
      140584., 117222., 86132.,  47122.,  28066.,  63860.,  107574., 159400.,
      164104., 168808., 173512., 143934., 105284., 57370.,  32292.,  70440.,
      114572., 164816., 168976., 173136., 177296., 143228., 102408., 54708.,
      23534.,  50348.,  80506.,  114072., 116664., 119256., 121848., 97042.,
      68508.,  36182.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7920.,   8880.,   11040.,  12280.,  14648.,  16184.,  18760.,  20608.,
      20328.,  22232.,  21896.,  23856.,  23464.,  25480.,  21944.,  23720.,
      19840.,  21360.,  17136.,  18384.,  16860.,  18400.,  22925.,  24900.,
      29770.,  32200.,  37415.,  40320.,  39865.,  42840.,  42315.,  45360.,
      44765.,  47880.,  41170.,  43900.,  36675.,  39000.,  31260.,  33160.,
      30824.,  33080.,  41260.,  44140.,  52836.,  56364.,  65576.,  69776.,
      69104.,  73388.,  72632.,  77000.,  76160.,  80612.,  69252.,  73140.,
      61060.,  64360.,  51560.,  54248.,  50932.,  54040.,  67445.,  71400.,
      85526.,  90356.,  105203., 110936., 110005., 115836., 114807., 120736.,
      119609., 125636., 107870., 113120., 94395.,  98840.,  79156.,  82768.,
      76692.,  80360.,  100345., 105000., 125846., 131516., 153223., 159936.,
      158025., 164836., 162827., 169736., 167629., 174636., 149870., 155960.,
      130095., 135240., 108276., 112448., 102452., 106680., 133245., 138600.,
      166166., 172676., 201243., 208936., 206045., 213836., 210847., 218736.,
      215649., 223636., 191870., 198800., 165795., 171640., 137396., 142128.,
      125288., 129320., 161560., 166660., 199860., 206052., 240212., 247520.,
      244916., 252308., 249620., 257096., 254324., 261884., 224628., 231180.,
      192760., 198280., 158696., 163160., 137500., 141200., 176425., 181100.,
      217210., 222880., 259875., 266560., 264285., 271040., 268695., 275520.,
      273105., 280000., 240130., 246100., 205175., 210200., 168220., 172280.,
      137968., 141200., 176440., 180520., 216536., 221480., 258272., 264096.,
      262192., 268072., 266112., 272048., 270032., 276024., 236696., 241880.,
      201640., 206000., 164848., 168368.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    44.,    80.,    76.,
      120.,   108.,   160.,   140.,   200.,   157.,   208.,   142.,   180.,
      91.,    112.,   24.,    52.,    100.,   164.,   236.,   344.,   440.,
      600.,   568.,   744.,   696.,   888.,   824.,   1032.,  788.,   956.,
      644.,   764.,   384.,   448.,   181.,   256.,   506.,   668.,   987.,
      1248.,  1636.,  2008.,  1924.,  2320.,  2212.,  2632.,  2500.,  2944.,
      2229.,  2580.,  1730.,  1976.,  991.,   1120.,  559.,   676.,   1346.,
      1592.,  2373.,  2760.,  3652.,  4192.,  3940.,  4504.,  4228.,  4816.,
      4516.,  5128.,  3867.,  4344.,  2906.,  3236.,  1621.,  1792.,  937.,
      1096.,  2186.,  2516.,  3759.,  4272.,  5668.,  6376.,  5956.,  6688.,
      6244.,  7000.,  6532.,  7312.,  5505.,  6108.,  4082.,  4496.,  2251.,
      2464.,  1315.,  1516.,  3026.,  3440.,  5145.,  5784.,  7684.,  8560.,
      7972.,  8872.,  8260.,  9184.,  8548.,  9496.,  7143.,  7872.,  5258.,
      5756.,  2881.,  3136.,  1693.,  1936.,  3866.,  4364.,  6531.,  7296.,
      9700.,  10744., 9988.,  11056., 10276., 11368., 10564., 11680., 8781.,
      9636.,  6434.,  7016.,  3511.,  3808.,  1972.,  2156.,  4308.,  4684.,
      7016.,  7592.,  10104., 10888., 10360., 11160., 10616., 11432., 10872.,
      11704., 8792.,  9428.,  6292.,  6724.,  3364.,  3584.,  1445.,  1548.,
      3094.,  3304.,  4951.,  5272.,  7020.,  7456.,  7180.,  7624.,  7340.,
      7792.,  7500.,  7960.,  5977.,  6328.,  4222.,  4460.,  2231.,  2352.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      61488.,   69104.,   85900.,   95740.,   114184.,  126376.,  146468.,
      161140.,  158900.,  174020.,  171332.,  186900.,  183764.,  199780.,
      172072.,  186184.,  155740.,  167820.,  134640.,  144560.,  131860.,
      144100.,  179525.,  195225.,  233390.,  252710.,  293615.,  316715.,
      313075.,  336735.,  332535.,  356755.,  351995.,  376775.,  323990.,
      345710.,  288825.,  307325.,  246340.,  261460.,  242152.,  260104.,
      324410.,  347330.,  415740.,  443820.,  516334.,  549766.,  544390.,
      578494.,  572446.,  607222.,  600502.,  635950.,  546348.,  577308.,
      481970.,  508250.,  407176.,  428584.,  401324.,  426076.,  531755.,
      563255.,  674674.,  713146.,  830305.,  875973.,  868525.,  914977.,
      906745.,  953981.,  944965.,  992985.,  852586.,  894418.,  746375.,
      781795.,  626108.,  654892.,  606284.,  635516.,  793555.,  830655.,
      995554.,  1040746., 1212505., 1266013., 1250725., 1305017., 1288945.,
      1344021., 1327165., 1383025., 1186906., 1235458., 1030575., 1071595.,
      857948.,  891212.,  811244.,  844956.,  1055355., 1098055., 1316434.,
      1368346., 1594705., 1656053., 1632925., 1695057., 1671145., 1734061.,
      1709365., 1773065., 1521226., 1576498., 1314775., 1361395., 1089788.,
      1127532., 994312.,  1026472., 1282370., 1323050., 1586604., 1635996.,
      1907206., 1965502., 1944670., 2003638., 1982134., 2041774., 2019598.,
      2079910., 1784028., 1836300., 1531130., 1575170., 1260712., 1296328.,
      1092660., 1122180., 1402125., 1439425., 1726430., 1771670., 2065735.,
      2119075., 2100875., 2154775., 2136015., 2190475., 2171155., 2226175.,
      1909190., 1956830., 1631425., 1671525., 1337700., 1370100., 1097328.,
      1123120., 1403420., 1435980., 1722472., 1761928., 2054612., 2101092.,
      2085860., 2132788., 2117108., 2164484., 2148356., 2196180., 1883272.,
      1924648., 1604460., 1639260., 1311792., 1339888.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   119.,   275.,   292.,   564.,   532.,
      868.,   772.,   1172.,  1012.,  1476.,  1163.,  1559.,  1066.,  1362.,
      689.,   853.,   142.,   358.,   684.,   1180.,  1690.,  2530.,  3224.,
      4472.,  4216.,  5592.,  5208.,  6712.,  6200.,  7832.,  5986.,  7306.,
      4924.,  5868.,  2950.,  3454.,  1307.,  1895.,  3742.,  5014.,  7401.,
      9453.,  12380., 15308., 14636., 17756., 16892., 20204., 19148., 22652.,
      17157., 19929., 13366., 15310., 7679.,  8699.,  4247.,  5171.,  10294.,
      12238., 18237., 21297., 28172., 32444., 30428., 34892., 32684., 37340.,
      34940., 39788., 30009., 33789., 22606., 25222., 12635., 13991., 7187.,
      8447.,  16846., 19462., 29073., 33141., 43964., 49580., 46220., 52028.,
      48476., 54476., 50732., 56924., 42861., 47649., 31846., 35134., 17591.,
      19283., 10127., 11723., 23398., 26686., 39909., 44985., 59756., 66716.,
      62012., 69164., 64268., 71612., 66524., 74060., 55713., 61509., 41086.,
      45046., 22547., 24575., 13067., 14999., 29950., 33910., 50745., 56829.,
      75548., 83852., 77804., 86300., 80060., 88748., 82316., 91196., 68565.,
      75369., 50326., 54958., 27503., 29867., 15414., 16878., 33724., 36716.,
      54994., 59578., 79288., 85528., 81304., 87672., 83320., 89816., 85336.,
      91960., 69082., 74146., 49484., 52924., 26478., 28230., 11357., 12177.,
      24338., 26010., 38975., 41531., 55300., 58772., 56564., 60100., 57828.,
      61428., 59092., 62756., 47123., 49919., 33306., 35202., 17609., 18573.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      484448.,   545120.,   677560.,   755960.,   901520.,   998672.,
      1157352.,  1274280.,  1256360.,  1376872.,  1355368.,  1479464.,
      1454376.,  1582056.,  1362704.,  1475216.,  1234040.,  1330360.,
      1067360.,  1146464.,  1042840.,  1140440.,  1420750.,  1545950.,
      1848100.,  2002180.,  2326170.,  2510410.,  2481290.,  2670010.,
      2636410.,  2829610.,  2791530.,  2989210.,  2570500.,  2743780.,
      2292350.,  2439950.,  1955800.,  2076440.,  1919504.,  2062736.,
      2572660.,  2755540.,  3298200.,  3522264.,  4097660.,  4364444.,
      4321436.,  4593596.,  4545212.,  4822748.,  4768988.,  5051900.,
      4340184.,  4587288.,  3829780.,  4039540.,  3236240.,  3407120.,
      3186120.,  3383688.,  4217770.,  4461018.,  5332716.,  5623436.,
      6532750.,  6872734.,  6783454.,  7121518.,  7017774.,  7353918.,
      7235710.,  7569934.,  6404492.,  6689324.,  5582650.,  5824490.,
      4664968.,  4862024.,  4702536.,  4903176.,  6002442.,  6249530.,
      7387180.,  7682508.,  8858542.,  9203902.,  8994558.,  9337998.,
      9114190.,  9455710.,  9217438.,  9557038.,  8009420.,  8298860.,
      6923930.,  7169610.,  5741064.,  5941192.,  5760200.,  5963912.,
      7213674.,  7464602.,  8753516.,  9053452.,  10381518., 10732254.,
      10402846., 10751662., 10407790., 10754686., 10396350., 10741326.,
      8926220.,  9220268.,  7691770.,  7941290.,  6358408.,  6561608.,
      6308752.,  6500112.,  7770196.,  8005044.,  9311704.,  9591576.,
      10934812., 11261244., 10835516., 11159132., 10719836., 11040636.,
      10587772., 10905756., 8967192.,  9237336.,  7704820.,  7933780.,
      6351632.,  6537872.,  6180632.,  6350936.,  7469998.,  7677886.,
      8828772.,  9075524.,  10258234., 10545130., 10025770., 10308954.,
      9776922.,  10056394., 9511690.,  9787450.,  7908676.,  8141860.,
      6790750.,  6988270.,  5594456.,  5755032.,  5304160.,  5444704.,
      6223480.,  6393528.,  7197200.,  7397776.,  8226344.,  8458472.,
      7848168.,  8075688.,  7453608.,  7676520.,  7042664.,  7260968.,
      5643152.,  5826320.,  4859960.,  5015160.,  4015200.,  4141408.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    826.,    2026.,   2104.,   4216.,
      3960.,   6584.,   5816.,   8952.,   7672.,   11320.,  8938.,   12058.,
      8252.,   10588.,  5358.,   6654.,   940.,    2636.,   5016.,   8920.,
      12740.,  19364.,  24624.,  34480.,  32432.,  43312.,  40240.,  52144.,
      48048.,  60976.,  46628.,  57092.,  38488.,  45976.,  23116.,  27116.,
      9898.,   14554.,  28724.,  38804.,  57246.,  73518.,  96232.,  119464.,
      114088., 138856., 131944., 158248., 149800., 177640., 134574., 156606.,
      105044., 120500., 60442.,  68554.,  33082.,  40426.,  80468.,  95924.,
      142926., 167262., 221224., 255208., 239080., 274600., 256936., 293992.,
      274792., 313384., 236382., 266478., 178292., 199124., 99754.,  110554.,
      56266.,  66298.,  132212., 153044., 228606., 261006., 346216., 390952.,
      364072., 410344., 381928., 429736., 399784., 449128., 338190., 376350.,
      251540., 277748., 139066., 152554., 79450.,  92170.,  183956., 210164.,
      314286., 354750., 471208., 526696., 489064., 546088., 506920., 565480.,
      524776., 584872., 439998., 486222., 324788., 356372., 178378., 194554.,
      102634., 118042., 235700., 267284., 399966., 448494., 596200., 662440.,
      614056., 681832., 631912., 701224., 649768., 720616., 541806., 596094.,
      398036., 434996., 217690., 236554., 121868., 133548., 266840., 290712.,
      435428., 472004., 628144., 677936., 644144., 694960., 660144., 711984.,
      676144., 729008., 547652., 588068., 392472., 419928., 210092., 224076.,
      90046.,  96590.,  193052., 206396., 309274., 329674., 438968., 466680.,
      449016., 477240., 459064., 487800., 469112., 498360., 374218., 396538.,
      264572., 279708., 139918., 147614.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      29808.,   31680.,   33584.,   35520.,   41740.,   44160.,   46620.,
      49120.,   55592.,   58592.,   61640.,   64736.,   71428.,   75040.,
      78708.,   82432.,   77588.,   81312.,   85092.,   88928.,   83748.,
      87584.,   91476.,   95424.,   89908.,   93856.,   97860.,   101920.,
      84296.,   87776.,   91304.,   94880.,   76380.,   79360.,   82380.,
      85440.,   66096.,   68544.,   71024.,   73536.,   64420.,   67440.,
      70500.,   73600.,   87825.,   91700.,   95625.,   99600.,   114310.,
      119080.,  123910.,  128800.,  143955.,  149660.,  155435.,  161280.,
      153615.,  159460.,  165375.,  171360.,  163275.,  169260.,  175315.,
      181440.,  172935.,  179060.,  185255.,  191520.,  159310.,  164680.,
      170110.,  175600.,  142125.,  146700.,  151325.,  156000.,  121300.,
      125040.,  128820.,  132640.,  118856.,  123296.,  127784.,  132320.,
      159370.,  165040.,  170770.,  176560.,  204396.,  211344.,  218364.,
      225456.,  254030.,  262304.,  270662.,  279104.,  267974.,  276416.,
      284942.,  293552.,  281918.,  290528.,  299222.,  308000.,  295862.,
      304640.,  313502.,  322448.,  269340.,  277008.,  284748.,  292560.,
      237730.,  244240.,  250810.,  257440.,  200936.,  206240.,  211592.,
      216992.,  197596.,  203728.,  209916.,  216160.,  261975.,  269780.,
      277655.,  285600.,  332570.,  342104.,  351722.,  361424.,  409493.,
      420812.,  432229.,  443744.,  428505.,  440020.,  451633.,  463344.,
      447517.,  459228.,  471037.,  482944.,  466529.,  478436.,  490441.,
      502544.,  421106.,  431480.,  441938.,  452480.,  368795.,  377580.,
      386435.,  395360.,  309484.,  316624.,  323820.,  331072.,  299516.,
      306768.,  314076.,  321440.,  392175.,  401380.,  410655.,  420000.,
      492170.,  503384.,  514682.,  526064.,  599613.,  612892.,  626269.,
      639744.,  618625.,  632100.,  645673.,  659344.,  637637.,  651308.,
      665077.,  678944.,  656649.,  670516.,  684481.,  698544.,  587426.,
      599480.,  611618.,  623840.,  510195.,  520380.,  530635.,  540960.,
      424844.,  433104.,  441420.,  449792.,  401436.,  409808.,  418236.,
      426720.,  522375.,  532980.,  543655.,  554400.,  651770.,  664664.,
      677642.,  690704.,  789733.,  804972.,  820309.,  835744.,  808745.,
      824180.,  839713.,  855344.,  827757.,  843388.,  859117.,  874944.,
      846769.,  862596.,  878521.,  894544.,  753746.,  767480.,  781298.,
      795200.,  651595.,  663180.,  674835.,  686560.,  540204.,  549584.,
      559020.,  568512.,  493160.,  501152.,  509192.,  517280.,  636130.,
      646240.,  656410.,  666640.,  787164.,  799440.,  811788.,  824208.,
      946358.,  960848.,  975422.,  990080.,  965006.,  979664.,  994406.,
      1009232., 983654.,  998480.,  1013390., 1028384., 1002302., 1017296.,
      1032374., 1047536., 885516.,  898512.,  911580.,  924720.,  760090.,
      771040.,  782050.,  793120.,  625928.,  634784.,  643688.,  652640.,
      542660.,  550000.,  557380.,  564800.,  696425.,  705700.,  715025.,
      724400.,  857590.,  868840.,  880150.,  891520.,  1026235., 1039500.,
      1052835., 1066240., 1043735., 1057140., 1070615., 1084160., 1061235.,
      1074780., 1088395., 1102080., 1078735., 1092420., 1106175., 1120000.,
      948670.,  960520.,  972430.,  984400.,  810725.,  820700.,  830725.,
      840800.,  664820.,  672880.,  680980.,  689120.,  545456.,  551872.,
      558320.,  564800.,  697660.,  705760.,  713900.,  722080.,  856328.,
      866144.,  876008.,  885920.,  1021524., 1033088., 1044708., 1056384.,
      1037092., 1048768., 1060500., 1072288., 1052660., 1064448., 1076292.,
      1088192., 1068228., 1080128., 1092084., 1104096., 936488.,  946784.,
      957128.,  967520.,  797900.,  806560.,  815260.,  824000.,  652400.,
      659392.,  666416.,  673472.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    43.,
      76.,    115.,   160.,   116.,   176.,   244.,   320.,   228.,   304.,
      388.,   480.,   340.,   432.,   532.,   640.,   452.,   560.,   676.,
      800.,   535.,   628.,   727.,   832.,   498.,   568.,   642.,   720.,
      325.,   364.,   405.,   448.,   46.,    96.,    150.,   208.,   284.,
      400.,   524.,   656.,   746.,   944.,   1154.,  1376.,  1464.,  1760.,
      2072.,  2400.,  1944.,  2272.,  2616.,  2976.,  2424.,  2784.,  3160.,
      3552.,  2904.,  3296.,  3704.,  4128.,  2834.,  3152.,  3482.,  3824.,
      2348.,  2576.,  2812.,  3056.,  1414.,  1536.,  1662.,  1792.,  583.,
      724.,   871.,   1024.,  1718.,  2024.,  2342.,  2672.,  3453.,  3948.,
      4461.,  4992.,  5836.,  6544.,  7276.,  8032.,  6940.,  7696.,  8476.,
      9280.,  8044.,  8848.,  9676.,  10528., 9148.,  10000., 10876., 11776.,
      8241.,  8916.,  9609.,  10320., 6446.,  6920.,  7406.,  7904.,  3715.,
      3964.,  4219.,  4480.,  2011.,  2236.,  2467.,  2704.,  4910.,  5384.,
      5870.,  6368.,  8745.,  9492.,  10257., 11040., 13564., 14608., 15676.,
      16768., 14668., 15760., 16876., 18016., 15772., 16912., 18076., 19264.,
      16876., 18064., 19276., 20512., 14541., 15468., 16413., 17376., 10982.,
      11624., 12278., 12944., 6151.,  6484.,  6823.,  7168.,  3439.,  3748.,
      4063.,  4384.,  8102.,  8744.,  9398.,  10064., 14037., 15036., 16053.,
      17088., 21292., 22672., 24076., 25504., 22396., 23824., 25276., 26752.,
      23500., 24976., 26476., 28000., 24604., 26128., 27676., 29248., 20841.,
      22020., 23217., 24432., 15518., 16328., 17150., 17984., 8587.,  9004.,
      9427.,  9856.,  4867.,  5260.,  5659.,  6064.,  11294., 12104., 12926.,
      13760., 19329., 20580., 21849., 23136., 29020., 30736., 32476., 34240.,
      30124., 31888., 33676., 35488., 31228., 33040., 34876., 36736., 32332.,
      34192., 36076., 37984., 27141., 28572., 30021., 31488., 20054., 21032.,
      22022., 23024., 11023., 11524., 12031., 12544., 6295.,  6772.,  7255.,
      7744.,  14486., 15464., 16454., 17456., 24621., 26124., 27645., 29184.,
      36748., 38800., 40876., 42976., 37852., 39952., 42076., 44224., 38956.,
      41104., 43276., 45472., 40060., 42256., 44476., 46720., 33441., 35124.,
      36825., 38544., 24590., 25736., 26894., 28064., 13459., 14044., 14635.,
      15232., 7526.,  7888.,  8254.,  8624.,  16492., 17232., 17980., 18736.,
      26930., 28064., 29210., 30368., 38872., 40416., 41976., 43552., 39864.,
      41440., 43032., 44640., 40856., 42464., 44088., 45728., 41848., 43488.,
      45144., 46816., 33914., 35168., 36434., 37712., 24316., 25168., 26028.,
      26896., 13022., 13456., 13894., 14336., 5577.,  5780.,  5985.,  6192.,
      11962., 12376., 12794., 13216., 19171., 19804., 20443., 21088., 27220.,
      28080., 28948., 29824., 27844., 28720., 29604., 30496., 28468., 29360.,
      30260., 31168., 29092., 30000., 30916., 31840., 23215., 23908., 24607.,
      25312., 16418., 16888., 17362., 17840., 8685.,  8924.,  9165.,  9408.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      234768.,  249680.,  264848.,  280272.,  329140.,  348420.,  368020.,
      387940.,  438808.,  462712.,  487000.,  511672.,  564284.,  593068.,
      622300.,  651980.,  613340.,  643020.,  673148.,  703724.,  662396.,
      692972.,  723996.,  755468.,  711452.,  742924.,  774844.,  807212.,
      667480.,  695224.,  723352.,  751864.,  605140.,  628900.,  652980.,
      677380.,  523920.,  543440.,  563216.,  583248.,  509380.,  533460.,
      557860.,  582580.,  694925.,  725825.,  757125.,  788825.,  905030.,
      943070.,  981590.,  1020590., 1140335., 1185835., 1231895., 1278515.,
      1217335., 1263955., 1311135., 1358875., 1294335., 1342075., 1390375.,
      1439235., 1371335., 1420195., 1469615., 1519595., 1263830., 1306670.,
      1349990., 1393790., 1127925., 1164425., 1201325., 1238625., 962980.,
      992820.,  1022980., 1053460., 942040.,  977464.,  1013272., 1049464.,
      1263710., 1308950., 1354670., 1400870., 1621380., 1676820., 1732836.,
      1789428., 2015818., 2081842., 2148538., 2215906., 2127034., 2194402.,
      2262442., 2331154., 2238250., 2306962., 2376346., 2446402., 2349466.,
      2419522., 2490250., 2561650., 2139492., 2200692., 2262468., 2324820.,
      1888910., 1940870., 1993310., 2046230., 1596952., 1639288., 1682008.,
      1725112., 1568588., 1617532., 1666924., 1716764., 2080295., 2142595.,
      2205455., 2268875., 2641618., 2717722., 2794498., 2871946., 3253453.,
      3343809., 3434949., 3526873., 3405157., 3497081., 3589789., 3683281.,
      3556861., 3650353., 3744629., 3839689., 3708565., 3803625., 3899469.,
      3996097., 3348226., 3431050., 3514546., 3598714., 2932895., 3003035.,
      3073735., 3144995., 2461676., 2518684., 2576140., 2634044., 2381708.,
      2439612., 2497964., 2556764., 3119095., 3192595., 3266655., 3341275.,
      3915058., 4004602., 4094818., 4185706., 4770493., 4876529., 4983349.,
      5090953., 4922197., 5029801., 5138189., 5247361., 5073901., 5183073.,
      5293029., 5403769., 5225605., 5336345., 5447869., 5560177., 4675426.,
      4771690., 4868626., 4966234., 4061295., 4142635., 4224535., 4306995.,
      3382316., 3448284., 3514700., 3581564., 3194828., 3261692., 3329004.,
      3396764., 4157895., 4242595., 4327855., 4413675., 5188498., 5291482.,
      5395138., 5499466., 6287533., 6409249., 6531749., 6655033., 6439237.,
      6562521., 6686589., 6811441., 6590941., 6715793., 6841429., 6967849.,
      6742645., 6869065., 6996269., 7124257., 6002626., 6112330., 6222706.,
      6333754., 5189695., 5282235., 5375335., 5468995., 4302956., 4377884.,
      4453260., 4529084., 3929368., 3993208., 4057432., 4122040., 5068910.,
      5149670., 5230910., 5312630., 6272868., 6370932., 6469572., 6568788.,
      7542010., 7657762., 7774186., 7891282., 7690858., 7807954., 7925722.,
      8044162., 7839706., 7958146., 8077258., 8197042., 7988554., 8108338.,
      8228794., 8349922., 7058244., 7162068., 7266468., 7371444., 6058910.,
      6146390., 6234350., 6322790., 4989784., 5060536., 5131672., 5203192.,
      4326660., 4385300., 4444260., 4503540., 5552925., 5627025., 5701525.,
      5776425., 6838310., 6928190., 7018550., 7109390., 8183455., 8289435.,
      8395975., 8503075., 8323175., 8430275., 8537935., 8646155., 8462895.,
      8571115., 8679895., 8789235., 8602615., 8711955., 8821855., 8932315.,
      7565750., 7660430., 7755590., 7851230., 6465925., 6545625., 6625725.,
      6706225., 5302500., 5366900., 5431620., 5496660., 4350864., 4402128.,
      4453648., 4505424., 5565140., 5629860., 5694900., 5760260., 6831064.,
      6909496., 6988312., 7067512., 8149148., 8241548., 8334396., 8427692.,
      8273468., 8366764., 8460508., 8554700., 8397788., 8491980., 8586620.,
      8681708., 8522108., 8617196., 8712732., 8808716., 7471384., 7553656.,
      7636312., 7719352., 6365940., 6435140., 6504660., 6574500., 5205264.,
      5261136., 5317264., 5373648.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      287.,    539.,    839.,    1187.,   820.,    1284.,   1812.,   2404.,
      1684.,   2276.,   2932.,   3652.,   2548.,   3268.,   4052.,   4900.,
      3412.,   4260.,   5172.,   6148.,   4103.,   4835.,   5615.,   6443.,
      3850.,   4402.,   4986.,   5602.,   2525.,   2833.,   3157.,   3497.,
      274.,    666.,    1090.,   1546.,   2052.,   2964.,   3940.,   4980.,
      5590.,   7150.,   8806.,   10558.,  11144.,  13480.,  15944.,  18536.,
      14920.,  17512.,  20232.,  23080.,  18696.,  21544.,  24520.,  27624.,
      22472.,  25576.,  28808.,  32168.,  22054.,  24574.,  27190.,  29902.,
      18340.,  20148.,  22020.,  23956.,  11074.,  12042.,  13042.,  14074.,
      4391.,   5507.,   6671.,   7883.,   13150.,  15574.,  18094.,  20710.,
      26661.,  30585.,  34653.,  38865.,  45308.,  50924.,  56732.,  62732.,
      54044.,  60044.,  66236.,  72620.,  62780.,  69164.,  75740.,  82508.,
      71516.,  78284.,  85244.,  92396.,  64605.,  69969.,  75477.,  81129.,
      50638.,  54406.,  58270.,  62230.,  29231.,  31211.,  33239.,  35315.,
      15647.,  17435.,  19271.,  21155.,  38350.,  42118.,  45982.,  49942.,
      68493.,  74433.,  80517.,  86745.,  106460., 114764., 123260., 131948.,
      115196., 123884., 132764., 141836., 123932., 133004., 142268., 151724.,
      132668., 142124., 151772., 161612., 114501., 121881., 129405., 137073.,
      86590.,  91702.,  96910.,  102214., 48551.,  51203.,  53903.,  56651.,
      26903.,  29363.,  31871.,  34427.,  63550.,  68662.,  73870.,  79174.,
      110325., 118281., 126381., 134625., 167612., 178604., 189788., 201164.,
      176348., 187724., 199292., 211052., 185084., 196844., 208796., 220940.,
      193820., 205964., 218300., 230828., 164397., 173793., 183333., 193017.,
      122542., 128998., 135550., 142198., 67871.,  71195.,  74567.,  77987.,
      38159.,  41291.,  44471.,  47699.,  88750.,  95206.,  101758., 108406.,
      152157., 162129., 172245., 182505., 228764., 242444., 256316., 270380.,
      237500., 251564., 265820., 280268., 246236., 260684., 275324., 290156.,
      254972., 269804., 284828., 300044., 214293., 225705., 237261., 248961.,
      158494., 166294., 174190., 182182., 87191.,  91187.,  95231.,  99323.,
      49415.,  53219.,  57071.,  60971.,  113950., 121750., 129646., 137638.,
      193989., 205977., 218109., 230385., 289916., 306284., 322844., 339596.,
      298652., 315404., 332348., 349484., 307388., 324524., 341852., 359372.,
      316124., 333644., 351356., 369260., 264189., 277617., 291189., 304905.,
      194446., 203590., 212830., 222166., 106511., 111179., 115895., 120659.,
      59490.,  62378.,  65298.,  68250.,  130468., 136372., 142340., 148372.,
      213190., 222238., 231382., 240622., 307912., 320232., 332680., 345256.,
      315784., 328360., 341064., 353896., 323656., 336488., 349448., 362536.,
      331528., 344616., 357832., 371176., 268822., 278830., 288934., 299134.,
      192836., 199636., 206500., 213428., 103314., 106778., 110274., 113802.,
      44213.,  45833.,  47469.,  49121.,  94874.,  98178.,  101514., 104882.,
      152111., 157163., 162263., 167411., 216052., 222916., 229844., 236836.,
      221012., 228004., 235060., 242180., 225972., 233092., 240276., 247524.,
      230932., 238180., 245492., 252868., 184343., 189875., 195455., 201083.,
      130410., 134162., 137946., 141762., 69005.,  70913.,  72837.,  74777.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x9x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1820384.,  1923040.,  2027744.,  2134496.,  2500376.,  2629720.,
      2761624.,  2896088.,  3269712.,  3427792.,  3588944.,  3753168.,
      4132488.,  4321352.,  4513800.,  4709832.,  4355080.,  4542920.,
      4734344.,  4929352.,  4544904.,  4731720.,  4922120.,  5116104.,
      4936456.,  5130440.,  5328008.,  5529160.,  4593488.,  4765904.,
      4941392.,  5119952.,  4136600.,  4285400.,  4436760.,  4590680.,
      3561696.,  3684832.,  3810016.,  3937248.,  3332312.,  3475480.,
      3621208.,  3769496.,  4368558.,  4541630.,  4717902.,  4897374.,
      5502660.,  5708196.,  5917572.,  6130788.,  6739738.,  6980298.,
      7225338.,  7474858.,  6857978.,  7099306.,  7345114.,  7595402.,
      6943450.,  7185546.,  7432122.,  7683178.,  7460026.,  7711082.,
      7966618.,  8226634.,  6747268.,  6966628.,  7189828.,  7416868.,
      5873166.,  6058270.,  6246574.,  6438078.,  4832600.,  4980888.,
      5131736.,  5285144.,  4971856.,  5140176.,  5311568.,  5486032.,
      6035300.,  6241092.,  6450724.,  6664196.,  7222520.,  7468856.,
      7719800.,  7975352.,  8539660.,  8829612.,  9124940.,  9425644.,
      8472652.,  8765164.,  9063052.,  9366316.,  8372876.,  8667948.,
      8968396.,  9274220.,  8933580.,  9239404.,  9550604.,  9867180.,
      7971192.,  8239032.,  8511480.,  8788536.,  6815396.,  7042180.,
      7272804.,  7507268.,  5460048.,  5642704.,  5828432.,  6017232.,
      5932104.,  6142984.,  6357448.,  6575496.,  6891322.,  7143402.,
      7399962.,  7661002.,  7984876.,  8281740.,  8583980.,  8891596.,
      9219934.,  9565166.,  9916670.,  10274446., 8914430.,  9255822.,
      9603486.,  9957422.,  8543390.,  8880942.,  9224766.,  9574862.,
      9029438.,  9371342.,  9719518.,  10073966., 7795244.,  8088524.,
      8387180.,  8691212.,  6552666.,  6801930.,  7055674.,  7313898.,
      5092808.,  5294472.,  5499720.,  5708552.,  6161224.,  6378248.,
      6598856.,  6823048.,  6521338.,  6781098.,  7045338.,  7314058.,
      7021932.,  7328012.,  7639468.,  7956300.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      9221854.,  9570158.,  9924734.,  10285582., 9478526.,  9831182.,
      10190110., 10555310., 8310956.,  8613452.,  8921324.,  9234572.,
      7358234.,  7615178.,  7876602.,  8142506.,  6182088.,  6389896.,
      6601288.,  6816264.,  6652488.,  6875656.,  7102408.,  7332744.,
      8051898.,  8319338.,  8591258.,  8867658.,  9597932.,  9913228.,
      10233900., 10559948., 11297758., 11664494., 12037502., 12416782.,
      11123326., 11486222., 11855390., 12230830., 10883358., 11242414.,
      11607742., 11979342., 10910654., 11274062., 11643742., 12019694.,
      9219884.,  9531596.,  9848684.,  10171148., 7967194.,  8231818.,
      8500922.,  8774506.,  6484936.,  6698888.,  6916424.,  7137544.,
      7223376.,  7422416.,  7624528.,  7829712.,  8036644.,  8272644.,
      8512484.,  8756164.,  8971640.,  9247672.,  9528312.,  9813560.,
      10034508., 10353644., 10678156., 11008044., 9378700.,  9692204.,
      10011084., 10335340., 8657356.,  8965228.,  9278476.,  9597100.,
      8432652.,  8743084.,  9058892.,  9380076.,  6660600.,  6925368.,
      7194744.,  7468728.,  5587044.,  5811268.,  6039332.,  6271236.,
      4315984.,  4496592.,  4680272.,  4867024.,  6255576.,  6429464.,
      6605912.,  6784920.,  6392942.,  6600318.,  6810894.,  7024670.,
      6642500.,  6885924.,  7133188.,  7384292.,  7009370.,  7291402.,
      7577914.,  7868906.,  6548026.,  6830826.,  7118106.,  7409866.,
      7102490.,  7386058.,  7674106.,  7966634.,  7624186.,  7908522.,
      8197338.,  8490634.,  6926596.,  7167460.,  7412164.,  7660708.,
      6123982.,  6327006.,  6533230.,  6742654.,  5140568.,  5303192.,
      5468376.,  5636120.,  4052192.,  4199904.,  4349664.,  4501472.,
      5116568.,  5289944.,  5465880.,  5644376.,  6266192.,  6467280.,
      6671440.,  6878672.,  7505160.,  7736008.,  7970440.,  8208456.,
      7740040.,  7969864.,  8203272.,  8440264.,  7942152.,  8170952.,
      8403336.,  8639304.,  8111496.,  8339272.,  8570632.,  8805576.,
      6902864.,  7093712.,  7287632.,  7484624.,  5851672.,  6011736.,
      6174360.,  6339544.,  4653792.,  4781024.,  4910304.,  5041632.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x9x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    6136.,    9784.,
      13944.,   18616.,   12920.,   17592.,   22776.,   28472.,   19704.,
      25400.,   31608.,   38328.,   26488.,   33208.,   40440.,   48184.,
      32122.,   37930.,   44122.,   50698.,   30268.,   34652.,   39292.,
      44188.,   19902.,   22350.,   24926.,   27630.,   1820.,    4924.,
      8284.,    11900.,   15544.,   22776.,   30520.,   38776.,   43220.,
      55604.,   68756.,   82676.,   86896.,   105456.,  125040.,  145648.,
      116848.,  137456.,  159088.,  181744.,  146800.,  169456.,  193136.,
      217840.,  176752.,  201456.,  227184.,  253936.,  173972.,  194036.,
      214868.,  236468.,  144952.,  159352.,  174264.,  189688.,  87644.,
      95356.,   103324.,  111548.,  34042.,   42922.,   52186.,   61834.,
      102836.,  122132.,  142196.,  163028.,  209454.,  240702.,  273102.,
      306654.,  356968.,  401704.,  447976.,  495784.,  426472.,  474280.,
      523624.,  574504.,  495976.,  546856.,  599272.,  653224.,  565480.,
      619432.,  674920.,  731944.,  511566.,  554334.,  598254.,  643326.,
      401396.,  431444.,  462260.,  493844.,  231898.,  247690.,  263866.,
      280426.,  123418.,  137674.,  152314.,  167338.,  303092.,  333140.,
      363956.,  395540.,  542094.,  589470.,  637998.,  687678.,  843496.,
      909736.,  977512.,  1046824., 913000.,  982312.,  1053160., 1125544.,
      982504.,  1054888., 1128808., 1204264., 1052008., 1127464., 1204456.,
      1282984., 908718.,  967614.,  1027662., 1088862., 687668.,  728468.,
      770036.,  812372.,  385786.,  406954.,  428506.,  450442.,  212794.,
      232426.,  252442.,  272842.,  503348.,  544148.,  585716.,  628052.,
      874734.,  938238.,  1002894., 1068702., 1330024., 1417768., 1507048.,
      1597864., 1399528., 1490344., 1582696., 1676584., 1469032., 1562920.,
      1658344., 1755304., 1538536., 1635496., 1733992., 1834024., 1305870.,
      1380894., 1457070., 1534398., 973940.,  1025492., 1077812., 1130900.,
      539674.,  566218.,  593146.,  620458.,  302170.,  327178.,  352570.,
      378346.,  703604.,  755156.,  807476.,  860564.,  1207374., 1287006.,
      1367790., 1449726., 1816552., 1925800., 2036584., 2148904., 1886056.,
      1998376., 2112232., 2227624., 1955560., 2070952., 2187880., 2306344.,
      2025064., 2143528., 2263528., 2385064., 1703022., 1794174., 1886478.,
      1979934., 1260212., 1322516., 1385588., 1449428., 693562.,  725482.,
      757786.,  790474.,  391546.,  421930.,  452698.,  483850.,  903860.,
      966164.,  1029236., 1093076., 1540014., 1635774., 1732686., 1830750.,
      2303080., 2433832., 2566120., 2699944., 2372584., 2506408., 2641768.,
      2778664., 2442088., 2578984., 2717416., 2857384., 2511592., 2651560.,
      2793064., 2936104., 2100174., 2207454., 2315886., 2425470., 1546484.,
      1619540., 1693364., 1767956., 847450.,  884746.,  922426.,  960490.,
      473052.,  496124.,  519452.,  543036.,  1037880., 1085048., 1132728.,
      1180920., 1696532., 1768820., 1841876., 1915700., 2451056., 2549488.,
      2648944., 2749424., 2513776., 2614256., 2715760., 2818288., 2576496.,
      2679024., 2782576., 2887152., 2639216., 2743792., 2849392., 2956016.,
      2140628., 2220596., 2301332., 2382836., 1535928., 1590264., 1645112.,
      1700472., 823068.,  850748.,  878684.,  906876.,  352094.,  365038.,
      378110.,  391310.,  755708.,  782108.,  808764.,  835676.,  1211866.,
      1252234., 1292986., 1334122., 1721592., 1776440., 1831800., 1887672.,
      1761144., 1817016., 1873400., 1930296., 1800696., 1857592., 1915000.,
      1972920., 1840248., 1898168., 1956600., 2015544., 1469242., 1513450.,
      1558042., 1603018., 1039548., 1069532., 1099772., 1130268., 550142.,
      565390.,  580766.,  596270.};
  const std::array<int, 4> in_shape = {{1, 9, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1876.,  2610.,  3458.,  4424.,  4830.,  4550.,  4140.,  3596.,  3840.,
      5225.,  6790.,  8540.,  9170.,  8485.,  7600.,  6510.,  6850.,  9185.,
      11781., 14644., 15547., 14211., 12590., 10678., 11130., 14770., 18767.,
      23128., 24353., 22064., 19390., 16324., 16394., 21490., 26999., 32928.,
      34153., 30632., 26670., 22260., 21658., 28210., 35231., 42728., 43953.,
      39200., 33950., 28196., 26922., 34930., 43463., 52528., 53753., 47768.,
      41230., 34132., 31366., 40415., 49959., 60004., 61201., 54045., 46370.,
      38170., 33420., 42875., 52780., 63140., 64260., 56515., 48300., 39610.,
      32860., 42030., 51590., 61544., 62538., 54842., 46740., 38228.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    7.,    10.,   13.,   16.,   19.,   14.,   11.,   35.,
      45.,   55.,   65.,   75.,   85.,   56.,   44.,   121.,  142.,  163.,
      184.,  205.,  226.,  140.,  114.,  290.,  326.,  362.,  398.,  434.,
      470.,  280.,  226.,  542.,  578.,  614.,  650.,  686.,  722.,  420.,
      338.,  794.,  830.,  866.,  902.,  938.,  974.,  560.,  450.,  1046.,
      1082., 1118., 1154., 1190., 1226., 700.,  512.,  1147., 1180., 1213.,
      1246., 1279., 1312., 728.,  467.,  1025., 1051., 1077., 1103., 1129.,
      1155., 630.,  301.,  652.,  667.,  682.,  697.,  712.,  727.,  392.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      14144.,  19760.,  26272.,  33712.,  36904.,  34864.,  31800.,  27680.,
      29340.,  40025.,  52130.,  65695.,  70665.,  65510.,  58775.,  50420.,
      52784.,  70900.,  91080.,  113372., 120512., 110304., 97840.,  83072.,
      86268.,  114625., 145810., 179879., 189581., 171934., 151235., 127428.,
      127932., 167825., 210994., 257495., 267197., 239806., 208915., 174468.,
      169596., 221025., 276178., 335111., 344813., 307678., 266595., 221508.,
      211260., 274225., 341362., 412727., 422429., 375550., 324275., 268548.,
      247040., 318400., 393696., 472976., 482468., 426168., 365740., 301136.,
      263820., 338525., 416810., 498715., 507605., 446510., 381675., 313060.,
      259808., 332360., 408016., 486808., 494704., 433888., 369840., 302528.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,   42.,   62.,   82.,   102.,  122.,  95.,   64.,   224.,
      296.,  368.,  440.,  512.,  584.,  396.,  289.,  830.,  986.,  1142.,
      1298., 1454., 1610., 1015., 792.,  2064., 2336., 2608., 2880., 3152.,
      3424., 2064., 1632., 3968., 4240., 4512., 4784., 5056., 5328., 3128.,
      2472., 5872., 6144., 6416., 6688., 6960., 7232., 4192., 3312., 7776.,
      8048., 8320., 8592., 8864., 9136., 5256., 3853., 8678., 8930., 9182.,
      9434., 9686., 9938., 5539., 3556., 7832., 8032., 8232., 8432., 8632.,
      8832., 4832., 2309., 5014., 5130., 5246., 5362., 5478., 5594., 3023.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      109728.,  153640.,  204656.,  263032.,  288344.,  272816.,  249160.,
      217120.,  229240.,  313150.,  408340.,  515130.,  554610.,  514660.,
      462150.,  396760.,  414256.,  556940.,  716040.,  891940.,  948724.,
      868968.,  771260.,  655216.,  679112.,  902930.,  1149260., 1418550.,
      1495774., 1357244., 1194410., 1006824., 1010632., 1326290., 1668044.,
      2036342., 2113566., 1897532., 1653610., 1381352., 1342152., 1749650.,
      2186828., 2654134., 2731358., 2437820., 2112810., 1755880., 1673672.,
      2173010., 2705612., 3271926., 3349150., 2978108., 2572010., 2130408.,
      1960816., 2527580., 3125736., 3755668., 3831268., 3384648., 2905100.,
      2392240., 2096440., 2690350., 3312820., 3964170., 4035010., 3549700.,
      3034550., 2489240., 2066208., 2643400., 3245360., 3872344., 3935288.,
      3451760., 2942440., 2407072.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,    140.,   284.,   428.,   572.,   716.,   860.,   694.,   420.,
      1576.,  2120.,  2664.,  3208.,  3752.,  4296.,  2964.,  2066.,  6100.,
      7300.,  8500.,  9700.,  10900., 12100., 7706.,  5864.,  15504., 17616.,
      19728., 21840., 23952., 26064., 15816., 12360., 30288., 32400., 34512.,
      36624., 38736., 40848., 24104., 18856., 45072., 47184., 49296., 51408.,
      53520., 55632., 32392., 25352., 59856., 61968., 64080., 66192., 68304.,
      70416., 40680., 29858., 67444., 69412., 71380., 73348., 75316., 77284.,
      43178., 27732., 61192., 62760., 64328., 65896., 67464., 69032., 37828.,
      18078., 39308., 40220., 41132., 42044., 42956., 43868., 23734.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6640.,   7504.,   9320.,   10440.,  12440.,  13832.,  16016.,  17696.,
      17584.,  19320.,  16664.,  18200.,  15240.,  16560.,  13296.,  14384.,
      13980.,  15360.,  19125.,  20900.,  24970.,  27160.,  31535.,  34160.,
      33985.,  36680.,  31570.,  33940.,  28375.,  30400.,  24380.,  26040.,
      25384.,  27400.,  34160.,  36740.,  43956.,  47124.,  54796.,  58576.,
      58324.,  62188.,  53460.,  56844.,  47480.,  50360.,  40360.,  42712.,
      41748.,  44520.,  55545.,  59080.,  70742.,  75068.,  87367.,  92512.,
      92169.,  97412.,  83678.,  88256.,  73675.,  77560.,  62132.,  65296.,
      62356.,  65576.,  81865.,  85960.,  102998., 107996., 125783., 131712.,
      130585., 136612., 117278., 122528., 102235., 106680., 85428.,  89040.,
      82964.,  86632.,  108185., 112840., 135254., 140924., 164199., 170912.,
      169001., 175812., 150878., 156800., 130795., 135800., 108724., 112784.,
      103572., 107688., 134505., 139720., 167510., 173852., 202615., 210112.,
      207417., 215012., 184478., 191072., 159355., 164920., 132020., 136528.,
      121576., 125464., 156740., 161660., 193860., 199836., 232960., 240016.,
      237664., 244804., 209988., 216180., 180260., 185480., 148456., 152680.,
      130140., 133680., 167025., 171500., 205690., 211120., 246155., 252560.,
      250565., 257040., 220450., 226060., 188475., 193200., 154620., 158440.,
      128368., 131440., 164240., 168120., 201656., 206360., 240632., 246176.,
      244552., 250152., 214520., 219368., 182880., 186960., 149616., 152912.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    6.,    16.,   14.,   28.,   22.,   40.,   30.,   52.,
      38.,   64.,   46.,   76.,   39.,   56.,   20.,   44.,   84.,   140.,
      116.,  180.,  148.,  220.,  180.,  260.,  212.,  300.,  244.,  340.,
      172.,  224.,  113.,  176.,  346.,  484.,  418.,  568.,  490.,  652.,
      562.,  736.,  634.,  820.,  706.,  904.,  455.,  560.,  336.,  456.,
      904.,  1160., 1032., 1304., 1160., 1448., 1288., 1592., 1416., 1736.,
      1544., 1880., 944.,  1120., 728.,  904.,  1800., 2168., 1928., 2312.,
      2056., 2456., 2184., 2600., 2312., 2744., 2440., 2888., 1448., 1680.,
      1120., 1352., 2696., 3176., 2824., 3320., 2952., 3464., 3080., 3608.,
      3208., 3752., 3336., 3896., 1952., 2240., 1512., 1800., 3592., 4184.,
      3720., 4328., 3848., 4472., 3976., 4616., 4104., 4760., 4232., 4904.,
      2456., 2800., 1805., 2048., 4090., 4588., 4210., 4720., 4330., 4852.,
      4450., 4984., 4570., 5116., 4690., 5248., 2627., 2912., 1688., 1868.,
      3732., 4100., 3828., 4204., 3924., 4308., 4020., 4412., 4116., 4516.,
      4212., 4620., 2312., 2520., 1105., 1204., 2406., 2608., 2462., 2668.,
      2518., 2728., 2574., 2788., 2630., 2848., 2686., 2908., 1455., 1568.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      51440.,   58288.,   72380.,   81260.,   96808.,   107848.,  124852.,
      138180.,  137284.,  151060.,  130312.,  142504.,  119340.,  129820.,
      104240.,  112880.,  109140.,  120100.,  149525.,  163625.,  195470.,
      212870.,  247135.,  267995.,  266595.,  288015.,  247910.,  266750.,
      223025.,  239125.,  191780.,  204980.,  199112.,  215144.,  268210.,
      288730.,  345420.,  370620.,  430934.,  461006.,  458990.,  489734.,
      421020.,  447948.,  374170.,  397090.,  318248.,  336968.,  328524.,
      350588.,  437395.,  465535.,  557410.,  591850.,  688793.,  729757.,
      727013.,  768761.,  660394.,  696850.,  581735.,  612675.,  490812.,
      516012.,  492492.,  518140.,  646835.,  679455.,  814114.,  853930.,
      994553.,  1041789., 1032773., 1080793., 927850.,  969682.,  809095.,
      844515.,  676284.,  705068.,  656460.,  685692.,  856275.,  893375.,
      1070818., 1116010., 1300313., 1353821., 1338533., 1392825., 1195306.,
      1242514., 1036455., 1076355., 861756.,  894124.,  820428.,  853244.,
      1065715., 1107295., 1327522., 1378090., 1606073., 1665853., 1644293.,
      1704857., 1462762., 1515346., 1263815., 1308195., 1047228., 1083180.,
      964904.,  995912.,  1244170., 1283410., 1539036., 1586700., 1849694.,
      1905974., 1887158., 1944110., 1667628., 1717020., 1431730., 1473370.,
      1179272., 1212968., 1034100., 1062340., 1327325., 1363025., 1634750.,
      1678070., 1956535., 2007635., 1991675., 2043335., 1752470., 1797230.,
      1498425., 1536125., 1229380., 1259860., 1020848., 1045360., 1306220.,
      1337180., 1603912., 1641448., 1914052., 1958292., 1945300., 1989988.,
      1706536., 1745224., 1454940., 1487500., 1190384., 1216688.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   90.,    194.,   146.,   282.,   202.,
      370.,   258.,   458.,   314.,   546.,   281.,   413.,   118.,   302.,
      572.,   1004.,  812.,   1308.,  1052.,  1612.,  1292.,  1916.,  1532.,
      2220.,  1772.,  2524.,  1278.,  1686.,  787.,   1279.,  2510.,  3590.,
      3062.,  4238.,  3614.,  4886.,  4166.,  5534.,  4718.,  6182.,  5270.,
      6830.,  3439.,  4267.,  2460.,  3404.,  6744.,  8760.,  7736.,  9880.,
      8728.,  11000., 9720.,  12120., 10712., 13240., 11704., 14360., 7212.,
      8604.,  5484.,  6876.,  13688., 16600., 14680., 17720., 15672., 18840.,
      16664., 19960., 17656., 21080., 18648., 22200., 11132., 12972., 8508.,
      10348., 20632., 24440., 21624., 25560., 22616., 26680., 23608., 27800.,
      24600., 28920., 25592., 30040., 15052., 17340., 11532., 13820., 27576.,
      32280., 28568., 33400., 29560., 34520., 30552., 35640., 31544., 36760.,
      32536., 37880., 18972., 21708., 13963., 15895., 31742., 35702., 32678.,
      36734., 33614., 37766., 34550., 38798., 35486., 39830., 36422., 40862.,
      20455., 22723., 13150., 14582., 29132., 32060., 29884., 32876., 30636.,
      33692., 31388., 34508., 32140., 35324., 32892., 36140., 18086., 19742.,
      8645.,  9433.,  18850., 20458., 19290., 20930., 19730., 21402., 20170.,
      21874., 20610., 22346., 21050., 22818., 11417., 12317.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      404832.,   459360.,   570360.,   641080.,   763664.,   851600.,
      985768.,   1091944.,  1084776.,  1194536.,  1030544.,  1127696.,
      944440.,   1027960.,  825440.,   894304.,   862360.,   949720.,
      1182350.,  1294750.,  1546660.,  1685380.,  1956570.,  2122890.,
      2111690.,  2282490.,  1964740.,  2114980.,  1768350.,  1896750.,
      1521240.,  1626520.,  1577104.,  1704976.,  2125460.,  2289140.,
      2738520.,  2939544.,  3417820.,  3657724.,  3641596.,  3886876.,
      3341592.,  3556440.,  2970740.,  3153620.,  2527504.,  2676880.,
      2606408.,  2782472.,  3471370.,  3695930.,  4425260.,  4700108.,
      5469870.,  5796798.,  5774846.,  6108046.,  5247116.,  5538092.,
      4623290.,  4870250.,  3901576.,  4102728.,  3914568.,  4119304.,
      5142410.,  5402810.,  6473516.,  6791372.,  7909678.,  8286782.,
      8214654.,  8598030.,  7381388.,  7715372.,  6437690.,  6720490.,
      5381768.,  5611592.,  5222728.,  5456136.,  6813450.,  7109690.,
      8521772.,  8882636.,  10349486., 10776766., 10654462., 11088014.,
      9515660.,  9892652.,  8252090.,  8570730.,  6861960.,  7120456.,
      6530888.,  6792968.,  8484490.,  8816570.,  10570028., 10973900.,
      12789294., 13266750., 13094270., 13577998., 11649932., 12069932.,
      10066490., 10420970., 8342152.,  8629320.,  7688464.,  7936144.,
      9914420.,  10227860., 12264984., 12645720., 14741692., 15191260.,
      15040732., 15495676., 13291992., 13686552., 11412500., 11745140.,
      9400720.,  9669904.,  8244760.,  8470360.,  10583150., 10868350.,
      13034980., 13381060., 15601530., 16009770., 15882090., 16294810.,
      13975300., 14332900., 11949950., 12251150., 9804760.,  10048280.,
      8142432.,  8338272.,  10419000., 10666360., 12794000., 13093904.,
      15268456., 15621928., 15517992., 15875048., 13613840., 13922960.,
      11607160., 11867320., 9496928.,  9707104.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    636.,    1436.,   1052.,   2108.,
      1468.,   2780.,   1884.,   3452.,   2300.,   4124.,   2126.,   3166.,
      780.,    2220.,   4184.,   7576.,   6040.,   9944.,   7896.,   12312.,
      9752.,   14680.,  11608.,  17048.,  13464.,  19416.,  9836.,   13068.,
      5834.,   9722.,   19060.,  27604.,  23380.,  32692.,  27700.,  37780.,
      32020.,  42868.,  36340.,  47956.,  40660.,  53044.,  26714.,  33290.,
      18776.,  26264.,  52016.,  68016.,  59824.,  76848.,  67632.,  85680.,
      75440.,  94512.,  83248.,  103344., 91056.,  112176., 56344.,  67416.,
      42520.,  53592.,  106672., 129840., 114480., 138672., 122288., 147504.,
      130096., 156336., 137904., 165168., 145712., 174000., 87256.,  101912.,
      66264.,  80920.,  161328., 191664., 169136., 200496., 176944., 209328.,
      184752., 218160., 192560., 226992., 200368., 235824., 118168., 136408.,
      90008.,  108248., 215984., 253488., 223792., 262320., 231600., 271152.,
      239408., 279984., 247216., 288816., 255024., 297648., 149080., 170904.,
      109802., 125210., 250036., 281620., 257428., 289780., 264820., 297940.,
      272212., 306100., 279604., 314260., 286996., 322420., 161402., 179498.,
      103788., 115212., 230168., 253528., 236120., 259992., 242072., 266456.,
      248024., 272920., 253976., 279384., 259928., 285848., 143052., 156268.,
      68382.,  74670.,  149212., 162044., 152700., 165788., 156188., 169532.,
      159676., 173276., 163164., 177020., 166652., 180764., 90446.,  97630.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      24880.,   26560.,   28272.,   30016.,  35100.,  37280.,   39500.,
      41760.,   47048.,   49760.,   52520.,  55328.,  60788.,   64064.,
      67396.,   70784.,   66948.,   70336.,  73780.,  77280.,   63656.,
      66656.,   69704.,   72800.,   58380.,  60960.,  63580.,   66240.,
      51056.,   53184.,   55344.,   57536.,  53220.,  55920.,   58660.,
      61440.,   73025.,   76500.,   80025.,  83600.,  95590.,   99880.,
      104230.,  108640.,  120995.,  126140., 131355., 136640.,  130655.,
      135940.,  141295.,  146720.,  121630., 126280., 130990.,  135760.,
      109525.,  113500.,  117525.,  121600., 94260.,  97520.,   100820.,
      104160.,  97576.,   101536.,  105544., 109600., 131570.,  136640.,
      141770.,  146960.,  169596.,  175824., 182124., 188496.,  211750.,
      219184.,  226702.,  234304.,  225694., 233296., 240982.,  248752.,
      207180.,  213840.,  220572.,  227376., 184250., 189920.,  195650.,
      201440.,  156808.,  161440.,  166120., 170848., 161532.,  166992.,
      172508.,  178080.,  215215.,  222180., 229215., 236320.,  274442.,
      282968.,  291578.,  300272.,  339325., 349468., 359709.,  370048.,
      358337.,  368676.,  379113.,  389648., 325682., 334712.,  343826.,
      353024.,  287035.,  294700.,  302435., 310240., 242284.,  248528.,
      254828.,  261184.,  243068.,  249424., 255836., 262304.,  319375.,
      327460.,  335615.,  343840.,  402122., 411992., 421946.,  431984.,
      491421.,  503132.,  514941.,  526848., 510433., 522340.,  534345.,
      546448.,  458738.,  469112.,  479570., 490112., 400155.,  408940.,
      417795.,  426720.,  334572.,  341712., 348908., 356160.,  324604.,
      331856.,  339164.,  346528.,  423535., 432740., 442015.,  451360.,
      529802.,  541016.,  552314.,  563696., 643517., 656796.,  670173.,
      683648.,  662529.,  676004.,  689577., 703248., 591794.,  603512.,
      615314.,  627200.,  513275.,  523180., 533155., 543200.,  426860.,
      434896.,  442988.,  451136.,  406140., 414288., 422492.,  430752.,
      527695.,  538020.,  548415.,  558880., 657482., 670040.,  682682.,
      695408.,  795613.,  810460.,  825405., 840448., 814625.,  829668.,
      844809.,  860048.,  724850.,  737912., 751058., 764288.,  626395.,
      637420.,  648515.,  659680.,  519148., 528080., 537068.,  546112.,
      478600.,  486304.,  494056.,  501856., 617210., 626960.,  636770.,
      646640.,  763596.,  775440.,  787356., 799344., 917854.,  931840.,
      945910.,  960064.,  936502.,  950656., 964894., 979216.,  827676.,
      839952.,  852300.,  864720.,  710690., 721040., 731450.,  741920.,
      585448.,  593824.,  602248.,  610720., 513540., 520560.,  527620.,
      534720.,  659225.,  668100.,  677025., 686000., 811990.,  822760.,
      833590.,  844480.,  971915.,  984620., 997395., 1010240., 989415.,
      1002260., 1015175., 1028160., 870670., 881800., 892990.,  904240.,
      744525.,  753900.,  763325.,  772800., 610900., 618480.,  626100.,
      633760.,  507376.,  513472.,  519600., 525760., 649260.,  656960.,
      664700.,  672480.,  797288.,  806624., 816008., 825440.,  951524.,
      962528.,  973588.,  984704.,  967092., 978208., 989380.,  1000608.,
      848456.,  858080.,  867752.,  877472., 723420., 731520.,  739660.,
      747840.,  591920.,  598464.,  605040., 611648.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    34.,
      56.,    82.,    112.,   58.,    88.,    122.,   160.,   82.,    120.,
      162.,   208.,   106.,   152.,   202.,   256.,   130.,   184.,   242.,
      304.,   125.,   156.,   189.,   224.,   38.,    80.,    126.,   176.,
      236.,   336.,   444.,   560.,   348.,   464.,   588.,   720.,   460.,
      592.,   732.,   880.,   572.,   720.,   876.,   1040.,  684.,   848.,
      1020.,  1200.,  796.,   976.,   1164.,  1360.,  590.,   688.,   790.,
      896.,   335.,   452.,   575.,   704.,   1126.,  1384.,  1654.,  1936.,
      1390.,  1672.,  1966.,  2272.,  1654.,  1960.,  2278.,  2608.,  1918.,
      2248.,  2590.,  2944.,  2182.,  2536.,  2902.,  3280.,  2446.,  2824.,
      3214.,  3616.,  1619.,  1820.,  2027.,  2240.,  1116.,  1344.,  1580.,
      1824.,  3128.,  3616.,  4120.,  4640.,  3608.,  4128.,  4664.,  5216.,
      4088.,  4640.,  5208.,  5792.,  4568.,  5152.,  5752.,  6368.,  5048.,
      5664.,  6296.,  6944.,  5528.,  6176.,  6840.,  7520.,  3436.,  3776.,
      4124.,  4480.,  2572.,  2912.,  3260.,  3616.,  6488.,  7200.,  7928.,
      8672.,  6968.,  7712.,  8472.,  9248.,  7448.,  8224.,  9016.,  9824.,
      7928.,  8736.,  9560.,  10400., 8408.,  9248.,  10104., 10976., 8888.,
      9760.,  10648., 11552., 5340.,  5792.,  6252.,  6720.,  4028.,  4480.,
      4940.,  5408.,  9848.,  10784., 11736., 12704., 10328., 11296., 12280.,
      13280., 10808., 11808., 12824., 13856., 11288., 12320., 13368., 14432.,
      11768., 12832., 13912., 15008., 12248., 13344., 14456., 15584., 7244.,
      7808.,  8380.,  8960.,  5484.,  6048.,  6620.,  7200.,  13208., 14368.,
      15544., 16736., 13688., 14880., 16088., 17312., 14168., 15392., 16632.,
      17888., 14648., 15904., 17176., 18464., 15128., 16416., 17720., 19040.,
      15608., 16928., 18264., 19616., 9148.,  9824.,  10508., 11200., 6743.,
      7220.,  7703.,  8192.,  15382., 16360., 17350., 18352., 15838., 16840.,
      17854., 18880., 16294., 17320., 18358., 19408., 16750., 17800., 18862.,
      19936., 17206., 18280., 19366., 20464., 17662., 18760., 19870., 20992.,
      9947.,  10508., 11075., 11648., 6398.,  6752.,  7110.,  7472.,  14204.,
      14928., 15660., 16400., 14572., 15312., 16060., 16816., 14940., 15696.,
      16460., 17232., 15308., 16080., 16860., 17648., 15676., 16464., 17260.,
      18064., 16044., 16848., 17660., 18480., 8838.,  9248.,  9662.,  10080.,
      4225.,  4420.,  4617.,  4816.,  9226.,  9624.,  10026., 10432., 9442.,
      9848.,  10258., 10672., 9658.,  10072., 10490., 10912., 9874.,  10296.,
      10722., 11152., 10090., 10520., 10954., 11392., 10306., 10744., 11186.,
      11632., 5597.,  5820.,  6045.,  6272.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      195728.,  209104.,  222736.,  236624.,  276500.,  293860.,  311540.,
      329540.,  371032.,  392632.,  414616.,  436984.,  479836.,  505932.,
      532476.,  559468.,  528892.,  555884.,  583324.,  611212.,  503320.,
      527224.,  551512.,  576184.,  461940.,  482500.,  503380.,  524580.,
      404240.,  421200.,  438416.,  455888.,  420420.,  441940.,  463780.,
      485940.,  577325.,  605025.,  633125.,  661625.,  756230.,  790430.,
      825110.,  860270.,  957775.,  998795.,  1040375., 1082515., 1034775.,
      1076915., 1119615., 1162875., 963830.,  1000910., 1038470., 1076510.,
      868325.,  900025.,  932125.,  964625.,  747620.,  773620.,  799940.,
      826580.,  772760.,  804344.,  836312.,  868664.,  1042510., 1082950.,
      1123870., 1165270., 1344420., 1394100., 1444356., 1495188., 1679258.,
      1738562., 1798538., 1859186., 1790474., 1851122., 1912442., 1974434.,
      1644228., 1697364., 1751076., 1805364., 1462750., 1507990., 1553710.,
      1599910., 1245272., 1282232., 1319576., 1357304., 1281420., 1324988.,
      1369004., 1413468., 1707895., 1763475., 1819615., 1876315., 2178610.,
      2246650., 2315362., 2384746., 2694461., 2775409., 2857141., 2939657.,
      2846165., 2928681., 3011981., 3096065., 2587522., 2659594., 2732338.,
      2805754., 2281055., 2342235., 2403975., 2466275., 1925868., 1975708.,
      2025996., 2076732., 1931916., 1982652., 2033836., 2085468., 2538935.,
      2603475., 2668575., 2734235., 3197362., 3276154., 3355618., 3435754.,
      3908093., 4001585., 4095861., 4190921., 4059797., 4154857., 4250701.,
      4347329., 3649282., 3732106., 3815602., 3899770., 3183775., 3253915.,
      3324615., 3395875., 2662380., 2719388., 2776844., 2834748., 2582412.,
      2640316., 2698668., 2757468., 3369975., 3443475., 3517535., 3592155.,
      4216114., 4305658., 4395874., 4486762., 5121725., 5227761., 5334581.,
      5442185., 5273429., 5381033., 5489421., 5598593., 4711042., 4804618.,
      4898866., 4993786., 4086495., 4165595., 4245255., 4325475., 3398892.,
      3463068., 3527692., 3592764., 3232908., 3297980., 3363500., 3429468.,
      4201015., 4283475., 4366495., 4450075., 5234866., 5335162., 5436130.,
      5537770., 6335357., 6453937., 6573301., 6693449., 6487061., 6607209.,
      6728141., 6849857., 5772802., 5877130., 5982130., 6087802., 4989215.,
      5077275., 5165895., 5255075., 4135404., 4206748., 4278540., 4350780.,
      3813464., 3875000., 3936920., 3999224., 4918270., 4996150., 5074510.,
      5153350., 6085188., 6179796., 6274980., 6370740., 7314986., 7426706.,
      7539098., 7652162., 7463834., 7576898., 7690634., 7805042., 6596964.,
      6695028., 6793668., 6892884., 5664910., 5747590., 5830750., 5914390.,
      4666904., 4733816., 4801112., 4868792., 4094340., 4150420., 4206820.,
      4263540., 5256125., 5327025., 5398325., 5470025., 6474470., 6560510.,
      6647030., 6734030., 7750015., 7851515., 7953575., 8056195., 7889735.,
      7992355., 8095535., 8199275., 6943190., 7032110., 7121510., 7211390.,
      5937525., 6012425., 6087725., 6163425., 4872100., 4932660., 4993540.,
      5054740., 4046864., 4095568., 4144528., 4193744., 5178740., 5240260.,
      5302100., 5364260., 6359704., 6434296., 6509272., 6584632., 7590268.,
      7678188., 7766556., 7855372., 7714588., 7803404., 7892668., 7982380.,
      6768472., 6845368., 6922648., 7000312., 5771220., 5835940., 5900980.,
      5966340., 4722320., 4774608., 4827152., 4879952.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      234.,    402.,    602.,    834.,    410.,    642.,    906.,    1202.,
      586.,    882.,    1210.,   1570.,   762.,    1122.,   1514.,   1938.,
      938.,    1362.,   1818.,   2306.,   941.,    1185.,   1445.,   1721.,
      226.,    554.,    914.,    1306.,   1700.,   2484.,   3332.,   4244.,
      2564.,   3476.,   4452.,   5492.,   3428.,   4468.,   5572.,   6740.,
      4292.,   5460.,   6692.,   7988.,   5156.,   6452.,   7812.,   9236.,
      6020.,   7444.,   8932.,   10484.,  4530.,   5306.,   6114.,   6954.,
      2455.,   3379.,   4351.,   5371.,   8510.,   10550.,  12686.,  14918.,
      10574.,  12806.,  15134.,  17558.,  12638.,  15062.,  17582.,  20198.,
      14702.,  17318.,  20030.,  22838.,  16766.,  19574.,  22478.,  25478.,
      18830.,  21830.,  24926.,  28118.,  12559.,  14155.,  15799.,  17491.,
      8484.,   10292.,  12164.,  14100.,  24072.,  27944.,  31944.,  36072.,
      27848.,  31976.,  36232.,  40616.,  31624.,  36008.,  40520.,  45160.,
      35400.,  40040.,  44808.,  49704.,  39176.,  44072.,  49096.,  54248.,
      42952.,  48104.,  53384.,  58792.,  26820.,  29524.,  32292.,  35124.,
      19908.,  22612.,  25380.,  28212.,  50504.,  56168.,  61960.,  67880.,
      54280.,  60200.,  66248.,  72424.,  58056.,  64232.,  70536.,  76968.,
      61832.,  68264.,  74824.,  81512.,  65608.,  72296.,  79112.,  86056.,
      69384.,  76328.,  83400.,  90600.,  41828.,  45428.,  49092.,  52820.,
      31332.,  34932.,  38596.,  42324.,  76936.,  84392.,  91976.,  99688.,
      80712.,  88424.,  96264.,  104232., 84488.,  92456.,  100552., 108776.,
      88264.,  96488.,  104840., 113320., 92040.,  100520., 109128., 117864.,
      95816.,  104552., 113416., 122408., 56836.,  61332.,  65892.,  70516.,
      42756.,  47252.,  51812.,  56436.,  103368., 112616., 121992., 131496.,
      107144., 116648., 126280., 136040., 110920., 120680., 130568., 140584.,
      114696., 124712., 134856., 145128., 118472., 128744., 139144., 149672.,
      122248., 132776., 143432., 154216., 71844.,  77236.,  82692.,  88212.,
      52999.,  56803.,  60655.,  64555.,  121118., 128918., 136814., 144806.,
      124718., 132710., 140798., 148982., 128318., 136502., 144782., 153158.,
      131918., 140294., 148766., 157334., 135518., 144086., 152750., 161510.,
      139118., 147878., 156734., 165686., 78463.,  82939.,  87463.,  92035.,
      50482.,  53306.,  56162.,  59050.,  112196., 117972., 123812., 129716.,
      115108., 121012., 126980., 133012., 118020., 124052., 130148., 136308.,
      120932., 127092., 133316., 139604., 123844., 130132., 136484., 142900.,
      126756., 133172., 139652., 146196., 69890.,  73162.,  76466.,  79802.,
      33413.,  34969.,  36541.,  38129.,  73018.,  76194.,  79402.,  82642.,
      74730.,  77970.,  81242.,  84546.,  76442.,  79746.,  83082.,  86450.,
      78154.,  81522.,  84922.,  88354.,  79866.,  83298.,  86762.,  90258.,
      81578.,  85074.,  88602.,  92162.,  44333.,  46113.,  47909.,  49721.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1552608.,  1659360.,  1768160.,  1879008.,  2194840.,  2333400.,
      2474520.,  2618200.,  2946896.,  3119312.,  3294800.,  3473360.,
      3812872.,  4021192.,  4233096.,  4448584.,  4204424.,  4419912.,
      4638984.,  4861640.,  4002896.,  4193744.,  4387664.,  4584656.,
      3675160.,  3839320.,  4006040.,  4175320.,  3217120.,  3352544.,
      3490016.,  3629536.,  3124952.,  3264024.,  3405656.,  3549848.,
      4232750.,  4404798.,  4580046.,  4758494.,  5450692.,  5658276.,
      5869700.,  6084964.,  6783898.,  7029578.,  7279738.,  7534378.,
      7300474.,  7555114.,  7814234.,  8077834.,  6644740.,  6867172.,
      7093444.,  7323556.,  5825614.,  6013278.,  6204142.,  6398206.,
      4837976.,  4988312.,  5141208.,  5296664.,  4581968.,  4735952.,
      4893008.,  5053136.,  5825956.,  6017924.,  6213732.,  6413380.,
      7195768.,  7428792.,  7666424.,  7908664.,  8697548.,  8974700.,
      9257228.,  9545132.,  9258252.,  9546156.,  9839436.,  10138092.,
      8274936.,  8527416.,  8784504.,  9046200.,  7108452.,  7322436.,
      7540260.,  7761924.,  5752656.,  5925072.,  6100560.,  6279120.,
      5321544.,  5505800.,  5693640.,  5885064.,  6560762.,  6791850.,
      7027418.,  7267466.,  7956844.,  8238348.,  8525228.,  8817484.,
      9516958.,  9852462.,  10194238., 10542286., 10171966., 10520014.,
      10874334., 11234926., 9056300.,  9361868.,  9672812.,  9989132.,
      7722330.,  7981834.,  8245818.,  8514282.,  6162888.,  6372744.,
      6586184.,  6803208.,  5451592.,  5660424.,  5872840.,  6088840.,
      6522618.,  6784426.,  7050714.,  7321482.,  7775084.,  8093452.,
      8417196.,  8746316.,  9216158.,  9594670.,  9979454.,  10370510.,
      9871166.,  10262222., 10659550., 11063150., 8759852.,  9102284.,
      9450092.,  9803276.,  7405658.,  7695882.,  7990586.,  8289770.,
      5801416.,  6035848.,  6273864.,  6515464.,  4447048.,  4647688.,
      4851912.,  5059720.,  6032890.,  6284458.,  6540506.,  6801034.,
      7791980.,  8098060.,  8409516.,  8726348.,  9731486.,  10095662.,
      10466110., 10842830., 10386494., 10763214., 11146206., 11535470.,
      9514028.,  9844172.,  10179692., 10520588., 8406874.,  8686858.,
      8971322.,  9260266.,  7057864.,  7284104.,  7513928.,  7747336.,
      5801800.,  5994248.,  6190280.,  6389896.,  7443706.,  7685034.,
      7930842.,  8181130.,  9250668.,  9544460.,  9843628.,  10148172.,
      11229854., 11579694., 11935806., 12298190., 11884862., 12247246.,
      12615902., 12990830., 10661420., 10979276., 11302508., 11631116.,
      9211482.,  9481226.,  9755450.,  10034154., 7527880.,  7745928.,
      7967560.,  8192776.,  5206864.,  5371088.,  5538384.,  5708752.,
      6370532.,  6575300.,  6783908.,  6996356.,  7670264.,  7918648.,
      8171640.,  8429240.,  9112204.,  9407276.,  9707724.,  10013548.,
      9744588.,  10050412., 10361612., 10678188., 8610168.,  8878008.,
      9150456.,  9427512.,  7282340.,  7509124.,  7739748.,  7974212.,
      5754960.,  5937616.,  6123344.,  6312144.,  4661720.,  4815128.,
      4971096.,  5129624.,  5403118.,  5593086.,  5786254.,  5982622.,
      6268996.,  6498084.,  6731012.,  6967780.,  7264474.,  7535242.,
      7810490.,  8090218.,  7824058.,  8103786.,  8387994.,  8676682.,
      6799492.,  7043428.,  7291204.,  7542820.,  5597198.,  5802782.,
      6011566.,  6223550.,  4212056.,  4376728.,  4543960.,  4713752.,
      2409184.,  2536416.,  2665696.,  2797024.,  3311640.,  3467608.,
      3626136.,  3787224.,  4311632.,  4498384.,  4688208.,  4881104.,
      5413256.,  5632840.,  5856008.,  6082760.,  5849864.,  6076616.,
      6306952.,  6540872.,  5346128.,  5543120.,  5743184.,  5946320.,
      4695704.,  4860888.,  5028632.,  5198936.,  3894496.,  4025824.,
      4159200.,  4294624.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    1724.,    3036.,    4604.,    6428.,    3068.,    4892.,
      6972.,    9308.,    4412.,    6748.,    9340.,    12188.,   5756.,
      8604.,    11708.,   15068.,   7100.,    10460.,   14076.,   17948.,
      7294.,    9230.,    11294.,   13486.,   1500.,    4092.,    6940.,
      10044.,   12856.,   19064.,   25784.,   33016.,   19640.,   26872.,
      34616.,   42872.,   26424.,   34680.,   43448.,   52728.,   33208.,
      42488.,   52280.,   62584.,   39992.,   50296.,   61112.,   72440.,
      46776.,   58104.,   69944.,   82296.,   35484.,   41660.,   48092.,
      54780.,   18746.,   26090.,   33818.,   41930.,   66100.,   82324.,
      99316.,   117076.,  82420.,   100180.,  118708.,  138004.,  98740.,
      118036.,  138100.,  158932.,  115060.,  135892.,  157492.,  179860.,
      131380.,  153748.,  176884.,  200788.,  147700.,  171604.,  196276.,
      221716.,  98906.,   111626.,  124730.,  138218.,  66104.,   80504.,
      95416.,   110840.,  188784.,  219632.,  251504.,  284400.,  218736.,
      251632.,  285552.,  320496.,  248688.,  283632.,  319600.,  356592.,
      278640.,  315632.,  353648.,  392688.,  308592.,  347632.,  387696.,
      428784.,  338544.,  379632.,  421744.,  464880.,  211896.,  233464.,
      255544.,  278136.,  156600.,  178168.,  200248.,  222840.,  398448.,
      443632.,  489840.,  537072.,  428400.,  475632.,  523888.,  573168.,
      458352.,  507632.,  557936.,  609264.,  488304.,  539632.,  591984.,
      645360.,  518256.,  571632.,  626032.,  681456.,  548208.,  603632.,
      660080.,  717552.,  331064.,  359800.,  389048.,  418808.,  247096.,
      275832.,  305080.,  334840.,  608112.,  667632.,  728176.,  789744.,
      638064.,  699632.,  762224.,  825840.,  668016.,  731632.,  796272.,
      861936.,  697968.,  763632.,  830320.,  898032.,  727920.,  795632.,
      864368.,  934128.,  757872.,  827632.,  898416.,  970224.,  450232.,
      486136.,  522552.,  559480.,  337592.,  373496.,  409912.,  446840.,
      817776.,  891632.,  966512.,  1042416., 847728.,  923632.,  1000560.,
      1078512., 877680.,  955632.,  1034608., 1114608., 907632.,  987632.,
      1068656., 1150704., 937584.,  1019632., 1102704., 1186800., 967536.,
      1051632., 1136752., 1222896., 569400.,  612472.,  656056.,  700152.,
      420218.,  450602.,  481370.,  512522.,  961204.,  1023508., 1086580.,
      1150420., 989812.,  1053652., 1118260., 1183636., 1018420., 1083796.,
      1149940., 1216852., 1047028., 1113940., 1181620., 1250068., 1075636.,
      1144084., 1213300., 1283284., 1104244., 1174228., 1244980., 1316500.,
      623258.,  659018.,  695162.,  731690.,  401052.,  423612.,  446428.,
      469500.,  891832.,  937976.,  984632.,  1031800., 915000.,  962168.,
      1009848., 1058040., 938168.,  986360.,  1035064., 1084280., 961336.,
      1010552., 1060280., 1110520., 984504.,  1034744., 1085496., 1136760.,
      1007672., 1058936., 1110712., 1163000., 555868.,  582012.,  608412.,
      635068.,  265758.,  278190.,  290750.,  303438.,  580988.,  606364.,
      631996.,  657884.,  594620.,  620508.,  646652.,  673052.,  608252.,
      634652.,  661308.,  688220.,  621884.,  648796.,  675964.,  703388.,
      635516.,  662940.,  690620.,  718556.,  649148.,  677084.,  705276.,
      733724.,  352894.,  367118.,  381470.,  395950.};
  const std::array<int, 4> in_shape = {{1, 10, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2048.,  2840.,  3752.,  4788.,  5194.,  5600.,  5240.,  4740.,  4096.,
      4220.,  5725.,  7420.,  9310.,  9940.,  10570., 9730.,  8675.,  7400.,
      7560.,  10110., 12936., 16044., 16947., 17850., 16248., 14340., 12120.,
      12320., 16310., 20678., 25431., 26656., 27881., 25172., 22050., 18508.,
      18242., 23870., 29939., 36456., 37681., 38906., 34811., 30240., 25186.,
      24164., 31430., 39200., 47481., 48706., 49931., 44450., 38430., 31864.,
      30086., 38990., 48461., 58506., 59731., 60956., 54089., 46620., 38542.,
      35088., 45165., 55776., 66927., 68124., 69321., 61140., 52395., 43080.,
      37410., 47950., 58975., 70490., 71610., 72730., 63895., 54550., 44690.,
      36800., 47030., 57680., 68754., 69748., 70742., 61976., 52770., 43120.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    10.,   16.,   22.,   28.,   34.,   32.,   21.,   12.,
      38.,   80.,   101.,  122.,  143.,  164.,  138.,  84.,   54.,   144.,
      273.,  318.,  363.,  408.,  453.,  360.,  210.,  148.,  364.,  652.,
      730.,  808.,  886.,  964.,  740.,  420.,  302.,  700.,  1198., 1276.,
      1354., 1432., 1510., 1132., 630.,  456.,  1036., 1744., 1822., 1900.,
      1978., 2056., 1524., 840.,  610.,  1372., 2290., 2368., 2446., 2524.,
      2602., 1916., 1050., 714.,  1557., 2532., 2604., 2676., 2748., 2820.,
      2031., 1092., 661.,  1418., 2273., 2330., 2387., 2444., 2501., 1778.,
      945.,  430.,  913.,  1450., 1483., 1516., 1549., 1582., 1115., 588.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      15472.,  21540.,  28552.,  36540.,  39732.,  42924.,  40264.,  36500.,
      31600.,  32300.,  43925.,  57050.,  71715.,  76685.,  81655.,  75290.,
      67225.,  57420.,  58344.,  78150.,  100140., 124362., 131502., 138642.,
      126348., 111630., 94440.,  95620.,  126735., 160846., 198009., 207711.,
      217413., 196462., 172235., 144676., 142492., 186585., 234178., 285327.,
      295029., 304731., 272818., 237125., 197596., 189364., 246435., 307510.,
      372645., 382347., 392049., 349174., 302015., 250516., 236236., 306285.,
      380842., 459963., 469665., 479367., 425530., 366905., 303436., 276504.,
      356010., 439764., 527814., 537306., 546798., 482388., 413490., 340056.,
      295460., 378775., 465950., 557025., 565915., 574805., 505070., 431275.,
      353380., 291088., 372060., 456376., 544068., 551964., 559860., 490552.,
      417740., 341392.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,    59.,    101.,   143.,   185.,   227.,   222.,   149.,
      70.,   244.,   538.,   694.,   850.,   1006.,  1162.,  996.,   614.,
      363.,  1002.,  1941.,  2283.,  2625.,  2967.,  3309.,  2658.,  1563.,
      1052., 2632.,  4772.,  5372.,  5972.,  6572.,  7172.,  5544.,  3164.,
      2228., 5208.,  8972.,  9572.,  10172., 10772., 11372., 8568.,  4788.,
      3404., 7784.,  13172., 13772., 14372., 14972., 15572., 11592., 6412.,
      4580., 10360., 17372., 17972., 18572., 19172., 19772., 14616., 8036.,
      5457., 11934., 19455., 20013., 20571., 21129., 21687., 15654., 8433.,
      5098., 10956., 17590., 18034., 18478., 18922., 19366., 13788., 7338.,
      3335., 7090.,  11273., 11531., 11789., 12047., 12305., 8682.,  4583.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      120160.,  167640.,  222608.,  285320.,  310632.,  335944.,  315536.,
      286360.,  248160.,  252600.,  343950.,  447220.,  562730.,  602210.,
      641690.,  592180.,  529150.,  452280.,  458256.,  614340.,  787800.,
      979020.,  1035804., 1092588., 996312.,  880740.,  745488.,  753256.,
      998970.,  1268540., 1562414., 1639638., 1716862., 1552124., 1361290.,
      1143912., 1126216., 1475250., 1852172., 2257430., 2334654., 2411878.,
      2159948., 1877890., 1565256., 1499176., 1951530., 2435804., 2952446.,
      3029670., 3106894., 2767772., 2394490., 1986600., 1872136., 2427810.,
      3019436., 3647462., 3724686., 3801910., 3375596., 2911090., 2407944.,
      2195280., 2826900., 3492408., 4192188., 4267788., 4343388., 3832248.,
      3285300., 2702160., 2348440., 3010950., 3704260., 4428690., 4499530.,
      4570370., 4016260., 3429750., 2810520., 2315488., 2959800., 3630800.,
      4328744., 4391688., 4454632., 3903440., 3324280., 2716896.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    706.,    1018.,   1330.,   1642.,   1644.,
      1118.,   460.,    1720.,   3908.,   5108.,   6308.,   7508.,   8708.,
      7544.,   4684.,   2634.,   7428.,   14574.,  17238.,  19902.,  22566.,
      25230.,  20388.,  12042.,  7896.,   19952.,  36424.,  41128.,  45832.,
      50536.,  55240.,  42864.,  24536.,  17080.,  40112.,  69352.,  74056.,
      78760.,  83464.,  88168.,  66608.,  37304.,  26264.,  60272.,  102280.,
      106984., 111688., 116392., 121096., 90352.,  50072.,  35448.,  80432.,
      135208., 139912., 144616., 149320., 154024., 114096., 62840.,  42642.,
      93396.,  152454., 156846., 161238., 165630., 170022., 122868., 66258.,
      40028.,  86104.,  138356., 141860., 145364., 148868., 152372., 108568.,
      57820.,  26262.,  55868.,  88882.,  90922.,  92962.,  95002.,  97042.,
      68508.,  36182.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7280.,   8192.,   10180.,  11360.,  13544.,  15008.,  17388.,  19152.,
      18956.,  20776.,  20524.,  22400.,  19304.,  20960.,  17540.,  18960.,
      15216.,  16384.,  15420.,  16880.,  21025.,  22900.,  27370.,  29680.,
      34475.,  37240.,  36925.,  39760.,  39375.,  42280.,  36370.,  38920.,
      32525.,  34700.,  27820.,  29600.,  28104.,  30240.,  37710.,  40440.,
      48396.,  51744.,  60186.,  64176.,  63714.,  67788.,  67242.,  71400.,
      61356.,  64992.,  54270.,  57360.,  45960.,  48480.,  46340.,  49280.,
      61495.,  65240.,  78134.,  82712.,  96285.,  101724., 101087., 106624.,
      105889., 111524., 95774.,  100688., 84035.,  88200.,  70644.,  74032.,
      69524.,  72968.,  91105.,  95480.,  114422., 119756., 139503., 145824.,
      144305., 150724., 149107., 155624., 133574., 139244., 116165., 120960.,
      96852.,  100744., 92708.,  96656.,  120715., 125720., 150710., 156800.,
      182721., 189924., 187523., 194824., 192325., 199724., 171374., 177800.,
      148295., 153720., 123060., 127456., 115892., 120344., 150325., 155960.,
      186998., 193844., 225939., 234024., 230741., 238924., 235543., 243824.,
      209174., 216356., 180425., 186480., 149268., 154168., 136152., 140352.,
      175350., 180660., 216660., 223104., 260106., 267708., 264810., 272496.,
      269514., 277284., 237828., 244560., 203910., 209580., 167736., 172320.,
      145820., 149640., 186975., 191800., 230050., 235900., 275065., 281960.,
      279475., 286440., 283885., 290920., 249490., 255580., 213075., 218200.,
      174620., 178760., 143888., 147200., 183940., 188120., 225656., 230720.,
      269052., 275016., 272972., 278992., 276892., 282968., 242648., 247904.,
      206660., 211080., 168912., 172480.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    37.,   64.,    55.,
      88.,    73.,    112.,   91.,    136.,   94.,    128.,  65.,    84.,
      22.,    48.,    92.,    152.,   218.,   320.,   290.,  404.,   362.,
      488.,   434.,   572.,   506.,   656.,   444.,   552.,  278.,   336.,
      147.,   216.,   426.,   576.,   849.,   1092.,  1011., 1272.,  1173.,
      1452.,  1335.,  1632.,  1497.,  1812.,  1218.,  1440., 723.,   840.,
      460.,   592.,   1176.,  1456.,  2164.,  2608.,  2452., 2920.,  2740.,
      3232.,  3028.,  3544.,  3316.,  3856.,  2584.,  2960., 1484.,  1680.,
      1020.,  1208.,  2408.,  2800.,  4180.,  4792.,  4468., 5104.,  4756.,
      5416.,  5044.,  5728.,  5332.,  6040.,  4040.,  4528., 2268.,  2520.,
      1580.,  1824.,  3640.,  4144.,  6196.,  6976.,  6484., 7288.,  6772.,
      7600.,  7060.,  7912.,  7348.,  8224.,  5496.,  6096., 3052.,  3360.,
      2140.,  2440.,  4872.,  5488.,  8212.,  9160.,  8500., 9472.,  8788.,
      9784.,  9076.,  10096., 9364.,  10408., 6952.,  7664., 3836.,  4200.,
      2601.,  2856.,  5706.,  6228.,  9327.,  10128., 9597., 10416., 9867.,
      10704., 10137., 10992., 10407., 11280., 7530.,  8124., 4065.,  4368.,
      2454.,  2644.,  5284.,  5672.,  8498.,  9092.,  8714., 9320.,  8930.,
      9548.,  9146.,  9776.,  9362.,  10004., 6676.,  7112., 3558.,  3780.,
      1615.,  1720.,  3438.,  3652.,  5473.,  5800.,  5599., 5932.,  5725.,
      6064.,  5851.,  6196.,  5977.,  6328.,  4222.,  4460., 2231.,  2352.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      56464.,   63696.,   79140.,   88500.,   105496.,  117112.,  135660.,
      149660.,  148092.,  162540.,  160524.,  175420.,  151192.,  164344.,
      137540.,  148820.,  119440.,  128720.,  120500.,  132100.,  164525.,
      179425.,  214430.,  232790.,  270375.,  292355.,  289835.,  312375.,
      309295.,  332395.,  285950.,  306230.,  255925.,  273225.,  219060.,
      233220.,  220632.,  237624.,  296310.,  318030.,  380580.,  407220.,
      473634.,  505386.,  501690.,  534114.,  529746.,  562842.,  483684.,
      512628.,  428070.,  452670.,  362712.,  382776.,  364924.,  388332.,
      484575.,  514395.,  616042.,  652498.,  759549.,  802865.,  797769.,
      841869.,  835989.,  880873.,  756490.,  795634.,  664055.,  697235.,
      558460.,  585452.,  549388.,  576828.,  720195.,  755055.,  904834.,
      947338.,  1103529., 1153901., 1141749., 1192905., 1179969., 1231909.,
      1057378., 1102570., 919835.,  958055.,  767116.,  798140.,  733852.,
      765324.,  955815.,  995715.,  1193626., 1242178., 1447509., 1504937.,
      1485729., 1543941., 1523949., 1582945., 1358266., 1409506., 1175615.,
      1218875., 975772.,  1010828., 918316.,  953820.,  1191435., 1236375.,
      1482418., 1537018., 1791489., 1855973., 1829709., 1894977., 1867929.,
      1933981., 1659154., 1716442., 1431395., 1479695., 1184428., 1223516.,
      1080888., 1114392., 1392270., 1434630., 1720500., 1771908., 2065770.,
      2126418., 2103234., 2164554., 2140698., 2202690., 1889268., 1942980.,
      1620030., 1665270., 1332792., 1369368., 1158980., 1189460., 1486225.,
      1524725., 1828790., 1875470., 2186835., 2241855., 2221975., 2277555.,
      2257115., 2313255., 1983830., 2032430., 1694425., 1735325., 1388740.,
      1421780., 1144528., 1170960., 1463220., 1496580., 1795192., 1835608.,
      2140572., 2188172., 2171820., 2219868., 2203068., 2251564., 1930744.,
      1972696., 1644500., 1679780., 1344208., 1372688.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   119.,   275.,   251.,   455.,   383.,
      635.,   515.,   815.,   647.,   995.,   690.,   954.,   485.,   633.,
      130.,   330.,   628.,   1092.,  1558.,  2350.,  2110.,  2998.,  2662.,
      3646.,  3214.,  4294.,  3766.,  4942.,  3348.,  4196.,  2114.,  2570.,
      1047.,  1587.,  3126.,  4302.,  6333.,  8241.,  7593.,  9645.,  8853.,
      11049., 10113., 12453., 11373., 13857., 9318.,  11070., 5559.,  6483.,
      3428.,  4468.,  8872.,  11080., 16460., 19964., 18716., 22412., 20972.,
      24860., 23228., 27308., 25484., 29756., 19944., 22920., 11492., 13044.,
      7796.,  9284.,  18504., 21608., 32252., 37100., 34508., 39548., 36764.,
      41996., 39020., 44444., 41276., 46892., 31368., 35240., 17652., 19652.,
      12164., 14100., 28136., 32136., 48044., 54236., 50300., 56684., 52556.,
      59132., 54812., 61580., 57068., 64028., 42792., 47560., 23812., 26260.,
      16532., 18916., 37768., 42664., 63836., 71372., 66092., 73820., 68348.,
      76268., 70604., 78716., 72860., 81164., 54216., 59880., 29972., 32868.,
      20307., 22335., 44622., 48774., 73041., 79413., 75165., 81681., 77289.,
      83949., 79413., 86217., 81537., 88485., 59070., 63798., 31923., 34335.,
      19258., 20770., 41508., 44596., 66814., 71542., 68518., 73342., 70222.,
      75142., 71926., 76942., 73630., 78742., 52548., 56020., 28026., 29794.,
      12713., 13549., 27082., 28786., 43139., 45743., 44135., 46787., 45131.,
      47831., 46127., 48875., 47123., 49919., 33306., 35202., 17609., 18573.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      444640.,   502240.,   623960.,   698520.,   832592.,   925136.,
      1071560.,  1183112.,  1170568.,  1285704.,  1269576.,  1388296.,
      1196624.,  1301456.,  1089240.,  1179160.,  946400.,   1020384.,
      952600.,   1045080.,  1301550.,  1420350.,  1697380.,  1843780.,
      2141370.,  2316650.,  2296490.,  2476250.,  2451610.,  2635850.,
      2267620.,  2429380.,  2030350.,  2168350.,  1738520.,  1851480.,
      1748304.,  1883856.,  2349060.,  2522340.,  3018360.,  3230904.,
      3757740.,  4011084.,  3981516.,  4240236.,  4205292.,  4469388.,
      3840888.,  4071864.,  3400260.,  3596580.,  2881872.,  3042000.,
      2896264.,  3083080.,  3847130.,  4085130.,  4892300.,  5183276.,
      6033566.,  6379310.,  6338542.,  6690558.,  6643518.,  7001806.,
      6013196.,  6325676.,  5279610.,  5544490.,  4440968.,  4656456.,
      4303432.,  4497928.,  5608266.,  5853818.,  7007148.,  7305548.,
      8501870.,  8854910.,  8703422.,  9054542.,  9008398.,  9365790.,
      8039468.,  8351180.,  6967530.,  7231770.,  5790792.,  6005768.,
      5312264.,  5506248.,  6839994.,  7084906.,  8461516.,  8759148.,
      10178622., 10530766., 10265486., 10615710., 10570462., 10926958.,
      9377612.,  9688556.,  8082010.,  8345610.,  6681864.,  6896328.,
      5862344.,  6055816.,  7498282.,  7742554.,  9227756.,  9524620.,
      11052558., 11403806., 11024734., 11374062., 11329710., 11685310.,
      10027628., 10337804., 8623050.,  8886010.,  7114184.,  7328136.,
      5903312.,  6080848.,  7501860.,  7725572.,  9185848.,  9457272.,
      10956812., 11277484., 10808364., 11126220., 11107404., 11430636.,
      9807672.,  10089336., 8414820.,  8653380.,  6927312.,  7121232.,
      5269464.,  5422872.,  6651678.,  6844590.,  8107140.,  8340836.,
      9637130.,  9912890.,  9355514.,  9627562.,  9636074.,  9912602.,
      8504836.,  8745700.,  7293950.,  7497870.,  6002136.,  6167832.,
      3896288.,  4017376.,  4867096.,  5018968.,  5894864.,  6078544.,
      6980616.,  7197128.,  6553288.,  6765192.,  6802824.,  7018312.,
      6022352.,  6210128.,  5179800.,  5338840.,  4274144.,  4403424.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    826.,    2026.,   1834.,   3418.,
      2842.,   4810.,   3850.,   6202.,   4858.,   7594.,   5276.,   7356.,
      3742.,   4910.,   860.,    2428.,   4600.,   8248.,   11732.,  17972.,
      16052.,  23060.,  20372.,  28148.,  24692.,  33236.,  29012.,  38324.,
      25976.,  32696.,  16476.,  20092.,  7866.,   12138.,  23892.,  33204.,
      48846.,  63966.,  58782.,  75054.,  68718.,  86142.,  78654.,  97230.,
      88590.,  108318., 72852.,  86772.,  43578.,  50922.,  26424.,  34680.,
      68848.,  86384.,  128296., 156136., 146152., 175528., 164008., 194920.,
      181864., 214312., 199720., 233704., 156656., 180336., 90424.,  102776.,
      60920.,  72760.,  145008., 169712., 253288., 291880., 271144., 311272.,
      289000., 330664., 306856., 350056., 324712., 369448., 247152., 278000.,
      139256., 155192., 95416.,  110840., 221168., 253040., 378280., 427624.,
      396136., 447016., 413992., 466408., 431848., 485800., 449704., 505192.,
      337648., 375664., 188088., 207608., 129912., 148920., 297328., 336368.,
      503272., 563368., 521128., 582760., 538984., 602152., 556840., 621544.,
      574696., 640936., 428144., 473328., 236920., 260024., 160458., 176634.,
      352884., 386004., 578046., 628878., 594894., 646878., 611742., 664878.,
      628590., 682878., 645438., 700878., 467892., 505620., 253002., 272250.,
      152572., 164636., 329016., 353656., 529844., 567572., 543380., 581876.,
      556916., 596180., 570452., 610484., 583988., 624788., 416952., 444664.,
      222460., 236572., 100878., 107550., 214972., 228572., 342538., 363322.,
      350458., 371626., 358378., 379930., 366298., 388234., 374218., 396538.,
      264572., 279708., 139918., 147614.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      27344.,   29120.,   30928.,   32768.,   38420.,   40720.,   43060.,
      45440.,   51320.,   54176.,   57080.,   60032.,   66108.,   69552.,
      73052.,   76608.,   72268.,   75824.,   79436.,   83104.,   78428.,
      82096.,   85820.,   89600.,   73976.,   77216.,   80504.,   83840.,
      67380.,   70160.,   72980.,   75840.,   58576.,   60864.,   63184.,
      65536.,   58820.,   61680.,   64580.,   67520.,   80425.,   84100.,
      87825.,   91600.,   104950.,  109480.,  114070.,  118720.,  132475.,
      137900.,  143395.,  148960.,  142135.,  147700.,  153335.,  159040.,
      151795.,  157500.,  163275.,  169120.,  140470.,  145480.,  150550.,
      155680.,  125825.,  130100.,  134425.,  138800.,  107780.,  111280.,
      114820.,  118400.,  108216.,  112416.,  116664.,  120960.,  145470.,
      150840.,  156270.,  161760.,  186996.,  193584.,  200244.,  206976.,
      232890.,  240744.,  248682.,  256704.,  246834.,  254856.,  262962.,
      271152.,  260778.,  268968.,  277242.,  285600.,  238260.,  245424.,
      252660.,  259968.,  210990.,  217080.,  223230.,  229440.,  178872.,
      183840.,  188856.,  193920.,  179564.,  185360.,  191212.,  197120.,
      238595.,  245980.,  253435.,  260960.,  303506.,  312536.,  321650.,
      330848.,  374409.,  385140.,  395969.,  406896.,  393421.,  404348.,
      415373.,  426496.,  412433.,  423556.,  434777.,  446096.,  373394.,
      383096.,  392882.,  402752.,  327915.,  336140.,  344435.,  352800.,
      275884.,  282576.,  289324.,  296128.,  271292.,  278096.,  284956.,
      291872.,  355775.,  364420.,  373135.,  381920.,  447146.,  457688.,
      468314.,  479024.,  545517.,  558012.,  570605.,  583296.,  564529.,
      577220.,  590009.,  602896.,  583541.,  596428.,  609413.,  622496.,
      523082.,  534296.,  545594.,  556976.,  455175.,  464660.,  474215.,
      483840.,  379708.,  387408.,  395164.,  402976.,  363020.,  370832.,
      378700.,  386624.,  472955.,  482860.,  492835.,  502880.,  590786.,
      602840.,  614978.,  627200.,  716625.,  730884.,  745241.,  759696.,
      735637.,  750092.,  764645.,  779296.,  754649.,  769300.,  784049.,
      798896.,  672770.,  685496.,  698306.,  711200.,  582435.,  593180.,
      603995.,  614880.,  483532.,  492240.,  501004.,  509824.,  454748.,
      463568.,  472444.,  481376.,  590135.,  601300.,  612535.,  623840.,
      734426.,  747992.,  761642.,  775376.,  887733.,  903756.,  919877.,
      936096.,  906745.,  922964.,  939281.,  955696.,  925757.,  942172.,
      958685.,  975296.,  822458.,  836696.,  851018.,  865424.,  709695.,
      721700.,  733775.,  745920.,  587356.,  597072.,  606844.,  616672.,
      536280.,  544608.,  552984.,  561408.,  690870.,  701400.,  711990.,
      722640.,  853860.,  866640.,  879492.,  892416.,  1025346., 1040424.,
      1055586., 1070832., 1043994., 1059240., 1074570., 1089984., 1062642.,
      1078056., 1093554., 1109136., 937956.,  951312.,  964740.,  978240.,
      804390.,  815640.,  826950.,  838320.,  661848.,  670944.,  680088.,
      689280.,  575700.,  583280.,  590900.,  598560.,  738325.,  747900.,
      757525.,  767200.,  908590.,  920200.,  931870.,  943600.,  1086575.,
      1100260., 1114015., 1127840., 1104075., 1117900., 1131795., 1145760.,
      1121575., 1135540., 1149575., 1163680., 985870.,  997960.,  1010110.,
      1022320., 842125.,  852300.,  862525.,  872800.,  690260.,  698480.,
      706740.,  715040.,  568976.,  575552.,  582160.,  588800.,  727460.,
      735760.,  744100.,  752480.,  892568.,  902624.,  912728.,  922880.,
      1064364., 1076208., 1088108., 1100064., 1079932., 1091888., 1103900.,
      1115968., 1095500., 1107568., 1119692., 1131872., 960152.,  970592.,
      981080.,  991616.,  817860.,  826640.,  835460.,  844320.,  668560.,
      675648.,  682768.,  689920.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    43.,
      76.,    115.,   160.,   103.,   148.,   199.,   256.,   163.,   220.,
      283.,   352.,   223.,   292.,   367.,   448.,   283.,   364.,   451.,
      544.,   314.,   376.,   442.,   512.,   225.,   260.,   297.,   336.,
      42.,    88.,    138.,   192.,   260.,   368.,   484.,   608.,   686.,
      872.,   1070.,  1280.,  950.,   1160.,  1382.,  1616.,  1214.,  1448.,
      1694.,  1952.,  1478.,  1736.,  2006.,  2288.,  1742.,  2024.,  2318.,
      2624.,  1572.,  1776.,  1988.,  2208.,  1002.,  1112.,  1226.,  1344.,
      459.,   588.,   723.,   864.,   1422.,  1704.,  1998.,  2304.,  2937.,
      3396.,  3873.,  4368.,  3549.,  4044.,  4557.,  5088.,  4161.,  4692.,
      5241.,  5808.,  4773.,  5340.,  5925.,  6528.,  5385.,  5988.,  6609.,
      7248.,  4446.,  4872.,  5310.,  5760.,  2667.,  2892.,  3123.,  3360.,
      1588.,  1840.,  2100.,  2368.,  4168.,  4704.,  5256.,  5824.,  7804.,
      8656.,  9532.,  10432., 8908.,  9808.,  10732., 11680., 10012., 10960.,
      11932., 12928., 11116., 12112., 13132., 14176., 12220., 13264., 14332.,
      15424., 9608.,  10336., 11080., 11840., 5556.,  5936.,  6324.,  6720.,
      3716.,  4080.,  4452.,  4832.,  8872.,  9632.,  10408., 11200., 15532.,
      16720., 17932., 19168., 16636., 17872., 19132., 20416., 17740., 19024.,
      20332., 21664., 18844., 20176., 21532., 22912., 19948., 21328., 22732.,
      24160., 15208., 16160., 17128., 18112., 8580.,  9072.,  9572.,  10080.,
      5844.,  6320.,  6804.,  7296.,  13576., 14560., 15560., 16576., 23260.,
      24784., 26332., 27904., 24364., 25936., 27532., 29152., 25468., 27088.,
      28732., 30400., 26572., 28240., 29932., 31648., 27676., 29392., 31132.,
      32896., 20808., 21984., 23176., 24384., 11604., 12208., 12820., 13440.,
      7972.,  8560.,  9156.,  9760.,  18280., 19488., 20712., 21952., 30988.,
      32848., 34732., 36640., 32092., 34000., 35932., 37888., 33196., 35152.,
      37132., 39136., 34300., 36304., 38332., 40384., 35404., 37456., 39532.,
      41632., 26408., 27808., 29224., 30656., 14628., 15344., 16068., 16800.,
      9903.,  10404., 10911., 11424., 21798., 22824., 23862., 24912., 35733.,
      37308., 38901., 40512., 36777., 38388., 40017., 41664., 37821., 39468.,
      41133., 42816., 38865., 40548., 42249., 43968., 39909., 41628., 43365.,
      45120., 28950., 30120., 31302., 32496., 15663., 16260., 16863., 17472.,
      9442.,  9816.,  10194., 10576., 20372., 21136., 21908., 22688., 32822.,
      33992., 35174., 36368., 33662., 34856., 36062., 37280., 34502., 35720.,
      36950., 38192., 35342., 36584., 37838., 39104., 36182., 37448., 38726.,
      40016., 25844., 26704., 27572., 28448., 13794., 14232., 14674., 15120.,
      6253.,  6460.,  6669.,  6880.,  13330., 13752., 14178., 14608., 21247.,
      21892., 22543., 23200., 21739., 22396., 23059., 23728., 22231., 22900.,
      23575., 24256., 22723., 23404., 24091., 24784., 23215., 23908., 24607.,
      25312., 16418., 16888., 17362., 17840., 8685.,  8924.,  9165.,  9408.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      215248.,  229392.,  243792.,  258448.,  302820.,  321140.,  339780.,
      358740.,  404920.,  427672.,  450808.,  474328.,  522060.,  549500.,
      577388.,  605724.,  571116.,  599452.,  628236.,  657468.,  620172.,
      649404.,  679084.,  709212.,  585400.,  611224.,  637432.,  664024.,
      533540.,  555700.,  578180.,  600980.,  464080.,  482320.,  500816.,
      519568.,  464900.,  487700.,  510820.,  534260.,  636125.,  665425.,
      695125.,  725225.,  830630.,  866750.,  903350.,  940430.,  1049055.,
      1092315., 1136135., 1180515., 1126055., 1170435., 1215375., 1260875.,
      1203055., 1248555., 1294615., 1341235., 1113830., 1153790., 1194230.,
      1235150., 998125.,  1032225., 1066725., 1101625., 855300.,  883220.,
      911460.,  940020.,  857400.,  890904.,  924792.,  959064.,  1153110.,
      1195950., 1239270., 1283070., 1482900., 1535460., 1588596., 1642308.,
      1847538., 1910202., 1973538., 2037546., 1958754., 2022762., 2087442.,
      2152794., 2069970., 2135322., 2201346., 2268042., 1891860., 1949028.,
      2006772., 2065092., 1675830., 1724430., 1773510., 1823070., 1421112.,
      1460760., 1500792., 1541208., 1425004., 1471260., 1517964., 1565116.,
      1894095., 1953035., 2012535., 2072595., 2410114., 2482186., 2554930.,
      2628346., 2973957., 3059609., 3146045., 3233265., 3125661., 3212881.,
      3300885., 3389673., 3277365., 3366153., 3455725., 3546081., 2967874.,
      3045322., 3123442., 3202234., 2606975., 2672635., 2738855., 2805635.,
      2193772., 2247196., 2301068., 2355388., 2156812., 2211132., 2265900.,
      2321116., 2829015., 2898035., 2967615., 3037755., 3556210., 3640378.,
      3725218., 3810730., 4339293., 4439057., 4539605., 4640937., 4490997.,
      4592329., 4694445., 4797345., 4642701., 4745601., 4849285., 4953753.,
      4162354., 4251898., 4342114., 4433002., 3622535., 3698275., 3774575.,
      3851435., 3022348., 3083836., 3145772., 3208156., 2888620., 2951004.,
      3013836., 3077116., 3763935., 3843035., 3922695., 4002915., 4702306.,
      4798570., 4895506., 4993114., 5704629., 5818505., 5933165., 6048609.,
      5856333., 5971777., 6088005., 6205017., 6008037., 6125049., 6242845.,
      6361425., 5356834., 5458474., 5560786., 5663770., 4638095., 4723915.,
      4810295., 4897235., 3850924., 3920476., 3990476., 4060924., 3620428.,
      3690876., 3761772., 3833116., 4698855., 4788035., 4877775., 4968075.,
      5848402., 5956762., 6065794., 6175498., 7069965., 7197953., 7326725.,
      7456281., 7221669., 7351225., 7481565., 7612689., 7373373., 7504497.,
      7636405., 7769097., 6551314., 6665050., 6779458., 6894538., 5653655.,
      5749555., 5846015., 5943035., 4679500., 4757116., 4835180., 4913692.,
      4273656., 4340184., 4407096., 4474392., 5505990., 5590110., 5674710.,
      5759790., 6805428., 6907524., 7010196., 7113444., 8172738., 8293194.,
      8414322., 8536122., 8321586., 8443386., 8565858., 8689002., 8470434.,
      8593578., 8717394., 8841882., 7477044., 7583748., 7691028., 7798884.,
      6412710., 6502590., 6592950., 6683790., 5276664., 5349336., 5422392.,
      5495832., 4590500., 4651060., 4711940., 4773140., 5887525., 5964025.,
      6040925., 6118225., 7245590., 7338350., 7431590., 7525310., 8665335.,
      8774675., 8884575., 8995035., 8805055., 8915515., 9026535., 9138115.,
      8944775., 9056355., 9168495., 9281195., 7862870., 7959470., 8056550.,
      8154110., 6716725., 6798025., 6879725., 6961825., 5505700., 5571380.,
      5637380., 5703700., 4538704., 4591248., 4644048., 4697104., 5803140.,
      5869460., 5936100., 6003060., 7120504., 7200856., 7281592., 7362712.,
      8491308., 8585948., 8681036., 8776572., 8615628., 8711164., 8807148.,
      8903580., 8739948., 8836380., 8933260., 9030588., 7660408., 7743832.,
      7827640., 7911832., 6525380., 6595540., 6666020., 6736820., 5334352.,
      5390992., 5447888., 5505040.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      287.,    539.,    839.,    1187.,   743.,    1091.,   1487.,   1931.,
      1199.,   1643.,   2135.,   2675.,   1655.,   2195.,   2783.,   3419.,
      2111.,   2747.,   3431.,   4163.,   2394.,   2882.,   3402.,   3954.,
      1733.,   2009.,   2301.,   2609.,   250.,    610.,    1002.,   1426.,
      1876.,   2724.,   3636.,   4612.,   5134.,   6598.,   8158.,   9814.,
      7198.,   8854.,   10606.,  12454.,  9262.,   11110.,  13054.,  15094.,
      11326.,  13366.,  15502.,  17734.,  13390.,  15622.,  17950.,  20374.,
      12180.,  13796.,  15476.,  17220.,  7802.,   8674.,   9578.,   10514.,
      3423.,   4443.,   5511.,   6627.,   10830.,  13062.,  15390.,  17814.,
      22605.,  26241.,  30021.,  33945.,  27429.,  31353.,  35421.,  39633.,
      32253.,  36465.,  40821.,  45321.,  37077.,  41577.,  46221.,  51009.,
      41901.,  46689.,  51621.,  56697.,  34734.,  38118.,  41598.,  45174.,
      20895.,  22683.,  24519.,  26403.,  12212.,  14212.,  16276.,  18404.,
      32296.,  36552.,  40936.,  45448.,  60764.,  67532.,  74492.,  81644.,
      69500.,  76652.,  83996.,  91532.,  78236.,  85772.,  93500.,  101420.,
      86972.,  94892.,  103004., 111308., 95708.,  104012., 112508., 121196.,
      75432.,  81224.,  87144.,  93192.,  43700.,  46724.,  49812.,  52964.,
      29012.,  31908.,  34868.,  37892.,  69480.,  75528.,  81704.,  88008.,
      121916., 131372., 141020., 150860., 130652., 140492., 150524., 160748.,
      139388., 149612., 160028., 170636., 148124., 158732., 169532., 180524.,
      156860., 167852., 179036., 190412., 119784., 127368., 135080., 142920.,
      67668.,  71588.,  75572.,  79620.,  45812.,  49604.,  53460.,  57380.,
      106664., 114504., 122472., 130568., 183068., 195212., 207548., 220076.,
      191804., 204332., 217052., 229964., 200540., 213452., 226556., 239852.,
      209276., 222572., 236060., 249740., 218012., 231692., 245564., 259628.,
      164136., 173512., 183016., 192648., 91636.,  96452.,  101332., 106276.,
      62612.,  67300.,  72052.,  76868.,  143848., 153480., 163240., 173128.,
      244220., 259052., 274076., 289292., 252956., 268172., 283580., 299180.,
      261692., 277292., 293084., 309068., 270428., 286412., 302588., 318956.,
      279164., 295532., 312092., 328844., 208488., 219656., 230952., 242376.,
      115604., 121316., 127092., 132932., 78231.,  82227.,  86271.,  90363.,
      172350., 180534., 188814., 197190., 282741., 295305., 308013., 320865.,
      291021., 303873., 316869., 330009., 299301., 312441., 325725., 339153.,
      307581., 321009., 334581., 348297., 315861., 329577., 343437., 357441.,
      229278., 238614., 248046., 257574., 124119., 128883., 133695., 138555.,
      74794.,  77778.,  80794.,  83842.,  161460., 167556., 173716., 179940.,
      260254., 269590., 279022., 288550., 266926., 276454., 286078., 295798.,
      273598., 283318., 293134., 303046., 280270., 290182., 300190., 310294.,
      286942., 297046., 307246., 317542., 205044., 211908., 218836., 225828.,
      109482., 112978., 116506., 120066., 49613.,  51265.,  52933.,  54617.,
      105802., 109170., 112570., 116002., 168695., 173843., 179039., 184283.,
      172607., 177851., 183143., 188483., 176519., 181859., 187247., 192683.,
      180431., 185867., 191351., 196883., 184343., 189875., 195455., 201083.,
      130410., 134162., 137946., 141762., 69005.,  70913.,  72837.,  74777.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1708000.,  1820896.,  1935840.,  2052832.,  2404440.,  2550680.,
      2699480.,  2850840.,  3211728.,  3385168.,  3561680.,  3741264.,
      4106312.,  4309000.,  4515272.,  4725128.,  4427208.,  4628872.,
      4834120.,  5042952.,  4715336.,  4915976.,  5120200.,  5328008.,
      4309456.,  4482896.,  4659408.,  4838992.,  3767128.,  3911320.,
      4058072.,  4207384.,  3084256.,  3197152.,  3312096.,  3429088.,
      3479512.,  3628824.,  3780696.,  3935128.,  4701550.,  4886398.,
      5074446.,  5265694.,  5809476.,  6024228.,  6242820.,  6465252.,
      7010138.,  7257354.,  7509050.,  7765226.,  7226682.,  7474666.,
      7727130.,  7984074.,  7410458.,  7659210.,  7912442.,  8170154.,
      6477892.,  6690596.,  6907140.,  7127524.,  5366574.,  5540670.,
      5717966.,  5898462.,  4071384.,  4204312.,  4339800.,  4477848.,
      5257168.,  5426512.,  5598928.,  5774416.,  6675588.,  6886756.,
      7101764.,  7320612.,  7771320.,  8019192.,  8271672.,  8528760.,
      8981612.,  9269260.,  9562284.,  9860684.,  9012908.,  9303116.,
      9598700.,  9899660.,  9011436.,  9304204.,  9602348.,  9905868.,
      7675576.,  7927544.,  8184120.,  8445304.,  6135044.,  6343140.,
      6555076.,  6770852.,  4383696.,  4544848.,  4709072.,  4876368.,
      6336456.,  6542216.,  6751560.,  6964488.,  7817626.,  8075594.,
      8338042.,  8604970.,  8783916.,  9089484.,  9400428.,  9716748.,
      9902974.,  10259726., 10622750., 10992046., 9799198.,  10160302.,
      10527678., 10901326., 9662654.,  10028110., 10399838., 10777838.,
      8108332.,  8424140.,  8745324.,  9071884.,  6307034.,  6569610.,
      6836666.,  7108202.,  4251592.,  4457352.,  4666696.,  4879624.,
      6740296.,  6953224.,  7169736.,  7389832.,  8031866.,  8296746.,
      8566106.,  8839946.,  8578156.,  8890380.,  9207980.,  9530956.,
      9276190.,  9639342.,  10008766., 10384462., 8741310.,  9100622.,
      9466206.,  9838062.,  8375390.,  8739054.,  9108990.,  9485198.,
      7793004.,  8107276.,  8426924.,  8751948.,  6964666.,  7225962.,
      7491738.,  7761994.,  5883208.,  6087944.,  6296264.,  6508168.,
      5435080.,  5646984.,  5862472.,  6081544.,  7094106.,  7357706.,
      7625786.,  7898346.,  8826028.,  9136716.,  9452780.,  9774220.,
      10708670., 11070030., 11437662., 11811566., 10763614., 11121134.,
      11484926., 11854990., 11216894., 11578766., 11946910., 12321326.,
      9968044.,  10280780., 10598892., 10922380., 8474266.,  8734282.,
      8998778.,  9267754.,  6728392.,  6932104.,  7139400.,  7350280.,
      6489160.,  6700040.,  6914504.,  7132552.,  8056890.,  8319210.,
      8586010.,  8857290.,  9467116.,  9776268.,  10090796., 10410700.,
      11027038., 11386606., 11752446., 12124558., 10623230., 10978958.,
      11340958., 11709230., 10847134., 11207214., 11573566., 11946190.,
      9390572.,  9701772.,  10018348., 10340300., 7690106.,  7948842.,
      8212058.,  8479754.,  5738568.,  5941256.,  6147528.,  6357384.,
      5525712.,  5705296.,  5887952.,  6073680.,  6425284.,  6647204.,
      6872964.,  7102564.,  7468088.,  7735416.,  8007352.,  8283896.,
      8660268.,  8976076.,  9297260.,  9623820.,  8402796.,  8721164.,
      9044908.,  9374028.,  9035180.,  9364300.,  9698796.,  10038668.,
      7943736.,  8231544.,  8523960.,  8820984.,  6645572.,  6888996.,
      7136260.,  7387364.,  5134544.,  5330512.,  5529552.,  5731664.,
      4318552.,  4483224.,  4650456.,  4820248.,  4529998.,  4731998.,
      4937198.,  5145598.,  5917572.,  6159460.,  6405188.,  6654756.,
      7437818.,  7722154.,  8010970.,  8304266.,  7926746.,  8211850.,
      8501434.,  8795498.,  8486330.,  8780394.,  9078938.,  9381962.,
      7728772.,  7984996.,  8245060.,  8508964.,  6785294.,  7001118.,
      7220142.,  7442366.,  5650776.,  5823640.,  5999064.,  6177048.,
      4227552.,  4360928.,  4496352.,  4633824.,  5299672.,  5461272.,
      5625432.,  5792152.,  6467280.,  6659152.,  6854096.,  7052112.,
      7734472.,  7958664.,  8186440.,  8417800.,  7871048.,  8094216.,
      8320968.,  8551304.,  8307656.,  8537992.,  8771912.,  9009416.,
      7332560.,  7532624.,  7735760.,  7941968.,  6208728.,  6376472.,
      6546776.,  6719640.,  4932064.,  5065440.,  5200864.,  5338336.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    5626.,    8362.,
      11482.,   14986.,   9178.,    12682.,   16570.,   20842.,   12730.,
      17002.,   21658.,   26698.,   16282.,   21322.,   26746.,   32554.,
      18684.,   22556.,   26684.,   31068.,   13598.,   15790.,   18110.,
      20558.,   1660.,    4508.,    7612.,    10972.,   14200.,   20920.,
      28152.,   35896.,   39668.,   51284.,   63668.,   76820.,   55988.,
      69140.,   83060.,   97748.,   72308.,   86996.,   102452.,  118676.,
      88628.,   104852.,  121844.,  139604.,  104948.,  122708.,  141236.,
      160532.,  95864.,   108728.,  122104.,  135992.,  61564.,   68508.,
      75708.,   83164.,   26394.,   34506.,   43002.,   51882.,   84468.,
      102228.,  120756.,  140052.,  177294.,  206238.,  236334.,  267582.,
      215598.,  246846.,  279246.,  312798.,  253902.,  287454.,  322158.,
      358014.,  292206.,  328062.,  365070.,  403230.,  330510.,  368670.,
      407982.,  448446.,  274548.,  301524.,  329268.,  357780.,  165402.,
      179658.,  194298.,  209322.,  95736.,   111672.,  128120.,  145080.,
      254192.,  288112.,  323056.,  359024.,  479464.,  533416.,  588904.,
      645928.,  548968.,  605992.,  664552.,  724648.,  618472.,  678568.,
      740200.,  803368.,  687976.,  751144.,  815848.,  882088.,  757480.,
      823720.,  891496.,  960808.,  597744.,  643952.,  691184.,  739440.,
      346616.,  370744.,  395384.,  420536.,  229240.,  252344.,  275960.,
      300088.,  549872.,  598128.,  647408.,  697712.,  965992.,  1041448.,
      1118440., 1196968., 1035496., 1114024., 1194088., 1275688., 1105000.,
      1186600., 1269736., 1354408., 1174504., 1259176., 1345384., 1433128.,
      1244008., 1331752., 1421032., 1511848., 950768.,  1011312., 1072880.,
      1135472., 537464.,  568760.,  600568.,  632888.,  362744.,  393016.,
      423800.,  455096.,  845552.,  908144.,  971760.,  1036400., 1452520.,
      1549480., 1647976., 1748008., 1522024., 1622056., 1723624., 1826728.,
      1591528., 1694632., 1799272., 1905448., 1661032., 1767208., 1874920.,
      1984168., 1730536., 1839784., 1950568., 2062888., 1303792., 1378672.,
      1454576., 1531504., 728312.,  766776.,  805752.,  845240.,  496248.,
      533688.,  571640.,  610104.,  1141232., 1218160., 1296112., 1375088.,
      1939048., 2057512., 2177512., 2299048., 2008552., 2130088., 2253160.,
      2377768., 2078056., 2202664., 2328808., 2456488., 2147560., 2275240.,
      2404456., 2535208., 2217064., 2347816., 2480104., 2613928., 1656816.,
      1746032., 1836272., 1927536., 919160.,  964792.,  1010936., 1057592.,
      621882.,  653802.,  686106.,  718794.,  1370676., 1436052., 1502196.,
      1569108., 2249454., 2349822., 2451342., 2554014., 2315406., 2418078.,
      2521902., 2626878., 2381358., 2486334., 2592462., 2699742., 2447310.,
      2554590., 2663022., 2772606., 2513262., 2622846., 2733582., 2845470.,
      1824948., 1899540., 1974900., 2051028., 988218.,  1026282., 1064730.,
      1103562., 595388.,  619228.,  643324.,  667676.,  1285624., 1334328.,
      1383544., 1433272., 2072756., 2147348., 2222708., 2298836., 2125940.,
      2202068., 2278964., 2356628., 2179124., 2256788., 2335220., 2414420.,
      2232308., 2311508., 2391476., 2472212., 2285492., 2366228., 2447732.,
      2530004., 1633528., 1688376., 1743736., 1799608., 872380.,  900316.,
      928508.,  956956.,  395262.,  408462.,  421790.,  435246.,  843068.,
      869980.,  897148.,  924572.,  1344442., 1385578., 1427098., 1469002.,
      1375642., 1417546., 1459834., 1502506., 1406842., 1449514., 1492570.,
      1536010., 1438042., 1481482., 1525306., 1569514., 1469242., 1513450.,
      1558042., 1603018., 1039548., 1069532., 1099772., 1130268., 550142.,
      565390.,  580766.,  596270.};
  const std::array<int, 4> in_shape = {{1, 10, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2220.,  3070.,  4046.,  5152.,  5558.,  5964.,  6370.,  5930.,  5340.,
      4596.,  4600.,  6225.,  8050.,  10080., 10710., 11340., 11970., 10975.,
      9750.,  8290.,  8270.,  11035., 14091., 17444., 18347., 19250., 20153.,
      18285., 16090., 13562., 13510., 17850., 22589., 27734., 28959., 30184.,
      31409., 28280., 24710., 20692., 20090., 26250., 32879., 39984., 41209.,
      42434., 43659., 38990., 33810., 28112., 26670., 34650., 43169., 52234.,
      53459., 54684., 55909., 49700., 42910., 35532., 33250., 43050., 53459.,
      64484., 65709., 66934., 68159., 60410., 52010., 42952., 38810., 49915.,
      61593., 73850., 75047., 76244., 77441., 68235., 58420., 47990., 41400.,
      53025., 65170., 77840., 78960., 80080., 81200., 71275., 60800., 49770.,
      40740., 52030., 63770., 75964., 76958., 77952., 78946., 69110., 58800.,
      48012.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,   4.,    10.,   20.,   30.,   40.,   50.,   52.,   45.,   28.,
      13.,  41.,   86.,   150.,  186.,  222.,  258.,  239.,  191.,  112.,
      64.,  167.,  312.,  502.,  580.,  658.,  736.,  645.,  494.,  280.,
      182., 438.,  772.,  1188., 1324., 1460., 1596., 1354., 1010., 560.,
      378., 858.,  1444., 2140., 2276., 2412., 2548., 2110., 1542., 840.,
      574., 1278., 2116., 3092., 3228., 3364., 3500., 2866., 2074., 1120.,
      770., 1698., 2788., 4044., 4180., 4316., 4452., 3622., 2606., 1400.,
      916., 1967., 3156., 4486., 4612., 4738., 4864., 3885., 2750., 1456.,
      855., 1811., 2870., 4034., 4134., 4234., 4334., 3425., 2401., 1260.,
      559., 1174., 1846., 2576., 2634., 2692., 2750., 2158., 1503., 784.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      16800.,  23320.,  30832.,  39368.,  42560.,  45752.,  48944.,  45664.,
      41200.,  35520.,  35260.,  47825.,  61970.,  77735.,  82705.,  87675.,
      92645.,  85070.,  75675.,  64420.,  63904.,  85400.,  109200., 135352.,
      142492., 149632., 156772., 142392., 125420., 105808., 104972., 138845.,
      175882., 216139., 225841., 235543., 245245., 220990., 193235., 161924.,
      157052., 205345., 257362., 313159., 322861., 332563., 342265., 305830.,
      265335., 220724., 209132., 271845., 338842., 410179., 419881., 429583.,
      439285., 390670., 337435., 279524., 261212., 338345., 420322., 507199.,
      516901., 526603., 536305., 475510., 409535., 338324., 305968., 393620.,
      485832., 582652., 592144., 601636., 611128., 538608., 461240., 378976.,
      327100., 419025., 515090., 615335., 624225., 633115., 642005., 563630.,
      480875., 393700., 322368., 411760., 504736., 601328., 609224., 617120.,
      625016., 547216., 465640., 380256.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    59.,    124.,   196.,   268.,   340.,   365.,   322.,
      203.,   76.,    264.,   580.,   1040.,  1312.,  1584.,  1856.,  1744.,
      1408.,  832.,   437.,   1174.,  2235.,  3644.,  4244.,  4844.,  5444.,
      4809.,  3706.,  2111.,  1312.,  3200.,  5696.,  8832.,  9888.,  10944.,
      12000., 10232., 7664.,  4264.,  2824.,  6448.,  10904., 16224., 17280.,
      18336., 19392., 16112., 11808., 6448.,  4336.,  9696.,  16112., 23616.,
      24672., 25728., 26784., 21992., 15952., 8632.,  5848.,  12944., 21320.,
      31008., 32064., 33120., 34176., 27872., 20096., 10816., 7061.,  15190.,
      24411., 34748., 35732., 36716., 37700., 30153., 21370., 11327., 6640.,
      14080., 22336., 31424., 32208., 32992., 33776., 26716., 18744., 9844.,
      4361.,  9166.,  14423., 20140., 20596., 21052., 21508., 16889., 11770.,
      6143.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      130592.,  181640.,  240560.,  307608.,  332920.,  358232.,  383544.,
      358256.,  323560.,  279200.,  275960.,  374750.,  486100.,  610330.,
      649810.,  689290.,  728770.,  669700.,  596150.,  507800.,  502256.,
      671740.,  859560.,  1066100., 1122884., 1179668., 1236452., 1123656.,
      990220.,  835760.,  827400.,  1095010., 1387820., 1706278., 1783502.,
      1860726., 1937950., 1747004., 1528170., 1281000., 1241800., 1624210.,
      2036300., 2478518., 2555742., 2632966., 2710190., 2422364., 2102170.,
      1749160., 1656200., 2153410., 2684780., 3250758., 3327982., 3405206.,
      3482430., 3097724., 2676170., 2217320., 2070600., 2682610., 3333260.,
      4022998., 4100222., 4177446., 4254670., 3773084., 3250170., 2685480.,
      2429744., 3126220., 3859080., 4628708., 4704308., 4779908., 4855508.,
      4279848., 3665500., 3012080., 2600440., 3331550., 4095700., 4893210.,
      4964050., 5034890., 5105730., 4482820., 3824950., 3131800., 2564768.,
      3276200., 4016240., 4785144., 4848088., 4911032., 4973976., 4355120.,
      3706120., 3026720.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    856.,    1400.,   1944.,   2488.,   2722.,
      2428.,   1542.,   500.,    1864.,   4220.,   7696.,   9808.,   11920.,
      14032.,  13292.,  10792.,  6404.,   3202.,   8756.,   16854.,  27688.,
      32392.,  37096.,  41800.,  37086.,  28676.,  16378.,  9928.,   24400.,
      43672.,  68000.,  76320.,  84640.,  92960.,  79480.,  59664.,  33256.,
      21800.,  49936.,  84664.,  126240., 134560., 142880., 151200., 125848.,
      92368.,  50504.,  33672.,  75472.,  125656., 184480., 192800., 201120.,
      209440., 172216., 125072., 67752.,  45544.,  101008., 166648., 242720.,
      251040., 259360., 267680., 218584., 157776., 85000.,  55426.,  119348.,
      191958., 273448., 281224., 289000., 296776., 237534., 168452., 89338.,
      52324.,  111016., 176204., 248016., 254224., 260432., 266640., 211004.,
      148104., 77812.,  34446.,  72428.,  114010., 159256., 162872., 166488.,
      170104., 133618., 93148.,  48630.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7920.,   8880.,   11040.,  12280.,  14648.,  16184.,  18760.,  20608.,
      20328.,  22232.,  21896.,  23856.,  23464.,  25480.,  21944.,  23720.,
      19840.,  21360.,  17136.,  18384.,  16860.,  18400.,  22925.,  24900.,
      29770.,  32200.,  37415.,  40320.,  39865.,  42840.,  42315.,  45360.,
      44765.,  47880.,  41170.,  43900.,  36675.,  39000.,  31260.,  33160.,
      30824.,  33080.,  41260.,  44140.,  52836.,  56364.,  65576.,  69776.,
      69104.,  73388.,  72632.,  77000.,  76160.,  80612.,  69252.,  73140.,
      61060.,  64360.,  51560.,  54248.,  50932.,  54040.,  67445.,  71400.,
      85526.,  90356.,  105203., 110936., 110005., 115836., 114807., 120736.,
      119609., 125636., 107870., 113120., 94395.,  98840.,  79156.,  82768.,
      76692.,  80360.,  100345., 105000., 125846., 131516., 153223., 159936.,
      158025., 164836., 162827., 169736., 167629., 174636., 149870., 155960.,
      130095., 135240., 108276., 112448., 102452., 106680., 133245., 138600.,
      166166., 172676., 201243., 208936., 206045., 213836., 210847., 218736.,
      215649., 223636., 191870., 198800., 165795., 171640., 137396., 142128.,
      128212., 133000., 166145., 172200., 206486., 213836., 249263., 257936.,
      254065., 262836., 258867., 267736., 263669., 272636., 233870., 241640.,
      201495., 208040., 166516., 171808., 150728., 155240., 193960., 199660.,
      239460., 246372., 287252., 295400., 291956., 300188., 296660., 304976.,
      301364., 309764., 265668., 272940., 227560., 233680., 187016., 191960.,
      161500., 165600., 206925., 212100., 254410., 260680., 303975., 311360.,
      308385., 315840., 312795., 320320., 317205., 324800., 278530., 285100.,
      237675., 243200., 194620., 199080., 159408., 162960., 203640., 208120.,
      249656., 255080., 297472., 303856., 301392., 307832., 305312., 311808.,
      309232., 315784., 270776., 276440., 230440., 235200., 188208., 192048.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    44.,    80.,    76.,
      120.,   108.,   160.,   140.,   200.,   157.,   208.,   142.,   180.,
      91.,    112.,   24.,    52.,    100.,   164.,   236.,   344.,   440.,
      600.,   568.,   744.,   696.,   888.,   824.,   1032.,  788.,   956.,
      644.,   764.,   384.,   448.,   181.,   256.,   506.,   668.,   987.,
      1248.,  1636.,  2008.,  1924.,  2320.,  2212.,  2632.,  2500.,  2944.,
      2229.,  2580.,  1730.,  1976.,  991.,   1120.,  584.,   728.,   1448.,
      1752.,  2608.,  3088.,  4080.,  4752.,  4592.,  5296.,  5104.,  5840.,
      5616.,  6384.,  4816.,  5416.,  3624.,  4040.,  2024.,  2240.,  1312.,
      1512.,  3016.,  3432.,  5128.,  5776.,  7664.,  8560.,  8176.,  9104.,
      8688.,  9648.,  9200.,  10192., 7672.,  8440.,  5640.,  6168.,  3088.,
      3360.,  2040.,  2296.,  4584.,  5112.,  7648.,  8464.,  11248., 12368.,
      11760., 12912., 12272., 13456., 12784., 14000., 10528., 11464., 7656.,
      8296.,  4152.,  4480.,  2768.,  3080.,  6152.,  6792.,  10168., 11152.,
      14832., 16176., 15344., 16720., 15856., 17264., 16368., 17808., 13384.,
      14488., 9672.,  10424., 5216.,  5600.,  3397.,  3664.,  7322.,  7868.,
      11787., 12624., 16804., 17944., 17284., 18448., 17764., 18952., 18244.,
      19456., 14613., 15540., 10370., 11000., 5503.,  5824.,  3220.,  3420.,
      6836.,  7244.,  10856., 11480., 15288., 16136., 15672., 16536., 16056.,
      16936., 16440., 17336., 13016., 13700., 9140.,  9604.,  4804.,  5040.,
      2125.,  2236.,  4470.,  4696.,  7039.,  7384.,  9836.,  10304., 10060.,
      10536., 10284., 10768., 10508., 11000., 8257.,  8632.,  5758.,  6012.,
      3007.,  3136.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      61488.,   69104.,   85900.,   95740.,   114184.,  126376.,  146468.,
      161140.,  158900.,  174020.,  171332.,  186900.,  183764.,  199780.,
      172072.,  186184.,  155740.,  167820.,  134640.,  144560.,  131860.,
      144100.,  179525.,  195225.,  233390.,  252710.,  293615.,  316715.,
      313075.,  336735.,  332535.,  356755.,  351995.,  376775.,  323990.,
      345710.,  288825.,  307325.,  246340.,  261460.,  242152.,  260104.,
      324410.,  347330.,  415740.,  443820.,  516334.,  549766.,  544390.,
      578494.,  572446.,  607222.,  600502.,  635950.,  546348.,  577308.,
      481970.,  508250.,  407176.,  428584.,  401324.,  426076.,  531755.,
      563255.,  674674.,  713146.,  830305.,  875973.,  868525.,  914977.,
      906745.,  953981.,  944965.,  992985.,  852586.,  894418.,  746375.,
      781795.,  626108.,  654892.,  606284.,  635516.,  793555.,  830655.,
      995554.,  1040746., 1212505., 1266013., 1250725., 1305017., 1288945.,
      1344021., 1327165., 1383025., 1186906., 1235458., 1030575., 1071595.,
      857948.,  891212.,  811244.,  844956.,  1055355., 1098055., 1316434.,
      1368346., 1594705., 1656053., 1632925., 1695057., 1671145., 1734061.,
      1709365., 1773065., 1521226., 1576498., 1314775., 1361395., 1089788.,
      1127532., 1016204., 1054396., 1317155., 1365455., 1637314., 1695946.,
      1976905., 2046093., 2015125., 2085097., 2053345., 2124101., 2091565.,
      2163105., 1855546., 1917538., 1598975., 1651195., 1321628., 1363852.,
      1196872., 1232872., 1540370., 1585850., 1901964., 1957116., 2281846.,
      2346862., 2319310., 2384998., 2356774., 2423134., 2394238., 2461270.,
      2110908., 2168940., 1808330., 1857170., 1486312., 1525768., 1283860.,
      1316580., 1645125., 1686425., 2022830., 2072870., 2417135., 2476075.,
      2452275., 2511775., 2487415., 2547475., 2522555., 2583175., 2215190.,
      2267630., 1890425., 1934525., 1548100., 1583700., 1268208., 1296560.,
      1620220., 1655980., 1986472., 2029768., 2367092., 2418052., 2398340.,
      2449748., 2429588., 2481444., 2460836., 2513140., 2154952., 2200168.,
      1834060., 1872060., 1498032., 1528688.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    119.,    275.,    292.,    564.,
      532.,    868.,    772.,    1172.,   1012.,   1476.,   1163.,   1559.,
      1066.,   1362.,   689.,    853.,    142.,    358.,    684.,    1180.,
      1690.,   2530.,   3224.,   4472.,   4216.,   5592.,   5208.,   6712.,
      6200.,   7832.,   5986.,   7306.,   4924.,   5868.,   2950.,   3454.,
      1307.,   1895.,   3742.,   5014.,   7401.,   9453.,   12380.,  15308.,
      14636.,  17756.,  16892.,  20204.,  19148.,  22652.,  17157.,  19929.,
      13366.,  15310.,  7679.,   8699.,   4396.,   5532.,   11000.,  13400.,
      19940.,  23732.,  31344.,  36656.,  35376.,  40944.,  39408.,  45232.,
      43440.,  49520.,  37364.,  42116.,  28184.,  31480.,  15772.,  17484.,
      10108.,  11692.,  23320.,  26616.,  39764.,  44900.,  59568.,  66672.,
      63600.,  70960.,  67632.,  75248.,  71664.,  79536.,  59876.,  65972.,
      44088.,  48280.,  24172.,  26332.,  15820.,  17852.,  35640.,  39832.,
      59588.,  66068.,  87792.,  96688.,  91824.,  100976., 95856.,  105264.,
      99888.,  109552., 82388.,  89828.,  59992.,  65080.,  32572.,  35180.,
      21532.,  24012.,  47960.,  53048.,  79412.,  87236.,  116016., 126704.,
      120048., 130992., 124080., 135280., 128112., 139568., 104900., 113684.,
      75896.,  81880.,  40972.,  44028.,  26651.,  28775.,  57502.,  61846.,
      92649.,  99309.,  132188., 141260., 135980., 145244., 139772., 149228.,
      143564., 153212., 115077., 122457., 81718.,  86734.,  43391.,  45947.,
      25366.,  26958.,  53884.,  57132.,  85618.,  90586.,  120632., 127384.,
      123672., 130552., 126712., 133720., 129752., 136888., 102778., 108226.,
      72204.,  75900.,  37966.,  39846.,  16781.,  17665.,  35314.,  37114.,
      55631.,  58379.,  77764.,  81492.,  79540.,  83332.,  81316.,  85172.,
      83092.,  87012.,  65315.,  68303.,  45562.,  47586.,  23801.,  24829.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      484448.,   545120.,   677560.,   755960.,   901520.,   998672.,
      1157352.,  1274280.,  1256360.,  1376872.,  1355368.,  1479464.,
      1454376.,  1582056.,  1362704.,  1475216.,  1234040.,  1330360.,
      1067360.,  1146464.,  1042840.,  1140440.,  1420750.,  1545950.,
      1848100.,  2002180.,  2326170.,  2510410.,  2481290.,  2670010.,
      2636410.,  2829610.,  2791530.,  2989210.,  2570500.,  2743780.,
      2292350.,  2439950.,  1955800.,  2076440.,  1919504.,  2062736.,
      2572660.,  2755540.,  3298200.,  3522264.,  4097660.,  4364444.,
      4321436.,  4593596.,  4545212.,  4822748.,  4768988.,  5051900.,
      4340184.,  4587288.,  3829780.,  4039540.,  3236240.,  3407120.,
      3186120.,  3383688.,  4217770.,  4461018.,  5332716.,  5623436.,
      6532750.,  6872734.,  6783454.,  7121518.,  7017774.,  7353918.,
      7235710.,  7569934.,  6404492.,  6689324.,  5582650.,  5824490.,
      4664968.,  4862024.,  4702536.,  4903176.,  6002442.,  6249530.,
      7387180.,  7682508.,  8858542.,  9203902.,  8994558.,  9337998.,
      9114190.,  9455710.,  9217438.,  9557038.,  8009420.,  8298860.,
      6923930.,  7169610.,  5741064.,  5941192.,  5760200.,  5963912.,
      7213674.,  7464602.,  8753516.,  9053452.,  10381518., 10732254.,
      10402846., 10751662., 10407790., 10754686., 10396350., 10741326.,
      8926220.,  9220268.,  7691770.,  7941290.,  6358408.,  6561608.,
      6359112.,  6565896.,  7851466.,  8106234.,  9431724.,  9736268.,
      11101678., 11457790., 11008318., 11362510., 10898574., 11250846.,
      10772446., 11122798., 9154892.,  9453548.,  7886170.,  8139530.,
      6517000.,  6723272.,  6430352.,  6619664.,  7804948.,  8037236.,
      9258584.,  9535384.,  10792796., 11115644., 10578812., 10898844.,
      10348444., 10665660., 10101692., 10416092., 8449176.,  8716248.,
      7270580.,  7496980.,  6002192.,  6186384.,  5753240.,  5916376.,
      6812110.,  7011038.,  7936804.,  8172804.,  9128602.,  9402954.,
      8781450.,  9052090.,  8417914.,  8684842.,  8037994.,  8301210.,
      6536452.,  6758884.,  5638270.,  5826830.,  4665304.,  4818712.,
      4256096.,  4384352.,  4783352.,  4938040.,  5358864.,  5541008.,
      5983656.,  6194280.,  5490792.,  5696808.,  4981544.,  5182952.,
      4455912.,  4652712.,  3309200.,  3473936.,  2899640.,  3039480.,
      2434656.,  2548576.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     220.,     764.,     826.,     2026.,    2104.,
      4216.,    3960.,    6584.,    5816.,    8952.,    7672.,    11320.,
      8938.,    12058.,   8252.,    10588.,   5358.,    6654.,    940.,
      2636.,    5016.,    8920.,    12740.,   19364.,   24624.,   34480.,
      32432.,   43312.,   40240.,   52144.,   48048.,   60976.,   46628.,
      57092.,   38488.,   45976.,   23116.,   27116.,   9898.,    14554.,
      28724.,   38804.,   57246.,   73518.,   96232.,   119464.,  114088.,
      138856.,  131944.,  158248.,  149800.,  177640.,  134574.,  156606.,
      105044.,  120500.,  60442.,   68554.,   34072.,   43096.,   85680.,
      104752.,  155848.,  185992.,  245600.,  287840.,  277600.,  321888.,
      309600.,  355936.,  341600.,  389984.,  294280.,  332104.,  222256.,
      248496.,  124504.,  138136.,  79320.,   91928.,   183344.,  209584.,
      313096.,  353992.,  469600.,  526176.,  501600.,  560224.,  533600.,
      594272.,  565600.,  628320.,  473032.,  521608.,  348592.,  382000.,
      191256.,  208472.,  124568.,  140760.,  281008.,  314416.,  470344.,
      521992.,  693600.,  764512.,  725600.,  798560.,  757600.,  832608.,
      789600.,  866656.,  651784.,  711112.,  474928.,  515504.,  258008.,
      278808.,  169816.,  189592.,  378672.,  419248.,  627592.,  689992.,
      917600.,  1002848., 949600.,  1036896., 981600.,  1070944., 1013600.,
      1104992., 830536.,  900616.,  601264.,  649008.,  324760.,  349144.,
      211114.,  228058.,  455732.,  490388.,  734622.,  787758.,  1048552.,
      1120936., 1078696., 1152616., 1108840., 1184296., 1138984., 1215976.,
      913326.,  972222.,  648788.,  688820.,  344602.,  365002.,  201356.,
      214060.,  427864.,  453784.,  680036.,  719684.,  958384.,  1012272.,
      982576.,  1037488., 1006768., 1062704., 1030960., 1087920., 816836.,
      860324.,  573976.,  603480.,  301868.,  316876.,  133374.,  140430.,
      280732.,  295100.,  442330.,  464266.,  618424.,  648184.,  632568.,
      662840.,  646712.,  677496.,  660856.,  692152.,  519562.,  543418.,
      362492.,  378652.,  189390.,  197598.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      29808.,   31680.,   33584.,   35520.,   41740.,   44160.,   46620.,
      49120.,   55592.,   58592.,   61640.,   64736.,   71428.,   75040.,
      78708.,   82432.,   77588.,   81312.,   85092.,   88928.,   83748.,
      87584.,   91476.,   95424.,   89908.,   93856.,   97860.,   101920.,
      84296.,   87776.,   91304.,   94880.,   76380.,   79360.,   82380.,
      85440.,   66096.,   68544.,   71024.,   73536.,   64420.,   67440.,
      70500.,   73600.,   87825.,   91700.,   95625.,   99600.,   114310.,
      119080.,  123910.,  128800.,  143955.,  149660.,  155435.,  161280.,
      153615.,  159460.,  165375.,  171360.,  163275.,  169260.,  175315.,
      181440.,  172935.,  179060.,  185255.,  191520.,  159310.,  164680.,
      170110.,  175600.,  142125.,  146700.,  151325.,  156000.,  121300.,
      125040.,  128820.,  132640.,  118856.,  123296.,  127784.,  132320.,
      159370.,  165040.,  170770.,  176560.,  204396.,  211344.,  218364.,
      225456.,  254030.,  262304.,  270662.,  279104.,  267974.,  276416.,
      284942.,  293552.,  281918.,  290528.,  299222.,  308000.,  295862.,
      304640.,  313502.,  322448.,  269340.,  277008.,  284748.,  292560.,
      237730.,  244240.,  250810.,  257440.,  200936.,  206240.,  211592.,
      216992.,  197596.,  203728.,  209916.,  216160.,  261975.,  269780.,
      277655.,  285600.,  332570.,  342104.,  351722.,  361424.,  409493.,
      420812.,  432229.,  443744.,  428505.,  440020.,  451633.,  463344.,
      447517.,  459228.,  471037.,  482944.,  466529.,  478436.,  490441.,
      502544.,  421106.,  431480.,  441938.,  452480.,  368795.,  377580.,
      386435.,  395360.,  309484.,  316624.,  323820.,  331072.,  299516.,
      306768.,  314076.,  321440.,  392175.,  401380.,  410655.,  420000.,
      492170.,  503384.,  514682.,  526064.,  599613.,  612892.,  626269.,
      639744.,  618625.,  632100.,  645673.,  659344.,  637637.,  651308.,
      665077.,  678944.,  656649.,  670516.,  684481.,  698544.,  587426.,
      599480.,  611618.,  623840.,  510195.,  520380.,  530635.,  540960.,
      424844.,  433104.,  441420.,  449792.,  401436.,  409808.,  418236.,
      426720.,  522375.,  532980.,  543655.,  554400.,  651770.,  664664.,
      677642.,  690704.,  789733.,  804972.,  820309.,  835744.,  808745.,
      824180.,  839713.,  855344.,  827757.,  843388.,  859117.,  874944.,
      846769.,  862596.,  878521.,  894544.,  753746.,  767480.,  781298.,
      795200.,  651595.,  663180.,  674835.,  686560.,  540204.,  549584.,
      559020.,  568512.,  503356.,  512848.,  522396.,  532000.,  652575.,
      664580.,  676655.,  688800.,  811370.,  825944.,  840602.,  855344.,
      979853.,  997052.,  1014349., 1031744., 998865.,  1016260., 1033753.,
      1051344., 1017877., 1035468., 1053157., 1070944., 1036889., 1054676.,
      1072561., 1090544., 920066.,  935480.,  950978.,  966560.,  792995.,
      805980.,  819035.,  832160.,  655564.,  666064.,  676620.,  687232.,
      593960.,  602912.,  611912.,  620960.,  764530.,  775840.,  787210.,
      798640.,  944124.,  957840.,  971628.,  985488.,  1132838., 1149008.,
      1165262., 1181600., 1151486., 1167824., 1184246., 1200752., 1170134.,
      1186640., 1203230., 1219904., 1188782., 1205456., 1222214., 1239056.,
      1048236., 1062672., 1077180., 1091760., 898090.,  910240.,  922450.,
      934720.,  738248.,  748064.,  757928.,  767840.,  637860.,  646000.,
      654180.,  662400.,  817425.,  827700.,  838025.,  848400.,  1005190.,
      1017640., 1030150., 1042720., 1201235., 1215900., 1230635., 1245440.,
      1218735., 1233540., 1248415., 1263360., 1236235., 1251180., 1266195.,
      1281280., 1253735., 1268820., 1283975., 1299200., 1101070., 1114120.,
      1127230., 1140400., 939725.,  950700.,  961725.,  972800.,  769620.,
      778480.,  787380.,  796320.,  630576.,  637632.,  644720.,  651840.,
      805660.,  814560.,  823500.,  832480.,  987848.,  998624.,  1009448.,
      1020320., 1177204., 1189888., 1202628., 1215424., 1192772., 1205568.,
      1218420., 1231328., 1208340., 1221248., 1234212., 1247232., 1223908.,
      1236928., 1250004., 1263136., 1071848., 1083104., 1094408., 1105760.,
      912300.,  921760.,  931260.,  940800.,  745200.,  752832.,  760496.,
      768192.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    43.,
      76.,    115.,   160.,   116.,   176.,   244.,   320.,   228.,   304.,
      388.,   480.,   340.,   432.,   532.,   640.,   452.,   560.,   676.,
      800.,   535.,   628.,   727.,   832.,   498.,   568.,   642.,   720.,
      325.,   364.,   405.,   448.,   46.,    96.,    150.,   208.,   284.,
      400.,   524.,   656.,   746.,   944.,   1154.,  1376.,  1464.,  1760.,
      2072.,  2400.,  1944.,  2272.,  2616.,  2976.,  2424.,  2784.,  3160.,
      3552.,  2904.,  3296.,  3704.,  4128.,  2834.,  3152.,  3482.,  3824.,
      2348.,  2576.,  2812.,  3056.,  1414.,  1536.,  1662.,  1792.,  583.,
      724.,   871.,   1024.,  1718.,  2024.,  2342.,  2672.,  3453.,  3948.,
      4461.,  4992.,  5836.,  6544.,  7276.,  8032.,  6940.,  7696.,  8476.,
      9280.,  8044.,  8848.,  9676.,  10528., 9148.,  10000., 10876., 11776.,
      8241.,  8916.,  9609.,  10320., 6446.,  6920.,  7406.,  7904.,  3715.,
      3964.,  4219.,  4480.,  2060.,  2336.,  2620.,  2912.,  5208.,  5792.,
      6392.,  7008.,  9508.,  10432., 11380., 12352., 15024., 16320., 17648.,
      19008., 17008., 18368., 19760., 21184., 18992., 20416., 21872., 23360.,
      20976., 22464., 23984., 25536., 18100., 19264., 20452., 21664., 13688.,
      14496., 15320., 16160., 7676.,  8096.,  8524.,  8960.,  4860.,  5248.,
      5644.,  6048.,  11256., 12064., 12888., 13728., 19252., 20512., 21796.,
      23104., 28912., 30656., 32432., 34240., 30896., 32704., 34544., 36416.,
      32880., 34752., 36656., 38592., 34864., 36800., 38768., 40768., 29188.,
      30688., 32212., 33760., 21528., 22560., 23608., 24672., 11820., 12352.,
      12892., 13440., 7660.,  8160.,  8668.,  9184.,  17304., 18336., 19384.,
      20448., 28996., 30592., 32212., 33856., 42800., 44992., 47216., 49472.,
      44784., 47040., 49328., 51648., 46768., 49088., 51440., 53824., 48752.,
      51136., 53552., 56000., 40276., 42112., 43972., 45856., 29368., 30624.,
      31896., 33184., 15964., 16608., 17260., 17920., 10460., 11072., 11692.,
      12320., 23352., 24608., 25880., 27168., 38740., 40672., 42628., 44608.,
      56688., 59328., 62000., 64704., 58672., 61376., 64112., 66880., 60656.,
      63424., 66224., 69056., 62640., 65472., 68336., 71232., 51364., 53536.,
      55732., 57952., 37208., 38688., 40184., 41696., 20108., 20864., 21628.,
      22400., 13063., 13588., 14119., 14656., 28214., 29288., 30374., 31472.,
      45501., 47148., 48813., 50496., 64972., 67216., 69484., 71776., 66844.,
      69136., 71452., 73792., 68716., 71056., 73420., 75808., 70588., 72976.,
      75388., 77824., 56625., 58452., 60297., 62160., 40238., 41480., 42734.,
      44000., 21379., 22012., 22651., 23296., 12486., 12880., 13278., 13680.,
      26540., 27344., 28156., 28976., 42194., 43424., 44666., 45920., 59480.,
      61152., 62840., 64544., 60984., 62688., 64408., 66144., 62488., 64224.,
      65976., 67744., 63992., 65760., 67544., 69344., 50714., 52064., 53426.,
      54800., 35644., 36560., 37484., 38416., 18750., 19216., 19686., 20160.,
      8281.,  8500.,  8721.,  8944.,  17434., 17880., 18330., 18784., 27475.,
      28156., 28843., 29536., 38420., 39344., 40276., 41216., 39300., 40240.,
      41188., 42144., 40180., 41136., 42100., 43072., 41060., 42032., 43012.,
      44000., 32287., 33028., 33775., 34528., 22530., 23032., 23538., 24048.,
      11773., 12028., 12285., 12544.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      234768.,   249680.,  264848.,   280272.,   329140.,   348420.,  368020.,
      387940.,   438808.,  462712.,   487000.,   511672.,   564284.,  593068.,
      622300.,   651980.,  613340.,   643020.,   673148.,   703724.,  662396.,
      692972.,   723996.,  755468.,   711452.,   742924.,   774844.,  807212.,
      667480.,   695224.,  723352.,   751864.,   605140.,   628900.,  652980.,
      677380.,   523920.,  543440.,   563216.,   583248.,   509380.,  533460.,
      557860.,   582580.,  694925.,   725825.,   757125.,   788825.,  905030.,
      943070.,   981590.,  1020590.,  1140335.,  1185835.,  1231895., 1278515.,
      1217335.,  1263955., 1311135.,  1358875.,  1294335.,  1342075., 1390375.,
      1439235.,  1371335., 1420195.,  1469615.,  1519595.,  1263830., 1306670.,
      1349990.,  1393790., 1127925.,  1164425.,  1201325.,  1238625., 962980.,
      992820.,   1022980., 1053460.,  942040.,   977464.,   1013272., 1049464.,
      1263710.,  1308950., 1354670.,  1400870.,  1621380.,  1676820., 1732836.,
      1789428.,  2015818., 2081842.,  2148538.,  2215906.,  2127034., 2194402.,
      2262442.,  2331154., 2238250.,  2306962.,  2376346.,  2446402., 2349466.,
      2419522.,  2490250., 2561650.,  2139492.,  2200692.,  2262468., 2324820.,
      1888910.,  1940870., 1993310.,  2046230.,  1596952.,  1639288., 1682008.,
      1725112.,  1568588., 1617532.,  1666924.,  1716764.,  2080295., 2142595.,
      2205455.,  2268875., 2641618.,  2717722.,  2794498.,  2871946., 3253453.,
      3343809.,  3434949., 3526873.,  3405157.,  3497081.,  3589789., 3683281.,
      3556861.,  3650353., 3744629.,  3839689.,  3708565.,  3803625., 3899469.,
      3996097.,  3348226., 3431050.,  3514546.,  3598714.,  2932895., 3003035.,
      3073735.,  3144995., 2461676.,  2518684.,  2576140.,  2634044., 2381708.,
      2439612.,  2497964., 2556764.,  3119095.,  3192595.,  3266655., 3341275.,
      3915058.,  4004602., 4094818.,  4185706.,  4770493.,  4876529., 4983349.,
      5090953.,  4922197., 5029801.,  5138189.,  5247361.,  5073901., 5183073.,
      5293029.,  5403769., 5225605.,  5336345.,  5447869.,  5560177., 4675426.,
      4771690.,  4868626., 4966234.,  4061295.,  4142635.,  4224535., 4306995.,
      3382316.,  3448284., 3514700.,  3581564.,  3194828.,  3261692., 3329004.,
      3396764.,  4157895., 4242595.,  4327855.,  4413675.,  5188498., 5291482.,
      5395138.,  5499466., 6287533.,  6409249.,  6531749.,  6655033., 6439237.,
      6562521.,  6686589., 6811441.,  6590941.,  6715793.,  6841429., 6967849.,
      6742645.,  6869065., 6996269.,  7124257.,  6002626.,  6112330., 6222706.,
      6333754.,  5189695., 5282235.,  5375335.,  5468995.,  4302956., 4377884.,
      4453260.,  4529084., 4007948.,  4083772.,  4160044.,  4236764., 5196695.,
      5292595.,  5389055., 5486075.,  6461938.,  6578362.,  6695458., 6813226.,
      7804573.,  7941969., 8080149.,  8219113.,  7956277.,  8095241., 8234989.,
      8375521.,  8107981., 8248513.,  8389829.,  8531929.,  8259685., 8401785.,
      8544669.,  8688337., 7329826.,  7452970.,  7576786.,  7701274., 6318095.,
      6421835.,  6526135., 6630995.,  5223596.,  5307484.,  5391820., 5476604.,
      4733848.,  4805368., 4877272.,  4949560.,  6093710.,  6184070., 6274910.,
      6366230.,  7525668., 7635252.,  7745412.,  7856148.,  9030490., 9159682.,
      9289546.,  9420082., 9179338.,  9309874.,  9441082.,  9572962., 9328186.,
      9460066.,  9592618., 9725842.,  9477034.,  9610258.,  9744154., 9878722.,
      8357124.,  8472468., 8588388.,  8704884.,  7160510.,  7257590., 7355150.,
      7453190.,  5886424., 5964856.,  6043672.,  6122872.,  5086660., 5151700.,
      5217060.,  5282740., 6518925.,  6601025.,  6683525.,  6766425., 8016710.,
      8116190.,  8216150., 8316590.,  9580655.,  9697835.,  9815575., 9933875.,
      9720375.,  9838675., 9957535.,  10076955., 9860095.,  9979515., 10099495.,
      10220035., 9999815., 10120355., 10241455., 10363115., 8782550., 8886830.,
      8991590.,  9096830., 7495925.,  7583625.,  7671725.,  7760225., 6139300.,
      6210100.,  6281220., 6352660.,  5030544.,  5086928.,  5143568., 5200464.,
      6427540.,  6498660., 6570100.,  6641860.,  7881304.,  7967416., 8053912.,
      8140792.,  9392348., 9493708.,  9595516.,  9697772.,  9516668., 9618924.,
      9721628.,  9824780., 9640988.,  9744140.,  9847740.,  9951788., 9765308.,
      9869356.,  9973852., 10078796., 8552344.,  8642296.,  8732632., 8823352.,
      7279540.,  7355140., 7431060.,  7507300.,  5946384.,  6007376., 6068624.,
      6130128.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      287.,    539.,    839.,    1187.,   820.,    1284.,   1812.,   2404.,
      1684.,   2276.,   2932.,   3652.,   2548.,   3268.,   4052.,   4900.,
      3412.,   4260.,   5172.,   6148.,   4103.,   4835.,   5615.,   6443.,
      3850.,   4402.,   4986.,   5602.,   2525.,   2833.,   3157.,   3497.,
      274.,    666.,    1090.,   1546.,   2052.,   2964.,   3940.,   4980.,
      5590.,   7150.,   8806.,   10558.,  11144.,  13480.,  15944.,  18536.,
      14920.,  17512.,  20232.,  23080.,  18696.,  21544.,  24520.,  27624.,
      22472.,  25576.,  28808.,  32168.,  22054.,  24574.,  27190.,  29902.,
      18340.,  20148.,  22020.,  23956.,  11074.,  12042.,  13042.,  14074.,
      4391.,   5507.,   6671.,   7883.,   13150.,  15574.,  18094.,  20710.,
      26661.,  30585.,  34653.,  38865.,  45308.,  50924.,  56732.,  62732.,
      54044.,  60044.,  66236.,  72620.,  62780.,  69164.,  75740.,  82508.,
      71516.,  78284.,  85244.,  92396.,  64605.,  69969.,  75477.,  81129.,
      50638.,  54406.,  58270.,  62230.,  29231.,  31211.,  33239.,  35315.,
      15940.,  18132.,  20388.,  22708.,  40520.,  45160.,  49928.,  54824.,
      74252.,  81596.,  89132.,  96860.,  117648., 127952., 138512., 149328.,
      133392., 144208., 155280., 166608., 149136., 160464., 172048., 183888.,
      164880., 176720., 188816., 201168., 142508., 151772., 161228., 170876.,
      107912., 114344., 120904., 127592., 60580.,  63924.,  67332.,  70804.,
      38116.,  41204.,  44356.,  47572.,  88456.,  94888.,  101448., 108136.,
      151532., 161564., 171788., 182204., 227856., 241744., 255888., 270288.,
      243600., 258000., 272656., 287568., 259344., 274256., 289424., 304848.,
      275088., 290512., 306192., 322128., 230540., 242492., 254636., 266972.,
      170184., 178408., 186760., 195240., 93508.,  97748.,  102052., 106420.,
      60292.,  64276.,  68324.,  72436.,  136392., 144616., 152968., 161448.,
      228812., 241532., 254444., 267548., 338064., 355536., 373264., 391248.,
      353808., 371792., 390032., 408528., 369552., 388048., 406800., 425808.,
      385296., 404304., 423568., 443088., 318572., 333212., 348044., 363068.,
      232456., 242472., 252616., 262888., 126436., 131572., 136772., 142036.,
      82468.,  87348.,  92292.,  97300.,  184328., 194344., 204488., 214760.,
      306092., 321500., 337100., 352892., 448272., 469328., 490640., 512208.,
      464016., 485584., 507408., 529488., 479760., 501840., 524176., 546768.,
      495504., 518096., 540944., 564048., 406604., 423932., 441452., 459164.,
      294728., 306536., 318472., 330536., 159364., 165396., 171492., 177652.,
      103463., 107651., 111887., 116171., 223582., 232150., 240814., 249574.,
      360741., 373881., 387165., 400593., 515324., 533228., 551324., 569612.,
      530204., 548492., 566972., 585644., 545084., 563756., 582620., 601676.,
      559964., 579020., 598268., 617708., 449373., 463953., 478677., 493545.,
      319438., 329350., 339358., 349462., 169775., 174827., 179927., 185075.,
      99106.,  102250., 105426., 108634., 210724., 217140., 223620., 230164.,
      335110., 344926., 354838., 364846., 472520., 485864., 499336., 512936.,
      484488., 498088., 511816., 525672., 496456., 510312., 524296., 538408.,
      508424., 522536., 536776., 551144., 403030., 413806., 424678., 435646.,
      283332., 290644., 298020., 305460., 149074., 152794., 156546., 160330.,
      65813.,  67561.,  69325.,  71105.,  138586., 142146., 145738., 149362.,
      218447., 223883., 229367., 234899., 305524., 312900., 320340., 327844.,
      312532., 320036., 327604., 335236., 319540., 327172., 334868., 342628.,
      326548., 334308., 342132., 350020., 256823., 262739., 268703., 274715.,
      179242., 183250., 187290., 191362., 93677.,  95713.,  97765.,  99833.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME1x10x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1820384.,  1923040.,  2027744.,  2134496.,  2500376.,  2629720.,
      2761624.,  2896088.,  3269712.,  3427792.,  3588944.,  3753168.,
      4132488.,  4321352.,  4513800.,  4709832.,  4355080.,  4542920.,
      4734344.,  4929352.,  4544904.,  4731720.,  4922120.,  5116104.,
      4936456.,  5130440.,  5328008.,  5529160.,  4593488.,  4765904.,
      4941392.,  5119952.,  4136600.,  4285400.,  4436760.,  4590680.,
      3561696.,  3684832.,  3810016.,  3937248.,  3332312.,  3475480.,
      3621208.,  3769496.,  4368558.,  4541630.,  4717902.,  4897374.,
      5502660.,  5708196.,  5917572.,  6130788.,  6739738.,  6980298.,
      7225338.,  7474858.,  6857978.,  7099306.,  7345114.,  7595402.,
      6943450.,  7185546.,  7432122.,  7683178.,  7460026.,  7711082.,
      7966618.,  8226634.,  6747268.,  6966628.,  7189828.,  7416868.,
      5873166.,  6058270.,  6246574.,  6438078.,  4832600.,  4980888.,
      5131736.,  5285144.,  4971856.,  5140176.,  5311568.,  5486032.,
      6035300.,  6241092.,  6450724.,  6664196.,  7222520.,  7468856.,
      7719800.,  7975352.,  8539660.,  8829612.,  9124940.,  9425644.,
      8472652.,  8765164.,  9063052.,  9366316.,  8372876.,  8667948.,
      8968396.,  9274220.,  8933580.,  9239404.,  9550604.,  9867180.,
      7971192.,  8239032.,  8511480.,  8788536.,  6815396.,  7042180.,
      7272804.,  7507268.,  5460048.,  5642704.,  5828432.,  6017232.,
      5932104.,  6142984.,  6357448.,  6575496.,  6891322.,  7143402.,
      7399962.,  7661002.,  7984876.,  8281740.,  8583980.,  8891596.,
      9219934.,  9565166.,  9916670.,  10274446., 8914430.,  9255822.,
      9603486.,  9957422.,  8543390.,  8880942.,  9224766.,  9574862.,
      9029438.,  9371342.,  9719518.,  10073966., 7795244.,  8088524.,
      8387180.,  8691212.,  6552666.,  6801930.,  7055674.,  7313898.,
      5092808.,  5294472.,  5499720.,  5708552.,  6161224.,  6378248.,
      6598856.,  6823048.,  6521338.,  6781098.,  7045338.,  7314058.,
      7021932.,  7328012.,  7639468.,  7956300.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      9221854.,  9570158.,  9924734.,  10285582., 9478526.,  9831182.,
      10190110., 10555310., 8310956.,  8613452.,  8921324.,  9234572.,
      7358234.,  7615178.,  7876602.,  8142506.,  6182088.,  6389896.,
      6601288.,  6816264.,  6652488.,  6875656.,  7102408.,  7332744.,
      8051898.,  8319338.,  8591258.,  8867658.,  9597932.,  9913228.,
      10233900., 10559948., 11297758., 11664494., 12037502., 12416782.,
      11123326., 11486222., 11855390., 12230830., 10883358., 11242414.,
      11607742., 11979342., 10910654., 11274062., 11643742., 12019694.,
      9219884.,  9531596.,  9848684.,  10171148., 7967194.,  8231818.,
      8500922.,  8774506.,  6484936.,  6698888.,  6916424.,  7137544.,
      7405896.,  7635208.,  7868104.,  8104584.,  8337274.,  8612394.,
      8891994.,  9176074.,  9421420.,  9745932.,  10075820., 10411084.,
      10660382., 11029678., 11405246., 11787086., 9989310.,  10346574.,
      10710110., 11079918., 9219934.,  9565166.,  9916670.,  10274446.,
      8914430.,  9255822.,  9603486.,  9957422.,  7028140.,  7316300.,
      7609836.,  7908748.,  5803162.,  6042698.,  6286714.,  6535210.,
      4342472.,  4529800.,  4720712.,  4915208.,  7231056.,  7442384.,
      7656784.,  7874256.,  7702692.,  7958148.,  8217444.,  8480580.,
      8324728.,  8627384.,  8934648.,  9246520.,  8868812.,  9213548.,
      9563660.,  9919148.,  8213004.,  8552108.,  8896588.,  9246444.,
      8540236.,  8873708.,  9212556.,  9556780.,  8801932.,  9129772.,
      9462988.,  9801580.,  7781112.,  8056120.,  8335736.,  8619960.,
      6610916.,  6838212.,  7069348.,  7304324.,  5214544.,  5391056.,
      5570640.,  5753296.,  5820632.,  6012952.,  6207832.,  6405272.,
      7435438.,  7665854.,  7899470.,  8136286.,  9180868.,  9451940.,
      9726852.,  10005604., 10598170., 10904266., 11214842., 11529898.,
      10459386., 10758058., 11061210., 11368842., 10255066., 10546314.,
      10842042., 11142250., 9985210.,  10269034., 10557338., 10850122.,
      8244356.,  8480100.,  8719684.,  8963108.,  6609422.,  6802718.,
      6999214.,  7198910.,  4775256.,  4923544.,  5074392.,  5227800.,
      6252768.,  6408672.,  6566624.,  6726624.,  7330712.,  7514328.,
      7700504.,  7889240.,  8502096.,  8715472.,  8931920.,  9151440.,
      9077768.,  9314760.,  9555336.,  9799496.,  8357256.,  8585032.,
      8816392.,  9051336.,  7571208.,  7789768.,  8011912.,  8237640.,
      6719624.,  6928968.,  7141896.,  7358408.,  4842064.,  5012432.,
      5185872.,  5362384.,  3343128.,  3480664.,  3620760.,  3763416.,
      1689312.,  1791968.,  1896672.,  2003424.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID1x10x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    6136.,    9784.,
      13944.,   18616.,   12920.,   17592.,   22776.,   28472.,   19704.,
      25400.,   31608.,   38328.,   26488.,   33208.,   40440.,   48184.,
      32122.,   37930.,   44122.,   50698.,   30268.,   34652.,   39292.,
      44188.,   19902.,   22350.,   24926.,   27630.,   1820.,    4924.,
      8284.,    11900.,   15544.,   22776.,   30520.,   38776.,   43220.,
      55604.,   68756.,   82676.,   86896.,   105456.,  125040.,  145648.,
      116848.,  137456.,  159088.,  181744.,  146800.,  169456.,  193136.,
      217840.,  176752.,  201456.,  227184.,  253936.,  173972.,  194036.,
      214868.,  236468.,  144952.,  159352.,  174264.,  189688.,  87644.,
      95356.,   103324.,  111548.,  34042.,   42922.,   52186.,   61834.,
      102836.,  122132.,  142196.,  163028.,  209454.,  240702.,  273102.,
      306654.,  356968.,  401704.,  447976.,  495784.,  426472.,  474280.,
      523624.,  574504.,  495976.,  546856.,  599272.,  653224.,  565480.,
      619432.,  674920.,  731944.,  511566.,  554334.,  598254.,  643326.,
      401396.,  431444.,  462260.,  493844.,  231898.,  247690.,  263866.,
      280426.,  125368.,  142840.,  160824.,  179320.,  319600.,  356592.,
      394608.,  433648.,  586792.,  645352.,  705448.,  767080.,  931040.,
      1013216., 1097440., 1183712., 1056480., 1142752., 1231072., 1321440.,
      1181920., 1272288., 1364704., 1459168., 1307360., 1401824., 1498336.,
      1596896., 1130920., 1204840., 1280296., 1357288., 856944.,  908272.,
      960624.,  1014000., 481336.,  508024.,  535224.,  562936.,  301880.,
      326520.,  351672.,  377336.,  701296.,  752624.,  804976.,  858352.,
      1202344., 1282408., 1364008., 1447144., 1809120., 1919968., 2032864.,
      2147808., 1934560., 2049504., 2166496., 2285536., 2060000., 2179040.,
      2300128., 2423264., 2185440., 2308576., 2433760., 2560992., 1832488.,
      1927912., 2024872., 2123368., 1353328., 1418992., 1485680., 1553392.,
      743864.,  777720.,  812088.,  846968.,  478392.,  510200.,  542520.,
      575352.,  1082992., 1148656., 1215344., 1283056., 1817896., 1919464.,
      2022568., 2127208., 2687200., 2826720., 2968288., 3111904., 2812640.,
      2956256., 3101920., 3249632., 2938080., 3085792., 3235552., 3387360.,
      3063520., 3215328., 3369184., 3525088., 2534056., 2650984., 2769448.,
      2889448., 1849712., 1929712., 2010736., 2092784., 1006392., 1047416.,
      1088952., 1131000., 654904.,  693880.,  733368.,  773368.,  1464688.,
      1544688., 1625712., 1707760., 2433448., 2556520., 2681128., 2807272.,
      3565280., 3733472., 3903712., 4076000., 3690720., 3863008., 4037344.,
      4213728., 3816160., 3992544., 4170976., 4351456., 3941600., 4122080.,
      4304608., 4489184., 3235624., 3374056., 3514024., 3655528., 2346096.,
      2440432., 2535792., 2632176., 1268920., 1317112., 1365816., 1415032.,
      823546.,  857002.,  890842.,  925066.,  1780148., 1848596., 1917812.,
      1987796., 2872878., 2977854., 3083982., 3191262., 4104808., 4247848.,
      4392424., 4538536., 4223464., 4369576., 4517224., 4666408., 4342120.,
      4491304., 4642024., 4794280., 4460776., 4613032., 4766824., 4922152.,
      3580494., 3696990., 3814638., 3933438., 2545652., 2624852., 2704820.,
      2785556., 1353178., 1393546., 1434298., 1475434., 789724.,  814844.,
      840220.,  865852.,  1679416., 1730680., 1782456., 1834744., 2671124.,
      2749556., 2828756., 2908724., 3766896., 3873520., 3981168., 4089840.,
      3862384., 3971056., 4080752., 4191472., 3957872., 4068592., 4180336.,
      4293104., 4053360., 4166128., 4279920., 4394736., 3213524., 3299636.,
      3386516., 3474164., 2259384., 2317816., 2376760., 2436216., 1188892.,
      1218620., 1248604., 1278844., 524766.,  538734.,  552830.,  567054.,
      1105148., 1133596., 1162300., 1191260., 1742170., 1785610., 1829434.,
      1873642., 2436856., 2495800., 2555256., 2615224., 2492792., 2552760.,
      2613240., 2674232., 2548728., 2609720., 2671224., 2733240., 2604664.,
      2666680., 2729208., 2792248., 2048698., 2095978., 2143642., 2191690.,
      1429948., 1461980., 1494268., 1526812., 747390.,  763662.,  780062.,
      796590.};
  const std::array<int, 4> in_shape = {{1, 10, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1876.,   2610.,   3458.,   4424.,   4830.,   4550.,   4140.,   3596.,
      3840.,   5225.,   6790.,   8540.,   9170.,   8485.,   7600.,   6510.,
      6850.,   9185.,   11781.,  14644.,  15547.,  14211.,  12590.,  10678.,
      11130.,  14770.,  18767.,  23128.,  24353.,  22064.,  19390.,  16324.,
      16394.,  21490.,  26999.,  32928.,  34153.,  30632.,  26670.,  22260.,
      20998.,  27215.,  33831.,  40852.,  42049.,  37341.,  32210.,  26650.,
      23660.,  30475.,  37660.,  45220.,  46340.,  40915.,  35100.,  28890.,
      24156.,  30990.,  38150.,  45640.,  46634.,  41018.,  35060.,  28756.,
      15188.,  19890.,  24962.,  30408.,  30814.,  27590.,  23980.,  19980.,
      24960.,  32425.,  40390.,  48860.,  49490.,  44005.,  38000.,  31470.,
      37570.,  48545.,  60165.,  72436.,  73339.,  64899.,  55790.,  46006.,
      53242.,  68530.,  84623.,  101528., 102753., 90608.,  77630.,  63812.,
      58506.,  75250.,  92855.,  111328., 112553., 99176.,  84910.,  69748.,
      62470.,  80015.,  98343.,  117460., 118657., 104157., 88850.,  72730.,
      62700.,  80075.,  98140.,  116900., 118020., 103315., 87900.,  71770.,
      58972.,  75150.,  91910.,  109256., 110250., 96314.,  81780.,  66644.,
      28500.,  37170.,  46466.,  56392.,  56798.,  50630.,  43820.,  36364.,
      46080.,  59625.,  73990.,  89180.,  89810.,  79525.,  68400.,  56430.,
      68290.,  87905.,  108549., 130228., 131131., 115587., 98990.,  81334.,
      95354.,  122290., 150479., 179928., 181153., 159152., 135870., 111300.,
      100618., 129010., 158711., 189728., 190953., 167720., 143150., 117236.,
      103942., 132815., 162855., 194068., 195265., 170973., 145490., 118810.,
      101740., 129675., 158620., 188580., 189700., 165715., 140700., 114650.,
      93788.,  119310., 145670., 172872., 173866., 151610., 128500., 104532.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    7.,    10.,   13.,   16.,   19.,   14.,   11.,   35.,
      45.,   55.,   65.,   75.,   85.,   56.,   39.,   105.,  115.,  125.,
      135.,  145.,  155.,  98.,   67.,   175.,  185.,  195.,  205.,  215.,
      225.,  140.,  95.,   245.,  255.,  265.,  275.,  285.,  295.,  182.,
      123.,  315.,  325.,  335.,  345.,  355.,  365.,  224.,  151.,  385.,
      395.,  405.,  415.,  425.,  435.,  266.,  129.,  304.,  311.,  318.,
      325.,  332.,  339.,  196.,  5.,    16.,   27.,   38.,   49.,   60.,
      71.,   42.,   47.,   115.,  141.,  167.,  193.,  219.,  245.,  140.,
      131.,  297.,  323.,  349.,  375.,  401.,  427.,  238.,  215.,  479.,
      505.,  531.,  557.,  583.,  609.,  336.,  299.,  661.,  687.,  713.,
      739.,  765.,  791.,  434.,  383.,  843.,  869.,  895.,  921.,  947.,
      973.,  532.,  467.,  1025., 1051., 1077., 1103., 1129., 1155., 630.,
      301.,  652.,  667.,  682.,  697.,  712.,  727.,  392.,  9.,    28.,
      47.,   66.,   85.,   104.,  123.,  70.,   83.,   195.,  237.,  279.,
      321.,  363.,  405.,  224.,  223.,  489.,  531.,  573.,  615.,  657.,
      699.,  378.,  363.,  783.,  825.,  867.,  909.,  951.,  993.,  532.,
      503.,  1077., 1119., 1161., 1203., 1245., 1287., 686.,  643.,  1371.,
      1413., 1455., 1497., 1539., 1581., 840.,  783.,  1665., 1707., 1749.,
      1791., 1833., 1875., 994.,  473.,  1000., 1023., 1046., 1069., 1092.,
      1115., 588.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      14144.,   19760.,   26272.,   33712.,   36904.,   34864.,   31800.,
      27680.,   29340.,   40025.,   52130.,   65695.,   70665.,   65510.,
      58775.,   50420.,   52784.,   70900.,   91080.,   113372.,  120512.,
      110304.,  97840.,   83072.,   86268.,   114625.,  145810.,  179879.,
      189581.,  171934.,  151235.,  127428.,  127932.,  167825.,  210994.,
      257495.,  267197.,  239806.,  208915.,  174468.,  164864.,  213760.,
      265824.,  321104.,  330596.,  293688.,  253420.,  209744.,  186380.,
      240125.,  296810.,  356475.,  365365.,  322670.,  276875.,  227940.,
      190688.,  244680.,  301264.,  360472.,  368368.,  324064.,  277040.,
      227264.,  118592.,  155440.,  195232.,  238000.,  241192.,  216112.,
      187960.,  156704.,  195740.,  254425.,  317090.,  383775.,  388745.,
      345830.,  298775.,  247540.,  295472.,  381940.,  473544.,  570332.,
      577472.,  511200.,  439600.,  362624.,  419580.,  540225.,  667282.,
      800807.,  810509.,  714910.,  612675.,  503748.,  461244.,  593425.,
      732466.,  878423.,  888125.,  782782.,  670355.,  550788.,  493568.,
      632320.,  777312.,  928592.,  938084.,  823608.,  702700.,  575312.,
      496140.,  633725.,  776810.,  925435.,  934325.,  818030.,  696075.,
      568420.,  467168.,  595400.,  728272.,  865816.,  873712.,  763360.,
      648240.,  528320.,  223040.,  291120.,  364192.,  442288.,  445480.,
      397360.,  344120.,  285728.,  362140.,  468825.,  582050.,  701855.,
      706825.,  626150.,  538775.,  444660.,  538160.,  692980.,  856008.,
      1027292., 1034432., 912096.,  781360.,  642176.,  752892.,  965825.,
      1188754., 1421735., 1431437., 1257886., 1074115., 880068.,  794556.,
      1019025., 1253938., 1499351., 1509053., 1325758., 1131795., 927108.,
      822272.,  1050880., 1288800., 1536080., 1545572., 1353528., 1151980.,
      940880.,  805900.,  1027325., 1256810., 1494395., 1503285., 1313390.,
      1115275., 908900.,  743648.,  946120.,  1155280., 1371160., 1379056.,
      1202656., 1019440., 829376.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    42.,    62.,    82.,   102.,  122.,   95.,    64.,
      224.,   296.,   368.,   440.,   512.,  584.,  396.,   260.,   728.,
      800.,   872.,   944.,   1016.,  1088., 704.,  456.,   1232.,  1304.,
      1376.,  1448.,  1520.,  1592.,  1012., 652.,  1736.,  1808.,  1880.,
      1952.,  2024.,  2096.,  1320.,  848.,  2240., 2312.,  2384.,  2456.,
      2528.,  2600.,  1628.,  1044.,  2744., 2816., 2888.,  2960.,  3032.,
      3104.,  1936.,  941.,   2246.,  2298., 2350., 2402.,  2454.,  2506.,
      1463.,  29.,    102.,   186.,   270.,  354.,  438.,   522.,   311.,
      336.,   832.,   1032.,  1232.,  1432., 1632., 1832.,  1052.,  980.,
      2232.,  2432.,  2632.,  2832.,  3032., 3232., 1808.,  1624.,  3632.,
      3832.,  4032.,  4232.,  4432.,  4632., 2564., 2268.,  5032.,  5232.,
      5432.,  5632.,  5832.,  6032.,  3320., 2912., 6432.,  6632.,  6832.,
      7032.,  7232.,  7432.,  4076.,  3556., 7832., 8032.,  8232.,  8432.,
      8632.,  8832.,  4832.,  2309.,  5014., 5130., 5246.,  5362.,  5478.,
      5594.,  3023.,  53.,    182.,   330.,  478.,  626.,   774.,   922.,
      527.,   608.,   1440.,  1768.,  2096., 2424., 2752.,  3080.,  1708.,
      1700.,  3736.,  4064.,  4392.,  4720., 5048., 5376.,  2912.,  2792.,
      6032.,  6360.,  6688.,  7016.,  7344., 7672., 4116.,  3884.,  8328.,
      8656.,  8984.,  9312.,  9640.,  9968., 5320., 4976.,  10624., 10952.,
      11280., 11608., 11936., 12264., 6524., 6068., 12920., 13248., 13576.,
      13904., 14232., 14560., 7728.,  3677., 7782., 7962.,  8142.,  8322.,
      8502.,  8682.,  4583.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      109728.,   153640.,   204656.,   263032.,   288344.,   272816.,
      249160.,   217120.,   229240.,   313150.,   408340.,   515130.,
      554610.,   514660.,   462150.,   396760.,   414256.,   556940.,
      716040.,   891940.,   948724.,   868968.,   771260.,   655216.,
      679112.,   902930.,   1149260.,  1418550.,  1495774.,  1357244.,
      1194410.,  1006824.,  1010632.,  1326290.,  1668044.,  2036342.,
      2113566.,  1897532.,  1653610.,  1381352.,  1306480.,  1694300.,
      2107368.,  2546068.,  2621668.,  2329416.,  2010380.,  1664176.,
      1479480.,  1906350.,  2356660.,  2830730.,  2901570.,  2562820.,
      2199350.,  1810840.,  1515296.,  1944520.,  2394416.,  2865240.,
      2928184.,  2576240.,  2202600.,  1807008.,  937120.,   1228840.,
      1544048.,  1883000.,  1908312.,  1710512.,  1488200.,  1241120.,
      1550200.,  2015550.,  2512660.,  3041850.,  3081330.,  2741860.,
      2369350.,  1963480.,  2343472.,  3029900.,  3757320.,  4526116.,
      4582900.,  4057704.,  3489980.,  2879344.,  3331272.,  4289810.,
      5299532.,  6360886.,  6438110.,  5679548.,  4868010.,  4003048.,
      3662792.,  4713170.,  5818316.,  6978678.,  7055902.,  6219836.,
      5327210.,  4377576.,  3923824.,  5027420.,  6180840.,  7384468.,
      7460068.,  6550344.,  5589260.,  4576432.,  3947320.,  5042350.,
      6181300.,  7364490.,  7435330.,  6510340.,  5540150.,  4524440.,
      3718944.,  4740040.,  5798192.,  6893656.,  6956600.,  6078320.,
      5161960.,  4207264.,  1764512.,  2304040.,  2883440.,  3502968.,
      3528280.,  3148208.,  2727240.,  2265120.,  2871160.,  3717950.,
      4616980.,  5568570.,  5608050.,  4969060.,  4276550.,  3530200.,
      4272688.,  5502860.,  6798600.,  8160292.,  8217076.,  7246440.,
      6208700.,  5103472.,  5983432.,  7676690.,  9449804.,  11303222.,
      11380446., 10001852., 8541610.,  6999272.,  6314952.,  8100050.,
      9968588.,  11921014., 11998238., 10542140., 9000810.,  7373800.,
      6541168.,  8360540.,  10254312., 12222868., 12298468., 10771272.,
      9168140.,  7488688.,  6415160.,  8178350.,  10005940., 11898250.,
      11969090., 10457860., 8880950.,  7238040.,  5922592.,  7535560.,
      9201968.,  10922072., 10985016., 9580400.,  8121320.,  6607520.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,    140.,    284.,    428.,    572.,    716.,    860.,    694.,
      420.,   1576.,   2120.,   2664.,   3208.,   3752.,   4296.,   2964.,
      1876.,  5384.,   5928.,   6472.,   7016.,   7560.,   8104.,   5316.,
      3332.,  9192.,   9736.,   10280.,  10824.,  11368.,  11912.,  7668.,
      4788.,  13000.,  13544.,  14088.,  14632.,  15176.,  15720.,  10020.,
      6244.,  16808.,  17352.,  17896.,  18440.,  18984.,  19528.,  12372.,
      7700.,  20616.,  21160.,  21704.,  22248.,  22792.,  23336.,  14724.,
      7166.,  17228.,  17628.,  18028.,  18428.,  18828.,  19228.,  11286.,
      190.,   716.,    1372.,   2028.,   2684.,   3340.,   3996.,   2390.,
      2532.,  6312.,   7880.,   9448.,   11016.,  12584.,  14152.,  8148.,
      7572.,  17288.,  18856.,  20424.,  21992.,  23560.,  25128.,  14084.,
      12612., 28264.,  29832.,  31400.,  32968.,  34536.,  36104.,  20020.,
      17652., 39240.,  40808.,  42376.,  43944.,  45512.,  47080.,  25956.,
      22692., 50216.,  51784.,  53352.,  54920.,  56488.,  58056.,  31892.,
      27732., 61192.,  62760.,  64328.,  65896.,  67464.,  69032.,  37828.,
      18078., 39308.,  40220.,  41132.,  42044.,  42956.,  43868.,  23734.,
      350.,   1292.,   2460.,   3628.,   4796.,   5964.,   7132.,   4086.,
      4644.,  11048.,  13640.,  16232.,  18824.,  21416.,  24008.,  13332.,
      13268., 29192.,  31784.,  34376.,  36968.,  39560.,  42152.,  22852.,
      21892., 47336.,  49928.,  52520.,  55112.,  57704.,  60296.,  32372.,
      30516., 65480.,  68072.,  70664.,  73256.,  75848.,  78440.,  41892.,
      39140., 83624.,  86216.,  88808.,  91400.,  93992.,  96584.,  51412.,
      47764., 101768., 104360., 106952., 109544., 112136., 114728., 60932.,
      28990., 61388.,  62812.,  64236.,  65660.,  67084.,  68508.,  36182.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6640.,   7504.,   9320.,   10440.,  12440.,  13832.,  16016.,  17696.,
      17584.,  19320.,  16664.,  18200.,  15240.,  16560.,  13296.,  14384.,
      13980.,  15360.,  19125.,  20900.,  24970.,  27160.,  31535.,  34160.,
      33985.,  36680.,  31570.,  33940.,  28375.,  30400.,  24380.,  26040.,
      25384.,  27400.,  34160.,  36740.,  43956.,  47124.,  54796.,  58576.,
      58324.,  62188.,  53460.,  56844.,  47480.,  50360.,  40360.,  42712.,
      41748.,  44520.,  55545.,  59080.,  70742.,  75068.,  87367.,  92512.,
      92169.,  97412.,  83678.,  88256.,  73675.,  77560.,  62132.,  65296.,
      62356.,  65576.,  81865.,  85960.,  102998., 107996., 125783., 131712.,
      130585., 136612., 117278., 122528., 102235., 106680., 85428.,  89040.,
      80872.,  83992.,  104900., 108860., 130500., 135324., 157696., 163408.,
      162400., 168196., 144324., 149364., 124580., 128840., 103144., 106600.,
      91740.,  94640.,  118225., 121900., 146170., 150640., 175595., 180880.,
      180005., 185360., 159010., 163660., 136475., 140400., 112380., 115560.,
      94064.,  96624.,  120720., 123960., 148664., 152600., 177912., 182560.,
      181832., 186536., 159992., 164072., 136800., 140240., 112240., 115024.,
      57840.,  60752.,  75880.,  79560.,  95384.,  99848.,  116368., 121632.,
      117936., 123256., 105752., 110360., 92040.,  95920.,  76784.,  79920.,
      95900.,  99840.,  124725., 129700., 155530., 161560., 188335., 195440.,
      190785., 197960., 169810., 176020., 146775., 152000., 121660., 125880.,
      145192., 150280., 187760., 194180., 232884., 240660., 280588., 289744.,
      284116., 293356., 251604., 259596., 216440., 223160., 178600., 184024.,
      206612., 212968., 266105., 274120., 328790., 338492., 394695., 406112.,
      399497., 411012., 352478., 362432., 302155., 310520., 248500., 255248.,
      227220., 234024., 292425., 301000., 361046., 371420., 433111., 445312.,
      437913., 450212., 386078., 396704., 330715., 339640., 271796., 278992.,
      243688., 249880., 312260., 320060., 383940., 393372., 458752., 469840.,
      463456., 474628., 406980., 416628., 347300., 355400., 284392., 290920.,
      245340., 250800., 313425., 320300., 384250., 392560., 457835., 467600.,
      462245., 472080., 404770., 413260., 344475., 351600., 281340., 287080.,
      231280., 235888., 294800., 300600., 360632., 367640., 428792., 437024.,
      432712., 441000., 378104., 385256., 321120., 327120., 261744., 266576.,
      109040., 114000., 142440., 148680., 178328., 185864., 216720., 225568.,
      218288., 227192., 194840., 202520., 168840., 175280., 140272., 145456.,
      177820., 184320., 230325., 238500., 286090., 295960., 345135., 356720.,
      347585., 359240., 308050., 318100., 265175., 273600., 218940., 225720.,
      265000., 273160., 341360., 351620., 421812., 434196., 506380., 520912.,
      509908., 524524., 449748., 462348., 385400., 395960., 316840., 325336.,
      371476., 381416., 476665., 489160., 586838., 601916., 702023., 719712.,
      706825., 724612., 621278., 636608., 530635., 543480., 434868., 445200.,
      392084., 402472., 502985., 516040., 619094., 634844., 740439., 758912.,
      745241., 763812., 654878., 670880., 559195., 572600., 458164., 468944.,
      406504., 415768., 519620., 531260., 637380., 651420., 759808., 776272.,
      764512., 781060., 669636., 683892., 570020., 581960., 465640., 475240.,
      398940., 406960., 508625., 518700., 622330., 634480., 740075., 754320.,
      744485., 758800., 650530., 662860., 552475., 562800., 450300., 458600.,
      368496., 375152., 468880., 477240., 572600., 582680., 679672., 691488.,
      683592., 695464., 596216., 606440., 505440., 514000., 411248., 418128.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    6.,    16.,   14.,   28.,   22.,   40.,   30.,   52.,
      38.,   64.,   46.,   76.,   39.,   56.,   20.,   44.,   84.,   140.,
      116.,  180.,  148.,  220.,  180.,  260.,  212.,  300.,  244.,  340.,
      172.,  224.,  104.,  156.,  308.,  420.,  340.,  460.,  372.,  500.,
      404.,  540.,  436.,  580.,  468.,  620.,  312.,  392.,  188.,  268.,
      532.,  700.,  564.,  740.,  596.,  780.,  628.,  820.,  660.,  860.,
      692.,  900.,  452.,  560.,  272.,  380.,  756.,  980.,  788.,  1020.,
      820.,  1060., 852.,  1100., 884.,  1140., 916.,  1180., 592.,  728.,
      356.,  492.,  980.,  1260., 1012., 1300., 1044., 1340., 1076., 1380.,
      1108., 1420., 1140., 1460., 732.,  896.,  440.,  604.,  1204., 1540.,
      1236., 1580., 1268., 1620., 1300., 1660., 1332., 1700., 1364., 1740.,
      872.,  1064., 425.,  516.,  1030., 1216., 1054., 1244., 1078., 1272.,
      1102., 1300., 1126., 1328., 1150., 1356., 679.,  784.,  9.,    20.,
      38.,   64.,   78.,   108.,  118.,  152.,  158.,  196.,  198.,  240.,
      238.,  284.,  143.,  168.,  148.,  188.,  372.,  460.,  468.,  564.,
      564.,  668.,  660.,  772.,  756.,  876.,  852.,  980.,  492.,  560.,
      456.,  524.,  1044., 1188., 1140., 1292., 1236., 1396., 1332., 1500.,
      1428., 1604., 1524., 1708., 856.,  952.,  764.,  860.,  1716., 1916.,
      1812., 2020., 1908., 2124., 2004., 2228., 2100., 2332., 2196., 2436.,
      1220., 1344., 1072., 1196., 2388., 2644., 2484., 2748., 2580., 2852.,
      2676., 2956., 2772., 3060., 2868., 3164., 1584., 1736., 1380., 1532.,
      3060., 3372., 3156., 3476., 3252., 3580., 3348., 3684., 3444., 3788.,
      3540., 3892., 1948., 2128., 1688., 1868., 3732., 4100., 3828., 4204.,
      3924., 4308., 4020., 4412., 4116., 4516., 4212., 4620., 2312., 2520.,
      1105., 1204., 2406., 2608., 2462., 2668., 2518., 2728., 2574., 2788.,
      2630., 2848., 2686., 2908., 1455., 1568., 17.,   36.,   70.,   112.,
      142.,  188.,  214.,  264.,  286.,  340.,  358.,  416.,  430.,  492.,
      247.,  280.,  276.,  332.,  660.,  780.,  820.,  948.,  980.,  1116.,
      1140., 1284., 1300., 1452., 1460., 1620., 812.,  896.,  808.,  892.,
      1780., 1956., 1940., 2124., 2100., 2292., 2260., 2460., 2420., 2628.,
      2580., 2796., 1400., 1512., 1340., 1452., 2900., 3132., 3060., 3300.,
      3220., 3468., 3380., 3636., 3540., 3804., 3700., 3972., 1988., 2128.,
      1872., 2012., 4020., 4308., 4180., 4476., 4340., 4644., 4500., 4812.,
      4660., 4980., 4820., 5148., 2576., 2744., 2404., 2572., 5140., 5484.,
      5300., 5652., 5460., 5820., 5620., 5988., 5780., 6156., 5940., 6324.,
      3164., 3360., 2936., 3132., 6260., 6660., 6420., 6828., 6580., 6996.,
      6740., 7164., 6900., 7332., 7060., 7500., 3752., 3976., 1785., 1892.,
      3782., 4000., 3870., 4092., 3958., 4184., 4046., 4276., 4134., 4368.,
      4222., 4460., 2231., 2352.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      51440.,   58288.,   72380.,   81260.,   96808.,   107848.,  124852.,
      138180.,  137284.,  151060.,  130312.,  142504.,  119340.,  129820.,
      104240.,  112880.,  109140.,  120100.,  149525.,  163625.,  195470.,
      212870.,  247135.,  267995.,  266595.,  288015.,  247910.,  266750.,
      223025.,  239125.,  191780.,  204980.,  199112.,  215144.,  268210.,
      288730.,  345420.,  370620.,  430934.,  461006.,  458990.,  489734.,
      421020.,  447948.,  374170.,  397090.,  318248.,  336968.,  328524.,
      350588.,  437395.,  465535.,  557410.,  591850.,  688793.,  729757.,
      727013.,  768761.,  660394.,  696850.,  581735.,  612675.,  490812.,
      516012.,  492492.,  518140.,  646835.,  679455.,  814114.,  853930.,
      994553.,  1041789., 1032773., 1080793., 927850.,  969682.,  809095.,
      844515.,  676284.,  705068.,  640808.,  665672.,  831370.,  862930.,
      1034460., 1072908., 1250270., 1295798., 1287734., 1333934., 1144620.,
      1184796., 988210.,  1022170., 818312.,  845864.,  728180.,  751300.,
      938525.,  967825.,  1160510., 1196150., 1394295., 1436435., 1429435.,
      1472135., 1262870., 1299950., 1084025., 1115325., 892740.,  918100.,
      747440.,  767856.,  959340.,  985180.,  1181512., 1212904., 1414084.,
      1451156., 1445332., 1482852., 1271848., 1304392., 1087580., 1115020.,
      892400.,  914608.,  456944.,  480176.,  599740.,  629100.,  754216.,
      789832.,  920500.,  962500.,  932932.,  975380.,  836872.,  873640.,
      728620.,  759580.,  608048.,  633072.,  759380.,  790820.,  987925.,
      1027625., 1232270., 1280390., 1492575., 1549275., 1512035., 1569295.,
      1346150., 1395710., 1163825., 1205525., 964900.,  998580.,  1151432.,
      1192040., 1489330., 1540570., 1847628., 1909692., 2226518., 2299598.,
      2254574., 2328326., 1996956., 2060748., 1718170., 1771810., 1418024.,
      1461320., 1640268., 1691004., 2112915., 2176895., 2611042., 2688490.,
      3134873., 3226013., 3173093., 3265017., 2800042., 2879506., 2400615.,
      2467395., 1974588., 2028460., 1804236., 1858556., 2322355., 2390815.,
      2867746., 2950570., 3440633., 3538045., 3478853., 3577049., 3067498.,
      3152338., 2627975., 2699235., 2160060., 2217516., 1937192., 1986632.,
      2482570., 2544850., 3052764., 3128076., 3647966., 3736502., 3685430.,
      3774638., 3236652., 3313692., 2762290., 2826970., 2262152., 2314280.,
      1951860., 1995460., 2493725., 2548625., 3057470., 3123830., 3643255.,
      3721235., 3678395., 3756935., 3221270., 3289070., 2741625., 2798525.,
      2239300., 2285140., 1841072., 1877872., 2346860., 2393180., 2871112.,
      2927080., 3413956., 3479700., 3445204., 3511396., 3010600., 3067720.,
      2557020., 2604940., 2084336., 2122928., 862448.,  902064.,  1127100.,
      1176940., 1411624., 1471816., 1716148., 1786820., 1728580., 1799700.,
      1543432., 1604776., 1337900., 1389340., 1111856., 1153264., 1409620.,
      1461540., 1826325., 1891625., 2269070., 2347910., 2738015., 2830555.,
      2757475., 2850575., 2444390., 2524670., 2104625., 2171925., 1738020.,
      1792180., 2103752., 2168936., 2710450., 2792410., 3349836., 3448764.,
      4022102., 4138190., 4050158., 4166918., 3572892., 3673548., 3062170.,
      3146530., 2517800., 2585672., 2952012., 3031420., 3788435., 3888255.,
      4664674., 4785130., 5580953., 5722269., 5619173., 5761273., 4939690.,
      5062162., 4219495., 4322115., 3458364., 3540908., 3115980., 3198972.,
      3997875., 4102175., 4921378., 5047210., 5886713., 6034301., 5924933.,
      6073305., 5207146., 5334994., 4446855., 4553955., 3643836., 3729964.,
      3233576., 3307592., 4133770., 4226770., 5071068., 5183244., 6045662.,
      6177206., 6083126., 6215342., 5328684., 5442588., 4536370., 4631770.,
      3705992., 3782696., 3175540., 3239620., 4048925., 4129425., 4954430.,
      5051510., 5892215., 6006035., 5927355., 6041735., 5179670., 5278190.,
      4399225., 4481725., 3585860., 3652180., 2934704., 2987888., 3734380.,
      3801180., 4560712., 4641256., 5413828., 5508244., 5445076., 5539940.,
      4749352., 4831048., 4026460., 4094860., 3276272., 3331248.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     25.,    34.,    106.,   90.,    194.,   146.,   282.,   202.,
      370.,   258.,   458.,   314.,   546.,   281.,   413.,   118.,   302.,
      572.,   1004.,  812.,   1308.,  1052.,  1612.,  1292.,  1916.,  1532.,
      2220.,  1772.,  2524.,  1278.,  1686.,  734.,   1142.,  2252.,  3132.,
      2492.,  3436.,  2732.,  3740.,  2972.,  4044.,  3212.,  4348.,  3452.,
      4652.,  2342.,  2974.,  1350.,  1982.,  3932.,  5260.,  4172.,  5564.,
      4412.,  5868.,  4652.,  6172.,  4892.,  6476.,  5132.,  6780.,  3406.,
      4262.,  1966.,  2822.,  5612.,  7388.,  5852.,  7692.,  6092.,  7996.,
      6332.,  8300.,  6572.,  8604.,  6812.,  8908.,  4470.,  5550.,  2582.,
      3662.,  7292.,  9516.,  7532.,  9820.,  7772.,  10124., 8012.,  10428.,
      8252.,  10732., 8492.,  11036., 5534.,  6838.,  3198.,  4502.,  8972.,
      11644., 9212.,  11948., 9452.,  12252., 9692.,  12556., 9932.,  12860.,
      10172., 13164., 6598.,  8126.,  3221.,  3945.,  7874.,  9354.,  8058.,
      9570.,  8242.,  9786.,  8426.,  10002., 8610.,  10218., 8794.,  10434.,
      5225.,  6061.,  53.,    137.,   258.,   458.,   570.,   802.,   882.,
      1146.,  1194.,  1490.,  1506.,  1834.,  1818.,  2178.,  1097.,  1293.,
      1110.,  1422.,  2812.,  3500.,  3564.,  4316.,  4316.,  5132.,  5068.,
      5948.,  5820.,  6764.,  6572.,  7580.,  3806.,  4342.,  3518.,  4054.,
      8076.,  9212.,  8828.,  10028., 9580.,  10844., 10332., 11660., 11084.,
      12476., 11836., 13292., 6662.,  7422.,  5926.,  6686.,  13340., 14924.,
      14092., 15740., 14844., 16556., 15596., 17372., 16348., 18188., 17100.,
      19004., 9518.,  10502., 8334.,  9318.,  18604., 20636., 19356., 21452.,
      20108., 22268., 20860., 23084., 21612., 23900., 22364., 24716., 12374.,
      13582., 10742., 11950., 23868., 26348., 24620., 27164., 25372., 27980.,
      26124., 28796., 26876., 29612., 27628., 30428., 15230., 16662., 13150.,
      14582., 29132., 32060., 29884., 32876., 30636., 33692., 31388., 34508.,
      32140., 35324., 32892., 36140., 18086., 19742., 8645.,  9433.,  18850.,
      20458., 19290., 20930., 19730., 21402., 20170., 21874., 20610., 22346.,
      21050., 22818., 11417., 12317., 101.,   249.,   482.,   810.,   1050.,
      1410.,  1618.,  2010.,  2186.,  2610.,  2754.,  3210.,  3322.,  3810.,
      1913.,  2173.,  2102.,  2542.,  5052.,  5996.,  6316.,  7324.,  7580.,
      8652.,  8844.,  9980.,  10108., 11308., 11372., 12636., 6334.,  6998.,
      6302.,  6966.,  13900., 15292., 15164., 16620., 16428., 17948., 17692.,
      19276., 18956., 20604., 20220., 21932., 10982., 11870., 10502., 11390.,
      22748., 24588., 24012., 25916., 25276., 27244., 26540., 28572., 27804.,
      29900., 29068., 31228., 15630., 16742., 14702., 15814., 31596., 33884.,
      32860., 35212., 34124., 36540., 35388., 37868., 36652., 39196., 37916.,
      40524., 20278., 21614., 18902., 20238., 40444., 43180., 41708., 44508.,
      42972., 45836., 44236., 47164., 45500., 48492., 46764., 49820., 24926.,
      26486., 23102., 24662., 49292., 52476., 50556., 53804., 51820., 55132.,
      53084., 56460., 54348., 57788., 55612., 59116., 29574., 31358., 14069.,
      14921., 29826., 31562., 30522., 32290., 31218., 33018., 31914., 33746.,
      32610., 34474., 33306., 35202., 17609., 18573.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      404832.,   459360.,   570360.,   641080.,   763664.,   851600.,
      985768.,   1091944.,  1084776.,  1194536.,  1030544.,  1127696.,
      944440.,   1027960.,  825440.,   894304.,   862360.,   949720.,
      1182350.,  1294750.,  1546660.,  1685380.,  1956570.,  2122890.,
      2111690.,  2282490.,  1964740.,  2114980.,  1768350.,  1896750.,
      1521240.,  1626520.,  1577104.,  1704976.,  2125460.,  2289140.,
      2738520.,  2939544.,  3417820.,  3657724.,  3641596.,  3886876.,
      3341592.,  3556440.,  2970740.,  3153620.,  2527504.,  2676880.,
      2606408.,  2782472.,  3471370.,  3695930.,  4425260.,  4700108.,
      5469870.,  5796798.,  5774846.,  6108046.,  5247116.,  5538092.,
      4623290.,  4870250.,  3901576.,  4102728.,  3914568.,  4119304.,
      5142410.,  5402810.,  6473516.,  6791372.,  7909678.,  8286782.,
      8214654.,  8598030.,  7381388.,  7715372.,  6437690.,  6720490.,
      5381768.,  5611592.,  5101840.,  5300368.,  6619700.,  6871700.,
      8237592.,  8544600.,  9957052.,  10320604., 10256092., 10625020.,
      9117144.,  9437976.,  7872020.,  8143220.,  6519184.,  6739216.,
      5802520.,  5987160.,  7479150.,  7713150.,  9248740.,  9533380.,
      11112570., 11449130., 11393130., 11734170., 10066180., 10362340.,
      8641150.,  8891150.,  7116760.,  7319320.,  5959264.,  6122336.,
      7649080.,  7855480.,  9420944.,  9671696.,  11275880., 11572008.,
      11525416., 11825128., 10142480., 10402448., 8673400.,  8892600.,
      7117152.,  7294560.,  404832.,   459360.,   570360.,   641080.,
      763664.,   851600.,   985768.,   1091944.,  1084776.,  1194536.,
      1030544.,  1127696.,  944440.,   1027960.,  825440.,   894304.,
      862360.,   949720.,   1182350.,  1294750.,  1546660.,  1685380.,
      1956570.,  2122890.,  2111690.,  2282490.,  1964740.,  2114980.,
      1768350.,  1896750.,  1521240.,  1626520.,  1577104.,  1704976.,
      2125460.,  2289140.,  2738520.,  2939544.,  3417820.,  3657724.,
      3641596.,  3886876.,  3341592.,  3556440.,  2970740.,  3153620.,
      2527504.,  2676880.,  2606408.,  2782472.,  3471370.,  3695930.,
      4425260.,  4700108.,  5469870.,  5796798.,  5774846.,  6108046.,
      5247116.,  5538092.,  4623290.,  4870250.,  3901576.,  4102728.,
      3914568.,  4119304.,  5142410.,  5402810.,  6473516.,  6791372.,
      7909678.,  8286782.,  8214654.,  8598030.,  7381388.,  7715372.,
      6437690.,  6720490.,  5381768.,  5611592.,  5101840.,  5300368.,
      6619700.,  6871700.,  8237592.,  8544600.,  9957052.,  10320604.,
      10256092., 10625020., 9117144.,  9437976.,  7872020.,  8143220.,
      6519184.,  6739216.,  5802520.,  5987160.,  7479150.,  7713150.,
      9248740.,  9533380.,  11112570., 11449130., 11393130., 11734170.,
      10066180., 10362340., 8641150.,  8891150.,  7116760.,  7319320.,
      5959264.,  6122336.,  7649080.,  7855480.,  9420944.,  9671696.,
      11275880., 11572008., 11525416., 11825128., 10142480., 10402448.,
      8673400.,  8892600.,  7117152.,  7294560.,  404832.,   459360.,
      570360.,   641080.,   763664.,   851600.,   985768.,   1091944.,
      1084776.,  1194536.,  1030544.,  1127696.,  944440.,   1027960.,
      825440.,   894304.,   862360.,   949720.,   1182350.,  1294750.,
      1546660.,  1685380.,  1956570.,  2122890.,  2111690.,  2282490.,
      1964740.,  2114980.,  1768350.,  1896750.,  1521240.,  1626520.,
      1577104.,  1704976.,  2125460.,  2289140.,  2738520.,  2939544.,
      3417820.,  3657724.,  3641596.,  3886876.,  3341592.,  3556440.,
      2970740.,  3153620.,  2527504.,  2676880.,  2606408.,  2782472.,
      3471370.,  3695930.,  4425260.,  4700108.,  5469870.,  5796798.,
      5774846.,  6108046.,  5247116.,  5538092.,  4623290.,  4870250.,
      3901576.,  4102728.,  3914568.,  4119304.,  5142410.,  5402810.,
      6473516.,  6791372.,  7909678.,  8286782.,  8214654.,  8598030.,
      7381388.,  7715372.,  6437690.,  6720490.,  5381768.,  5611592.,
      5101840.,  5300368.,  6619700.,  6871700.,  8237592.,  8544600.,
      9957052.,  10320604., 10256092., 10625020., 9117144.,  9437976.,
      7872020.,  8143220.,  6519184.,  6739216.,  5802520.,  5987160.,
      7479150.,  7713150.,  9248740.,  9533380.,  11112570., 11449130.,
      11393130., 11734170., 10066180., 10362340., 8641150.,  8891150.,
      7116760.,  7319320.,  5959264.,  6122336.,  7649080.,  7855480.,
      9420944.,  9671696.,  11275880., 11572008., 11525416., 11825128.,
      10142480., 10402448., 8673400.,  8892600.,  7117152.,  7294560.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    636.,    1436.,   1052.,   2108.,
      1468.,   2780.,   1884.,   3452.,   2300.,   4124.,   2126.,   3166.,
      780.,    2220.,   4184.,   7576.,   6040.,   9944.,   7896.,   12312.,
      9752.,   14680.,  11608.,  17048.,  13464.,  19416.,  9836.,   13068.,
      5484.,   8716.,   17176.,  24152.,  19032.,  26520.,  20888.,  28888.,
      22744.,  31256.,  24600.,  33624.,  26456.,  35992.,  18124.,  23148.,
      10188.,  15212.,  30168.,  40728.,  32024.,  43096.,  33880.,  45464.,
      35736.,  47832.,  37592.,  50200.,  39448.,  52568.,  26412.,  33228.,
      14892.,  21708.,  43160.,  57304.,  45016.,  59672.,  46872.,  62040.,
      48728.,  64408.,  50584.,  66776.,  52440.,  69144.,  34700.,  43308.,
      19596.,  28204.,  56152.,  73880.,  58008.,  76248.,  59864.,  78616.,
      61720.,  80984.,  63576.,  83352.,  65432.,  85720.,  42988.,  53388.,
      24300.,  34700.,  69144.,  90456.,  71000.,  92824.,  72856.,  95192.,
      74712.,  97560.,  76568.,  99928.,  78424.,  102296., 51276.,  63468.,
      25054.,  30830.,  61532.,  73340.,  62972.,  75036.,  64412.,  76732.,
      65852.,  78428.,  67292.,  80124.,  68732.,  81820.,  40974.,  47646.,
      350.,    1006.,   1884.,   3452.,   4348.,   6172.,   6812.,   8892.,
      9276.,   11612.,  11740.,  14332.,  14204.,  17052.,  8590.,   10142.,
      8588.,   11052.,  21848.,  27288.,  27800.,  33752.,  33752.,  40216.,
      39704.,  46680.,  45656.,  53144.,  51608.,  59608.,  29932.,  34188.,
      27628.,  31884.,  63512.,  72536.,  69464.,  79000.,  75416.,  85464.,
      81368.,  91928.,  87320.,  98392.,  93272.,  104856., 52556.,  58604.,
      46668.,  52716.,  105176., 117784., 111128., 124248., 117080., 130712.,
      123032., 137176., 128984., 143640., 134936., 150104., 75180.,  83020.,
      65708.,  73548.,  146840., 163032., 152792., 169496., 158744., 175960.,
      164696., 182424., 170648., 188888., 176600., 195352., 97804.,  107436.,
      84748.,  94380.,  188504., 208280., 194456., 214744., 200408., 221208.,
      206360., 227672., 212312., 234136., 218264., 240600., 120428., 131852.,
      103788., 115212., 230168., 253528., 236120., 259992., 242072., 266456.,
      248024., 272920., 253976., 279384., 259928., 285848., 143052., 156268.,
      68382.,  74670.,  149212., 162044., 152700., 165788., 156188., 169532.,
      159676., 173276., 163164., 177020., 166652., 180764., 90446.,  97630.,
      670.,    1838.,   3548.,   6140.,   8060.,   10908.,  12572.,  15676.,
      17084.,  20444.,  21596.,  25212.,  26108.,  29980.,  15054.,  17118.,
      16396.,  19884.,  39512.,  47000.,  49560.,  57560.,  59608.,  68120.,
      69656.,  78680.,  79704.,  89240.,  89752.,  99800.,  50028.,  55308.,
      49772.,  55052.,  109848., 120920., 119896., 131480., 129944., 142040.,
      139992., 152600., 150040., 163160., 160088., 173720., 86988.,  94060.,
      83148.,  90220.,  180184., 194840., 190232., 205400., 200280., 215960.,
      210328., 226520., 220376., 237080., 230424., 247640., 123948., 132812.,
      116524., 125388., 250520., 268760., 260568., 279320., 270616., 289880.,
      280664., 300440., 290712., 311000., 300760., 321560., 160908., 171564.,
      149900., 160556., 320856., 342680., 330904., 353240., 340952., 363800.,
      351000., 374360., 361048., 384920., 371096., 395480., 197868., 210316.,
      183276., 195724., 391192., 416600., 401240., 427160., 411288., 437720.,
      421336., 448280., 431384., 458840., 441432., 469400., 234828., 249068.,
      111710., 118510., 236892., 250748., 242428., 256540., 247964., 262332.,
      253500., 268124., 259036., 273916., 264572., 279708., 139918., 147614.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      24880.,   26560.,   28272.,   30016.,   35100.,   37280.,   39500.,
      41760.,   47048.,   49760.,   52520.,   55328.,   60788.,   64064.,
      67396.,   70784.,   66948.,   70336.,   73780.,   77280.,   63656.,
      66656.,   69704.,   72800.,   58380.,   60960.,   63580.,   66240.,
      51056.,   53184.,   55344.,   57536.,   53220.,   55920.,   58660.,
      61440.,   73025.,   76500.,   80025.,   83600.,   95590.,   99880.,
      104230.,  108640.,  120995.,  126140.,  131355.,  136640.,  130655.,
      135940.,  141295.,  146720.,  121630.,  126280.,  130990.,  135760.,
      109525.,  113500.,  117525.,  121600.,  94260.,   97520.,   100820.,
      104160.,  97576.,   101536.,  105544.,  109600.,  131570.,  136640.,
      141770.,  146960.,  169596.,  175824.,  182124.,  188496.,  211750.,
      219184.,  226702.,  234304.,  225694.,  233296.,  240982.,  248752.,
      207180.,  213840.,  220572.,  227376.,  184250.,  189920.,  195650.,
      201440.,  156808.,  161440.,  166120.,  170848.,  161532.,  166992.,
      172508.,  178080.,  215215.,  222180.,  229215.,  236320.,  274442.,
      282968.,  291578.,  300272.,  339325.,  349468.,  359709.,  370048.,
      358337.,  368676.,  379113.,  389648.,  325682.,  334712.,  343826.,
      353024.,  287035.,  294700.,  302435.,  310240.,  242284.,  248528.,
      254828.,  261184.,  243068.,  249424.,  255836.,  262304.,  319375.,
      327460.,  335615.,  343840.,  402122.,  411992.,  421946.,  431984.,
      491421.,  503132.,  514941.,  526848.,  510433.,  522340.,  534345.,
      546448.,  458738.,  469112.,  479570.,  490112.,  400155.,  408940.,
      417795.,  426720.,  334572.,  341712.,  348908.,  356160.,  317320.,
      323488.,  329704.,  335968.,  411770.,  419600.,  427490.,  435440.,
      512460.,  522000.,  531612.,  541296.,  619486.,  630784.,  642166.,
      653632.,  638134.,  649600.,  661150.,  672784.,  567324.,  577296.,
      587340.,  597456.,  489890.,  498320.,  506810.,  515360.,  405736.,
      412576.,  419464.,  426400.,  361220.,  366960.,  372740.,  378560.,
      465625.,  472900.,  480225.,  487600.,  575830.,  584680.,  593590.,
      602560.,  691915.,  702380.,  712915.,  723520.,  709415.,  720020.,
      730695.,  741440.,  626830.,  636040.,  645310.,  654640.,  538125.,
      545900.,  553725.,  561600.,  443220.,  449520.,  455860.,  462240.,
      371184.,  376256.,  381360.,  386496.,  476460.,  482880.,  489340.,
      495840.,  586856.,  594656.,  602504.,  610400.,  702436.,  711648.,
      720916.,  730240.,  718004.,  727328.,  736708.,  746144.,  631880.,
      639968.,  648104.,  656288.,  540380.,  547200.,  554060.,  560960.,
      443440.,  448960.,  454512.,  460096.,  225584.,  231360.,  237168.,
      243008.,  296220.,  303520.,  310860.,  318240.,  372680.,  381536.,
      390440.,  399392.,  455028.,  465472.,  475972.,  486528.,  461188.,
      471744.,  482356.,  493024.,  413864.,  423008.,  432200.,  441440.,
      360460.,  368160.,  375900.,  383680.,  300912.,  307136.,  313392.,
      319680.,  375780.,  383600.,  391460.,  399360.,  489025.,  498900.,
      508825.,  518800.,  610150.,  622120.,  634150.,  646240.,  739235.,
      753340.,  767515.,  781760.,  748895.,  763140.,  777455.,  791840.,
      666910.,  679240.,  691630.,  704080.,  576725.,  587100.,  597525.,
      608000.,  478260.,  486640.,  495060.,  503520.,  570664.,  580768.,
      590920.,  601120.,  738290.,  751040.,  763850.,  776720.,  916092.,
      931536.,  947052.,  962640.,  1104166., 1122352., 1140622., 1158976.,
      1118110., 1136464., 1154902., 1173424., 990540.,  1006416., 1022364.,
      1038384., 852410.,  865760.,  879170.,  892640.,  703624.,  714400.,
      725224.,  736096.,  813820.,  826448.,  839132.,  851872.,  1048495.,
      1064420., 1080415., 1096480., 1295882., 1315160., 1334522., 1353968.,
      1556093., 1578780., 1601565., 1624448., 1575105., 1597988., 1620969.,
      1644048., 1390130., 1409912., 1429778., 1449728., 1191995., 1208620.,
      1225315., 1242080., 980588.,  994000.,  1007468., 1020992., 895356.,
      908880.,  922460.,  936096.,  1152655., 1169700., 1186815., 1204000.,
      1423562., 1444184., 1464890., 1485680., 1708189., 1732444., 1756797.,
      1781248., 1727201., 1751652., 1776201., 1800848., 1523186., 1544312.,
      1565522., 1586816., 1305115., 1322860., 1340675., 1358560., 1072876.,
      1087184., 1101548., 1115968., 962440.,  974752.,  987112.,  999520.,
      1233530., 1249040., 1264610., 1280240., 1517004., 1535760., 1554588.,
      1573488., 1812958., 1835008., 1857142., 1879360., 1831606., 1853824.,
      1876126., 1898512., 1608732., 1627920., 1647180., 1666512., 1373090.,
      1389200., 1405370., 1421600., 1124584., 1137568., 1150600., 1163680.,
      970500.,  981360.,  992260.,  1003200., 1240025., 1253700., 1267425.,
      1281200., 1520470., 1537000., 1553590., 1570240., 1811915., 1831340.,
      1850835., 1870400., 1829415., 1848980., 1868615., 1888320., 1602190.,
      1619080., 1636030., 1653040., 1363725., 1377900., 1392125., 1406400.,
      1113940., 1125360., 1136820., 1148320., 915952.,  925120.,  934320.,
      943552.,  1167660., 1179200., 1190780., 1202400., 1428584., 1442528.,
      1456520., 1470560., 1698788., 1715168., 1731604., 1748096., 1714356.,
      1730848., 1747396., 1764000., 1498184., 1512416., 1526696., 1541024.,
      1272540., 1284480., 1296460., 1308480., 1037360., 1046976., 1056624.,
      1066304., 426288.,  436160.,  446064.,  456000.,  557340.,  569760.,
      582220.,  594720.,  698312.,  713312.,  728360.,  743456.,  849268.,
      866880.,  884548.,  902272.,  855428.,  873152.,  890932.,  908768.,
      764072.,  779360.,  794696.,  810080.,  662540.,  675360.,  688220.,
      701120.,  550768.,  561088.,  571440.,  581824.,  698340.,  711280.,
      724260.,  737280.,  905025.,  921300.,  937625.,  954000.,  1124710.,
      1144360., 1164070., 1183840., 1357475., 1380540., 1403675., 1426880.,
      1367135., 1390340., 1413615., 1436960., 1212190., 1232200., 1252270.,
      1272400., 1043925., 1060700., 1077525., 1094400., 862260.,  875760.,
      889300.,  902880.,  1043752., 1060000., 1076296., 1092640., 1345010.,
      1365440., 1385930., 1406480., 1662588., 1687248., 1711980., 1736784.,
      1996582., 2025520., 2054542., 2083648., 2010526., 2039632., 2068822.,
      2098096., 1773900., 1798992., 1824156., 1849392., 1520570., 1541600.,
      1562690., 1583840., 1250440., 1267360., 1284328., 1301344., 1466108.,
      1485904., 1505756., 1525664., 1881775., 1906660., 1931615., 1956640.,
      2317322., 2347352., 2377466., 2407664., 2772861., 2808092., 2843421.,
      2878848., 2791873., 2827300., 2862825., 2898448., 2454578., 2485112.,
      2515730., 2546432., 2096955., 2122540., 2148195., 2173920., 1718892.,
      1739472., 1760108., 1780800., 1547644., 1568336., 1589084., 1609888.,
      1985935., 2011940., 2038015., 2064160., 2445002., 2476376., 2507834.,
      2539376., 2924957., 2961756., 2998653., 3035648., 2943969., 2980964.,
      3018057., 3055248., 2587634., 2619512., 2651474., 2683520., 2210075.,
      2236780., 2263555., 2290400., 1811180., 1832656., 1854188., 1875776.,
      1607560., 1626016., 1644520., 1663072., 2055290., 2078480., 2101730.,
      2125040., 2521548., 2549520., 2577564., 2605680., 3006430., 3039232.,
      3072118., 3105088., 3025078., 3058048., 3091102., 3124240., 2650140.,
      2678544., 2707020., 2735568., 2256290., 2280080., 2303930., 2327840.,
      1843432., 1862560., 1881736., 1900960., 1579780., 1595760., 1611780.,
      1627840., 2014425., 2034500., 2054625., 2074800., 2465110., 2489320.,
      2513590., 2537920., 2931915., 2960300., 2988755., 3017280., 2949415.,
      2977940., 3006535., 3035200., 2577550., 2602120., 2626750., 2651440.,
      2189325., 2209900., 2230525., 2251200., 1784660., 1801200., 1817780.,
      1834400., 1460720., 1473984., 1487280., 1500608., 1858860., 1875520.,
      1892220., 1908960., 2270312., 2290400., 2310536., 2330720., 2695140.,
      2718688., 2742292., 2765952., 2710708., 2734368., 2758084., 2781856.,
      2364488., 2384864., 2405288., 2425760., 2004700., 2021760., 2038860.,
      2056000., 1631280., 1644992., 1658736., 1672512.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    34.,
      56.,    82.,    112.,   58.,    88.,    122.,   160.,   82.,    120.,
      162.,   208.,   106.,   152.,   202.,   256.,   130.,   184.,   242.,
      304.,   125.,   156.,   189.,   224.,   38.,    80.,    126.,   176.,
      236.,   336.,   444.,   560.,   348.,   464.,   588.,   720.,   460.,
      592.,   732.,   880.,   572.,   720.,   876.,   1040.,  684.,   848.,
      1020.,  1200.,  796.,   976.,   1164.,  1360.,  590.,   688.,   790.,
      896.,   318.,   416.,   518.,   624.,   1020.,  1232.,  1452.,  1680.,
      1132.,  1360.,  1596.,  1840.,  1244.,  1488.,  1740.,  2000.,  1356.,
      1616.,  1884.,  2160.,  1468.,  1744.,  2028.,  2320.,  1580.,  1872.,
      2172.,  2480.,  1094.,  1248.,  1406.,  1568.,  598.,   752.,   910.,
      1072.,  1804.,  2128.,  2460.,  2800.,  1916.,  2256.,  2604.,  2960.,
      2028.,  2384.,  2748.,  3120.,  2140.,  2512.,  2892.,  3280.,  2252.,
      2640.,  3036.,  3440.,  2364.,  2768.,  3180.,  3600.,  1598.,  1808.,
      2022.,  2240.,  878.,   1088.,  1302.,  1520.,  2588.,  3024.,  3468.,
      3920.,  2700.,  3152.,  3612.,  4080.,  2812.,  3280.,  3756.,  4240.,
      2924.,  3408.,  3900.,  4400.,  3036.,  3536.,  4044.,  4560.,  3148.,
      3664.,  4188.,  4720.,  2102.,  2368.,  2638.,  2912.,  1158.,  1424.,
      1694.,  1968.,  3372.,  3920.,  4476.,  5040.,  3484.,  4048.,  4620.,
      5200.,  3596.,  4176.,  4764.,  5360.,  3708.,  4304.,  4908.,  5520.,
      3820.,  4432.,  5052.,  5680.,  3932.,  4560.,  5196.,  5840.,  2606.,
      2928.,  3254.,  3584.,  1438.,  1760.,  2086.,  2416.,  4156.,  4816.,
      5484.,  6160.,  4268.,  4944.,  5628.,  6320.,  4380.,  5072.,  5772.,
      6480.,  4492.,  5200.,  5916.,  6640.,  4604.,  5328.,  6060.,  6800.,
      4716.,  5456.,  6204.,  6960.,  3110.,  3488.,  3870.,  4256.,  1521.,
      1700.,  1881.,  2064.,  3754.,  4120.,  4490.,  4864.,  3842.,  4216.,
      4594.,  4976.,  3930.,  4312.,  4698.,  5088.,  4018.,  4408.,  4802.,
      5200.,  4106.,  4504.,  4906.,  5312.,  4194.,  4600.,  5010.,  5424.,
      2509.,  2716.,  2925.,  3136.,  17.,    36.,    57.,    80.,    106.,
      152.,   202.,   256.,   258.,   312.,   370.,   432.,   410.,   472.,
      538.,   608.,   562.,   632.,   706.,   784.,   714.,   792.,   874.,
      960.,   866.,   952.,   1042.,  1136.,  525.,   572.,   621.,   672.,
      518.,   592.,   670.,   752.,   1324.,  1488.,  1660.,  1840.,  1692.,
      1872.,  2060.,  2256.,  2060.,  2256.,  2460.,  2672.,  2428.,  2640.,
      2860.,  3088.,  2796.,  3024.,  3260.,  3504.,  3164.,  3408.,  3660.,
      3920.,  1838.,  1968.,  2102.,  2240.,  1694.,  1824.,  1958.,  2096.,
      3900.,  4176.,  4460.,  4752.,  4268.,  4560.,  4860.,  5168.,  4636.,
      4944.,  5260.,  5584.,  5004.,  5328.,  5660.,  6000.,  5372.,  5712.,
      6060.,  6416.,  5740.,  6096.,  6460.,  6832.,  3238.,  3424.,  3614.,
      3808.,  2870.,  3056.,  3246.,  3440.,  6476.,  6864.,  7260.,  7664.,
      6844.,  7248.,  7660.,  8080.,  7212.,  7632.,  8060.,  8496.,  7580.,
      8016.,  8460.,  8912.,  7948.,  8400.,  8860.,  9328.,  8316.,  8784.,
      9260.,  9744.,  4638.,  4880.,  5126.,  5376.,  4046.,  4288.,  4534.,
      4784.,  9052.,  9552.,  10060., 10576., 9420.,  9936.,  10460., 10992.,
      9788.,  10320., 10860., 11408., 10156., 10704., 11260., 11824., 10524.,
      11088., 11660., 12240., 10892., 11472., 12060., 12656., 6038.,  6336.,
      6638.,  6944.,  5222.,  5520.,  5822.,  6128.,  11628., 12240., 12860.,
      13488., 11996., 12624., 13260., 13904., 12364., 13008., 13660., 14320.,
      12732., 13392., 14060., 14736., 13100., 13776., 14460., 15152., 13468.,
      14160., 14860., 15568., 7438.,  7792.,  8150.,  8512.,  6398.,  6752.,
      7110.,  7472.,  14204., 14928., 15660., 16400., 14572., 15312., 16060.,
      16816., 14940., 15696., 16460., 17232., 15308., 16080., 16860., 17648.,
      15676., 16464., 17260., 18064., 16044., 16848., 17660., 18480., 8838.,
      9248.,  9662.,  10080., 4225.,  4420.,  4617.,  4816.,  9226.,  9624.,
      10026., 10432., 9442.,  9848.,  10258., 10672., 9658.,  10072., 10490.,
      10912., 9874.,  10296., 10722., 11152., 10090., 10520., 10954., 11392.,
      10306., 10744., 11186., 11632., 5597.,  5820.,  6045.,  6272.,  33.,
      68.,    105.,   144.,   202.,   280.,   362.,   448.,   482.,   568.,
      658.,   752.,   762.,   856.,   954.,   1056.,  1042.,  1144.,  1250.,
      1360.,  1322.,  1432.,  1546.,  1664.,  1602.,  1720.,  1842.,  1968.,
      925.,   988.,   1053.,  1120.,  998.,   1104.,  1214.,  1328.,  2412.,
      2640.,  2876.,  3120.,  3036.,  3280.,  3532.,  3792.,  3660.,  3920.,
      4188.,  4464.,  4284.,  4560.,  4844.,  5136.,  4908.,  5200.,  5500.,
      5808.,  5532.,  5840.,  6156.,  6480.,  3086.,  3248.,  3414.,  3584.,
      3070.,  3232.,  3398.,  3568.,  6780.,  7120.,  7468.,  7824.,  7404.,
      7760.,  8124.,  8496.,  8028.,  8400.,  8780.,  9168.,  8652.,  9040.,
      9436.,  9840.,  9276.,  9680.,  10092., 10512., 9900.,  10320., 10748.,
      11184., 5382.,  5600.,  5822.,  6048.,  5142.,  5360.,  5582.,  5808.,
      11148., 11600., 12060., 12528., 11772., 12240., 12716., 13200., 12396.,
      12880., 13372., 13872., 13020., 13520., 14028., 14544., 13644., 14160.,
      14684., 15216., 14268., 14800., 15340., 15888., 7678.,  7952.,  8230.,
      8512.,  7214.,  7488.,  7766.,  8048.,  15516., 16080., 16652., 17232.,
      16140., 16720., 17308., 17904., 16764., 17360., 17964., 18576., 17388.,
      18000., 18620., 19248., 18012., 18640., 19276., 19920., 18636., 19280.,
      19932., 20592., 9974.,  10304., 10638., 10976., 9286.,  9616.,  9950.,
      10288., 19884., 20560., 21244., 21936., 20508., 21200., 21900., 22608.,
      21132., 21840., 22556., 23280., 21756., 22480., 23212., 23952., 22380.,
      23120., 23868., 24624., 23004., 23760., 24524., 25296., 12270., 12656.,
      13046., 13440., 11358., 11744., 12134., 12528., 24252., 25040., 25836.,
      26640., 24876., 25680., 26492., 27312., 25500., 26320., 27148., 27984.,
      26124., 26960., 27804., 28656., 26748., 27600., 28460., 29328., 27372.,
      28240., 29116., 30000., 14566., 15008., 15454., 15904., 6929.,  7140.,
      7353.,  7568.,  14698., 15128., 15562., 16000., 15042., 15480., 15922.,
      16368., 15386., 15832., 16282., 16736., 15730., 16184., 16642., 17104.,
      16074., 16536., 17002., 17472., 16418., 16888., 17362., 17840., 8685.,
      8924.,  9165.,  9408.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      195728.,   209104.,   222736.,   236624.,   276500.,   293860.,
      311540.,   329540.,   371032.,   392632.,   414616.,   436984.,
      479836.,   505932.,   532476.,   559468.,   528892.,   555884.,
      583324.,   611212.,   503320.,   527224.,   551512.,   576184.,
      461940.,   482500.,   503380.,   524580.,   404240.,   421200.,
      438416.,   455888.,   420420.,   441940.,   463780.,   485940.,
      577325.,   605025.,   633125.,   661625.,   756230.,   790430.,
      825110.,   860270.,   957775.,   998795.,   1040375.,  1082515.,
      1034775.,  1076915.,  1119615.,  1162875.,  963830.,   1000910.,
      1038470.,  1076510.,  868325.,   900025.,   932125.,   964625.,
      747620.,   773620.,   799940.,   826580.,   772760.,   804344.,
      836312.,   868664.,   1042510.,  1082950.,  1123870.,  1165270.,
      1344420.,  1394100.,  1444356.,  1495188.,  1679258.,  1738562.,
      1798538.,  1859186.,  1790474.,  1851122.,  1912442.,  1974434.,
      1644228.,  1697364.,  1751076.,  1805364.,  1462750.,  1507990.,
      1553710.,  1599910.,  1245272.,  1282232.,  1319576.,  1357304.,
      1281420.,  1324988.,  1369004.,  1413468.,  1707895.,  1763475.,
      1819615.,  1876315.,  2178610.,  2246650.,  2315362.,  2384746.,
      2694461.,  2775409.,  2857141.,  2939657.,  2846165.,  2928681.,
      3011981.,  3096065.,  2587522.,  2659594.,  2732338.,  2805754.,
      2281055.,  2342235.,  2403975.,  2466275.,  1925868.,  1975708.,
      2025996.,  2076732.,  1931916.,  1982652.,  2033836.,  2085468.,
      2538935.,  2603475.,  2668575.,  2734235.,  3197362.,  3276154.,
      3355618.,  3435754.,  3908093.,  4001585.,  4095861.,  4190921.,
      4059797.,  4154857.,  4250701.,  4347329.,  3649282.,  3732106.,
      3815602.,  3899770.,  3183775.,  3253915.,  3324615.,  3395875.,
      2662380.,  2719388.,  2776844.,  2834748.,  2526296.,  2575544.,
      2625176.,  2675192.,  3278590.,  3341110.,  3404110.,  3467590.,
      4080708.,  4156884.,  4233636.,  4310964.,  4933418.,  5023634.,
      5114522.,  5206082.,  5082266.,  5173826.,  5266058.,  5358962.,
      4518756.,  4598388.,  4678596.,  4759380.,  3902350.,  3969670.,
      4037470.,  4105750.,  3232280.,  3286904.,  3341912.,  3397304.,
      2878340.,  2924180.,  2970340.,  3016820.,  3710525.,  3768625.,
      3827125.,  3886025.,  4589030.,  4659710.,  4730870.,  4802510.,
      5514495.,  5598075.,  5682215.,  5766915.,  5654215.,  5738915.,
      5824175.,  5909995.,  4996310.,  5069870.,  5143910.,  5218430.,
      4289525.,  4351625.,  4414125.,  4477025.,  3533220.,  3583540.,
      3634180.,  3685140.,  2959376.,  2999888.,  3040656.,  3081680.,
      3798900.,  3850180.,  3901780.,  3953700.,  4679320.,  4741624.,
      4804312.,  4867384.,  5601148.,  5674732.,  5748764.,  5823244.,
      5725468.,  5799948.,  5874876.,  5950252.,  5038936.,  5103544.,
      5168536.,  5233912.,  4309460.,  4363940.,  4418740.,  4473860.,
      3536528.,  3580624.,  3624976.,  3669584.,  1793168.,  1839312.,
      1885712.,  1932368.,  2355220.,  2413540.,  2472180.,  2531140.,
      2963800.,  3034552.,  3105688.,  3177208.,  3619420.,  3702860.,
      3786748.,  3871084.,  3668476.,  3752812.,  3837596.,  3922828.,
      3292696.,  3365752.,  3439192.,  3513016.,  2868340.,  2929860.,
      2991700.,  3053860.,  2394896.,  2444624.,  2494608.,  2544848.,
      2990660.,  3053140.,  3115940.,  3179060.,  3892525.,  3971425.,
      4050725.,  4130425.,  4857350.,  4952990.,  5049110.,  5145710.,
      5885775.,  5998475.,  6111735.,  6225555.,  5962775.,  6076595.,
      6190975.,  6305915.,  5310710.,  5409230.,  5508230.,  5607710.,
      4593125.,  4676025.,  4759325.,  4843025.,  3809380.,  3876340.,
      3943620.,  4011220.,  4545176.,  4625912.,  4707032.,  4788536.,
      5880910.,  5982790.,  6085150.,  6187990.,  7297956.,  7421364.,
      7545348.,  7669908.,  8797082.,  8942402.,  9088394.,  9235058.,
      8908298.,  9054962.,  9202298.,  9350306.,  7892676.,  8019540.,
      8146980.,  8274996.,  6792670.,  6899350.,  7006510.,  7114150.,
      5607512.,  5693624.,  5780120.,  5867000.,  6485388.,  6586300.,
      6687660.,  6789468.,  8356215.,  8483475.,  8611295.,  8739675.,
      10328626., 10482682., 10637410., 10792810., 12403517., 12584817.,
      12766901., 12949769., 12555221., 12738089., 12921741., 13106177.,
      11081602., 11239690., 11398450., 11557882., 9502815.,  9635675.,
      9769095.,  9903075.,  7817964.,  7925148.,  8032780.,  8140860.,
      7135884.,  7243964.,  7352492.,  7461468.,  9187255.,  9323475.,
      9460255.,  9597595.,  11347378., 11512186., 11677666., 11843818.,
      13617149., 13810993., 14005621., 14201033., 13768853., 13964265.,
      14160461., 14357441., 12143362., 12312202., 12481714., 12651898.,
      10405535., 10547355., 10689735., 10832675., 8554476.,  8668828.,
      8783628.,  8898876.,  7674968.,  7773368.,  7872152.,  7971320.,
      9837310.,  9961270.,  10085710., 10210630., 12098628., 12248532.,
      12399012., 12550068., 14459690., 14635922., 14812826., 14990402.,
      14608538., 14786114., 14964362., 15143282., 12831588., 12984948.,
      13138884., 13293396., 10952590., 11081350., 11210590., 11340310.,
      8970776.,  9074552.,  9178712.,  9283256.,  7742340.,  7829140.,
      7916260.,  8003700.,  9892925.,  10002225., 10111925., 10222025.,
      12130790., 12262910., 12395510., 12528590., 14456575., 14611835.,
      14767655., 14924035., 14596295., 14752675., 14909615., 15067115.,
      12783830., 12918830., 13054310., 13190270., 10881525., 10994825.,
      11108525., 11222625., 8888740.,  8980020.,  9071620.,  9163540.,
      7309328.,  7382608.,  7456144.,  7529936.,  9318260.,  9410500.,
      9503060.,  9595940.,  11400856., 11512312., 11624152., 11736376.,
      13557628., 13688556., 13819932., 13951756., 13681948., 13813772.,
      13946044., 14078764., 11957080., 12070840., 12184984., 12299512.,
      10156500., 10251940., 10347700., 10443780., 8279696.,  8356560.,
      8433680.,  8511056.,  195728.,   209104.,   222736.,   236624.,
      276500.,   293860.,   311540.,   329540.,   371032.,   392632.,
      414616.,   436984.,   479836.,   505932.,   532476.,   559468.,
      528892.,   555884.,   583324.,   611212.,   503320.,   527224.,
      551512.,   576184.,   461940.,   482500.,   503380.,   524580.,
      404240.,   421200.,   438416.,   455888.,   420420.,   441940.,
      463780.,   485940.,   577325.,   605025.,   633125.,   661625.,
      756230.,   790430.,   825110.,   860270.,   957775.,   998795.,
      1040375.,  1082515.,  1034775.,  1076915.,  1119615.,  1162875.,
      963830.,   1000910.,  1038470.,  1076510.,  868325.,   900025.,
      932125.,   964625.,   747620.,   773620.,   799940.,   826580.,
      772760.,   804344.,   836312.,   868664.,   1042510.,  1082950.,
      1123870.,  1165270.,  1344420.,  1394100.,  1444356.,  1495188.,
      1679258.,  1738562.,  1798538.,  1859186.,  1790474.,  1851122.,
      1912442.,  1974434.,  1644228.,  1697364.,  1751076.,  1805364.,
      1462750.,  1507990.,  1553710.,  1599910.,  1245272.,  1282232.,
      1319576.,  1357304.,  1281420.,  1324988.,  1369004.,  1413468.,
      1707895.,  1763475.,  1819615.,  1876315.,  2178610.,  2246650.,
      2315362.,  2384746.,  2694461.,  2775409.,  2857141.,  2939657.,
      2846165.,  2928681.,  3011981.,  3096065.,  2587522.,  2659594.,
      2732338.,  2805754.,  2281055.,  2342235.,  2403975.,  2466275.,
      1925868.,  1975708.,  2025996.,  2076732.,  1931916.,  1982652.,
      2033836.,  2085468.,  2538935.,  2603475.,  2668575.,  2734235.,
      3197362.,  3276154.,  3355618.,  3435754.,  3908093.,  4001585.,
      4095861.,  4190921.,  4059797.,  4154857.,  4250701.,  4347329.,
      3649282.,  3732106.,  3815602.,  3899770.,  3183775.,  3253915.,
      3324615.,  3395875.,  2662380.,  2719388.,  2776844.,  2834748.,
      2526296.,  2575544.,  2625176.,  2675192.,  3278590.,  3341110.,
      3404110.,  3467590.,  4080708.,  4156884.,  4233636.,  4310964.,
      4933418.,  5023634.,  5114522.,  5206082.,  5082266.,  5173826.,
      5266058.,  5358962.,  4518756.,  4598388.,  4678596.,  4759380.,
      3902350.,  3969670.,  4037470.,  4105750.,  3232280.,  3286904.,
      3341912.,  3397304.,  2878340.,  2924180.,  2970340.,  3016820.,
      3710525.,  3768625.,  3827125.,  3886025.,  4589030.,  4659710.,
      4730870.,  4802510.,  5514495.,  5598075.,  5682215.,  5766915.,
      5654215.,  5738915.,  5824175.,  5909995.,  4996310.,  5069870.,
      5143910.,  5218430.,  4289525.,  4351625.,  4414125.,  4477025.,
      3533220.,  3583540.,  3634180.,  3685140.,  2959376.,  2999888.,
      3040656.,  3081680.,  3798900.,  3850180.,  3901780.,  3953700.,
      4679320.,  4741624.,  4804312.,  4867384.,  5601148.,  5674732.,
      5748764.,  5823244.,  5725468.,  5799948.,  5874876.,  5950252.,
      5038936.,  5103544.,  5168536.,  5233912.,  4309460.,  4363940.,
      4418740.,  4473860.,  3536528.,  3580624.,  3624976.,  3669584.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      234.,    402.,    602.,    834.,    410.,    642.,    906.,    1202.,
      586.,    882.,    1210.,   1570.,   762.,    1122.,   1514.,   1938.,
      938.,    1362.,   1818.,   2306.,   941.,    1185.,   1445.,   1721.,
      226.,    554.,    914.,    1306.,   1700.,   2484.,   3332.,   4244.,
      2564.,   3476.,   4452.,   5492.,   3428.,   4468.,   5572.,   6740.,
      4292.,   5460.,   6692.,   7988.,   5156.,   6452.,   7812.,   9236.,
      6020.,   7444.,   8932.,   10484.,  4530.,   5306.,   6114.,   6954.,
      2354.,   3130.,   3938.,   4778.,   7748.,   9428.,   11172.,  12980.,
      8612.,   10420.,  12292.,  14228.,  9476.,   11412.,  13412.,  15476.,
      10340.,  12404.,  14532.,  16724.,  11204.,  13396.,  15652.,  17972.,
      12068.,  14388.,  16772.,  19220.,  8450.,   9674.,   10930.,  12218.,
      4482.,   5706.,   6962.,   8250.,   13796.,  16372.,  19012.,  21716.,
      14660.,  17364.,  20132.,  22964.,  15524.,  18356.,  21252.,  24212.,
      16388.,  19348.,  22372.,  25460.,  17252.,  20340.,  23492.,  26708.,
      18116.,  21332.,  24612.,  27956.,  12370.,  14042.,  15746.,  17482.,
      6610.,   8282.,   9986.,   11722.,  19844.,  23316.,  26852.,  30452.,
      20708.,  24308.,  27972.,  31700.,  21572.,  25300.,  29092.,  32948.,
      22436.,  26292.,  30212.,  34196.,  23300.,  27284.,  31332.,  35444.,
      24164.,  28276.,  32452.,  36692.,  16290.,  18410.,  20562.,  22746.,
      8738.,   10858.,  13010.,  15194.,  25892.,  30260.,  34692.,  39188.,
      26756.,  31252.,  35812.,  40436.,  27620.,  32244.,  36932.,  41684.,
      28484.,  33236.,  38052.,  42932.,  29348.,  34228.,  39172.,  44180.,
      30212.,  35220.,  40292.,  45428.,  20210.,  22778.,  25378.,  28010.,
      10866.,  13434.,  16034.,  18666.,  31940.,  37204.,  42532.,  47924.,
      32804.,  38196.,  43652.,  49172.,  33668.,  39188.,  44772.,  50420.,
      34532.,  40180.,  45892.,  51668.,  35396.,  41172.,  47012.,  52916.,
      36260.,  42164.,  48132.,  54164.,  24130.,  27146.,  30194.,  33274.,
      11813.,  13241.,  14685.,  16145.,  29306.,  32226.,  35178.,  38162.,
      29994.,  32978.,  35994.,  39042.,  30682.,  33730.,  36810.,  39922.,
      31370.,  34482.,  37626.,  40802.,  32058.,  35234.,  38442.,  41682.,
      32746.,  35986.,  39258.,  42562.,  19661.,  21313.,  22981.,  24665.,
      101.,    249.,    413.,    593.,    762.,    1122.,   1514.,   1938.,
      1962.,   2386.,   2842.,   3330.,   3162.,   3650.,   4170.,   4722.,
      4362.,   4914.,   5498.,   6114.,   5562.,   6178.,   6826.,   7506.,
      6762.,   7442.,   8154.,   8898.,   4109.,   4481.,   4869.,   5273.,
      4002.,   4586.,   5202.,   5850.,   10276.,  11572.,  12932.,  14356.,
      13188.,  14612.,  16100.,  17652.,  16100.,  17652.,  19268.,  20948.,
      19012.,  20692.,  22436.,  24244.,  21924.,  23732.,  25604.,  27540.,
      24836.,  26772.,  28772.,  30836.,  14450.,  15482.,  16546.,  17642.,
      13298.,  14330.,  15394.,  16490.,  30660.,  32852.,  35108.,  37428.,
      33572.,  35892.,  38276.,  40724.,  36484.,  38932.,  41444.,  44020.,
      39396.,  41972.,  44612.,  47316.,  42308.,  45012.,  47780.,  50612.,
      45220.,  48052.,  50948.,  53908.,  25538.,  27018.,  28530.,  30074.,
      22594.,  24074.,  25586.,  27130.,  51044.,  54132.,  57284.,  60500.,
      53956.,  57172.,  60452.,  63796.,  56868.,  60212.,  63620.,  67092.,
      59780.,  63252.,  66788.,  70388.,  62692.,  66292.,  69956.,  73684.,
      65604.,  69332.,  73124.,  76980.,  36626.,  38554.,  40514.,  42506.,
      31890.,  33818.,  35778.,  37770.,  71428.,  75412.,  79460.,  83572.,
      74340.,  78452.,  82628.,  86868.,  77252.,  81492.,  85796.,  90164.,
      80164.,  84532.,  88964.,  93460.,  83076.,  87572.,  92132.,  96756.,
      85988.,  90612.,  95300.,  100052., 47714.,  50090.,  52498.,  54938.,
      41186.,  43562.,  45970.,  48410.,  91812.,  96692.,  101636., 106644.,
      94724.,  99732.,  104804., 109940., 97636.,  102772., 107972., 113236.,
      100548., 105812., 111140., 116532., 103460., 108852., 114308., 119828.,
      106372., 111892., 117476., 123124., 58802.,  61626.,  64482.,  67370.,
      50482.,  53306.,  56162.,  59050.,  112196., 117972., 123812., 129716.,
      115108., 121012., 126980., 133012., 118020., 124052., 130148., 136308.,
      120932., 127092., 133316., 139604., 123844., 130132., 136484., 142900.,
      126756., 133172., 139652., 146196., 69890.,  73162.,  76466.,  79802.,
      33413.,  34969.,  36541.,  38129.,  73018.,  76194.,  79402.,  82642.,
      74730.,  77970.,  81242.,  84546.,  76442.,  79746.,  83082.,  86450.,
      78154.,  81522.,  84922.,  88354.,  79866.,  83298.,  86762.,  90258.,
      81578.,  85074.,  88602.,  92162.,  44333.,  46113.,  47909.,  49721.,
      197.,    473.,    765.,    1073.,   1466.,   2082.,   2730.,   3410.,
      3690.,   4370.,   5082.,   5826.,   5914.,   6658.,   7434.,   8242.,
      8138.,   8946.,   9786.,   10658.,  10362.,  11234.,  12138.,  13074.,
      12586.,  13522.,  14490.,  15490.,  7277.,   7777.,   8293.,   8825.,
      7778.,   8618.,   9490.,   10394.,  18852.,  20660.,  22532.,  24468.,
      23812.,  25748.,  27748.,  29812.,  28772.,  30836.,  32964.,  35156.,
      33732.,  35924.,  38180.,  40500.,  38692.,  41012.,  43396.,  45844.,
      43652.,  46100.,  48612.,  51188.,  24370.,  25658.,  26978.,  28330.,
      24242.,  25530.,  26850.,  28202.,  53572.,  56276.,  59044.,  61876.,
      58532.,  61364.,  64260.,  67220.,  63492.,  66452.,  69476.,  72564.,
      68452.,  71540.,  74692.,  77908.,  73412.,  76628.,  79908.,  83252.,
      78372.,  81716.,  85124.,  88596.,  42626.,  44362.,  46130.,  47930.,
      40706.,  42442.,  44210.,  46010.,  88292.,  91892.,  95556.,  99284.,
      93252.,  96980.,  100772., 104628., 98212.,  102068., 105988., 109972.,
      103172., 107156., 111204., 115316., 108132., 112244., 116420., 120660.,
      113092., 117332., 121636., 126004., 60882.,  63066.,  65282.,  67530.,
      57170.,  59354.,  61570.,  63818.,  123012., 127508., 132068., 136692.,
      127972., 132596., 137284., 142036., 132932., 137684., 142500., 147380.,
      137892., 142772., 147716., 152724., 142852., 147860., 152932., 158068.,
      147812., 152948., 158148., 163412., 79138.,  81770.,  84434.,  87130.,
      73634.,  76266.,  78930.,  81626.,  157732., 163124., 168580., 174100.,
      162692., 168212., 173796., 179444., 167652., 173300., 179012., 184788.,
      172612., 178388., 184228., 190132., 177572., 183476., 189444., 195476.,
      182532., 188564., 194660., 200820., 97394.,  100474., 103586., 106730.,
      90098.,  93178.,  96290.,  99434.,  192452., 198740., 205092., 211508.,
      197412., 203828., 210308., 216852., 202372., 208916., 215524., 222196.,
      207332., 214004., 220740., 227540., 212292., 219092., 225956., 232884.,
      217252., 224180., 231172., 238228., 115650., 119178., 122738., 126330.,
      55013.,  56697.,  58397.,  60113.,  116730., 120162., 123626., 127122.,
      119466., 122962., 126490., 130050., 122202., 125762., 129354., 132978.,
      124938., 128562., 132218., 135906., 127674., 131362., 135082., 138834.,
      130410., 134162., 137946., 141762., 69005.,  70913.,  72837.,  74777.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1552608.,  1659360.,  1768160.,  1879008.,  2194840.,  2333400.,
      2474520.,  2618200.,  2946896.,  3119312.,  3294800.,  3473360.,
      3812872.,  4021192.,  4233096.,  4448584.,  4204424.,  4419912.,
      4638984.,  4861640.,  4002896.,  4193744.,  4387664.,  4584656.,
      3675160.,  3839320.,  4006040.,  4175320.,  3217120.,  3352544.,
      3490016.,  3629536.,  3124952.,  3264024.,  3405656.,  3549848.,
      4232750.,  4404798.,  4580046.,  4758494.,  5450692.,  5658276.,
      5869700.,  6084964.,  6783898.,  7029578.,  7279738.,  7534378.,
      7300474.,  7555114.,  7814234.,  8077834.,  6644740.,  6867172.,
      7093444.,  7323556.,  5825614.,  6013278.,  6204142.,  6398206.,
      4837976.,  4988312.,  5141208.,  5296664.,  4581968.,  4735952.,
      4893008.,  5053136.,  5825956.,  6017924.,  6213732.,  6413380.,
      7195768.,  7428792.,  7666424.,  7908664.,  8697548.,  8974700.,
      9257228.,  9545132.,  9258252.,  9546156.,  9839436.,  10138092.,
      8274936.,  8527416.,  8784504.,  9046200.,  7108452.,  7322436.,
      7540260.,  7761924.,  5752656.,  5925072.,  6100560.,  6279120.,
      5321544.,  5505800.,  5693640.,  5885064.,  6560762.,  6791850.,
      7027418.,  7267466.,  7956844.,  8238348.,  8525228.,  8817484.,
      9516958.,  9852462.,  10194238., 10542286., 10171966., 10520014.,
      10874334., 11234926., 9056300.,  9361868.,  9672812.,  9989132.,
      7722330.,  7981834.,  8245818.,  8514282.,  6162888.,  6372744.,
      6586184.,  6803208.,  5451592.,  5660424.,  5872840.,  6088840.,
      6522618.,  6784426.,  7050714.,  7321482.,  7775084.,  8093452.,
      8417196.,  8746316.,  9216158.,  9594670.,  9979454.,  10370510.,
      9871166.,  10262222., 10659550., 11063150., 8759852.,  9102284.,
      9450092.,  9803276.,  7405658.,  7695882.,  7990586.,  8289770.,
      5801416.,  6035848.,  6273864.,  6515464.,  4440912.,  4637904.,
      4837968.,  5041104.,  6019300.,  6265028.,  6514596.,  6768004.,
      7766520.,  8064056.,  8366200.,  8672952.,  9688716.,  10041132.,
      10398924., 10762092., 10321100., 10684268., 11052812., 11426732.,
      9427320.,  9744312.,  10065912., 10392120., 8307364.,  8575108.,
      8846692.,  9122116.,  6955088.,  7170512.,  7389008.,  7610576.,
      5687768.,  5857560.,  6029912.,  6204824.,  7250926.,  7461374.,
      7675022.,  7891870.,  8954948.,  9208612.,  9466116.,  9727460.,
      10804954., 11104394., 11408314., 11716714., 11364538., 11672938.,
      11985818., 12303178., 10108036., 10376548., 10648900., 10925092.,
      8657422.,  8883486.,  9112750.,  9345214.,  7007576.,  7188632.,
      7372248.,  7558424.,  4768480.,  4895712.,  5024992.,  5156320.,
      5736472.,  5892440.,  6050968.,  6212056.,  6802000.,  6988752.,
      7178576.,  7371472.,  7969160.,  8188744.,  8411912.,  8638664.,
      8405768.,  8632520.,  8862856.,  9096776.,  7312208.,  7509200.,
      7709264.,  7912400.,  6071960.,  6237144.,  6404888.,  6575192.,
      4680928.,  4812256.,  4945632.,  5081056.,  1552608.,  1659360.,
      1768160.,  1879008.,  2194840.,  2333400.,  2474520.,  2618200.,
      2946896.,  3119312.,  3294800.,  3473360.,  3812872.,  4021192.,
      4233096.,  4448584.,  4204424.,  4419912.,  4638984.,  4861640.,
      4002896.,  4193744.,  4387664.,  4584656.,  3675160.,  3839320.,
      4006040.,  4175320.,  3217120.,  3352544.,  3490016.,  3629536.,
      3124952.,  3264024.,  3405656.,  3549848.,  4232750.,  4404798.,
      4580046.,  4758494.,  5450692.,  5658276.,  5869700.,  6084964.,
      6783898.,  7029578.,  7279738.,  7534378.,  7300474.,  7555114.,
      7814234.,  8077834.,  6644740.,  6867172.,  7093444.,  7323556.,
      5825614.,  6013278.,  6204142.,  6398206.,  4837976.,  4988312.,
      5141208.,  5296664.,  4581968.,  4735952.,  4893008.,  5053136.,
      5825956.,  6017924.,  6213732.,  6413380.,  7195768.,  7428792.,
      7666424.,  7908664.,  8697548.,  8974700.,  9257228.,  9545132.,
      9258252.,  9546156.,  9839436.,  10138092., 8274936.,  8527416.,
      8784504.,  9046200.,  7108452.,  7322436.,  7540260.,  7761924.,
      5752656.,  5925072.,  6100560.,  6279120.,  5321544.,  5505800.,
      5693640.,  5885064.,  6560762.,  6791850.,  7027418.,  7267466.,
      7956844.,  8238348.,  8525228.,  8817484.,  9516958.,  9852462.,
      10194238., 10542286., 10171966., 10520014., 10874334., 11234926.,
      9056300.,  9361868.,  9672812.,  9989132.,  7722330.,  7981834.,
      8245818.,  8514282.,  6162888.,  6372744.,  6586184.,  6803208.,
      5451592.,  5660424.,  5872840.,  6088840.,  6522618.,  6784426.,
      7050714.,  7321482.,  7775084.,  8093452.,  8417196.,  8746316.,
      9216158.,  9594670.,  9979454.,  10370510., 9871166.,  10262222.,
      10659550., 11063150., 8759852.,  9102284.,  9450092.,  9803276.,
      7405658.,  7695882.,  7990586.,  8289770.,  5801416.,  6035848.,
      6273864.,  6515464.,  4440912.,  4637904.,  4837968.,  5041104.,
      6019300.,  6265028.,  6514596.,  6768004.,  7766520.,  8064056.,
      8366200.,  8672952.,  9688716.,  10041132., 10398924., 10762092.,
      10321100., 10684268., 11052812., 11426732., 9427320.,  9744312.,
      10065912., 10392120., 8307364.,  8575108.,  8846692.,  9122116.,
      6955088.,  7170512.,  7389008.,  7610576.,  5687768.,  5857560.,
      6029912.,  6204824.,  7250926.,  7461374.,  7675022.,  7891870.,
      8954948.,  9208612.,  9466116.,  9727460.,  10804954., 11104394.,
      11408314., 11716714., 11364538., 11672938., 11985818., 12303178.,
      10108036., 10376548., 10648900., 10925092., 8657422.,  8883486.,
      9112750.,  9345214.,  7007576.,  7188632.,  7372248.,  7558424.,
      4768480.,  4895712.,  5024992.,  5156320.,  5736472.,  5892440.,
      6050968.,  6212056.,  6802000.,  6988752.,  7178576.,  7371472.,
      7969160.,  8188744.,  8411912.,  8638664.,  8405768.,  8632520.,
      8862856.,  9096776.,  7312208.,  7509200.,  7709264.,  7912400.,
      6071960.,  6237144.,  6404888.,  6575192.,  4680928.,  4812256.,
      4945632.,  5081056.,  1552608.,  1659360.,  1768160.,  1879008.,
      2194840.,  2333400.,  2474520.,  2618200.,  2946896.,  3119312.,
      3294800.,  3473360.,  3812872.,  4021192.,  4233096.,  4448584.,
      4204424.,  4419912.,  4638984.,  4861640.,  4002896.,  4193744.,
      4387664.,  4584656.,  3675160.,  3839320.,  4006040.,  4175320.,
      3217120.,  3352544.,  3490016.,  3629536.,  3124952.,  3264024.,
      3405656.,  3549848.,  4232750.,  4404798.,  4580046.,  4758494.,
      5450692.,  5658276.,  5869700.,  6084964.,  6783898.,  7029578.,
      7279738.,  7534378.,  7300474.,  7555114.,  7814234.,  8077834.,
      6644740.,  6867172.,  7093444.,  7323556.,  5825614.,  6013278.,
      6204142.,  6398206.,  4837976.,  4988312.,  5141208.,  5296664.,
      4581968.,  4735952.,  4893008.,  5053136.,  5825956.,  6017924.,
      6213732.,  6413380.,  7195768.,  7428792.,  7666424.,  7908664.,
      8697548.,  8974700.,  9257228.,  9545132.,  9258252.,  9546156.,
      9839436.,  10138092., 8274936.,  8527416.,  8784504.,  9046200.,
      7108452.,  7322436.,  7540260.,  7761924.,  5752656.,  5925072.,
      6100560.,  6279120.,  5321544.,  5505800.,  5693640.,  5885064.,
      6560762.,  6791850.,  7027418.,  7267466.,  7956844.,  8238348.,
      8525228.,  8817484.,  9516958.,  9852462.,  10194238., 10542286.,
      10171966., 10520014., 10874334., 11234926., 9056300.,  9361868.,
      9672812.,  9989132.,  7722330.,  7981834.,  8245818.,  8514282.,
      6162888.,  6372744.,  6586184.,  6803208.,  5451592.,  5660424.,
      5872840.,  6088840.,  6522618.,  6784426.,  7050714.,  7321482.,
      7775084.,  8093452.,  8417196.,  8746316.,  9216158.,  9594670.,
      9979454.,  10370510., 9871166.,  10262222., 10659550., 11063150.,
      8759852.,  9102284.,  9450092.,  9803276.,  7405658.,  7695882.,
      7990586.,  8289770.,  5801416.,  6035848.,  6273864.,  6515464.,
      4440912.,  4637904.,  4837968.,  5041104.,  6019300.,  6265028.,
      6514596.,  6768004.,  7766520.,  8064056.,  8366200.,  8672952.,
      9688716.,  10041132., 10398924., 10762092., 10321100., 10684268.,
      11052812., 11426732., 9427320.,  9744312.,  10065912., 10392120.,
      8307364.,  8575108.,  8846692.,  9122116.,  6955088.,  7170512.,
      7389008.,  7610576.,  5687768.,  5857560.,  6029912.,  6204824.,
      7250926.,  7461374.,  7675022.,  7891870.,  8954948.,  9208612.,
      9466116.,  9727460.,  10804954., 11104394., 11408314., 11716714.,
      11364538., 11672938., 11985818., 12303178., 10108036., 10376548.,
      10648900., 10925092., 8657422.,  8883486.,  9112750.,  9345214.,
      7007576.,  7188632.,  7372248.,  7558424.,  4768480.,  4895712.,
      5024992.,  5156320.,  5736472.,  5892440.,  6050968.,  6212056.,
      6802000.,  6988752.,  7178576.,  7371472.,  7969160.,  8188744.,
      8411912.,  8638664.,  8405768.,  8632520.,  8862856.,  9096776.,
      7312208.,  7509200.,  7709264.,  7912400.,  6071960.,  6237144.,
      6404888.,  6575192.,  4680928.,  4812256.,  4945632.,  5081056.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    1724.,    3036.,    4604.,    6428.,    3068.,    4892.,
      6972.,    9308.,    4412.,    6748.,    9340.,    12188.,   5756.,
      8604.,    11708.,   15068.,   7100.,    10460.,   14076.,   17948.,
      7294.,    9230.,    11294.,   13486.,   1500.,    4092.,    6940.,
      10044.,   12856.,   19064.,   25784.,   33016.,   19640.,   26872.,
      34616.,   42872.,   26424.,   34680.,   43448.,   52728.,   33208.,
      42488.,   52280.,   62584.,   39992.,   50296.,   61112.,   72440.,
      46776.,   58104.,   69944.,   82296.,   35484.,   41660.,   48092.,
      54780.,   18076.,   24252.,   30684.,   37372.,   60344.,   73720.,
      87608.,   102008.,  67128.,   81528.,   96440.,   111864.,  73912.,
      89336.,   105272.,  121720.,  80696.,   97144.,   114104.,  131576.,
      87480.,   104952.,  122936.,  141432.,  94264.,   112760.,  131768.,
      151288.,  66396.,   76156.,   86172.,   96444.,   34652.,   44412.,
      54428.,   64700.,   107832.,  128376.,  149432.,  171000.,  114616.,
      136184.,  158264.,  180856.,  121400.,  143992.,  167096.,  190712.,
      128184.,  151800.,  175928.,  200568.,  134968.,  159608.,  184760.,
      210424.,  141752.,  167416.,  193592.,  220280.,  97308.,   110652.,
      124252.,  138108.,  51228.,   64572.,   78172.,   92028.,   155320.,
      183032.,  211256.,  239992.,  162104.,  190840.,  220088.,  249848.,
      168888.,  198648.,  228920.,  259704.,  175672.,  206456.,  237752.,
      269560.,  182456.,  214264.,  246584.,  279416.,  189240.,  222072.,
      255416.,  289272.,  128220.,  145148.,  162332.,  179772.,  67804.,
      84732.,   101916.,  119356.,  202808.,  237688.,  273080.,  308984.,
      209592.,  245496.,  281912.,  318840.,  216376.,  253304.,  290744.,
      328696.,  223160.,  261112.,  299576.,  338552.,  229944.,  268920.,
      308408.,  348408.,  236728.,  276728.,  317240.,  358264.,  159132.,
      179644.,  200412.,  221436.,  84380.,   104892.,  125660.,  146684.,
      250296.,  292344.,  334904.,  377976.,  257080.,  300152.,  343736.,
      387832.,  263864.,  307960.,  352568.,  397688.,  270648.,  315768.,
      361400.,  407544.,  277432.,  323576.,  370232.,  417400.,  284216.,
      331384.,  379064.,  427256.,  190044.,  214140.,  238492.,  263100.,
      93086.,   104494.,  116030.,  127694.,  231548.,  254876.,  278460.,
      302300.,  236988.,  260828.,  284924.,  309276.,  242428.,  266780.,
      291388.,  316252.,  247868.,  272732.,  297852.,  323228.,  253308.,
      278684.,  304316.,  330204.,  258748.,  284636.,  310780.,  337180.,
      155646.,  168846.,  182174.,  195630.,  670.,     1838.,    3134.,
      4558.,    5756.,    8604.,    11708.,   15068.,   15292.,   18652.,
      22268.,   26140.,   24828.,   28700.,   32828.,   37212.,   34364.,
      38748.,   43388.,   48284.,   43900.,   48796.,   53948.,   59356.,
      53436.,   58844.,   64508.,   70428.,   32510.,   35470.,   38558.,
      41774.,   31452.,   36092.,   40988.,   46140.,   80952.,   91256.,
      102072.,  113400.,  104120.,  115448.,  127288.,  139640.,  127288.,
      139640.,  152504.,  165880.,  150456.,  163832.,  177720.,  192120.,
      173624.,  188024.,  202936.,  218360.,  196792.,  212216.,  228152.,
      244600.,  114588.,  122812.,  131292.,  140028.,  105372.,  113596.,
      122076.,  130812.,  243128.,  260600.,  278584.,  297080.,  266296.,
      284792.,  303800.,  323320.,  289464.,  308984.,  329016.,  349560.,
      312632.,  333176.,  354232.,  375800.,  335800.,  357368.,  379448.,
      402040.,  358968.,  381560.,  404664.,  428280.,  202844.,  214652.,
      226716.,  239036.,  179292.,  191100.,  203164.,  215484.,  405304.,
      429944.,  455096.,  480760.,  428472.,  454136.,  480312.,  507000.,
      451640.,  478328.,  505528.,  533240.,  474808.,  502520.,  530744.,
      559480.,  497976.,  526712.,  555960.,  585720.,  521144.,  550904.,
      581176.,  611960.,  291100.,  306492.,  322140.,  338044.,  253212.,
      268604.,  284252.,  300156.,  567480.,  599288.,  631608.,  664440.,
      590648.,  623480.,  656824.,  690680.,  613816.,  647672.,  682040.,
      716920.,  636984.,  671864.,  707256.,  743160.,  660152.,  696056.,
      732472.,  769400.,  683320.,  720248.,  757688.,  795640.,  379356.,
      398332.,  417564.,  437052.,  327132.,  346108.,  365340.,  384828.,
      729656.,  768632.,  808120.,  848120.,  752824.,  792824.,  833336.,
      874360.,  775992.,  817016.,  858552.,  900600.,  799160.,  841208.,
      883768.,  926840.,  822328.,  865400.,  908984.,  953080.,  845496.,
      889592.,  934200.,  979320.,  467612.,  490172.,  512988.,  536060.,
      401052.,  423612.,  446428.,  469500.,  891832.,  937976.,  984632.,
      1031800., 915000.,  962168.,  1009848., 1058040., 938168.,  986360.,
      1035064., 1084280., 961336.,  1010552., 1060280., 1110520., 984504.,
      1034744., 1085496., 1136760., 1007672., 1058936., 1110712., 1163000.,
      555868.,  582012.,  608412.,  635068.,  265758.,  278190.,  290750.,
      303438.,  580988.,  606364.,  631996.,  657884.,  594620.,  620508.,
      646652.,  673052.,  608252.,  634652.,  661308.,  688220.,  621884.,
      648796.,  675964.,  703388.,  635516.,  662940.,  690620.,  718556.,
      649148.,  677084.,  705276.,  733724.,  352894.,  367118.,  381470.,
      395950.,  1310.,    3502.,    5822.,    8270.,    11132.,   16028.,
      21180.,   26588.,   28860.,   34268.,   39932.,   45852.,   46588.,
      52508.,   58684.,   65116.,   64316.,   70748.,   77436.,   84380.,
      82044.,   88988.,   96188.,   103644.,  99772.,   107228.,  114940.,
      122908.,  57726.,   61710.,   65822.,   70062.,   61404.,   68092.,
      75036.,   82236.,   149048.,  163448.,  178360.,  193784.,  188600.,
      204024.,  219960.,  236408.,  228152.,  244600.,  261560.,  279032.,
      267704.,  285176.,  303160.,  321656.,  307256.,  325752.,  344760.,
      364280.,  346808.,  366328.,  386360.,  406904.,  193692.,  203964.,
      214492.,  225276.,  192668.,  202940.,  213468.,  224252.,  425912.,
      447480.,  469560.,  492152.,  465464.,  488056.,  511160.,  534776.,
      505016.,  528632.,  552760.,  577400.,  544568.,  569208.,  594360.,
      620024.,  584120.,  609784.,  635960.,  662648.,  623672.,  650360.,
      677560.,  705272.,  339292.,  353148.,  367260.,  381628.,  323932.,
      337788.,  351900.,  366268.,  702776.,  731512.,  760760.,  790520.,
      742328.,  772088.,  802360.,  833144.,  781880.,  812664.,  843960.,
      875768.,  821432.,  853240.,  885560.,  918392.,  860984.,  893816.,
      927160.,  961016.,  900536.,  934392.,  968760.,  1003640., 484892.,
      502332.,  520028.,  537980.,  455196.,  472636.,  490332.,  508284.,
      979640.,  1015544., 1051960., 1088888., 1019192., 1056120., 1093560.,
      1131512., 1058744., 1096696., 1135160., 1174136., 1098296., 1137272.,
      1176760., 1216760., 1137848., 1177848., 1218360., 1259384., 1177400.,
      1218424., 1259960., 1302008., 630492.,  651516.,  672796.,  694332.,
      586460.,  607484.,  628764.,  650300.,  1256504., 1299576., 1343160.,
      1387256., 1296056., 1340152., 1384760., 1429880., 1335608., 1380728.,
      1426360., 1472504., 1375160., 1421304., 1467960., 1515128., 1414712.,
      1461880., 1509560., 1557752., 1454264., 1502456., 1551160., 1600376.,
      776092.,  800700.,  825564.,  850684.,  717724.,  742332.,  767196.,
      792316.,  1533368., 1583608., 1634360., 1685624., 1572920., 1624184.,
      1675960., 1728248., 1612472., 1664760., 1717560., 1770872., 1652024.,
      1705336., 1759160., 1813496., 1691576., 1745912., 1800760., 1856120.,
      1731128., 1786488., 1842360., 1898744., 921692.,  949884.,  978332.,
      1007036., 438430.,  451886.,  465470.,  479182.,  930428.,  957852.,
      985532.,  1013468., 952252.,  980188.,  1008380., 1036828., 974076.,
      1002524., 1031228., 1060188., 995900.,  1024860., 1054076., 1083548.,
      1017724., 1047196., 1076924., 1106908., 1039548., 1069532., 1099772.,
      1130268., 550142.,  565390.,  580766.,  596270.};
  const std::array<int, 4> in_shape = {{3, 8, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2048.,   2840.,   3752.,   4788.,   5194.,   5600.,   5240.,   4740.,
      4096.,   4220.,   5725.,   7420.,   9310.,   9940.,   10570.,  9730.,
      8675.,   7400.,   7560.,   10110.,  12936.,  16044.,  16947.,  17850.,
      16248.,  14340.,  12120.,  12320.,  16310.,  20678.,  25431.,  26656.,
      27881.,  25172.,  22050.,  18508.,  18242.,  23870.,  29939.,  36456.,
      37681.,  38906.,  34811.,  30240.,  25186.,  23424.,  30315.,  37632.,
      45381.,  46578.,  47775.,  42348.,  36465.,  30120.,  26430.,  34000.,
      41965.,  50330.,  51450.,  52570.,  46345.,  39700.,  32630.,  27008.,
      34610.,  42560.,  50862.,  51856.,  52850.,  46424.,  39630.,  32464.,
      17024.,  22280.,  27944.,  34020.,  34426.,  34832.,  31160.,  27060.,
      22528.,  27980.,  36325.,  45220.,  54670.,  55300.,  55930.,  49690.,
      42875.,  35480.,  42120.,  54390.,  67368.,  81060.,  81963.,  82866.,
      73272.,  62940.,  51864.,  59696.,  76790.,  94766.,  113631., 114856.,
      116081., 102284., 87570.,  71932.,  65618.,  84350.,  104027., 124656.,
      125881., 127106., 111923., 95760.,  78610.,  70080.,  89715.,  110208.,
      131565., 132762., 133959., 117516., 100185., 81960.,  70350.,  89800.,
      110005., 130970., 132090., 133210., 116545., 99100.,  80870.,  66176.,
      84290.,  103040., 122430., 123424., 124418., 108632., 92190.,  75088.,
      32000.,  41720.,  52136.,  63252.,  63658.,  64064.,  57080.,  49380.,
      40960.,  51740.,  66925.,  83020.,  100030., 100660., 101290., 89650.,
      77075.,  63560.,  76680.,  98670.,  121800., 146076., 146979., 147882.,
      130296., 111540., 91608.,  107072., 137270., 168854., 201831., 203056.,
      204281., 179396., 153090., 125356., 112994., 144830., 178115., 212856.,
      214081., 215306., 189035., 161280., 132034., 116736., 149115., 182784.,
      217749., 218946., 220143., 192684., 163905., 133800., 114270., 145600.,
      178045., 211610., 212730., 213850., 186745., 158500., 129110., 105344.,
      133970., 163520., 193998., 194992., 195986., 170840., 144750., 117712.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    10.,   16.,   22.,   28.,   34.,   32.,   21.,   12.,
      38.,   80.,   101.,  122.,  143.,  164.,  138.,  84.,   47.,   122.,
      227.,  248.,  269.,  290.,  311.,  250.,  147.,  82.,   206.,  374.,
      395.,  416.,  437.,  458.,  362.,  210.,  117.,  290.,  521.,  542.,
      563.,  584.,  605.,  474.,  273.,  152.,  374.,  668.,  689.,  710.,
      731.,  752.,  586.,  336.,  187.,  458.,  815.,  836.,  857.,  878.,
      899.,  698.,  399.,  172.,  391.,  658.,  673.,  688.,  703.,  718.,
      533.,  294.,  7.,    22.,   46.,   70.,   94.,   118.,  142.,  110.,
      63.,   66.,   158.,  278.,  335.,  392.,  449.,  506.,  378.,  210.,
      185.,  410.,  677.,  734.,  791.,  848.,  905.,  658.,  357.,  304.,
      662.,  1076., 1133., 1190., 1247., 1304., 938.,  504.,  423.,  914.,
      1475., 1532., 1589., 1646., 1703., 1218., 651.,  542.,  1166., 1874.,
      1931., 1988., 2045., 2102., 1498., 798.,  661.,  1418., 2273., 2330.,
      2387., 2444., 2501., 1778., 945.,  430.,  913.,  1450., 1483., 1516.,
      1549., 1582., 1115., 588.,  13.,   40.,   82.,   124.,  166.,  208.,
      250.,  188.,  105.,  120.,  278.,  476.,  569.,  662.,  755.,  848.,
      618.,  336.,  323.,  698.,  1127., 1220., 1313., 1406., 1499., 1066.,
      567.,  526.,  1118., 1778., 1871., 1964., 2057., 2150., 1514., 798.,
      729.,  1538., 2429., 2522., 2615., 2708., 2801., 1962., 1029., 932.,
      1958., 3080., 3173., 3266., 3359., 3452., 2410., 1260., 1135., 2378.,
      3731., 3824., 3917., 4010., 4103., 2858., 1491., 688.,  1435., 2242.,
      2293., 2344., 2395., 2446., 1697., 882.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      15472.,   21540.,   28552.,   36540.,   39732.,   42924.,   40264.,
      36500.,   31600.,   32300.,   43925.,   57050.,   71715.,   76685.,
      81655.,   75290.,   67225.,   57420.,   58344.,   78150.,   100140.,
      124362.,  131502.,  138642.,  126348.,  111630.,  94440.,   95620.,
      126735.,  160846.,  198009.,  207711.,  217413.,  196462.,  172235.,
      144676.,  142492.,  186585.,  234178.,  285327.,  295029.,  304731.,
      272818.,  237125.,  197596.,  184056.,  238290.,  295908.,  356958.,
      366450.,  375942.,  333348.,  287130.,  237240.,  208340.,  268075.,
      330950.,  397005.,  405895.,  414785.,  365750.,  313375.,  257620.,
      213328.,  273420.,  336280.,  401940.,  409836.,  417732.,  367000.,
      313340.,  256720.,  132976.,  174180.,  218632.,  266364.,  269556.,
      272748.,  244168.,  212180.,  176752.,  219500.,  285125.,  355130.,
      429555.,  434525.,  439495.,  390650.,  337225.,  279180.,  331368.,
      428070.,  530412.,  638442.,  645582.,  652722.,  577356.,  496110.,
      408936.,  470596.,  605535.,  747502.,  896553.,  906255.,  915957.,
      807310.,  691355.,  568036.,  517468.,  665385.,  820834.,  983871.,
      993573.,  1003275., 883666.,  756245.,  620956.,  553848.,  709170.,
      871332.,  1040382., 1049874., 1059366., 929508.,  792570.,  648504.,
      556820.,  710875.,  870950.,  1037085., 1045975., 1054865., 923030.,
      784975.,  640660.,  524368.,  667980.,  816664.,  970452.,  978348.,
      986244.,  861208.,  730940.,  595408.,  250480.,  326820.,  408712.,
      496188.,  499380.,  502572.,  448072.,  387860.,  321904.,  406700.,
      526325.,  653210.,  787395.,  792365.,  797335.,  706010.,  607225.,
      500940.,  604392.,  777990.,  960684.,  1152522., 1159662., 1166802.,
      1028364., 880590.,  723432.,  845572.,  1084335., 1334158., 1595097.,
      1604799., 1614501., 1418158., 1210475., 991396.,  892444.,  1144185.,
      1407490., 1682415., 1692117., 1701819., 1494514., 1275365., 1044316.,
      923640.,  1180050., 1446756., 1723806., 1733298., 1742790., 1525668.,
      1298010., 1059768., 905300.,  1153675., 1410950., 1677165., 1686055.,
      1694945., 1480310., 1256575., 1023700., 835408.,  1062540., 1297048.,
      1538964., 1546860., 1554756., 1355416., 1148540., 934096.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,    22.,    59.,    101.,   143.,   185.,   227.,   222.,   149.,
      70.,   244.,   538.,   694.,   850.,   1006.,  1162.,  996.,   614.,
      322.,  860.,   1630.,  1786.,  1942.,  2098.,  2254.,  1836.,  1090.,
      574.,  1476.,  2722.,  2878.,  3034.,  3190.,  3346.,  2676.,  1566.,
      826.,  2092.,  3814.,  3970.,  4126.,  4282.,  4438.,  3516.,  2042.,
      1078., 2708.,  4906.,  5062.,  5218.,  5374.,  5530.,  4356.,  2518.,
      1330., 3324.,  5998.,  6154.,  6310.,  6466.,  6622.,  5196.,  2994.,
      1283., 2938.,  4973.,  5087.,  5201.,  5315.,  5429.,  4050.,  2243.,
      41.,   142.,   311.,   497.,   683.,   869.,   1055.,  822.,   473.,
      478.,  1156.,  2050.,  2494.,  2938.,  3382.,  3826.,  2868.,  1598.,
      1402., 3116.,  5158.,  5602.,  6046.,  6490.,  6934.,  5052.,  2746.,
      2326., 5076.,  8266.,  8710.,  9154.,  9598.,  10042., 7236.,  3894.,
      3250., 7036.,  11374., 11818., 12262., 12706., 13150., 9420.,  5042.,
      4174., 8996.,  14482., 14926., 15370., 15814., 16258., 11604., 6190.,
      5098., 10956., 17590., 18034., 18478., 18922., 19366., 13788., 7338.,
      3335., 7090.,  11273., 11531., 11789., 12047., 12305., 8682.,  4583.,
      77.,   262.,   563.,   893.,   1223.,  1553.,  1883.,  1422.,  797.,
      886.,  2068.,  3562.,  4294.,  5026.,  5758.,  6490.,  4740.,  2582.,
      2482., 5372.,  8686.,  9418.,  10150., 10882., 11614., 8268.,  4402.,
      4078., 8676.,  13810., 14542., 15274., 16006., 16738., 11796., 6222.,
      5674., 11980., 18934., 19666., 20398., 21130., 21862., 15324., 8042.,
      7270., 15284., 24058., 24790., 25522., 26254., 26986., 18852., 9862.,
      8866., 18588., 29182., 29914., 30646., 31378., 32110., 22380., 11682.,
      5387., 11242., 17573., 17975., 18377., 18779., 19181., 13314., 6923.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      120160.,   167640.,   222608.,   285320.,   310632.,   335944.,
      315536.,   286360.,   248160.,   252600.,   343950.,   447220.,
      562730.,   602210.,   641690.,   592180.,   529150.,   452280.,
      458256.,   614340.,   787800.,   979020.,   1035804.,  1092588.,
      996312.,   880740.,   745488.,   753256.,   998970.,   1268540.,
      1562414.,  1639638.,  1716862.,  1552124.,  1361290.,  1143912.,
      1126216.,  1475250.,  1852172.,  2257430.,  2334654.,  2411878.,
      2159948.,  1877890.,  1565256.,  1459152.,  1889460.,  2346744.,
      2831388.,  2906988.,  2982588.,  2645112.,  2278740.,  1883088.,
      1654360.,  2128950.,  2628580.,  3153570.,  3224410.,  3295250.,
      2906020.,  2490150.,  2047320.,  1695712.,  2173560.,  2673488.,
      3195752.,  3258696.,  3321640.,  2918480.,  2491960.,  2041824.,
      1050976.,  1377240.,  1729424.,  2107784.,  2133096.,  2158408.,
      1932944.,  1680280.,  1400160.,  1738680.,  2259150.,  2814580.,
      3405290.,  3444770.,  3484250.,  3097780.,  2674750.,  2214840.,
      2628624.,  3396420.,  4209240.,  5067468.,  5124252.,  5181036.,
      4583640.,  3939300.,  3247632.,  3736936.,  4809210.,  5937596.,
      7122542.,  7199766.,  7276990.,  6414716.,  5494090.,  4514664.,
      4109896.,  5285490.,  6521228.,  7817558.,  7894782.,  7972006.,
      7022540.,  6010690.,  4936008.,  4403664.,  5639220.,  6929400.,
      8274588.,  8350188.,  8425788.,  7393656.,  6304980.,  5159376.,
      4430680.,  5656950.,  6931300.,  8254050.,  8324890.,  8395730.,
      7346980.,  6248550.,  5100120.,  4174816.,  5318520.,  6502736.,
      7727720.,  7790664.,  7853608.,  6858320.,  5821240.,  4742112.,
      1981792.,  2586840.,  3236240.,  3930248.,  3955560.,  3980872.,
      3550352.,  3074200.,  2552160.,  3224760.,  4174350.,  5181940.,
      6247850.,  6287330.,  6326810.,  5603380.,  4820350.,  3977400.,
      4798992.,  6178500.,  7630680.,  9155916.,  9212700.,  9269484.,
      8170968.,  6997860.,  5749776.,  6720616.,  8619450.,  10606652.,
      12682670., 12759894., 12837118., 11277308., 9626890.,  7885416.,
      7093576.,  9095730.,  11190284., 13377686., 13454910., 13532134.,
      11885132., 10143490., 8306760.,  7348176.,  9388980.,  11512056.,
      13717788., 13793388., 13868988., 12142200., 10331220., 8435664.,
      7207000.,  9184950.,  11234020., 13354530., 13425370., 13496210.,
      11787940., 10006950., 8152920.,  6653920.,  8463480.,  10331984.,
      12259688., 12322632., 12385576., 10798160., 9150520.,  7442400.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    706.,    1018.,   1330.,   1642.,   1644.,
      1118.,   460.,    1720.,   3908.,   5108.,   6308.,   7508.,   8708.,
      7544.,   4684.,   2364.,   6424.,   12308.,  13508.,  14708.,  15908.,
      17108.,  14040.,  8380.,   4268.,   11128.,  20708.,  21908.,  23108.,
      24308.,  25508.,  20536.,  12076.,  6172.,   15832.,  29108.,  30308.,
      31508.,  32708.,  33908.,  27032.,  15772.,  8076.,   20536.,  37508.,
      38708.,  39908.,  41108.,  42308.,  33528.,  19468.,  9980.,   25240.,
      45908.,  47108.,  48308.,  49508.,  50708.,  40024.,  23164.,  9894.,
      22748.,  38626.,  39514.,  40402.,  41290.,  42178.,  31548.,  17510.,
      270.,    1004.,   2266.,   3730.,   5194.,   6658.,   8122.,   6348.,
      3662.,   3628.,   8824.,   15716.,  19220.,  22724.,  26228.,  29732.,
      22328.,  12460.,  10908.,  24280.,  40244.,  43748.,  47252.,  50756.,
      54260.,  39576.,  21532.,  18188.,  39736.,  64772.,  68276.,  71780.,
      75284.,  78788.,  56824.,  30604.,  25468.,  55192.,  89300.,  92804.,
      96308.,  99812.,  103316., 74072.,  39676.,  32748.,  70648.,  113828.,
      117332., 120836., 124340., 127844., 91320.,  48748.,  40028.,  86104.,
      138356., 141860., 145364., 148868., 152372., 108568., 57820.,  26262.,
      55868.,  88882.,  90922.,  92962.,  95002.,  97042.,  68508.,  36182.,
      510.,    1868.,   4138.,   6754.,   9370.,   11986.,  14602.,  11052.,
      6206.,   6796.,   15928.,  27524.,  33332.,  39140.,  44948.,  50756.,
      37112.,  20236.,  19452.,  42136.,  68180.,  73988.,  79796.,  85604.,
      91412.,  65112.,  34684.,  32108.,  68344.,  108836., 114644., 120452.,
      126260., 132068., 93112.,  49132.,  44764.,  94552.,  149492., 155300.,
      161108., 166916., 172724., 121112., 63580.,  57420.,  120760., 190148.,
      195956., 201764., 207572., 213380., 149112., 78028.,  70076.,  146968.,
      230804., 236612., 242420., 248228., 254036., 177112., 92476.,  42630.,
      88988.,  139138., 142330., 145522., 148714., 151906., 105468., 54854.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7280.,   8192.,   10180.,  11360.,  13544.,  15008.,  17388.,  19152.,
      18956.,  20776.,  20524.,  22400.,  19304.,  20960.,  17540.,  18960.,
      15216.,  16384.,  15420.,  16880.,  21025.,  22900.,  27370.,  29680.,
      34475.,  37240.,  36925.,  39760.,  39375.,  42280.,  36370.,  38920.,
      32525.,  34700.,  27820.,  29600.,  28104.,  30240.,  37710.,  40440.,
      48396.,  51744.,  60186.,  64176.,  63714.,  67788.,  67242.,  71400.,
      61356.,  64992.,  54270.,  57360.,  45960.,  48480.,  46340.,  49280.,
      61495.,  65240.,  78134.,  82712.,  96285.,  101724., 101087., 106624.,
      105889., 111524., 95774.,  100688., 84035.,  88200.,  70644.,  74032.,
      69524.,  72968.,  91105.,  95480.,  114422., 119756., 139503., 145824.,
      144305., 150724., 149107., 155624., 133574., 139244., 116165., 120960.,
      96852.,  100744., 90360.,  93696.,  117030., 121260., 145380., 150528.,
      175434., 181524., 180138., 186312., 184842., 191100., 163956., 169392.,
      141270., 145860., 116760., 120480., 102620., 105720., 132075., 136000.,
      163090., 167860., 195685., 201320., 200095., 205800., 204505., 210280.,
      180370., 185380., 154575., 158800., 127100., 130520., 105296., 108032.,
      134980., 138440., 166040., 170240., 198492., 203448., 202412., 207424.,
      206332., 211400., 181304., 185696., 154820., 158520., 126864., 129856.,
      64880.,  68096.,  85060.,  89120.,  106856., 111776., 130284., 136080.,
      131852., 137704., 133420., 139328., 119528., 124640., 103940., 108240.,
      86640.,  90112.,  107580., 111920., 139825., 145300., 174250., 180880.,
      210875., 218680., 213325., 221200., 215775., 223720., 191890., 198760.,
      165725., 171500., 137260., 141920., 162888., 168480., 210510., 217560.,
      260940., 269472., 314202., 324240., 317730., 327852., 321258., 331464.,
      284268., 293088., 244350., 251760., 201480., 207456., 231812., 238784.,
      298375., 307160., 368438., 379064., 442029., 454524., 446831., 459424.,
      451633., 464324., 398174., 409136., 341075., 350280., 280308., 287728.,
      254996., 262472., 327985., 337400., 404726., 416108., 485247., 498624.,
      490049., 503524., 494851., 508424., 435974., 447692., 373205., 383040.,
      306516., 314440., 273528., 280320., 350310., 358860., 430500., 440832.,
      514122., 526260., 518826., 531048., 523530., 535836., 459444., 470064.,
      391830., 400740., 320664., 327840., 275420., 281400., 351675., 359200.,
      430930., 440020., 513205., 523880., 517615., 528360., 522025., 532840.,
      456850., 466180., 388575., 396400., 317180., 323480., 259664., 264704.,
      330820., 337160., 404504., 412160., 480732., 489720., 484652., 493696.,
      488572., 497672., 426680., 434528., 362180., 368760., 295056., 300352.,
      122480., 128000., 159940., 166880., 200168., 208544., 243180., 253008.,
      244748., 254632., 246316., 256256., 219752., 228320., 190340., 197520.,
      158064., 163840., 199740., 206960., 258625., 267700., 321130., 332080.,
      387275., 400120., 389725., 402640., 392175., 405160., 347410., 358600.,
      298925., 308300., 246700., 254240., 297672., 306720., 383310., 394680.,
      473484., 487200., 568218., 584304., 571746., 587916., 575274., 591528.,
      507180., 521184., 434430., 446160., 357000., 366432., 417284., 428288.,
      535255., 549080., 658742., 675416., 787773., 807324., 792575., 812224.,
      797377., 817124., 700574., 717584., 598115., 612360., 489972., 501424.,
      440468., 451976., 564865., 579320., 695030., 712460., 830991., 851424.,
      835793., 856324., 840595., 861224., 738374., 756140., 630245., 645120.,
      516180., 528136., 456696., 466944., 583590., 596460., 715620., 731136.,
      852810., 870996., 857514., 875784., 862218., 880572., 754932., 770736.,
      642390., 655620., 524568., 535200., 448220., 457080., 571275., 582400.,
      698770., 712180., 830725., 846440., 835135., 850920., 839545., 855400.,
      733330., 746980., 622575., 634000., 507260., 516440., 414032., 421376.,
      526660., 535880., 642968., 654080., 762972., 775992., 766892., 779968.,
      770812., 783944., 672056., 683360., 569540., 579000., 463248., 470848.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    37.,    64.,    55.,
      88.,    73.,    112.,   91.,    136.,   94.,    128.,   65.,    84.,
      22.,    48.,    92.,    152.,   218.,   320.,   290.,   404.,   362.,
      488.,   434.,   572.,   506.,   656.,   444.,   552.,   278.,   336.,
      134.,   188.,   372.,   488.,   722.,   908.,   794.,   992.,   866.,
      1076.,  938.,   1160.,  1010.,  1244.,  836.,   1000.,  502.,   588.,
      246.,   328.,   652.,   824.,   1226.,  1496.,  1298.,  1580.,  1370.,
      1664.,  1442.,  1748.,  1514.,  1832.,  1228.,  1448.,  726.,   840.,
      358.,   468.,   932.,   1160.,  1730.,  2084.,  1802.,  2168.,  1874.,
      2252.,  1946.,  2336.,  2018.,  2420.,  1620.,  1896.,  950.,   1092.,
      470.,   608.,   1212.,  1496.,  2234.,  2672.,  2306.,  2756.,  2378.,
      2840.,  2450.,  2924.,  2522.,  3008.,  2012.,  2344.,  1174.,  1344.,
      582.,   748.,   1492.,  1832.,  2738.,  3260.,  2810.,  3344.,  2882.,
      3428.,  2954.,  3512.,  3026.,  3596.,  2404.,  2792.,  1398.,  1596.,
      595.,   688.,   1374.,  1564.,  2341.,  2632.,  2395.,  2692.,  2449.,
      2752.,  2503.,  2812.,  2557.,  2872.,  1918.,  2132.,  1067.,  1176.,
      13.,    28.,    54.,    88.,    127.,   184.,   217.,   280.,   307.,
      376.,   397.,   472.,   487.,   568.,   382.,   440.,   221.,   252.,
      214.,   264.,   524.,   632.,   938.,   1112.,  1154.,  1340.,  1370.,
      1568.,  1586.,  1796.,  1802.,  2024.,  1356.,  1512.,  758.,   840.,
      662.,   740.,   1476.,  1640.,  2450.,  2708.,  2666.,  2936.,  2882.,
      3164.,  3098.,  3392.,  3314.,  3620.,  2420.,  2632.,  1318.,  1428.,
      1110.,  1216.,  2428.,  2648.,  3962.,  4304.,  4178.,  4532.,  4394.,
      4760.,  4610.,  4988.,  4826.,  5216.,  3484.,  3752.,  1878.,  2016.,
      1558.,  1692.,  3380.,  3656.,  5474.,  5900.,  5690.,  6128.,  5906.,
      6356.,  6122.,  6584.,  6338.,  6812.,  4548.,  4872.,  2438.,  2604.,
      2006.,  2168.,  4332.,  4664.,  6986.,  7496.,  7202.,  7724.,  7418.,
      7952.,  7634.,  8180.,  7850.,  8408.,  5612.,  5992.,  2998.,  3192.,
      2454.,  2644.,  5284.,  5672.,  8498.,  9092.,  8714.,  9320.,  8930.,
      9548.,  9146.,  9776.,  9362.,  10004., 6676.,  7112.,  3558.,  3780.,
      1615.,  1720.,  3438.,  3652.,  5473.,  5800.,  5599.,  5932.,  5725.,
      6064.,  5851.,  6196.,  5977.,  6328.,  4222.,  4460.,  2231.,  2352.,
      25.,    52.,    102.,   160.,   235.,   328.,   397.,   496.,   559.,
      664.,   721.,   832.,   883.,   1000.,  670.,   752.,   377.,   420.,
      406.,   480.,   956.,   1112.,  1658.,  1904.,  2018.,  2276.,  2378.,
      2648.,  2738.,  3020.,  3098.,  3392.,  2268.,  2472.,  1238.,  1344.,
      1190.,  1292.,  2580.,  2792.,  4178.,  4508.,  4538.,  4880.,  4898.,
      5252.,  5258.,  5624.,  5618.,  5996.,  4004.,  4264.,  2134.,  2268.,
      1974.,  2104.,  4204.,  4472.,  6698.,  7112.,  7058.,  7484.,  7418.,
      7856.,  7778.,  8228.,  8138.,  8600.,  5740.,  6056.,  3030.,  3192.,
      2758.,  2916.,  5828.,  6152.,  9218.,  9716.,  9578.,  10088., 9938.,
      10460., 10298., 10832., 10658., 11204., 7476.,  7848.,  3926.,  4116.,
      3542.,  3728.,  7452.,  7832.,  11738., 12320., 12098., 12692., 12458.,
      13064., 12818., 13436., 13178., 13808., 9212.,  9640.,  4822.,  5040.,
      4326.,  4540.,  9076.,  9512.,  14258., 14924., 14618., 15296., 14978.,
      15668., 15338., 16040., 15698., 16412., 10948., 11432., 5718.,  5964.,
      2635.,  2752.,  5502.,  5740.,  8605.,  8968.,  8803.,  9172.,  9001.,
      9376.,  9199.,  9580.,  9397.,  9784.,  6526.,  6788.,  3395.,  3528.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      56464.,   63696.,   79140.,   88500.,   105496.,  117112.,  135660.,
      149660.,  148092.,  162540.,  160524.,  175420.,  151192.,  164344.,
      137540.,  148820.,  119440.,  128720.,  120500.,  132100.,  164525.,
      179425.,  214430.,  232790.,  270375.,  292355.,  289835.,  312375.,
      309295.,  332395.,  285950.,  306230.,  255925.,  273225.,  219060.,
      233220.,  220632.,  237624.,  296310.,  318030.,  380580.,  407220.,
      473634.,  505386.,  501690.,  534114.,  529746.,  562842.,  483684.,
      512628.,  428070.,  452670.,  362712.,  382776.,  364924.,  388332.,
      484575.,  514395.,  616042.,  652498.,  759549.,  802865.,  797769.,
      841869.,  835989.,  880873.,  756490.,  795634.,  664055.,  697235.,
      558460.,  585452.,  549388.,  576828.,  720195.,  755055.,  904834.,
      947338.,  1103529., 1153901., 1141749., 1192905., 1179969., 1231909.,
      1057378., 1102570., 919835.,  958055.,  767116.,  798140.,  716280.,
      742872.,  927870.,  961590.,  1152852., 1193892., 1391418., 1439970.,
      1428882., 1478106., 1466346., 1516242., 1300884., 1344228., 1121070.,
      1157670., 926712.,  956376.,  814820.,  839540.,  1048825., 1080125.,
      1295270., 1333310., 1554315., 1599255., 1589455., 1634955., 1624595.,
      1670655., 1433030., 1472990., 1228225., 1261925., 1010020., 1037300.,
      836944.,  858768.,  1072980., 1100580., 1319992., 1353496., 1578108.,
      1617644., 1609356., 1649340., 1640604., 1681036., 1441720., 1476760.,
      1231220., 1260740., 1008976., 1032848., 512656.,  538320.,  672420.,
      704820.,  845080.,  884344.,  1030764., 1077020., 1043196., 1089900.,
      1055628., 1102780., 946072.,  986872.,  822980.,  857300.,  686224.,
      713936.,  852020.,  886660.,  1107725., 1151425., 1380830., 1433750.,
      1671495., 1733795., 1690955., 1753815., 1710415., 1773835., 1521470.,
      1576310., 1314325., 1360425., 1088820., 1126020., 1291992., 1336632.,
      1670070., 1726350., 2070564., 2138676., 2493666., 2573802., 2521722.,
      2602530., 2549778., 2631258., 2256612., 2327028., 1940070., 1999230.,
      1599960., 1647672., 1840636., 1896300., 2369535., 2439675., 2926378.,
      3011218., 3511389., 3611153., 3549609., 3650157., 3587829., 3689161.,
      3163594., 3251122., 2710295., 2783795., 2227708., 2286956., 2025100.,
      2084796., 2605155., 2680335., 3215170., 3306058., 3855369., 3962189.,
      3893589., 4001193., 3931809., 4040197., 3464482., 3558058., 2966075.,
      3044615., 2436364., 2499644., 2174712., 2228952., 2785470., 2853750.,
      3423444., 3505956., 4088826., 4185762., 4126290., 4223898., 4163754.,
      4262034., 3654420., 3739236., 3116910., 3188070., 2551032., 2608344.,
      2191460., 2239220., 2798425., 2858525., 3429350., 3501950., 4084395.,
      4169655., 4119535., 4205355., 4154675., 4241055., 3636230., 3710750.,
      3093025., 3155525., 2524900., 2575220., 2067280., 2107536., 2633940.,
      2684580., 3220792., 3281944., 3827964., 3899756., 3859212., 3931452.,
      3890460., 3963148., 3397816., 3460504., 2884340., 2936900., 2349904.,
      2392208., 968848.,  1012944., 1265700., 1321140., 1584664., 1651576.,
      1925868., 2004380., 1938300., 2017260., 1950732., 2030140., 1740952.,
      1809400., 1508420., 1565780., 1253008., 1299152., 1583540., 1641220.,
      2050925., 2123425., 2547230., 2634710., 3072615., 3175235., 3092075.,
      3195255., 3111535., 3215275., 2756990., 2846390., 2372725., 2447625.,
      1958580., 2018820., 2363352., 2435640., 3043830., 3134670., 3760548.,
      3870132., 4513698., 4642218., 4541754., 4670946., 4569810., 4699674.,
      4029540., 4141428., 3452070., 3545790., 2837208., 2912568., 3316348.,
      3404268., 4254495., 4364955., 5236714., 5369938., 6263229., 6419441.,
      6301449., 6458445., 6339669., 6497449., 5570698., 5706610., 4756535.,
      4870355., 3896956., 3988460., 3500812., 3592764., 4490115., 4605615.,
      5525506., 5664778., 6607209., 6770477., 6645429., 6809481., 6683649.,
      6848485., 5871586., 6013546., 5012315., 5131175., 4105612., 4201148.,
      3633144., 3715032., 4643070., 4745910., 5694036., 5818020., 6786234.,
      6931554., 6823698., 6969690., 6861162., 7007826., 6007956., 6134244.,
      5112750., 5218470., 4175352., 4260312., 3568100., 3638900., 4548025.,
      4636925., 5563430., 5670590., 6614475., 6740055., 6649615., 6775755.,
      6684755., 6811455., 5839430., 5948510., 4957825., 5049125., 4039780.,
      4113140., 3297616., 3356304., 4194900., 4268580., 5121592., 5210392.,
      6077820., 6181868., 6109068., 6213564., 6140316., 6245260., 5353912.,
      5444248., 4537460., 4613060., 3690832., 3751568.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    119.,    275.,    251.,    455.,
      383.,    635.,    515.,    815.,    647.,    995.,    690.,    954.,
      485.,    633.,    130.,    330.,    628.,    1092.,   1558.,   2350.,
      2110.,   2998.,   2662.,   3646.,   3214.,   4294.,   3766.,   4942.,
      3348.,   4196.,   2114.,   2570.,   970.,    1394.,   2756.,   3668.,
      5422.,   6886.,   5974.,   7534.,   6526.,   8182.,   7078.,   8830.,
      7630.,   9478.,   6372.,   7668.,   3850.,   4530.,   1810.,   2458.,
      4884.,   6244.,   9286.,   11422.,  9838.,   12070.,  10390.,  12718.,
      10942.,  13366.,  11494.,  14014.,  9396.,   11140.,  5586.,   6490.,
      2650.,   3522.,   7012.,   8820.,   13150.,  15958.,  13702.,  16606.,
      14254.,  17254.,  14806.,  17902.,  15358.,  18550.,  12420.,  14612.,
      7322.,   8450.,   3490.,   4586.,   9140.,   11396.,  17014.,  20494.,
      17566.,  21142.,  18118.,  21790.,  18670.,  22438.,  19222.,  23086.,
      15444.,  18084.,  9058.,   10410.,  4330.,   5650.,   11268.,  13972.,
      20878.,  25030.,  21430.,  25678.,  21982.,  26326.,  22534.,  26974.,
      23086.,  27622.,  18468.,  21556.,  10794.,  12370.,  4577.,   5317.,
      10618.,  12130.,  18155.,  20471.,  18575.,  20939.,  18995.,  21407.,
      19415.,  21875.,  19835.,  22343.,  14922.,  16626.,  8321.,   9189.,
      77.,     193.,    370.,    634.,    911.,    1355.,   1619.,   2111.,
      2327.,   2867.,   3035.,   3623.,   3743.,   4379.,   2946.,   3402.,
      1709.,   1953.,   1618.,   2010.,   3988.,   4836.,   7174.,   8542.,
      8878.,   10342.,  10582.,  12142.,  12286.,  13942.,  13990.,  15742.,
      10548.,  11780.,  5906.,   6554.,   5146.,   5762.,   11492.,  12788.,
      19102.,  21142.,  20806.,  22942.,  22510.,  24742.,  24214.,  26542.,
      25918.,  28342.,  18948.,  20628.,  10330.,  11202.,  8674.,   9514.,
      18996.,  20740.,  31030.,  33742.,  32734.,  35542.,  34438.,  37342.,
      36142.,  39142.,  37846.,  40942.,  27348.,  29476.,  14754.,  15850.,
      12202.,  13266.,  26500.,  28692.,  42958.,  46342.,  44662.,  48142.,
      46366.,  49942.,  48070.,  51742.,  49774.,  53542.,  35748.,  38324.,
      19178.,  20498.,  15730.,  17018.,  34004.,  36644.,  54886.,  58942.,
      56590.,  60742.,  58294.,  62542.,  59998.,  64342.,  61702.,  66142.,
      44148.,  47172.,  23602.,  25146.,  19258.,  20770.,  41508.,  44596.,
      66814.,  71542.,  68518.,  73342.,  70222.,  75142.,  71926.,  76942.,
      73630.,  78742.,  52548.,  56020.,  28026.,  29794.,  12713.,  13549.,
      27082.,  28786.,  43139.,  45743.,  44135.,  46787.,  45131.,  47831.,
      46127.,  48875.,  47123.,  49919.,  33306.,  35202.,  17609.,  18573.,
      149.,    361.,    706.,    1162.,   1703.,   2435.,   2987.,   3767.,
      4271.,   5099.,   5555.,   6431.,   6839.,   7763.,   5202.,   5850.,
      2933.,   3273.,   3106.,   3690.,   7348.,   8580.,   12790.,  14734.,
      15646.,  17686.,  18502.,  20638.,  21358.,  23590.,  24214.,  26542.,
      17748.,  19364.,  9698.,   10538.,  9322.,   10130.,  20228.,  21908.,
      32782.,  35398.,  35638.,  38350.,  38494.,  41302.,  41350.,  44254.,
      44206.,  47206.,  31524.,  33588.,  16810.,  17874.,  15538.,  16570.,
      33108.,  35236.,  52774.,  56062.,  55630.,  59014.,  58486.,  61966.,
      61342.,  64918.,  64198.,  67870.,  45300.,  47812.,  23922.,  25210.,
      21754.,  23010.,  45988.,  48564.,  72766.,  76726.,  75622.,  79678.,
      78478.,  82630.,  81334.,  85582.,  84190.,  88534.,  59076.,  62036.,
      31034.,  32546.,  27970.,  29450.,  58868.,  61892.,  92758.,  97390.,
      95614.,  100342., 98470.,  103294., 101326., 106246., 104182., 109198.,
      72852.,  76260.,  38146.,  39882.,  34186.,  35890.,  71748.,  75220.,
      112750., 118054., 115606., 121006., 118462., 123958., 121318., 126910.,
      124174., 129862., 86628.,  90484.,  45258.,  47218.,  20849.,  21781.,
      43546.,  45442.,  68123.,  71015.,  69695.,  72635.,  71267.,  74255.,
      72839.,  75875.,  74411.,  77495.,  51690.,  53778.,  26897.,  27957.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      444640.,   502240.,   623960.,   698520.,   832592.,   925136.,
      1071560.,  1183112.,  1170568.,  1285704.,  1269576.,  1388296.,
      1196624.,  1301456.,  1089240.,  1179160.,  946400.,   1020384.,
      952600.,   1045080.,  1301550.,  1420350.,  1697380.,  1843780.,
      2141370.,  2316650.,  2296490.,  2476250.,  2451610.,  2635850.,
      2267620.,  2429380.,  2030350.,  2168350.,  1738520.,  1851480.,
      1748304.,  1883856.,  2349060.,  2522340.,  3018360.,  3230904.,
      3757740.,  4011084.,  3981516.,  4240236.,  4205292.,  4469388.,
      3840888.,  4071864.,  3400260.,  3596580.,  2881872.,  3042000.,
      2896264.,  3083080.,  3847130.,  4085130.,  4892300.,  5183276.,
      6033566.,  6379310.,  6338542.,  6690558.,  6643518.,  7001806.,
      6013196.,  6325676.,  5279610.,  5544490.,  4440968.,  4656456.,
      4303432.,  4497928.,  5608266.,  5853818.,  7007148.,  7305548.,
      8501870.,  8854910.,  8703422.,  9054542.,  9008398.,  9365790.,
      8039468.,  8351180.,  6967530.,  7231770.,  5790792.,  6005768.,
      5295312.,  5483088.,  6812004.,  7048516.,  8419256.,  8706040.,
      10118604., 10457196., 10199532., 10535308., 10498572., 10839724.,
      9301176.,  9598200.,  8005540.,  8256900.,  6610128.,  6814288.,
      5741400.,  5914264.,  7323262.,  7540494.,  8988100.,  9250980.,
      10737194., 11047002., 10684954., 10991050., 10965514., 11276090.,
      9673540.,  9943588.,  8292190.,  8520430.,  6820184.,  7005336.,
      5577184.,  5726944.,  7061400.,  7249112.,  8616912.,  8843600.,
      10244744., 10511432., 10046792., 10308872., 10296328., 10561992.,
      9059792.,  9290576.,  7746840.,  7941720.,  6356448.,  6514400.,
      848096.,   922080.,   1148760.,  1243800.,  1486928.,  1604048.,
      1863624.,  2003848.,  1962632.,  2106440.,  2061640.,  2209032.,
      1900112.,  2029520.,  1695960.,  1806360.,  1448160.,  1538528.,
      1600280.,  1713240.,  2136750.,  2281150.,  2730340.,  2907460.,
      3382330.,  3593450.,  3537450.,  3753050.,  3692570.,  3912650.,
      3362020.,  3554500.,  2967950.,  3131550.,  2509080.,  2642520.,
      2697552.,  2857680.,  3566340.,  3770340.,  4515960.,  4765368.,
      5547948.,  5844300.,  5771724.,  6073452.,  5995500.,  6302604.,
      5412216.,  5680056.,  4740420.,  4967460.,  3978576.,  4163280.,
      4177800.,  4376904.,  5453658.,  5702922.,  6821772.,  7122988.,
      8283934.,  8638894.,  8501870.,  8854910.,  8703422.,  9054542.,
      7772684.,  8079020.,  6740730.,  7000490.,  5605768.,  5817160.,
      5301320.,  5499912.,  6800074.,  7048698.,  8390828.,  8691276.,
      10075374., 10429438., 10178622., 10530766., 10265486., 10615710.,
      9110828.,  9416396.,  7855210.,  8114330.,  6496840.,  6707720.,
      5934288.,  6122064.,  7521380.,  7755844.,  9194936.,  9477624.,
      10956492., 11288940., 10939116., 11268748., 10905356., 11232172.,
      9637560.,  9922296.,  8275620.,  8516740.,  6818000.,  7013968.,
      5964120.,  6132888.,  7478526.,  7688590.,  9069764.,  9322404.,
      10739114., 11035610., 10588570., 10881354., 10421642., 10710714.,
      9188932.,  9440548.,  7872990.,  8085870.,  6472536.,  6645400.,
      5326304.,  5467872.,  6590872.,  6766296.,  7918544.,  8128848.,
      9310344.,  9556552.,  9014088.,  9255688.,  8701448.,  8938440.,
      7668176.,  7874384.,  6566680.,  6741080.,  5395936.,  5537504.,
      1251552.,  1341920.,  1673560.,  1789080.,  2141264.,  2282960.,
      2655688.,  2824584.,  2754696.,  2927176.,  2853704.,  3029768.,
      2603600.,  2757584.,  2302680.,  2433560.,  1949920.,  2056672.,
      2247960.,  2381400.,  2971950.,  3141950.,  3763300.,  3971140.,
      4623290.,  4870250.,  4778410.,  5029850.,  4933530.,  5189450.,
      4456420.,  4679620.,  3905550.,  4094750.,  3279640.,  3433560.,
      3641680.,  3818192.,  4756996.,  4975332.,  5949048.,  6210744.,
      7219372.,  7525964.,  7372492.,  7676268.,  7509228.,  7810188.,
      6608760.,  6864312.,  5727300.,  5944100.,  4759888.,  4936400.,
      5273992.,  5477192.,  6743770.,  6996106.,  8303756.,  8607020.,
      9955742.,  10311726., 10075374., 10429438., 10178622., 10530766.,
      8844044.,  9144236.,  7628410.,  7883050.,  6311816.,  6519112.,
      6053448.,  6256136.,  7631434.,  7883130.,  9299372.,  9601868.,
      11059054., 11414142., 11063998., 11417166., 11052558., 11403806.,
      9494060.,  9793484.,  8169450.,  8423450.,  6744136.,  6950920.,
      6327504.,  6515280.,  7870308.,  8102724.,  9495480.,  9774072.,
      11204556., 11530860., 11088876., 11412364., 10956812., 11277484.,
      9285816.,  9558264.,  7972260.,  8203140.,  6567120.,  6754896.,
      5941080.,  6105752.,  7273342.,  7476238.,  8676292.,  8918692.,
      10151210., 10434394., 9902362.,  10181834., 9637130.,  9912890.,
      8016196.,  8249380.,  6880350.,  7077870.,  5666136.,  5826712.,
      4829664.,  4963040.,  5759896.,  5923032.,  6745040.,  6938960.,
      7786120.,  8011848.,  7391560.,  7612680.,  6980616.,  7197128.,
      5588432.,  5770064.,  4813080.,  4967000.,  3976672.,  4101856.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,     220.,    764.,    826.,    2026.,   1834.,   3418.,
      2842.,   4810.,    3850.,   6202.,   4858.,   7594.,   5276.,   7356.,
      3742.,   4910.,    860.,    2428.,   4600.,   8248.,   11732.,  17972.,
      16052.,  23060.,   20372.,  28148.,  24692.,  33236.,  29012.,  38324.,
      25976.,  32696.,   16476.,  20092.,  7356.,   10716.,  21176.,  28408.,
      41972.,  53588.,   46292.,  58676.,  50612.,  63764.,  54932.,  68852.,
      59252.,  73940.,   49720.,  60024.,  30140.,  35548.,  13852.,  19004.,
      37752.,  48568.,   72212.,  89204.,  76532.,  94292.,  80852.,  99380.,
      85172.,  104468.,  89492.,  109556., 73464.,  87352.,  43804.,  51004.,
      20348.,  27292.,   54328.,  68728.,  102452., 124820., 106772., 129908.,
      111092., 134996.,  115412., 140084., 119732., 145172., 97208.,  114680.,
      57468.,  66460.,   26844.,  35580.,  70904.,  88888.,  132692., 160436.,
      137012., 165524.,  141332., 170612., 145652., 175700., 149972., 180788.,
      120952., 142008.,  71132.,  81916.,  33340.,  43868.,  87480.,  109048.,
      162932., 196052.,  167252., 201140., 171572., 206228., 175892., 211316.,
      180212., 216404.,  144696., 169336., 84796.,  97372.,  35886.,  41790.,
      83452.,  95516.,   142954., 161434., 146266., 165130., 149578., 168826.,
      152890., 172522.,  156202., 176218., 117692., 131292., 65710.,  72638.,
      510.,    1422.,    2716.,   4796.,   6874.,   10378.,  12490.,  16378.,
      18106.,  22378.,   23722.,  28378.,  29338.,  34378.,  23132.,  26748.,
      13438.,  15374.,   12572.,  15676.,  31096.,  37816.,  56084.,  66932.,
      69620.,  81236.,   83156.,  95540.,  96692.,  109844., 110228., 124148.,
      83192.,  92984.,   46620.,  51772.,  40572.,  45468.,  90680.,  100984.,
      150836., 167060.,  164372., 181364., 177908., 195668., 191444., 209972.,
      204980., 224276.,  149944., 163320., 81788.,  88732.,  68572.,  75260.,
      150264., 164152.,  245588., 267188., 259124., 281492., 272660., 295796.,
      286196., 310100.,  299732., 324404., 216696., 233656., 116956., 125692.,
      96572.,  105052.,  209848., 227320., 340340., 367316., 353876., 381620.,
      367412., 395924.,  380948., 410228., 394484., 424532., 283448., 303992.,
      152124., 162652.,  124572., 134844., 269432., 290488., 435092., 467444.,
      448628., 481748.,  462164., 496052., 475700., 510356., 489236., 524660.,
      350200., 374328.,  187292., 199612., 152572., 164636., 329016., 353656.,
      529844., 567572.,  543380., 581876., 556916., 596180., 570452., 610484.,
      583988., 624788.,  416952., 444664., 222460., 236572., 100878., 107550.,
      214972., 228572.,  342538., 363322., 350458., 371626., 358378., 379930.,
      366298., 388234.,  374218., 396538., 264572., 279708., 139918., 147614.,
      990.,    2670.,    5212.,   8828.,   12922.,  18730.,  23146.,  29338.,
      33370.,  39946.,   43594.,  50554.,  53818.,  61162.,  40988.,  46140.,
      23134.,  25838.,   24284.,  28924.,  57592.,  67384.,  100436., 115892.,
      123188., 139412.,  145940., 162932., 168692., 186452., 191444., 209972.,
      140408., 153272.,  76764.,  83452.,  73788.,  80220.,  160184., 173560.,
      259700., 280532.,  282452., 304052., 305204., 327572., 327956., 351092.,
      350708., 374612.,  250168., 266616., 133436., 141916., 123292., 131516.,
      262776., 279736.,  418964., 445172., 441716., 468692., 464468., 492212.,
      487220., 515732.,  509972., 539252., 359928., 379960., 190108., 200380.,
      172796., 182812.,  365368., 385912., 578228., 609812., 600980., 633332.,
      623732., 656852.,  646484., 680372., 669236., 703892., 469688., 493304.,
      246780., 258844.,  222300., 234108., 467960., 492088., 737492., 774452.,
      760244., 797972.,  782996., 821492., 805748., 845012., 828500., 868532.,
      579448., 606648.,  303452., 317308., 271804., 285404., 570552., 598264.,
      896756., 939092.,  919508., 962612., 942260., 986132., 965012., 1009652.,
      987764., 1033172., 689208., 719992., 360124., 375772., 165870., 173310.,
      346492., 361628.,  542122., 565210., 554650., 578122., 567178., 591034.,
      579706., 603946.,  592234., 616858., 411452., 428124., 214126., 222590.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      27344.,   29120.,   30928.,   32768.,   38420.,   40720.,   43060.,
      45440.,   51320.,   54176.,   57080.,   60032.,   66108.,   69552.,
      73052.,   76608.,   72268.,   75824.,   79436.,   83104.,   78428.,
      82096.,   85820.,   89600.,   73976.,   77216.,   80504.,   83840.,
      67380.,   70160.,   72980.,   75840.,   58576.,   60864.,   63184.,
      65536.,   58820.,   61680.,   64580.,   67520.,   80425.,   84100.,
      87825.,   91600.,   104950.,  109480.,  114070.,  118720.,  132475.,
      137900.,  143395.,  148960.,  142135.,  147700.,  153335.,  159040.,
      151795.,  157500.,  163275.,  169120.,  140470.,  145480.,  150550.,
      155680.,  125825.,  130100.,  134425.,  138800.,  107780.,  111280.,
      114820.,  118400.,  108216.,  112416.,  116664.,  120960.,  145470.,
      150840.,  156270.,  161760.,  186996.,  193584.,  200244.,  206976.,
      232890.,  240744.,  248682.,  256704.,  246834.,  254856.,  262962.,
      271152.,  260778.,  268968.,  277242.,  285600.,  238260.,  245424.,
      252660.,  259968.,  210990.,  217080.,  223230.,  229440.,  178872.,
      183840.,  188856.,  193920.,  179564.,  185360.,  191212.,  197120.,
      238595.,  245980.,  253435.,  260960.,  303506.,  312536.,  321650.,
      330848.,  374409.,  385140.,  395969.,  406896.,  393421.,  404348.,
      415373.,  426496.,  412433.,  423556.,  434777.,  446096.,  373394.,
      383096.,  392882.,  402752.,  327915.,  336140.,  344435.,  352800.,
      275884.,  282576.,  289324.,  296128.,  271292.,  278096.,  284956.,
      291872.,  355775.,  364420.,  373135.,  381920.,  447146.,  457688.,
      468314.,  479024.,  545517.,  558012.,  570605.,  583296.,  564529.,
      577220.,  590009.,  602896.,  583541.,  596428.,  609413.,  622496.,
      523082.,  534296.,  545594.,  556976.,  455175.,  464660.,  474215.,
      483840.,  379708.,  387408.,  395164.,  402976.,  354840.,  361440.,
      368088.,  374784.,  459750.,  468120.,  476550.,  485040.,  571332.,
      581520.,  591780.,  602112.,  689682.,  701736.,  713874.,  726096.,
      708330.,  720552.,  732858.,  745248.,  726978.,  739368.,  751842.,
      764400.,  645060.,  655824.,  666660.,  677568.,  555990.,  565080.,
      574230.,  583440.,  459672.,  467040.,  474456.,  481920.,  404340.,
      410480.,  416660.,  422880.,  520525.,  528300.,  536125.,  544000.,
      642910.,  652360.,  661870.,  671440.,  771575.,  782740.,  793975.,
      805280.,  789075.,  800380.,  811755.,  823200.,  806575.,  818020.,
      829535.,  841120.,  711550.,  721480.,  731470.,  741520.,  609925.,
      618300.,  626725.,  635200.,  501620.,  508400.,  515220.,  522080.,
      415760.,  421184.,  426640.,  432128.,  533060.,  539920.,  546820.,
      553760.,  655832.,  664160.,  672536.,  680960.,  784140.,  793968.,
      803852.,  813792.,  799708.,  809648.,  819644.,  829696.,  815276.,
      825328.,  835436.,  845600.,  716504.,  725216.,  733976.,  742784.,
      611940.,  619280.,  626660.,  634080.,  501520.,  507456.,  513424.,
      519424.,  253136.,  259520.,  265936.,  272384.,  332180.,  340240.,
      348340.,  356480.,  417656.,  427424.,  437240.,  447104.,  509628.,
      521136.,  532700.,  544320.,  515788.,  527408.,  539084.,  550816.,
      521948.,  533680.,  545468.,  557312.,  467960.,  478112.,  488312.,
      498560.,  407220.,  415760.,  424340.,  432960.,  339664.,  346560.,
      353488.,  360448.,  421700.,  430320.,  438980.,  447680.,  548425.,
      559300.,  570225.,  581200.,  683830.,  697000.,  710230.,  723520.,
      827995.,  843500.,  859075.,  874720.,  837655.,  853300.,  869015.,
      884800.,  847315.,  863100.,  878955.,  894880.,  753910.,  767560.,
      781270.,  795040.,  651425.,  662900.,  674425.,  686000.,  539780.,
      549040.,  558340.,  567680.,  640440.,  651552.,  662712.,  673920.,
      828030.,  842040.,  856110.,  870240.,  1026804., 1043760., 1060788.,
      1077888., 1236858., 1256808., 1276842., 1296960., 1250802., 1270920.,
      1291122., 1311408., 1264746., 1285032., 1305402., 1325856., 1119540.,
      1137072., 1154676., 1172352., 962670.,  977400.,  992190.,  1007040.,
      794040.,  805920.,  817848.,  829824.,  913388.,  927248.,  941164.,
      955136.,  1176035., 1193500., 1211035., 1228640., 1452626., 1473752.,
      1494962., 1516256., 1743273., 1768116., 1793057., 1818096., 1762285.,
      1787324., 1812461., 1837696., 1781297., 1806532., 1831865., 1857296.,
      1570898., 1592696., 1614578., 1636544., 1345995., 1364300., 1382675.,
      1401120., 1106476., 1121232., 1136044., 1150912., 1005116., 1019984.,
      1034908., 1049888., 1293215., 1311940., 1330735., 1349600., 1596266.,
      1618904., 1641626., 1664432., 1914381., 1940988., 1967693., 1994496.,
      1933393., 1960196., 1987097., 2014096., 1952405., 1979404., 2006501.,
      2033696., 1720586., 1743896., 1767290., 1790768., 1473255., 1492820.,
      1512455., 1532160., 1210300., 1226064., 1241884., 1257760., 1080600.,
      1094112., 1107672., 1121280., 1384230., 1401240., 1418310., 1435440.,
      1701444., 1722000., 1742628., 1763328., 2032338., 2056488., 2080722.,
      2105040., 2050986., 2075304., 2099706., 2124192., 2069634., 2094120.,
      2118690., 2143344., 1816644., 1837776., 1858980., 1880256., 1549590.,
      1567320., 1585110., 1602960., 1268376., 1282656., 1296984., 1311360.,
      1089780., 1101680., 1113620., 1125600., 1391725., 1406700., 1421725.,
      1436800., 1705630., 1723720., 1741870., 1760080., 2031575., 2052820.,
      2074135., 2095520., 2049075., 2070460., 2091915., 2113440., 2066575.,
      2088100., 2109695., 2131360., 1808830., 1827400., 1846030., 1864720.,
      1538725., 1554300., 1569925., 1585600., 1256180., 1268720., 1281300.,
      1293920., 1028624., 1038656., 1048720., 1058816., 1310660., 1323280.,
      1335940., 1348640., 1602776., 1618016., 1633304., 1648640., 1905036.,
      1922928., 1940876., 1958880., 1920604., 1938608., 1956668., 1974784.,
      1936172., 1954288., 1972460., 1990688., 1691096., 1706720., 1722392.,
      1738112., 1435620., 1448720., 1461860., 1475040., 1169680., 1180224.,
      1190800., 1201408., 478928.,  489920.,  500944.,  512000.,  625940.,
      639760.,  653620.,  667520.,  783992.,  800672.,  817400.,  834176.,
      953148.,  972720.,  992348.,  1012032., 959308.,  978992.,  998732.,
      1018528., 965468.,  985264.,  1005116., 1025024., 861944.,  879008.,
      896120.,  913280.,  747060.,  761360.,  775700.,  790080.,  620752.,
      632256.,  643792.,  655360.,  784580.,  798960.,  813380.,  827840.,
      1016425., 1034500., 1052625., 1070800., 1262710., 1284520., 1306390.,
      1328320., 1523515., 1549100., 1574755., 1600480., 1533175., 1558900.,
      1584695., 1610560., 1542835., 1568700., 1594635., 1620640., 1367350.,
      1389640., 1411990., 1434400., 1177025., 1195700., 1214425., 1233200.,
      971780.,  986800.,  1001860., 1016960., 1172664., 1190688., 1208760.,
      1226880., 1510590., 1533240., 1555950., 1578720., 1866612., 1893936.,
      1921332., 1948800., 2240826., 2272872., 2305002., 2337216., 2254770.,
      2286984., 2319282., 2351664., 2268714., 2301096., 2333562., 2366112.,
      2000820., 2028720., 2056692., 2084736., 1714350., 1737720., 1761150.,
      1784640., 1409208., 1428000., 1446840., 1465728., 1647212., 1669136.,
      1691116., 1713152., 2113475., 2141020., 2168635., 2196320., 2601746.,
      2634968., 2668274., 2701664., 3112137., 3151092., 3190145., 3229296.,
      3131149., 3170300., 3209549., 3248896., 3150161., 3189508., 3228953.,
      3268496., 2768402., 2802296., 2836274., 2870336., 2364075., 2392460.,
      2420915., 2449440., 1937068., 1959888., 1982764., 2005696., 1738940.,
      1761872., 1784860., 1807904., 2230655., 2259460., 2288335., 2317280.,
      2745386., 2780120., 2814938., 2849840., 3283245., 3323964., 3364781.,
      3405696., 3302257., 3343172., 3384185., 3425296., 3321269., 3362380.,
      3403589., 3444896., 2918090., 2953496., 2988986., 3024560., 2491335.,
      2520980., 2550695., 2580480., 2040892., 2064720., 2088604., 2112544.,
      1806360., 1826784., 1847256., 1867776., 2308710., 2334360., 2360070.,
      2385840., 2831556., 2862480., 2893476., 2924544., 3374994., 3411240.,
      3447570., 3483984., 3393642., 3430056., 3466554., 3503136., 3412290.,
      3448872., 3485538., 3522288., 2988228., 3019728., 3051300., 3082944.,
      2543190., 2569560., 2595990., 2622480., 2077080., 2098272., 2119512.,
      2140800., 1775220., 1792880., 1810580., 1828320., 2262925., 2285100.,
      2307325., 2329600., 2768350., 2795080., 2821870., 2848720., 3291575.,
      3322900., 3354295., 3385760., 3309075., 3340540., 3372075., 3403680.,
      3326575., 3358180., 3389855., 3421600., 2906110., 2933320., 2960590.,
      2987920., 2467525., 2490300., 2513125., 2536000., 2010740., 2029040.,
      2047380., 2065760., 1641488., 1656128., 1670800., 1685504., 2088260.,
      2106640., 2125060., 2143520., 2549720., 2571872., 2594072., 2616320.,
      3025932., 3051888., 3077900., 3103968., 3041500., 3067568., 3093692.,
      3119872., 3057068., 3083248., 3109484., 3135776., 2665688., 2688224.,
      2710808., 2733440., 2259300., 2278160., 2297060., 2316000., 1837840.,
      1852992., 1868176., 1883392.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    43.,
      76.,    115.,   160.,   103.,   148.,   199.,   256.,   163.,   220.,
      283.,   352.,   223.,   292.,   367.,   448.,   283.,   364.,   451.,
      544.,   314.,   376.,   442.,   512.,   225.,   260.,   297.,   336.,
      42.,    88.,    138.,   192.,   260.,   368.,   484.,   608.,   686.,
      872.,   1070.,  1280.,  950.,   1160.,  1382.,  1616.,  1214.,  1448.,
      1694.,  1952.,  1478.,  1736.,  2006.,  2288.,  1742.,  2024.,  2318.,
      2624.,  1572.,  1776.,  1988.,  2208.,  1002.,  1112.,  1226.,  1344.,
      434.,   536.,   642.,   752.,   1268.,  1488.,  1716.,  1952.,  2534.,
      2888.,  3254.,  3632.,  2798.,  3176.,  3566.,  3968.,  3062.,  3464.,
      3878.,  4304.,  3326.,  3752.,  4190.,  4640.,  3590.,  4040.,  4502.,
      4976.,  3028.,  3344.,  3668.,  4000.,  1842.,  2008.,  2178.,  2352.,
      826.,   984.,   1146.,  1312.,  2276.,  2608.,  2948.,  3296.,  4382.,
      4904.,  5438.,  5984.,  4646.,  5192.,  5750.,  6320.,  4910.,  5480.,
      6062.,  6656.,  5174.,  5768.,  6374.,  6992.,  5438.,  6056.,  6686.,
      7328.,  4484.,  4912.,  5348.,  5792.,  2682.,  2904.,  3130.,  3360.,
      1218.,  1432.,  1650.,  1872.,  3284.,  3728.,  4180.,  4640.,  6230.,
      6920.,  7622.,  8336.,  6494.,  7208.,  7934.,  8672.,  6758.,  7496.,
      8246.,  9008.,  7022.,  7784.,  8558.,  9344.,  7286.,  8072.,  8870.,
      9680.,  5940.,  6480.,  7028.,  7584.,  3522.,  3800.,  4082.,  4368.,
      1610.,  1880.,  2154.,  2432.,  4292.,  4848.,  5412.,  5984.,  8078.,
      8936.,  9806.,  10688., 8342.,  9224.,  10118., 11024., 8606.,  9512.,
      10430., 11360., 8870.,  9800.,  10742., 11696., 9134.,  10088., 11054.,
      12032., 7396.,  8048.,  8708.,  9376.,  4362.,  4696.,  5034.,  5376.,
      2002.,  2328.,  2658.,  2992.,  5300.,  5968.,  6644.,  7328.,  9926.,
      10952., 11990., 13040., 10190., 11240., 12302., 13376., 10454., 11528.,
      12614., 13712., 10718., 11816., 12926., 14048., 10982., 12104., 13238.,
      14384., 8852.,  9616.,  10388., 11168., 5202.,  5592.,  5986.,  6384.,
      2197.,  2380.,  2565.,  2752.,  5122.,  5496.,  5874.,  6256.,  8791.,
      9364.,  9943.,  10528., 8995.,  9580.,  10171., 10768., 9199.,  9796.,
      10399., 11008., 9403.,  10012., 10627., 11248., 9607.,  10228., 10855.,
      11488., 7250.,  7672.,  8098.,  8528.,  4053.,  4268.,  4485.,  4704.,
      25.,    52.,    81.,    112.,   154.,   216.,   282.,   352.,   403.,
      508.,   619.,   736.,   751.,   868.,   991.,   1120.,  1099.,  1228.,
      1363.,  1504.,  1447.,  1588.,  1735.,  1888.,  1795.,  1948.,  2107.,
      2272.,  1418.,  1528.,  1642.,  1760.,  825.,   884.,   945.,   1008.,
      762.,   856.,   954.,   1056.,  1892.,  2096.,  2308.,  2528.,  3422.,
      3752.,  4094.,  4448.,  4262.,  4616.,  4982.,  5360.,  5102.,  5480.,
      5870.,  6272.,  5942.,  6344.,  6758.,  7184.,  6782.,  7208.,  7646.,
      8096.,  5124.,  5424.,  5732.,  6048.,  2874.,  3032.,  3194.,  3360.,
      2498.,  2648.,  2802.,  2960.,  5588.,  5904.,  6228.,  6560.,  9302.,
      9800.,  10310., 10832., 10142., 10664., 11198., 11744., 10982., 11528.,
      12086., 12656., 11822., 12392., 12974., 13568., 12662., 13256., 13862.,
      14480., 9268.,  9680.,  10100., 10528., 5058.,  5272.,  5490.,  5712.,
      4234.,  4440.,  4650.,  4864.,  9284.,  9712.,  10148., 10592., 15182.,
      15848., 16526., 17216., 16022., 16712., 17414., 18128., 16862., 17576.,
      18302., 19040., 17702., 18440., 19190., 19952., 18542., 19304., 20078.,
      20864., 13412., 13936., 14468., 15008., 7242.,  7512.,  7786.,  8064.,
      5970.,  6232.,  6498.,  6768.,  12980., 13520., 14068., 14624., 21062.,
      21896., 22742., 23600., 21902., 22760., 23630., 24512., 22742., 23624.,
      24518., 25424., 23582., 24488., 25406., 26336., 24422., 25352., 26294.,
      27248., 17556., 18192., 18836., 19488., 9426.,  9752.,  10082., 10416.,
      7706.,  8024.,  8346.,  8672.,  16676., 17328., 17988., 18656., 26942.,
      27944., 28958., 29984., 27782., 28808., 29846., 30896., 28622., 29672.,
      30734., 31808., 29462., 30536., 31622., 32720., 30302., 31400., 32510.,
      33632., 21700., 22448., 23204., 23968., 11610., 11992., 12378., 12768.,
      9442.,  9816.,  10194., 10576., 20372., 21136., 21908., 22688., 32822.,
      33992., 35174., 36368., 33662., 34856., 36062., 37280., 34502., 35720.,
      36950., 38192., 35342., 36584., 37838., 39104., 36182., 37448., 38726.,
      40016., 25844., 26704., 27572., 28448., 13794., 14232., 14674., 15120.,
      6253.,  6460.,  6669.,  6880.,  13330., 13752., 14178., 14608., 21247.,
      21892., 22543., 23200., 21739., 22396., 23059., 23728., 22231., 22900.,
      23575., 24256., 22723., 23404., 24091., 24784., 23215., 23908., 24607.,
      25312., 16418., 16888., 17362., 17840., 8685.,  8924.,  9165.,  9408.,
      49.,    100.,   153.,   208.,   298.,   408.,   522.,   640.,   763.,
      940.,   1123.,  1312.,  1399.,  1588.,  1783.,  1984.,  2035.,  2236.,
      2443.,  2656.,  2671.,  2884.,  3103.,  3328.,  3307.,  3532.,  3763.,
      4000.,  2522.,  2680.,  2842.,  3008.,  1425.,  1508.,  1593.,  1680.,
      1482.,  1624.,  1770.,  1920.,  3524.,  3824.,  4132.,  4448.,  6158.,
      6632.,  7118.,  7616.,  7574.,  8072.,  8582.,  9104.,  8990.,  9512.,
      10046., 10592., 10406., 10952., 11510., 12080., 11822., 12392., 12974.,
      13568., 8676.,  9072.,  9476.,  9888.,  4746.,  4952.,  5162.,  5376.,
      4562.,  4760.,  4962.,  5168.,  9908.,  10320., 10740., 11168., 16070.,
      16712., 17366., 18032., 17486., 18152., 18830., 19520., 18902., 19592.,
      20294., 21008., 20318., 21032., 21758., 22496., 21734., 22472., 23222.,
      23984., 15508., 16016., 16532., 17056., 8274.,  8536.,  8802.,  9072.,
      7642.,  7896.,  8154.,  8416.,  16292., 16816., 17348., 17888., 25982.,
      26792., 27614., 28448., 27398., 28232., 29078., 29936., 28814., 29672.,
      30542., 31424., 30230., 31112., 32006., 32912., 31646., 32552., 33470.,
      34400., 22340., 22960., 23588., 24224., 11802., 12120., 12442., 12768.,
      10722., 11032., 11346., 11664., 22676., 23312., 23956., 24608., 35894.,
      36872., 37862., 38864., 37310., 38312., 39326., 40352., 38726., 39752.,
      40790., 41840., 40142., 41192., 42254., 43328., 41558., 42632., 43718.,
      44816., 29172., 29904., 30644., 31392., 15330., 15704., 16082., 16464.,
      13802., 14168., 14538., 14912., 29060., 29808., 30564., 31328., 45806.,
      46952., 48110., 49280., 47222., 48392., 49574., 50768., 48638., 49832.,
      51038., 52256., 50054., 51272., 52502., 53744., 51470., 52712., 53966.,
      55232., 36004., 36848., 37700., 38560., 18858., 19288., 19722., 20160.,
      16882., 17304., 17730., 18160., 35444., 36304., 37172., 38048., 55718.,
      57032., 58358., 59696., 57134., 58472., 59822., 61184., 58550., 59912.,
      61286., 62672., 59966., 61352., 62750., 64160., 61382., 62792., 64214.,
      65648., 42836., 43792., 44756., 45728., 22386., 22872., 23362., 23856.,
      10309., 10540., 10773., 11008., 21538., 22008., 22482., 22960., 33703.,
      34420., 35143., 35872., 34483., 35212., 35947., 36688., 35263., 36004.,
      36751., 37504., 36043., 36796., 37555., 38320., 36823., 37588., 38359.,
      39136., 25586., 26104., 26626., 27152., 13317., 13580., 13845., 14112.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      215248.,   229392.,   243792.,   258448.,   302820.,   321140.,
      339780.,   358740.,   404920.,   427672.,   450808.,   474328.,
      522060.,   549500.,   577388.,   605724.,   571116.,   599452.,
      628236.,   657468.,   620172.,   649404.,   679084.,   709212.,
      585400.,   611224.,   637432.,   664024.,   533540.,   555700.,
      578180.,   600980.,   464080.,   482320.,   500816.,   519568.,
      464900.,   487700.,   510820.,   534260.,   636125.,   665425.,
      695125.,   725225.,   830630.,   866750.,   903350.,   940430.,
      1049055.,  1092315.,  1136135.,  1180515.,  1126055.,  1170435.,
      1215375.,  1260875.,  1203055.,  1248555.,  1294615.,  1341235.,
      1113830.,  1153790.,  1194230.,  1235150.,  998125.,   1032225.,
      1066725.,  1101625.,  855300.,   883220.,   911460.,   940020.,
      857400.,   890904.,   924792.,   959064.,   1153110.,  1195950.,
      1239270.,  1283070.,  1482900.,  1535460.,  1588596.,  1642308.,
      1847538.,  1910202.,  1973538.,  2037546.,  1958754.,  2022762.,
      2087442.,  2152794.,  2069970.,  2135322.,  2201346.,  2268042.,
      1891860.,  1949028.,  2006772.,  2065092.,  1675830.,  1724430.,
      1773510.,  1823070.,  1421112.,  1460760.,  1500792.,  1541208.,
      1425004.,  1471260.,  1517964.,  1565116.,  1894095.,  1953035.,
      2012535.,  2072595.,  2410114.,  2482186.,  2554930.,  2628346.,
      2973957.,  3059609.,  3146045.,  3233265.,  3125661.,  3212881.,
      3300885.,  3389673.,  3277365.,  3366153.,  3455725.,  3546081.,
      2967874.,  3045322.,  3123442.,  3202234.,  2606975.,  2672635.,
      2738855.,  2805635.,  2193772.,  2247196.,  2301068.,  2355388.,
      2156812.,  2211132.,  2265900.,  2321116.,  2829015.,  2898035.,
      2967615.,  3037755.,  3556210.,  3640378.,  3725218.,  3810730.,
      4339293.,  4439057.,  4539605.,  4640937.,  4490997.,  4592329.,
      4694445.,  4797345.,  4642701.,  4745601.,  4849285.,  4953753.,
      4162354.,  4251898.,  4342114.,  4433002.,  3622535.,  3698275.,
      3774575.,  3851435.,  3022348.,  3083836.,  3145772.,  3208156.,
      2825592.,  2878296.,  2931384.,  2984856.,  3661350.,  3728190.,
      3795510.,  3863310.,  4550388.,  4631748.,  4713684.,  4796196.,
      5493474.,  5589738.,  5686674.,  5784282.,  5642322.,  5739930.,
      5838210.,  5937162.,  5791170.,  5890122.,  5989746.,  6090042.,
      5139060.,  5225028.,  5311572.,  5398692.,  4429830.,  4502430.,
      4575510.,  4649070.,  3662712.,  3721560.,  3780792.,  3840408.,
      3222500.,  3271540.,  3320900.,  3370580.,  4148725.,  4210825.,
      4273325.,  4336225.,  5124470.,  5199950.,  5275910.,  5352350.,
      6150375.,  6239555.,  6329295.,  6419595.,  6290095.,  6380395.,
      6471255.,  6562675.,  6429815.,  6521235.,  6613215.,  6705755.,
      5672630.,  5751950.,  5831750.,  5912030.,  4862725.,  4929625.,
      4996925.,  5064625.,  3999460.,  4053620.,  4108100.,  4162900.,
      3315280.,  3358608.,  3402192.,  3446032.,  4250820.,  4305620.,
      4360740.,  4416180.,  5230072.,  5296600.,  5363512.,  5430808.,
      6253548.,  6332060.,  6411020.,  6490428.,  6377868.,  6457276.,
      6537132.,  6617436.,  6502188.,  6582492.,  6663244.,  6744444.,
      5714680.,  5784280.,  5854264.,  5924632.,  4880900.,  4939540.,
      4998500.,  5057780.,  4000336.,  4047760.,  4095440.,  4143376.,
      2012368.,  2063376.,  2114640.,  2166160.,  2641380.,  2705780.,
      2770500.,  2835540.,  3321784.,  3399832.,  3478264.,  3557080.,
      4054092.,  4146044.,  4238444.,  4331292.,  4103148.,  4195996.,
      4289292.,  4383036.,  4152204.,  4245948.,  4340140.,  4434780.,
      3723448.,  3804568.,  3886072.,  3967960.,  3240740.,  3308980.,
      3377540.,  3446420.,  2703568.,  2758672.,  2814032.,  2869648.,
      3356420.,  3425300.,  3494500.,  3564020.,  4365725.,  4452625.,
      4539925.,  4627625.,  5444390.,  5549630.,  5655350.,  5761550.,
      6593055.,  6716955.,  6841415.,  6966435.,  6670055.,  6795075.,
      6920655.,  7046795.,  6747055.,  6873195.,  6999895.,  7127155.,
      6004070.,  6113150.,  6222710.,  6332750.,  5188525.,  5280225.,
      5372325.,  5464825.,  4299780.,  4373780.,  4448100.,  4522740.,
      5101368.,  5190168.,  5279352.,  5368920.,  6596310.,  6708270.,
      6820710.,  6933630.,  8180628.,  8316132.,  8452212.,  8588868.,
      9855090.,  10014522., 10174626., 10335402., 9966306.,  10127082.,
      10288530., 10450650., 10077522., 10239642., 10402434., 10565898.,
      8921364.,  9061476.,  9202164.,  9343428.,  7671990.,  7789710.,
      7907910.,  8026590.,  6328632.,  6423576.,  6518904.,  6614616.,
      7256940.,  7359516.,  7462540.,  7566012.,  9315087.,  9442379.,
      9570231.,  9698643.,  11468290., 11620746., 11773874., 11927674.,
      13717445., 13895513., 14074365., 14254001., 13784157., 13959697.,
      14136021., 14313129., 13834485., 14007497., 14181293., 14355873.,
      12161218., 12310858., 12461170., 12612154., 10388415., 10514235.,
      10640615., 10767555., 8515180.,  8616732.,  8718732.,  8821180.,
      7648780.,  7743036.,  7837740.,  7932892.,  9726743.,  9843635.,
      9961087.,  10079099., 11891442., 12031418., 12172066., 12313386.,
      14143773., 14307281., 14471573., 14636649., 14095797., 14256777.,
      14418541., 14581089., 14031437., 14189889., 14349125., 14509145.,
      12305074., 12442234., 12580066., 12718570., 10487495., 10602915.,
      10718895., 10835435., 8577804.,  8671036.,  8764716.,  8858844.,
      7567224.,  7650648.,  7734456.,  7818648.,  9540774.,  9643966.,
      9747638.,  9851790.,  11590132., 11713476., 11837396., 11961892.,
      13716066., 13859946., 14004498., 14149722., 13550546., 13691674.,
      13833474., 13975946., 13368642., 13507018., 13646066., 13785786.,
      11701620., 11821380., 11941716., 12062628., 9954950.,  10055710.,
      10156950., 10258670., 8127864.,  8209240.,  8291000.,  8373144.,
      6955748.,  7026292.,  7097156.,  7168340.,  8687285.,  8774217.,
      8861549.,  8949281.,  10481654., 10585294., 10689414., 10794014.,
      12339495., 12460163., 12581391., 12703179., 12050159., 12167851.,
      12286103., 12404915., 11744439., 11859155., 11974431., 12090267.,
      10267958., 10367246., 10467014., 10567262., 8725445.,  8808985.,
      8892925.,  8977265.,  7116260.,  7183732.,  7251524.,  7319636.,
      5782096.,  5837712.,  5893584.,  5949712.,  7125956.,  7194068.,
      7262500.,  7331252.,  8517624.,  8598488.,  8679736.,  8761368.,
      9957612.,  10051484., 10145804., 10240572., 9538188.,  9628860.,
      9719980.,  9811548.,  9102380.,  9189852.,  9277772.,  9366140.,
      7955704.,  8031448.,  8107576.,  8184088.,  6758660.,  6822420.,
      6886500.,  6950900.,  5510736.,  5562256.,  5614032.,  5666064.,
      614608.,   636944.,   659536.,   682384.,   822500.,   851060.,
      879940.,   909140.,   1053112.,  1088152.,  1123576.,  1159384.,
      1306956.,  1348732.,  1390956.,  1433628.,  1356012.,  1398684.,
      1441804.,  1485372.,  1405068.,  1448636.,  1492652.,  1537116.,
      1282744.,  1320856.,  1359352.,  1398232.,  1135140.,  1167540.,
      1200260.,  1233300.,  961744.,   988176.,   1014864.,  1041808.,
      1107460.,  1140500.,  1173860.,  1207540.,  1464925.,  1507025.,
      1549525.,  1592425.,  1855910.,  1907390.,  1959350.,  2011790.,
      2281055.,  2342235.,  2403975.,  2466275.,  2358055.,  2420355.,
      2483215.,  2546635.,  2435055.,  2498475.,  2562455.,  2626995.,
      2200550.,  2255870.,  2311670.,  2367950.,  1929325.,  1976225.,
      2023525.,  2071225.,  1620740.,  1658900.,  1697380.,  1736180.,
      1800504.,  1846296.,  1892472.,  1939032.,  2362710.,  2420910.,
      2479590.,  2538750.,  2971284.,  3042276.,  3113844.,  3185988.,
      3626994.,  3711162.,  3796002.,  3881514.,  3738210.,  3823722.,
      3909906.,  3996762.,  3849426.,  3936282.,  4023810.,  4112010.,
      3453972.,  3529572.,  3605748.,  3682500.,  3008310.,  3072270.,
      3136710.,  3201630.,  2511672.,  2563608.,  2615928.,  2668632.,
      2725996.,  2786588.,  2847628.,  2909116.,  3556175.,  3633035.,
      3710455.,  3788435.,  4447618.,  4541194.,  4635442.,  4730362.,
      5401221.,  5511961.,  5623485.,  5735793.,  5552925.,  5665233.,
      5778325.,  5892201.,  5704629.,  5818505.,  5933165.,  6048609.,
      5091394.,  5190346.,  5289970.,  5390266.,  4412415.,  4495995.,
      4580135.,  4664835.,  3666796.,  3734556.,  3802764.,  3871420.,
      3457804.,  3526460.,  3595564.,  3665116.,  4491095.,  4578035.,
      4665535.,  4753595.,  5593714.,  5699386.,  5805730.,  5912746.,
      6766557.,  6891409.,  7017045.,  7143465.,  6918261.,  7044681.,
      7171885.,  7299873.,  7069965.,  7197953.,  7326725.,  7456281.,
      6285874.,  6396922.,  6508642.,  6621034.,  5427975.,  5521635.,
      5615855.,  5710635.,  4495372.,  4571196.,  4647468.,  4724188.,
      4112760.,  4177752.,  4243128.,  4308888.,  5301030.,  5383230.,
      5465910.,  5549070.,  6554868.,  6654660.,  6755028.,  6855972.,
      7875042.,  7992810.,  8111250.,  8230362.,  8023890.,  8143002.,
      8262786.,  8383242.,  8172738.,  8293194.,  8414322.,  8536122.,
      7217268.,  7321668.,  7426644.,  7532196.,  6192390.,  6280350.,
      6368790.,  6457710.,  5097336.,  5168472.,  5239992.,  5311896.,
      4438500.,  4497780.,  4557380.,  4617300.,  5694325.,  5769225.,
      5844525.,  5920225.,  7009910.,  7100750.,  7192070.,  7283870.,
      8385895.,  8492995.,  8600655.,  8708875.,  8525615.,  8633835.,
      8742615.,  8851955.,  8665335.,  8774675.,  8884575.,  8995035.,
      7619510.,  7714190.,  7809350.,  7904990.,  6510725.,  6590425.,
      6670525.,  6751025.,  5338340.,  5402740.,  5467460.,  5532500.,
      4402768.,  4454288.,  4506064.,  4558096.,  5630660.,  5695700.,
      5761060.,  5826740.,  6910456.,  6989272.,  7068472.,  7148056.,
      8242668.,  8335516.,  8428812.,  8522556.,  8366988.,  8460732.,
      8554924.,  8649564.,  8491308.,  8585948.,  8681036.,  8776572.,
      7444216.,  7526104.,  7608376.,  7691032.,  6342660.,  6411540.,
      6480740.,  6550260.,  5186128.,  5241744.,  5297616.,  5353744.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      287.,    539.,    839.,    1187.,   743.,    1091.,   1487.,   1931.,
      1199.,   1643.,   2135.,   2675.,   1655.,   2195.,   2783.,   3419.,
      2111.,   2747.,   3431.,   4163.,   2394.,   2882.,   3402.,   3954.,
      1733.,   2009.,   2301.,   2609.,   250.,    610.,    1002.,   1426.,
      1876.,   2724.,   3636.,   4612.,   5134.,   6598.,   8158.,   9814.,
      7198.,   8854.,   10606.,  12454.,  9262.,   11110.,  13054.,  15094.,
      11326.,  13366.,  15502.,  17734.,  13390.,  15622.,  17950.,  20374.,
      12180.,  13796.,  15476.,  17220.,  7802.,   8674.,   9578.,   10514.,
      3274.,   4082.,   4922.,   5794.,   9716.,   11460.,  13268.,  15140.,
      19582.,  22390.,  25294.,  28294.,  21646.,  24646.,  27742.,  30934.,
      23710.,  26902.,  30190.,  33574.,  25774.,  29158.,  32638.,  36214.,
      27838.,  31414.,  35086.,  38854.,  23604.,  26116.,  28692.,  31332.,
      14410.,  15730.,  17082.,  18466.,  6298.,   7554.,   8842.,   10162.,
      17556.,  20196.,  22900.,  25668.,  34030.,  38182.,  42430.,  46774.,
      36094.,  40438.,  44878.,  49414.,  38158.,  42694.,  47326.,  52054.,
      40222.,  44950.,  49774.,  54694.,  42286.,  47206.,  52222.,  57334.,
      35028.,  38436.,  41908.,  45444.,  21018.,  22786.,  24586.,  26418.,
      9322.,   11026.,  12762.,  14530.,  25396.,  28932.,  32532.,  36196.,
      48478.,  53974.,  59566.,  65254.,  50542.,  56230.,  62014.,  67894.,
      52606.,  58486.,  64462.,  70534.,  54670.,  60742.,  66910.,  73174.,
      56734.,  62998.,  69358.,  75814.,  46452.,  50756.,  55124.,  59556.,
      27626.,  29842.,  32090.,  34370.,  12346.,  14498.,  16682.,  18898.,
      33236.,  37668.,  42164.,  46724.,  62926.,  69766.,  76702.,  83734.,
      64990.,  72022.,  79150.,  86374.,  67054.,  74278.,  81598.,  89014.,
      69118.,  76534.,  84046.,  91654.,  71182.,  78790.,  86494.,  94294.,
      57876.,  63076.,  68340.,  73668.,  34234.,  36898.,  39594.,  42322.,
      15370.,  17970.,  20602.,  23266.,  41076.,  46404.,  51796.,  57252.,
      77374.,  85558.,  93838.,  102214., 79438.,  87814.,  96286.,  104854.,
      81502.,  90070.,  98734.,  107494., 83566.,  92326.,  101182., 110134.,
      85630.,  94582.,  103630., 112774., 69300.,  75396.,  81556.,  87780.,
      40842.,  43954.,  47098.,  50274.,  17213.,  18673.,  20149.,  21641.,
      40234.,  43218.,  46234.,  49282.,  69191.,  73763.,  78383.,  83051.,
      70799.,  75467.,  80183.,  84947.,  72407.,  77171.,  81983.,  86843.,
      74015.,  78875.,  83783.,  88739.,  75623.,  80579.,  85583.,  90635.,
      57162.,  60530.,  63930.,  67362.,  31997.,  33713.,  35445.,  37193.,
      149.,    361.,    589.,    833.,    1114.,   1602.,   2122.,   2674.,
      3023.,   3851.,   4727.,   5651.,   5783.,   6707.,   7679.,   8699.,
      8543.,   9563.,   10631.,  11747.,  11303.,  12419.,  13583.,  14795.,
      14063.,  15275.,  16535.,  17843.,  11130.,  12002.,  12906.,  13842.,
      6485.,   6953.,   7437.,   7937.,   5914.,   6658.,   7434.,   8242.,
      14740.,  16356.,  18036.,  19780.,  26734.,  29350.,  32062.,  34870.,
      33406.,  36214.,  39118.,  42118.,  40078.,  43078.,  46174.,  49366.,
      46750.,  49942.,  53230.,  56614.,  53422.,  56806.,  60286.,  63862.,
      40404.,  42788.,  45236.,  47748.,  22682.,  23938.,  25226.,  26546.,
      19690.,  20882.,  22106.,  23362.,  44084.,  46596.,  49172.,  51812.,
      73438.,  77398.,  81454.,  85606.,  80110.,  84262.,  88510.,  92854.,
      86782.,  91126.,  95566.,  100102., 93454.,  97990.,  102622., 107350.,
      100126., 104854., 109678., 114598., 73332.,  76612.,  79956.,  83364.,
      40042.,  41746.,  43482.,  45250.,  33466.,  35106.,  36778.,  38482.,
      73428.,  76836.,  80308.,  83844.,  120142., 125446., 130846., 136342.,
      126814., 132310., 137902., 143590., 133486., 139174., 144958., 150838.,
      140158., 146038., 152014., 158086., 146830., 152902., 159070., 165334.,
      106260., 110436., 114676., 118980., 57402.,  59554.,  61738.,  63954.,
      47242.,  49330.,  51450.,  53602.,  102772., 107076., 111444., 115876.,
      166846., 173494., 180238., 187078., 173518., 180358., 187294., 194326.,
      180190., 187222., 194350., 201574., 186862., 194086., 201406., 208822.,
      193534., 200950., 208462., 216070., 139188., 144260., 149396., 154596.,
      74762.,  77362.,  79994.,  82658.,  61018.,  63554.,  66122.,  68722.,
      132116., 137316., 142580., 147908., 213550., 221542., 229630., 237814.,
      220222., 228406., 236686., 245062., 226894., 235270., 243742., 252310.,
      233566., 242134., 250798., 259558., 240238., 248998., 257854., 266806.,
      172116., 178084., 184116., 190212., 92122.,  95170.,  98250.,  101362.,
      74794.,  77778.,  80794.,  83842.,  161460., 167556., 173716., 179940.,
      260254., 269590., 279022., 288550., 266926., 276454., 286078., 295798.,
      273598., 283318., 293134., 303046., 280270., 290182., 300190., 310294.,
      286942., 297046., 307246., 317542., 205044., 211908., 218836., 225828.,
      109482., 112978., 116506., 120066., 49613.,  51265.,  52933.,  54617.,
      105802., 109170., 112570., 116002., 168695., 173843., 179039., 184283.,
      172607., 177851., 183143., 188483., 176519., 181859., 187247., 192683.,
      180431., 185867., 191351., 196883., 184343., 189875., 195455., 201083.,
      130410., 134162., 137946., 141762., 69005.,  70913.,  72837.,  74777.,
      293.,    697.,    1117.,   1553.,   2170.,   3042.,   3946.,   4882.,
      5759.,   7163.,   8615.,   10115.,  10823.,  12323.,  13871.,  15467.,
      15887.,  17483.,  19127.,  20819.,  20951.,  22643.,  24383.,  26171.,
      26015.,  27803.,  29639.,  31523.,  19866.,  21122.,  22410.,  23730.,
      11237.,  11897.,  12573.,  13265.,  11578.,  12706.,  13866.,  15058.,
      27604.,  29988.,  32436.,  34948.,  48334.,  52102.,  55966.,  59926.,
      59614.,  63574.,  67630.,  71782.,  70894.,  75046.,  79294.,  83638.,
      82174.,  86518.,  90958.,  95494.,  93454.,  97990.,  102622., 107350.,
      68628.,  71780.,  74996.,  78276.,  37562.,  39202.,  40874.,  42578.,
      36106.,  37682.,  39290.,  40930.,  78452.,  81732.,  85076.,  88484.,
      127294., 132406., 137614., 142918., 138574., 143878., 149278., 154774.,
      149854., 155350., 160942., 166630., 161134., 166822., 172606., 178486.,
      172414., 178294., 184270., 190342., 123060., 127108., 131220., 135396.,
      65674.,  67762.,  69882.,  72034.,  60634.,  62658.,  64714.,  66802.,
      129300., 133476., 137716., 142020., 206254., 212710., 219262., 225910.,
      217534., 224182., 230926., 237766., 228814., 235654., 242590., 249622.,
      240094., 247126., 254254., 261478., 251374., 258598., 265918., 273334.,
      177492., 182436., 187444., 192516., 93786.,  96322.,  98890.,  101490.,
      85162.,  87634.,  90138.,  92674.,  180148., 185220., 190356., 195556.,
      285214., 293014., 300910., 308902., 296494., 304486., 312574., 320758.,
      307774., 315958., 324238., 332614., 319054., 327430., 335902., 344470.,
      330334., 338902., 347566., 356326., 231924., 237764., 243668., 249636.,
      121898., 124882., 127898., 130946., 109690., 112610., 115562., 118546.,
      230996., 236964., 242996., 249092., 364174., 373318., 382558., 391894.,
      375454., 384790., 394222., 403750., 386734., 396262., 405886., 415606.,
      398014., 407734., 417550., 427462., 409294., 419206., 429214., 439318.,
      286356., 293092., 299892., 306756., 150010., 153442., 156906., 160402.,
      134218., 137586., 140986., 144418., 281844., 288708., 295636., 302628.,
      443134., 453622., 464206., 474886., 454414., 465094., 475870., 486742.,
      465694., 476566., 487534., 498598., 476974., 488038., 499198., 510454.,
      488254., 499510., 510862., 522310., 340788., 348420., 356116., 363876.,
      178122., 182002., 185914., 189858., 82013.,  83857.,  85717.,  87593.,
      171370., 175122., 178906., 182722., 268199., 273923., 279695., 285515.,
      274415., 280235., 286103., 292019., 280631., 286547., 292511., 298523.,
      286847., 292859., 298919., 305027., 293063., 299171., 305327., 311531.,
      203658., 207794., 211962., 216162., 106013., 108113., 110229., 112361.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1708000.,  1820896.,  1935840.,  2052832.,  2404440.,  2550680.,
      2699480.,  2850840.,  3211728.,  3385168.,  3561680.,  3741264.,
      4106312.,  4309000.,  4515272.,  4725128.,  4427208.,  4628872.,
      4834120.,  5042952.,  4715336.,  4915976.,  5120200.,  5328008.,
      4309456.,  4482896.,  4659408.,  4838992.,  3767128.,  3911320.,
      4058072.,  4207384.,  3084256.,  3197152.,  3312096.,  3429088.,
      3479512.,  3628824.,  3780696.,  3935128.,  4701550.,  4886398.,
      5074446.,  5265694.,  5809476.,  6024228.,  6242820.,  6465252.,
      7010138.,  7257354.,  7509050.,  7765226.,  7226682.,  7474666.,
      7727130.,  7984074.,  7410458.,  7659210.,  7912442.,  8170154.,
      6477892.,  6690596.,  6907140.,  7127524.,  5366574.,  5540670.,
      5717966.,  5898462.,  4071384.,  4204312.,  4339800.,  4477848.,
      5257168.,  5426512.,  5598928.,  5774416.,  6675588.,  6886756.,
      7101764.,  7320612.,  7771320.,  8019192.,  8271672.,  8528760.,
      8981612.,  9269260.,  9562284.,  9860684.,  9012908.,  9303116.,
      9598700.,  9899660.,  9011436.,  9304204.,  9602348.,  9905868.,
      7675576.,  7927544.,  8184120.,  8445304.,  6135044.,  6343140.,
      6555076.,  6770852.,  4383696.,  4544848.,  4709072.,  4876368.,
      6336456.,  6542216.,  6751560.,  6964488.,  7817626.,  8075594.,
      8338042.,  8604970.,  8783916.,  9089484.,  9400428.,  9716748.,
      9902974.,  10259726., 10622750., 10992046., 9799198.,  10160302.,
      10527678., 10901326., 9662654.,  10028110., 10399838., 10777838.,
      8108332.,  8424140.,  8745324.,  9071884.,  6307034.,  6569610.,
      6836666.,  7108202.,  4251592.,  4457352.,  4666696.,  4879624.,
      6740296.,  6953224.,  7169736.,  7389832.,  8031866.,  8296746.,
      8566106.,  8839946.,  8578156.,  8890380.,  9207980.,  9530956.,
      9276190.,  9639342.,  10008766., 10384462., 8741310.,  9100622.,
      9466206.,  9838062.,  8375390.,  8739054.,  9108990.,  9485198.,
      7793004.,  8107276.,  8426924.,  8751948.,  6964666.,  7225962.,
      7491738.,  7761994.,  5883208.,  6087944.,  6296264.,  6508168.,
      5374672.,  5574736.,  5777872.,  5984080.,  6992196.,  7239716.,
      7491076.,  7746276.,  8670008.,  8959864.,  9254328.,  9553400.,
      10484908., 10820172., 11160812., 11506828., 10517228., 10846860.,
      11181868., 11522252., 10947884., 11280076., 11617644., 11960588.,
      9679160.,  9964920.,  10255288., 10550264., 8183236.,  8419492.,
      8659588.,  8903524.,  6453968.,  6637648.,  6824400.,  7014224.,
      6030424.,  6201240.,  6374616.,  6550552.,  7389710.,  7599390.,
      7812270.,  8028350.,  8549892.,  8792804.,  9039556.,  9290148.,
      9816122.,  10094826., 10378010., 10665674., 9316890.,  9588170.,
      9863930.,  10144170., 9445370.,  9717418.,  9993946.,  10274954.,
      8023300.,  8255972.,  8492484.,  8732836.,  6409166.,  6599902.,
      6793838.,  6990974.,  4597848.,  4744088.,  4892888.,  5044248.,
      4255200.,  4380384.,  4507616.,  4636896.,  4707544.,  4858904.,
      5012824.,  5169304.,  5247184.,  5426768.,  5609424.,  5795152.,
      5878216.,  6088072.,  6301512.,  6518536.,  5424968.,  5633800.,
      5846216.,  6062216.,  5861576.,  6077576.,  6297160.,  6520328.,
      5014736.,  5202512.,  5393360.,  5587280.,  4027352.,  4184856.,
      4344920.,  4507544.,  2895328.,  3020512.,  3147744.,  3277024.,
      3084256.,  3197152.,  3312096.,  3429088.,  4124760.,  4271000.,
      4419800.,  4571160.,  5281232.,  5462864.,  5647568.,  5835344.,
      6323272.,  6534152.,  6748616.,  6966664.,  6447560.,  6657416.,
      6870856.,  7087880.,  6539080.,  6747912.,  6960328.,  7176328.,
      5821904.,  6003536.,  6188240.,  6376016.,  4968280.,  5120664.,
      5275608.,  5433112.,  3974112.,  4095200.,  4218336.,  4343520.,
      4910040.,  5067544.,  5227608.,  5390232.,  6248046.,  6443134.,
      6641422.,  6842910.,  7714628.,  7949860.,  8188932.,  8431844.,
      8851034.,  9120778.,  9395002.,  9673706.,  8870970.,  9141482.,
      9416474.,  9695946.,  8858138.,  9129418.,  9405178.,  9685418.,
      7612996.,  7846180.,  8083204.,  8324068.,  6180910.,  6373438.,
      6569166.,  6768094.,  4556760.,  4706072.,  4857944.,  5012376.,
      5922768.,  6108496.,  6297296.,  6489168.,  7286404.,  7518052.,
      7753540.,  7992868.,  8807608.,  9088248.,  9373496.,  9663352.,
      9799276.,  10123788., 10453676., 10788940., 9633964.,  9961036.,
      10293484., 10631308., 9435884.,  9765516.,  10100524., 10440908.,
      7990968.,  8275704.,  8565048.,  8859000.,  6324996.,  6561764.,
      6802372.,  7046820.,  4431824.,  4617552.,  4806352.,  4998224.,
      6423496.,  6637448.,  6854984.,  7076104.,  7665818.,  7929930.,
      8198522.,  8471594.,  9078316.,  9396172.,  9719404.,  10048012.,
      9745534.,  10112526., 10485790., 10865326., 9276190.,  9639342.,
      10008766., 10384462., 8741310.,  9100622.,  9466206.,  9838062.,
      7229228.,  7540940.,  7858028.,  8180492.,  6526938.,  6787466.,
      7052474.,  7321962.,  5578696.,  5784456.,  5993800.,  6206728.,
      5347656.,  5560584.,  5777096.,  5997192.,  6957434.,  7220266.,
      7487578.,  7759370.,  8736364.,  9052684.,  9374380.,  9701452.,
      10588190., 10953390., 11324862., 11702606., 10708670., 11070030.,
      11437662., 11811566., 10763614., 11121134., 11484926., 11854990.,
      9633644.,  9943820.,  10259372., 10580300., 8265914.,  8525162.,
      8788890.,  9057098.,  6653256.,  6857992.,  7066312.,  7278216.,
      6516432.,  6708304.,  6903248.,  7101264.,  7959364.,  8194596.,
      8433668.,  8676580.,  9549624.,  9831288.,  10117560., 10408440.,
      10960556., 11283532., 11611884., 11945612., 10599660., 10917004.,
      11239724., 11567820., 10173228., 10484940., 10802028., 11124492.,
      8816952.,  9086328.,  9360312.,  9638904.,  7249860.,  7473828.,
      7701636.,  7933284.,  5465808.,  5641296.,  5819856.,  6001488.,
      5282904.,  5437336.,  5594328.,  5753880.,  5917454.,  6104606.,
      6294958.,  6488510.,  6661124.,  6883556.,  7109828.,  7339940.,
      7519034.,  7779306.,  8044058.,  8313290.,  7221530.,  7482570.,
      7748090.,  8018090.,  6891258.,  7153066.,  7419354.,  7690122.,
      5997316.,  6225892.,  6458308.,  6694564.,  4935886.,  5128670.,
      5324654.,  5523838.,  3701848.,  3856280.,  4013272.,  4172824.,
      3834336.,  3967712.,  4103136.,  4240608.,  3647704.,  3807256.,
      3969368.,  4134040.,  3548368.,  3736144.,  3926992.,  4120912.,
      4589000.,  4807048.,  5028680.,  5253896.,  4987720.,  5204744.,
      5425352.,  5649544.,  5353672.,  5569672.,  5789256.,  6012424.,
      4916432.,  5104208.,  5295056.,  5488976.,  4338648.,  4496152.,
      4656216.,  4818840.,  3616224.,  3741408.,  3868640.,  3997920.,
      3543008.,  3655904.,  3770848.,  3887840.,  4698200.,  4844440.,
      4993240.,  5144600.,  5969360.,  6150992.,  6335696.,  6523472.,
      7360584.,  7579656.,  7802312.,  8028552.,  7288264.,  7506312.,
      7727944.,  7953160.,  7183176.,  7400200.,  7620808.,  7845000.,
      6384080.,  6573904.,  6766800.,  6962768.,  5448536.,  5609112.,
      5772248.,  5937944.,  4372448.,  4501728.,  4633056.,  4766432.,
      5423064.,  5588760.,  5757016.,  5927832.,  6647662.,  6852990.,
      7061518.,  7273246.,  8009028.,  8256548.,  8507908.,  8763108.,
      9512282.,  9804554.,  10101306., 10402538., 9335610.,  9628650.,
      9926170.,  10228170., 9126170.,  9419978.,  9718266.,  10021034.,
      7797828.,  8051492.,  8308996.,  8570340.,  6274350.,  6485310.,
      6699470.,  6916830.,  4550616.,  4716312.,  4884568.,  5055384.,
      5665744.,  5859664.,  6056656.,  6256720.,  6707332.,  6943076.,
      7182660.,  7426084.,  7890104.,  8170744.,  8455992.,  8745848.,
      9220204.,  9548812.,  9882796.,  10222156., 8722092.,  9045068.,
      9373420.,  9707148.,  8158444.,  8475788.,  8798508.,  9126604.,
      6637240.,  6905592.,  7178552.,  7456120.,  5113092.,  5337572.,
      5565892.,  5798052.,  4426704.,  4604240.,  4784848.,  4968528.,
      5227464.,  5441416.,  5658952.,  5880072.,  6787994.,  7050058.,
      7316602.,  7587626.,  8510508.,  8824268.,  9143404.,  9467916.,
      10402174., 10771214., 11146526., 11528110., 10588190., 10953390.,
      11324862., 11702606., 10708670., 11070030., 11437662., 11811566.,
      9266476.,  9574092.,  9887084.,  10205452., 8024794.,  8283274.,
      8546234.,  8813674.,  6545352.,  6751112.,  6960456.,  7173384.,
      6740296.,  6953224.,  7169736.,  7389832.,  8209530.,  8470314.,
      8735578.,  9005322.,  9839724.,  10151948., 10469548., 10792524.,
      11638046., 12005294., 12378814., 12758606., 11365310., 11728718.,
      12098398., 12474350., 11027038., 11386606., 11752446., 12124558.,
      9147756.,  9453836.,  9765292.,  10082124., 7699386.,  7956586.,
      8218266.,  8484426.,  6014280.,  6219016.,  6427336.,  6639240.,
      6249168.,  6432848.,  6619600.,  6809424.,  7058756.,  7281700.,
      7508484.,  7739108.,  7999288.,  8264568.,  8534456.,  8808952.,
      9076908.,  9387596.,  9703660.,  10025100., 8884972.,  9198220.,
      9516844.,  9840844.,  8660268.,  8976076.,  9297260.,  9623820.,
      6850872.,  7120248.,  7394232.,  7672824.,  5736900.,  5964964.,
      6196868.,  6432612.,  4422352.,  4606032.,  4792784.,  4982608.,
      5571672.,  5742488.,  5915864.,  6091800.,  5715982.,  5921566.,
      6130350.,  6342334.,  5977604.,  6220516.,  6467268.,  6717860.,
      6361658.,  6644458.,  6931738.,  7223498.,  6916122.,  7199690.,
      7487738.,  7780266.,  7437818.,  7722154.,  8010970.,  8304266.,
      6766852.,  7007716.,  7252420.,  7500964.,  5990862.,  6193886.,
      6400110.,  6609534.,  5034072.,  5196696.,  5361880.,  5529624.,
      3970528.,  4112096.,  4255712.,  4401376.,  5012696.,  5180440.,
      5350744.,  5523608.,  6142160.,  6338128.,  6537168.,  6739280.,
      7363016.,  7589256.,  7819080.,  8052488.,  7565128.,  7790344.,
      8019144.,  8251528.,  7734472.,  7958664.,  8186440.,  8417800.,
      6587600.,  6775376.,  6966224.,  7160144.,  5600216.,  5757720.,
      5917784.,  6080408.,  4468192.,  4593376.,  4720608.,  4849888.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    5626.,    8362.,
      11482.,   14986.,   9178.,    12682.,   16570.,   20842.,   12730.,
      17002.,   21658.,   26698.,   16282.,   21322.,   26746.,   32554.,
      18684.,   22556.,   26684.,   31068.,   13598.,   15790.,   18110.,
      20558.,   1660.,    4508.,    7612.,    10972.,   14200.,   20920.,
      28152.,   35896.,   39668.,   51284.,   63668.,   76820.,   55988.,
      69140.,   83060.,   97748.,   72308.,   86996.,   102452.,  118676.,
      88628.,   104852.,  121844.,  139604.,  104948.,  122708.,  141236.,
      160532.,  95864.,   108728.,  122104.,  135992.,  61564.,   68508.,
      75708.,   83164.,   25404.,   31836.,   38524.,   45468.,   76024.,
      89912.,   104312.,  119224.,  153908.,  176276.,  199412.,  223316.,
      170228.,  194132.,  218804.,  244244.,  186548.,  211988.,  238196.,
      265172.,  202868.,  229844.,  257588.,  286100.,  219188.,  247700.,
      276980.,  307028.,  186360.,  206392.,  226936.,  247992.,  113980.,
      124508.,  135292.,  146332.,  49148.,   59164.,   69436.,   79964.,
      137848.,  158904.,  180472.,  202552.,  268148.,  301268.,  335156.,
      369812.,  284468.,  319124.,  354548.,  390740.,  300788.,  336980.,
      373940.,  411668.,  317108.,  354836.,  393332.,  432596.,  333428.,
      372692.,  412724.,  453524.,  276856.,  304056.,  331768.,  359992.,
      166396.,  180508.,  194876.,  209500.,  72892.,   86492.,   100348.,
      114460.,  199672.,  227896.,  256632.,  285880.,  382388.,  426260.,
      470900.,  516308.,  398708.,  444116.,  490292.,  537236.,  415028.,
      461972.,  509684.,  558164.,  431348.,  479828.,  529076.,  579092.,
      447668.,  497684.,  548468.,  600020.,  367352.,  401720.,  436600.,
      471992.,  218812.,  236508.,  254460.,  272668.,  96636.,   113820.,
      131260.,  148956.,  261496.,  296888.,  332792.,  369208.,  496628.,
      551252.,  606644.,  662804.,  512948.,  569108.,  626036.,  683732.,
      529268.,  586964.,  645428.,  704660.,  545588.,  604820.,  664820.,
      725588.,  561908.,  622676.,  684212.,  746516.,  457848.,  499384.,
      541432.,  583992.,  271228.,  292508.,  314044.,  335836.,  120380.,
      141148.,  162172.,  183452.,  323320.,  365880.,  408952.,  452536.,
      610868.,  676244.,  742388.,  809300.,  627188.,  694100.,  761780.,
      830228.,  643508.,  711956.,  781172.,  851156.,  659828.,  729812.,
      800564.,  872084.,  676148.,  747668.,  819956.,  893012.,  548344.,
      597048.,  646264.,  695992.,  323644.,  348508.,  373628.,  399004.,
      136254.,  147918.,  159710.,  171630.,  318908.,  342748.,  366844.,
      391196.,  548986.,  585514.,  622426.,  659722.,  561754.,  599050.,
      636730.,  674794.,  574522.,  612586.,  651034.,  689866.,  587290.,
      626122.,  665338.,  704938.,  600058.,  639658.,  679642.,  720010.,
      453948.,  480860.,  508028.,  535452.,  254270.,  267982.,  281822.,
      295790.,  990.,     2670.,    4478.,    6414.,    8444.,    12316.,
      16444.,   20828.,   23386.,   29962.,   36922.,   44266.,   45370.,
      52714.,   60442.,   68554.,   67354.,   75466.,   83962.,   92842.,
      89338.,   98218.,   107482.,  117130.,  111322.,  120970.,  131002.,
      141418.,  88188.,   95132.,   102332.,  109788.,  51422.,   55150.,
      59006.,   62990.,   46588.,   52508.,   58684.,   65116.,   116344.,
      129208.,  142584.,  156472.,  211316.,  232148.,  253748.,  276116.,
      264500.,  286868.,  310004.,  333908.,  317684.,  341588.,  366260.,
      391700.,  370868.,  396308.,  422516.,  449492.,  424052.,  451028.,
      478772.,  507284.,  320888.,  339896.,  359416.,  379448.,  180220.,
      190236.,  200508.,  211036.,  156348.,  165852.,  175612.,  185628.,
      350200.,  370232.,  390776.,  411832.,  583604.,  615188.,  647540.,
      680660.,  636788.,  669908.,  703796.,  738452.,  689972.,  724628.,
      760052.,  796244.,  743156.,  779348.,  816308.,  854036.,  796340.,
      834068.,  872564.,  911828.,  583416.,  609592.,  636280.,  663480.,
      318652.,  332252.,  346108.,  360220.,  266108.,  279196.,  292540.,
      306140.,  584056.,  611256.,  638968.,  667192.,  955892.,  998228.,
      1041332., 1085204., 1009076., 1052948., 1097588., 1142996., 1062260.,
      1107668., 1153844., 1200788., 1115444., 1162388., 1210100., 1258580.,
      1168628., 1217108., 1266356., 1316372., 845944.,  879288.,  913144.,
      947512.,  457084.,  474268.,  491708.,  509404.,  375868.,  392540.,
      409468.,  426652.,  817912.,  852280.,  887160.,  922552.,  1328180.,
      1381268., 1435124., 1489748., 1381364., 1435988., 1491380., 1547540.,
      1434548., 1490708., 1547636., 1605332., 1487732., 1545428., 1603892.,
      1663124., 1540916., 1600148., 1660148., 1720916., 1108472., 1148984.,
      1190008., 1231544., 595516.,  616284.,  637308.,  658588.,  485628.,
      505884.,  526396.,  547164.,  1051768., 1093304., 1135352., 1177912.,
      1700468., 1764308., 1828916., 1894292., 1753652., 1819028., 1885172.,
      1952084., 1806836., 1873748., 1941428., 2009876., 1860020., 1928468.,
      1997684., 2067668., 1913204., 1983188., 2053940., 2125460., 1371000.,
      1418680., 1466872., 1515576., 733948.,  758300.,  782908.,  807772.,
      595388.,  619228.,  643324.,  667676.,  1285624., 1334328., 1383544.,
      1433272., 2072756., 2147348., 2222708., 2298836., 2125940., 2202068.,
      2278964., 2356628., 2179124., 2256788., 2335220., 2414420., 2232308.,
      2311508., 2391476., 2472212., 2285492., 2366228., 2447732., 2530004.,
      1633528., 1688376., 1743736., 1799608., 872380.,  900316.,  928508.,
      956956.,  395262.,  408462.,  421790.,  435246.,  843068.,  869980.,
      897148.,  924572.,  1344442., 1385578., 1427098., 1469002., 1375642.,
      1417546., 1459834., 1502506., 1406842., 1449514., 1492570., 1536010.,
      1438042., 1481482., 1525306., 1569514., 1469242., 1513450., 1558042.,
      1603018., 1039548., 1069532., 1099772., 1130268., 550142.,  565390.,
      580766.,  596270.,  1950.,    5166.,    8510.,    11982.,   16508.,
      23452.,   30652.,   38108.,   44698.,   55882.,   67450.,   79402.,
      85114.,   97066.,   109402.,  122122.,  125530.,  138250.,  151354.,
      164842.,  165946.,  179434.,  193306.,  207562.,  206362.,  220618.,
      235258.,  250282.,  157692.,  167708.,  177980.,  188508.,  89246.,
      94510.,   99902.,   105422.,  91516.,   100508.,  109756.,  119260.,
      218488.,  237496.,  257016.,  277048.,  382964.,  413012.,  443828.,
      475412.,  473012.,  504596.,  536948.,  570068.,  563060.,  596180.,
      630068.,  664724.,  653108.,  687764.,  723188.,  759380.,  743156.,
      779348.,  816308.,  854036.,  545912.,  571064.,  596728.,  622904.,
      298876.,  311964.,  325308.,  338908.,  287292.,  299868.,  312700.,
      325788.,  624376.,  650552.,  677240.,  704440.,  1013300., 1054100.,
      1095668., 1138004., 1103348., 1145684., 1188788., 1232660., 1193396.,
      1237268., 1281908., 1327316., 1283444., 1328852., 1375028., 1421972.,
      1373492., 1420436., 1468148., 1516628., 980472.,  1012792., 1045624.,
      1078968., 523324.,  539996.,  556924.,  574108.,  483068.,  499228.,
      515644.,  532316.,  1030264., 1063608., 1097464., 1131832., 1643636.,
      1695188., 1747508., 1800596., 1733684., 1786772., 1840628., 1895252.,
      1823732., 1878356., 1933748., 1989908., 1913780., 1969940., 2026868.,
      2084564., 2003828., 2061524., 2119988., 2179220., 1415032., 1454520.,
      1494520., 1535032., 747772.,  768028.,  788540.,  809308.,  678844.,
      698588.,  718588.,  738844.,  1436152., 1476664., 1517688., 1559224.,
      2273972., 2336276., 2399348., 2463188., 2364020., 2427860., 2492468.,
      2557844., 2454068., 2519444., 2585588., 2652500., 2544116., 2611028.,
      2678708., 2747156., 2634164., 2702612., 2771828., 2841812., 1849592.,
      1896248., 1943416., 1991096., 972220.,  996060.,  1020156., 1044508.,
      874620.,  897948.,  921532.,  945372.,  1842040., 1889720., 1937912.,
      1986616., 2904308., 2977364., 3051188., 3125780., 2994356., 3068948.,
      3144308., 3220436., 3084404., 3160532., 3237428., 3315092., 3174452.,
      3252116., 3330548., 3409748., 3264500., 3343700., 3423668., 3504404.,
      2284152., 2337976., 2392312., 2447160., 1196668., 1224092., 1251772.,
      1279708., 1070396., 1097308., 1124476., 1151900., 2247928., 2302776.,
      2358136., 2414008., 3534644., 3618452., 3703028., 3788372., 3624692.,
      3710036., 3796148., 3883028., 3714740., 3801620., 3889268., 3977684.,
      3804788., 3893204., 3982388., 4072340., 3894836., 3984788., 4075508.,
      4166996., 2718712., 2779704., 2841208., 2903224., 1421116., 1452124.,
      1483388., 1514908., 654270.,  669006.,  683870.,  698862.,  1367228.,
      1397212., 1427452., 1457948., 2139898., 2185642., 2231770., 2278282.,
      2189530., 2236042., 2282938., 2330218., 2239162., 2286442., 2334106.,
      2382154., 2288794., 2336842., 2385274., 2434090., 2338426., 2387242.,
      2436442., 2486026., 1625148., 1658204., 1691516., 1725084., 846014.,
      862798.,  879710.,  896750.};
  const std::array<int, 4> in_shape = {{3, 8, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2220.,   3070.,   4046.,   5152.,   5558.,   5964.,   6370.,   5930.,
      5340.,   4596.,   4600.,   6225.,   8050.,   10080.,  10710.,  11340.,
      11970.,  10975.,  9750.,   8290.,   8270.,   11035.,  14091.,  17444.,
      18347.,  19250.,  20153.,  18285.,  16090.,  13562.,  13510.,  17850.,
      22589.,  27734.,  28959.,  30184.,  31409.,  28280.,  24710.,  20692.,
      20090.,  26250.,  32879.,  39984.,  41209.,  42434.,  43659.,  38990.,
      33810.,  28112.,  25850.,  33415.,  41433.,  49910.,  51107.,  52304.,
      53501.,  47355.,  40720.,  33590.,  29200.,  37525.,  46270.,  55440.,
      56560.,  57680.,  58800.,  51775.,  44300.,  36370.,  29860.,  38230.,
      46970.,  56084.,  57078.,  58072.,  59066.,  51830.,  44200.,  36172.,
      18860.,  24670.,  30926.,  37632.,  38038.,  38444.,  38850.,  34730.,
      30140.,  25076.,  31000.,  40225.,  50050.,  60480.,  61110.,  61740.,
      62370.,  55375.,  47750.,  39490.,  46670.,  60235.,  74571.,  89684.,
      90587.,  91490.,  92393.,  81645.,  70090.,  57722.,  66150.,  85050.,
      104909., 125734., 126959., 128184., 129409., 113960., 97510.,  80052.,
      72730.,  93450.,  115199., 137984., 139209., 140434., 141659., 124670.,
      106610., 87472.,  77690.,  99415.,  122073., 145670., 146867., 148064.,
      149261., 130875., 111520., 91190.,  78000.,  99525.,  121870., 145040.,
      146160., 147280., 148400., 129775., 110300., 89970.,  73380.,  93430.,
      114170., 135604., 136598., 137592., 138586., 120950., 102600., 83532.,
      35500.,  46270.,  57806.,  70112.,  70518.,  70924.,  71330.,  63530.,
      54940.,  45556.,  57400.,  74225.,  92050.,  110880., 111510., 112140.,
      112770., 99775.,  85750.,  70690.,  85070.,  109435., 135051., 161924.,
      162827., 163730., 164633., 145005., 124090., 101882., 118790., 152250.,
      187229., 223734., 224959., 226184., 227409., 199640., 170310., 139412.,
      125370., 160650., 197519., 235984., 237209., 238434., 239659., 210350.,
      179410., 146832., 129530., 165415., 202713., 241430., 242627., 243824.,
      245021., 214395., 182320., 148790., 126800., 161525., 197470., 234640.,
      235760., 236880., 238000., 207775., 176300., 143570., 116900., 148630.,
      181370., 215124., 216118., 217112., 218106., 190070., 161000., 130892.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    10.,   20.,   30.,   40.,   50.,   52.,   45.,   28.,
      13.,   41.,   86.,   150.,  186.,  222.,  258.,  239.,  191.,  112.,
      55.,   139.,  254.,  402.,  438.,  474.,  510.,  449.,  345.,  196.,
      97.,   237.,  422.,  654.,  690.,  726.,  762.,  659.,  499.,  280.,
      139.,  335.,  590.,  906.,  942.,  978.,  1014., 869.,  653.,  364.,
      181.,  433.,  758.,  1158., 1194., 1230., 1266., 1079., 807.,  448.,
      223.,  531.,  926.,  1410., 1446., 1482., 1518., 1289., 961.,  532.,
      215.,  478.,  790.,  1152., 1178., 1204., 1230., 1006., 727.,  392.,
      9.,    28.,   58.,   100.,  142.,  184.,  226.,  196.,  149.,  84.,
      85.,   201.,  350.,  534.,  634.,  734.,  834.,  695.,  511.,  280.,
      239.,  523.,  854.,  1234., 1334., 1434., 1534., 1241., 889.,  476.,
      393.,  845.,  1358., 1934., 2034., 2134., 2234., 1787., 1267., 672.,
      547.,  1167., 1862., 2634., 2734., 2834., 2934., 2333., 1645., 868.,
      701.,  1489., 2366., 3334., 3434., 3534., 3634., 2879., 2023., 1064.,
      855.,  1811., 2870., 4034., 4134., 4234., 4334., 3425., 2401., 1260.,
      559.,  1174., 1846., 2576., 2634., 2692., 2750., 2158., 1503., 784.,
      17.,   52.,   106.,  180.,  254.,  328.,  402.,  340.,  253.,  140.,
      157.,  361.,  614.,  918.,  1082., 1246., 1410., 1151., 831.,  448.,
      423.,  907.,  1454., 2066., 2230., 2394., 2558., 2033., 1433., 756.,
      689.,  1453., 2294., 3214., 3378., 3542., 3706., 2915., 2035., 1064.,
      955.,  1999., 3134., 4362., 4526., 4690., 4854., 3797., 2637., 1372.,
      1221., 2545., 3974., 5510., 5674., 5838., 6002., 4679., 3239., 1680.,
      1487., 3091., 4814., 6658., 6822., 6986., 7150., 5561., 3841., 1988.,
      903.,  1870., 2902., 4000., 4090., 4180., 4270., 3310., 2279., 1176.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      16800.,   23320.,   30832.,   39368.,   42560.,   45752.,   48944.,
      45664.,   41200.,   35520.,   35260.,   47825.,   61970.,   77735.,
      82705.,   87675.,   92645.,   85070.,   75675.,   64420.,   63904.,
      85400.,   109200.,  135352.,  142492.,  149632.,  156772.,  142392.,
      125420.,  105808.,  104972.,  138845.,  175882.,  216139.,  225841.,
      235543.,  245245.,  220990.,  193235.,  161924.,  157052.,  205345.,
      257362.,  313159.,  322861.,  332563.,  342265.,  305830.,  265335.,
      220724.,  203248.,  262820.,  325992.,  392812.,  402304.,  411796.,
      421288.,  373008.,  320840.,  264736.,  230300.,  296025.,  365090.,
      437535.,  446425.,  455315.,  464205.,  408830.,  349875.,  287300.,
      235968.,  302160.,  371296.,  443408.,  451304.,  459200.,  467096.,
      409936.,  349640.,  286176.,  147360.,  192920.,  242032.,  294728.,
      297920.,  301112.,  304304.,  272224.,  236400.,  196800.,  243260.,
      315825.,  393170.,  475335.,  480305.,  485275.,  490245.,  435470.,
      375675.,  310820.,  367264.,  474200.,  587280.,  706552.,  713692.,
      720832.,  727972.,  643512.,  552620.,  455248.,  521612.,  670845.,
      827722.,  992299.,  1002001., 1011703., 1021405., 899710.,  770035.,
      632324.,  573692.,  737345.,  909202.,  1089319., 1099021., 1108723.,
      1118425., 984550.,  842135.,  691124.,  614128.,  786020.,  965352.,
      1152172., 1161664., 1171156., 1180648., 1035408., 882440.,  721696.,
      617500.,  788025.,  965090.,  1148735., 1157625., 1166515., 1175405.,
      1028030., 873875.,  712900.,  581568.,  740560.,  905056.,  1075088.,
      1082984., 1090880., 1098776., 959056.,  813640.,  662496.,  277920.,
      362520.,  453232.,  550088.,  553280.,  556472.,  559664.,  498784.,
      431600.,  358080.,  451260.,  583825.,  724370.,  872935.,  877905.,
      882875.,  887845.,  785870.,  675675.,  557220.,  670624.,  863000.,
      1065360., 1277752., 1284892., 1292032., 1299172., 1144632., 979820.,
      804688.,  938252.,  1202845., 1479562., 1768459., 1778161., 1787863.,
      1797565., 1578430., 1346835., 1102724., 990332.,  1269345., 1561042.,
      1865479., 1875181., 1884883., 1894585., 1663270., 1418935., 1161524.,
      1025008., 1309220., 1604712., 1911532., 1921024., 1930516., 1940008.,
      1697808., 1444040., 1178656., 1004700., 1280025., 1565090., 1859935.,
      1868825., 1877715., 1886605., 1647230., 1397875., 1138500., 927168.,
      1178960., 1438816., 1706768., 1714664., 1722560., 1730456., 1508176.,
      1277640., 1038816.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    59.,    124.,   196.,   268.,   340.,   365.,   322.,
      203.,   76.,    264.,   580.,   1040.,  1312.,  1584.,  1856.,  1744.,
      1408.,  832.,   384.,   992.,   1840.,  2944.,  3216.,  3488.,  3760.,
      3340.,  2584.,  1476.,  692.,   1720.,  3100.,  4848.,  5120.,  5392.,
      5664.,  4936.,  3760.,  2120.,  1000.,  2448.,  4360.,  6752.,  7024.,
      7296.,  7568.,  6532.,  4936.,  2764.,  1308.,  3176.,  5620.,  8656.,
      8928.,  9200.,  9472.,  8128.,  6112.,  3408.,  1616.,  3904.,  6880.,
      10560., 10832., 11104., 11376., 9724.,  7288.,  4052.,  1625.,  3630.,
      6023.,  8812.,  9012.,  9212.,  9412.,  7721.,  5594.,  3023.,  53.,
      182.,   395.,   700.,   1028.,  1356.,  1684.,  1469.,  1122.,  635.,
      620.,   1480.,  2596.,  3984.,  4768.,  5552.,  6336.,  5296.,  3904.,
      2144.,  1824.,  4000.,  6544.,  9472.,  10256., 11040., 11824., 9580.,
      6872.,  3684.,  3028.,  6520.,  10492., 14960., 15744., 16528., 17312.,
      13864., 9840.,  5224.,  4232.,  9040.,  14440., 20448., 21232., 22016.,
      22800., 18148., 12808., 6764.,  5436.,  11560., 18388., 25936., 26720.,
      27504., 28288., 22432., 15776., 8304.,  6640.,  14080., 22336., 31424.,
      32208., 32992., 33776., 26716., 18744., 9844.,  4361.,  9166.,  14423.,
      20140., 20596., 21052., 21508., 16889., 11770., 6143.,  101.,   342.,
      731.,   1276.,  1860.,  2444.,  3028.,  2573.,  1922.,  1067.,  1164.,
      2696.,  4612.,  6928.,  8224.,  9520.,  10816., 8848.,  6400.,  3456.,
      3264.,  7008.,  11248., 16000., 17296., 18592., 19888., 15820., 11160.,
      5892.,  5364.,  11320., 17884., 25072., 26368., 27664., 28960., 22792.,
      15920., 8328.,  7464.,  15632., 24520., 34144., 35440., 36736., 38032.,
      29764., 20680., 10764., 9564.,  19944., 31156., 43216., 44512., 45808.,
      47104., 36736., 25440., 13200., 11664., 24256., 37792., 52288., 53584.,
      54880., 56176., 43708., 30200., 15636., 7097.,  14702., 22823., 31468.,
      32180., 32892., 33604., 26057., 17946., 9263.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      130592.,   181640.,   240560.,   307608.,   332920.,   358232.,
      383544.,   358256.,   323560.,   279200.,   275960.,   374750.,
      486100.,   610330.,   649810.,   689290.,   728770.,   669700.,
      596150.,   507800.,   502256.,   671740.,   859560.,   1066100.,
      1122884.,  1179668.,  1236452.,  1123656.,  990220.,   835760.,
      827400.,   1095010.,  1387820.,  1706278.,  1783502.,  1860726.,
      1937950.,  1747004.,  1528170.,  1281000.,  1241800.,  1624210.,
      2036300.,  2478518.,  2555742.,  2632966.,  2710190.,  2422364.,
      2102170.,  1749160.,  1611824.,  2084620.,  2586120.,  3116708.,
      3192308.,  3267908.,  3343508.,  2960808.,  2547100.,  2102000.,
      1829240.,  2351550.,  2900500.,  3476410.,  3547250.,  3618090.,
      3688930.,  3249220.,  2780950.,  2283800.,  1876128.,  2402600.,
      2952560.,  3526264.,  3589208.,  3652152.,  3715096.,  3260720.,
      2781320.,  2276640.,  1164832.,  1525640.,  1914800.,  2332568.,
      2357880.,  2383192.,  2408504.,  2155376.,  1872360.,  1559200.,
      1927160.,  2502750.,  3116500.,  3768730.,  3808210.,  3847690.,
      3887170.,  3453700.,  2980150.,  2466200.,  2913776.,  3762940.,
      4661160.,  5608820.,  5665604.,  5722388.,  5779172.,  5109576.,
      4388620.,  3615920.,  4142600.,  5328610.,  6575660.,  7884198.,
      7961422.,  8038646.,  8115870.,  7149884.,  6120170.,  5026280.,
      4557000.,  5857810.,  7224140.,  8656438.,  8733662.,  8810886.,
      8888110.,  7825244.,  6694170.,  5494440.,  4883504.,  6251020.,
      7677960.,  9164708.,  9240308.,  9315908.,  9391508.,  8236968.,
      7020700.,  5742320.,  4914040.,  6271550.,  7681300.,  9143610.,
      9214450.,  9285290.,  9356130.,  8183620.,  6956950.,  5675800.,
      4630688.,  5897000.,  7207280.,  8561784.,  8624728.,  8687672.,
      8750616.,  7638320.,  6480520.,  5276960.,  2199072.,  2869640.,
      3589040.,  4357528.,  4382840.,  4408152.,  4433464.,  3952496.,
      3421160.,  2839200.,  3578360.,  4630750.,  5746900.,  6927130.,
      6966610.,  7006090.,  7045570.,  6237700.,  5364150.,  4424600.,
      5325296.,  6854140.,  8462760.,  10151540., 10208324., 10265108.,
      10321892., 9095496.,  7787020.,  6396080.,  7457800.,  9562210.,
      11763500., 14062118., 14139342., 14216566., 14293790., 12552764.,
      10712170., 8771560.,  7872200.,  10091410., 12411980., 14834358.,
      14911582., 14988806., 15066030., 13228124., 11286170., 9239720.,
      8155184.,  10417420., 12769800., 15212708., 15288308., 15363908.,
      15439508., 13513128., 11494300., 9382640.,  7998840.,  10191550.,
      12462100., 14810810., 14881650., 14952490., 15023330., 13118020.,
      11132950., 9067800.,  7385248.,  9391400.,  11462000., 13597304.,
      13660248., 13723192., 13786136., 12015920., 10179720., 8277280.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    856.,    1400.,   1944.,   2488.,   2722.,
      2428.,   1542.,   500.,    1864.,   4220.,   7696.,   9808.,   11920.,
      14032.,  13292.,  10792.,  6404.,   2852.,   7464.,   13964.,  22480.,
      24592.,  26704.,  28816.,  25724.,  19976.,  11444.,  5204.,   13064.,
      23708.,  37264.,  39376.,  41488.,  43600.,  38156.,  29160.,  16484.,
      7556.,   18664.,  33452.,  52048.,  54160.,  56272.,  58384.,  50588.,
      38344.,  21524.,  9908.,   24264.,  43196.,  66832.,  68944.,  71056.,
      73168.,  63020.,  47528.,  26564.,  12260.,  29864.,  52940.,  81616.,
      83728.,  85840.,  87952.,  75452.,  56712.,  31604.,  12622.,  28268.,
      47002.,  68888.,  70456.,  72024.,  73592.,  60466.,  43868.,  23734.,
      350.,    1292.,   2890.,   5208.,   7800.,   10392.,  12984.,  11362.,
      8700.,   4934.,   4724.,   11336.,  19964.,  30736.,  36944.,  43152.,
      49360.,  41324.,  30504.,  16772.,  14244.,  31272.,  51212.,  74192.,
      80400.,  86608.,  92816.,  75260.,  54024.,  28980.,  23764.,  51208.,
      82460.,  117648., 123856., 130064., 136272., 109196., 77544.,  41188.,
      33284.,  71144.,  113708., 161104., 167312., 173520., 179728., 143132.,
      101064., 53396.,  42804.,  91080.,  144956., 204560., 210768., 216976.,
      223184., 177068., 124584., 65604.,  52324.,  111016., 176204., 248016.,
      254224., 260432., 266640., 211004., 148104., 77812.,  34446.,  72428.,
      114010., 159256., 162872., 166488., 170104., 133618., 93148.,  48630.,
      670.,    2444.,   5386.,   9560.,   14200.,  18840.,  23480.,  20002.,
      14972.,  8326.,   8948.,   20808.,  35708.,  53776.,  64080.,  74384.,
      84688.,  69356.,  50216.,  27140.,  25636.,  55080.,  88460.,  125904.,
      136208., 146512., 156816., 124796., 88072.,  46516.,  42324.,  89352.,
      141212., 198032., 208336., 218640., 228944., 180236., 125928., 65892.,
      59012.,  123624., 193964., 270160., 280464., 290768., 301072., 235676.,
      163784., 85268.,  75700.,  157896., 246716., 342288., 352592., 362896.,
      373200., 291116., 201640., 104644., 92388.,  192168., 299468., 414416.,
      424720., 435024., 445328., 346556., 239496., 124020., 56270.,  116588.,
      181018., 249624., 255288., 260952., 266616., 206770., 142428., 73526.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7920.,   8880.,   11040.,  12280.,  14648.,  16184.,  18760.,  20608.,
      20328.,  22232.,  21896.,  23856.,  23464.,  25480.,  21944.,  23720.,
      19840.,  21360.,  17136.,  18384.,  16860.,  18400.,  22925.,  24900.,
      29770.,  32200.,  37415.,  40320.,  39865.,  42840.,  42315.,  45360.,
      44765.,  47880.,  41170.,  43900.,  36675.,  39000.,  31260.,  33160.,
      30824.,  33080.,  41260.,  44140.,  52836.,  56364.,  65576.,  69776.,
      69104.,  73388.,  72632.,  77000.,  76160.,  80612.,  69252.,  73140.,
      61060.,  64360.,  51560.,  54248.,  50932.,  54040.,  67445.,  71400.,
      85526.,  90356.,  105203., 110936., 110005., 115836., 114807., 120736.,
      119609., 125636., 107870., 113120., 94395.,  98840.,  79156.,  82768.,
      76692.,  80360.,  100345., 105000., 125846., 131516., 153223., 159936.,
      158025., 164836., 162827., 169736., 167629., 174636., 149870., 155960.,
      130095., 135240., 108276., 112448., 99848.,  103400., 129160., 133660.,
      160260., 165732., 193172., 199640., 197876., 204428., 202580., 209216.,
      207284., 214004., 183588., 189420., 157960., 162880., 130376., 134360.,
      113500., 116800., 145925., 150100., 180010., 185080., 215775., 221760.,
      220185., 226240., 224595., 230720., 229005., 235200., 201730., 207100.,
      172675., 177200., 141820., 145480., 116528., 119440., 149240., 152920.,
      183416., 187880., 219072., 224336., 222992., 228312., 226912., 232288.,
      230832., 236264., 202616., 207320., 172840., 176800., 141488., 144688.,
      71920.,  75440.,  94240.,  98680.,  118328., 123704., 144200., 150528.,
      145768., 152152., 147336., 153776., 148904., 155400., 133304., 138920.,
      115840., 120560., 96496.,  100304., 119260., 124000., 154925., 160900.,
      192970., 200200., 233415., 241920., 235865., 244440., 238315., 246960.,
      240765., 249480., 213970., 221500., 184675., 191000., 152860., 157960.,
      180584., 186680., 233260., 240940., 288996., 298284., 347816., 358736.,
      351344., 362348., 354872., 365960., 358400., 369572., 316932., 326580.,
      272260., 280360., 224360., 230888., 257012., 264600., 330645., 340200.,
      408086., 419636., 489363., 502936., 494165., 507836., 498967., 512736.,
      503769., 517636., 443870., 455840., 379995., 390040., 312116., 320208.,
      282772., 290920., 363545., 373800., 448406., 460796., 537383., 551936.,
      542185., 556836., 546987., 561736., 551789., 566636., 485870., 498680.,
      415695., 426440., 341236., 349888., 303368., 310760., 388360., 397660.,
      477060., 488292., 569492., 582680., 574196., 587468., 578900., 592256.,
      583604., 597044., 511908., 523500., 436360., 446080., 356936., 364760.,
      305500., 312000., 389925., 398100., 477610., 487480., 568575., 580160.,
      572985., 584640., 577395., 589120., 581805., 593600., 508930., 519100.,
      432675., 441200., 353020., 359880., 288048., 293520., 366840., 373720.,
      448376., 456680., 532672., 542416., 536592., 546392., 540512., 550368.,
      544432., 554344., 475256., 483800., 403240., 410400., 328368., 334128.,
      135920., 142000., 177440., 185080., 222008., 231224., 269640., 280448.,
      271208., 282072., 272776., 283696., 274344., 285320., 244664., 254120.,
      211840., 219760., 175856., 182224., 221660., 229600., 286925., 296900.,
      356170., 368200., 429415., 443520., 431865., 446040., 434315., 448560.,
      436765., 451080., 386770., 399100., 332675., 343000., 274460., 282760.,
      330344., 340280., 425260., 437740., 525156., 540204., 630056., 647696.,
      633584., 651308., 637112., 654920., 640640., 658532., 564612., 580020.,
      483460., 496360., 397160., 407528., 463092., 475160., 593845., 609000.,
      730646., 748916., 873523., 894936., 878325., 899836., 883127., 904736.,
      887929., 909636., 779870., 798560., 665595., 681240., 545076., 557648.,
      488852., 501480., 626745., 642600., 770966., 790076., 921543., 943936.,
      926345., 948836., 931147., 953736., 935949., 958636., 821870., 841400.,
      701295., 717640., 574196., 587328., 506888., 518120., 647560., 661660.,
      793860., 810852., 945812., 965720., 950516., 970508., 955220., 975296.,
      959924., 980084., 840228., 857580., 714760., 729280., 583496., 595160.,
      497500., 507200., 633925., 646100., 775210., 789880., 921375., 938560.,
      925785., 943040., 930195., 947520., 934605., 952000., 816130., 831100.,
      692675., 705200., 564220., 574280., 459568., 467600., 584440., 594520.,
      713336., 725480., 846272., 860496., 850192., 864472., 854112., 868448.,
      858032., 872424., 747896., 760280., 633640., 644000., 515248., 523568.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    44.,    80.,    76.,
      120.,   108.,   160.,   140.,   200.,   157.,   208.,   142.,   180.,
      91.,    112.,   24.,    52.,    100.,   164.,   236.,   344.,   440.,
      600.,   568.,   744.,   696.,   888.,   824.,   1032.,  788.,   956.,
      644.,   764.,   384.,   448.,   164.,   220.,   436.,   556.,   824.,
      1016.,  1336.,  1608.,  1464.,  1752.,  1592.,  1896.,  1720.,  2040.,
      1544.,  1796.,  1204.,  1380.,  692.,   784.,   304.,   388.,   772.,
      948.,   1412.,  1688.,  2232.,  2616.,  2360.,  2760.,  2488.,  2904.,
      2616.,  3048.,  2300.,  2636.,  1764.,  1996.,  1000.,  1120.,  444.,
      556.,   1108.,  1340.,  2000.,  2360.,  3128.,  3624.,  3256.,  3768.,
      3384.,  3912.,  3512.,  4056.,  3056.,  3476.,  2324.,  2612.,  1308.,
      1456.,  584.,   724.,   1444.,  1732.,  2588.,  3032.,  4024.,  4632.,
      4152.,  4776.,  4280.,  4920.,  4408.,  5064.,  3812.,  4316.,  2884.,
      3228.,  1616.,  1792.,  724.,   892.,   1780.,  2124.,  3176.,  3704.,
      4920.,  5640.,  5048.,  5784.,  5176.,  5928.,  5304.,  6072.,  4568.,
      5156.,  3444.,  3844.,  1924.,  2128.,  765.,   860.,   1718.,  1912.,
      2863.,  3160.,  4204.,  4608.,  4300.,  4712.,  4396.,  4816.,  4492.,
      4920.,  3697.,  4024.,  2686.,  2908.,  1455.,  1568.,  17.,    36.,
      70.,    112.,   163.,   232.,   300.,   400.,   460.,   568.,   620.,
      736.,   780.,   904.,   685.,   784.,   526.,   596.,   299.,   336.,
      280.,   340.,   676.,   804.,   1196.,  1400.,  1848.,  2136.,  2232.,
      2536.,  2616.,  2936.,  3000.,  3336.,  2516.,  2780.,  1860.,  2044.,
      1024.,  1120.,  868.,   956.,   1908.,  2092.,  3128.,  3416.,  4536.,
      4936.,  4920.,  5336.,  5304.,  5736.,  5688.,  6136.,  4616.,  4964.,
      3316.,  3556.,  1780.,  1904.,  1456.,  1572.,  3140.,  3380.,  5060.,
      5432.,  7224.,  7736.,  7608.,  8136.,  7992.,  8536.,  8376.,  8936.,
      6716.,  7148.,  4772.,  5068.,  2536.,  2688.,  2044.,  2188.,  4372.,
      4668.,  6992.,  7448.,  9912.,  10536., 10296., 10936., 10680., 11336.,
      11064., 11736., 8816.,  9332.,  6228.,  6580.,  3292.,  3472.,  2632.,
      2804.,  5604.,  5956.,  8924.,  9464.,  12600., 13336., 12984., 13736.,
      13368., 14136., 13752., 14536., 10916., 11516., 7684.,  8092.,  4048.,
      4256.,  3220.,  3420.,  6836.,  7244.,  10856., 11480., 15288., 16136.,
      15672., 16536., 16056., 16936., 16440., 17336., 13016., 13700., 9140.,
      9604.,  4804.,  5040.,  2125.,  2236.,  4470.,  4696.,  7039.,  7384.,
      9836.,  10304., 10060., 10536., 10284., 10768., 10508., 11000., 8257.,
      8632.,  5758.,  6012.,  3007.,  3136.,  33.,    68.,    134.,   208.,
      307.,   424.,   556.,   720.,   844.,   1016.,  1132.,  1312.,  1420.,
      1608.,  1213.,  1360.,  910.,   1012.,  507.,   560.,   536.,   628.,
      1252.,  1444.,  2156.,  2456.,  3256.,  3672.,  3896.,  4328.,  4536.,
      4984.,  5176.,  5640.,  4244.,  4604.,  3076.,  3324.,  1664.,  1792.,
      1572.,  1692.,  3380.,  3628.,  5432.,  5816.,  7736.,  8264.,  8376.,
      8920.,  9016.,  9576.,  9656.,  10232., 7688.,  8132.,  5428.,  5732.,
      2868.,  3024.,  2608.,  2756.,  5508.,  5812.,  8708.,  9176.,  12216.,
      12856., 12856., 13512., 13496., 14168., 14136., 14824., 11132., 11660.,
      7780.,  8140.,  4072.,  4256.,  3644.,  3820.,  7636.,  7996.,  11984.,
      12536., 16696., 17448., 17336., 18104., 17976., 18760., 18616., 19416.,
      14576., 15188., 10132., 10548., 5276.,  5488.,  4680.,  4884.,  9764.,
      10180., 15260., 15896., 21176., 22040., 21816., 22696., 22456., 23352.,
      23096., 24008., 18020., 18716., 12484., 12956., 6480.,  6720.,  5716.,
      5948.,  11892., 12364., 18536., 19256., 25656., 26632., 26296., 27288.,
      26936., 27944., 27576., 28600., 21464., 22244., 14836., 15364., 7684.,
      7952.,  3485.,  3612.,  7222.,  7480.,  11215., 11608., 15468., 16000.,
      15820., 16360., 16172., 16720., 16524., 17080., 12817., 13240., 8830.,
      9116.,  4559.,  4704.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      61488.,   69104.,   85900.,   95740.,   114184.,  126376.,  146468.,
      161140.,  158900.,  174020.,  171332.,  186900.,  183764.,  199780.,
      172072.,  186184.,  155740.,  167820.,  134640.,  144560.,  131860.,
      144100.,  179525.,  195225.,  233390.,  252710.,  293615.,  316715.,
      313075.,  336735.,  332535.,  356755.,  351995.,  376775.,  323990.,
      345710.,  288825.,  307325.,  246340.,  261460.,  242152.,  260104.,
      324410.,  347330.,  415740.,  443820.,  516334.,  549766.,  544390.,
      578494.,  572446.,  607222.,  600502.,  635950.,  546348.,  577308.,
      481970.,  508250.,  407176.,  428584.,  401324.,  426076.,  531755.,
      563255.,  674674.,  713146.,  830305.,  875973.,  868525.,  914977.,
      906745.,  953981.,  944965.,  992985.,  852586.,  894418.,  746375.,
      781795.,  626108.,  654892.,  606284.,  635516.,  793555.,  830655.,
      995554.,  1040746., 1212505., 1266013., 1250725., 1305017., 1288945.,
      1344021., 1327165., 1383025., 1186906., 1235458., 1030575., 1071595.,
      857948.,  891212.,  791752.,  820072.,  1024370., 1060250., 1271244.,
      1314876., 1532566., 1584142., 1570030., 1622278., 1607494., 1660414.,
      1644958., 1698550., 1457148., 1503660., 1253930., 1293170., 1035112.,
      1066888., 901460.,  927780.,  1159125., 1192425., 1430030., 1470470.,
      1714335., 1762075., 1749475., 1797775., 1784615., 1833475., 1819755.,
      1869175., 1603190., 1646030., 1372425., 1408525., 1127300., 1156500.,
      926448.,  949680.,  1186620., 1215980., 1458472., 1494088., 1742132.,
      1784132., 1773380., 1815828., 1804628., 1847524., 1835876., 1879220.,
      1611592., 1649128., 1374860., 1406460., 1125552., 1151088., 568368.,
      596464.,  745100.,  780540.,  935944.,  978856.,  1141028., 1191540.,
      1153460., 1204420., 1165892., 1217300., 1178324., 1230180., 1055272.,
      1100104., 917340.,  955020.,  764400.,  794800.,  944660.,  982500.,
      1227525., 1275225., 1529390., 1587110., 1850415., 1918315., 1869875.,
      1938335., 1889335., 1958355., 1908795., 1978375., 1696790., 1756910.,
      1464825., 1515325., 1212740., 1253460., 1432552., 1481224., 1850810.,
      1912130., 2293500., 2367660., 2760814., 2848006., 2788870., 2876734.,
      2816926., 2905462., 2844982., 2934190., 2516268., 2593308., 2161970.,
      2226650., 1781896., 1834024., 2041004., 2101596., 2626155., 2702455.,
      3241714., 3333946., 3887905., 3996293., 3926125., 4035297., 3964345.,
      4074301., 4002565., 4113305., 3527146., 3622738., 3019975., 3100195.,
      2480828., 2545452., 2245964., 2311036., 2887955., 2969855., 3562594.,
      3661546., 4270105., 4386333., 4308325., 4425337., 4346545., 4464341.,
      4384765., 4503345., 3861466., 3963778., 3304175., 3389995., 2712668.,
      2781772., 2412232., 2471272., 3088370., 3162650., 3794124., 3883836.,
      4529686., 4635022., 4567150., 4673158., 4604614., 4711294., 4642078.,
      4749430., 4072188., 4164780., 3471530., 3549170., 2839912., 2902408.,
      2431060., 2482980., 3103125., 3168425., 3801230., 3880070., 4525535.,
      4618075., 4560675., 4653775., 4595815., 4689475., 4630955., 4725175.,
      4051190., 4132430., 3444425., 3512525., 2810500., 2865300., 2293488.,
      2337200., 2921020., 2975980., 3570472., 3636808., 4241972., 4319812.,
      4273220., 4351508., 4304468., 4383204., 4335716., 4414900., 3785032.,
      3853288., 3211660., 3268860., 2615472., 2661488., 1075248., 1123824.,
      1404300., 1465340., 1757704., 1831336., 2135588., 2221940., 2148020.,
      2234820., 2160452., 2247700., 2172884., 2260580., 1938472., 2014024.,
      1678940., 1742220., 1394160., 1445040., 1757460., 1820900., 2275525.,
      2355225., 2825390., 2921510., 3407215., 3519915., 3426675., 3539935.,
      3446135., 3559955., 3465595., 3579975., 3069590., 3168110., 2640825.,
      2723325., 2179140., 2245460., 2622952., 2702344., 3377210., 3476930.,
      4171260., 4291500., 5005294., 5146246., 5033350., 5174974., 5061406.,
      5203702., 5089462., 5232430., 4486188., 4609308., 3841970., 3945050.,
      3156616., 3239464., 3680684., 3777116., 4720555., 4841655., 5808754.,
      5954746., 6945505., 7116613., 6983725., 7155617., 7021945., 7194621.,
      7060165., 7233625., 6201706., 6351058., 5293575., 5418595., 4335548.,
      4436012., 3885644., 3986556., 4982355., 5109055., 6129634., 6282346.,
      7327705., 7506653., 7365925., 7545657., 7404145., 7584661., 7442365.,
      7623665., 6536026., 6692098., 5577775., 5708395., 4567388., 4672332.,
      4032712., 4122472., 5152370., 5265050., 6317004., 6452796., 7526806.,
      7685902., 7564270., 7724038., 7601734., 7762174., 7639198., 7800310.,
      6687228., 6825900., 5689130., 5805170., 4644712., 4737928., 3960660.,
      4038180., 5047125., 5144425., 6172430., 6289670., 7336735., 7474075.,
      7371875., 7509775., 7407015., 7545475., 7442155., 7581175., 6499190.,
      6618830., 5516425., 5616525., 4493700., 4574100., 3660528., 3724720.,
      4655420., 4735980., 5682472., 5779528., 6741812., 6855492., 6773060.,
      6887188., 6804308., 6918884., 6835556., 6950580., 5958472., 6057448.,
      5048460., 5131260., 4105392., 4171888.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    119.,    275.,    292.,    564.,
      532.,    868.,    772.,    1172.,   1012.,   1476.,   1163.,   1559.,
      1066.,   1362.,   689.,    853.,    142.,    358.,    684.,    1180.,
      1690.,   2530.,   3224.,   4472.,   4216.,   5592.,   5208.,   6712.,
      6200.,   7832.,   5986.,   7306.,   4924.,   5868.,   2950.,   3454.,
      1206.,   1646.,   3260.,   4204.,   6226.,   7738.,   10168.,  12312.,
      11160.,  13432.,  12152.,  14552.,  13144.,  15672.,  11866.,  13858.,
      9292.,   10684.,  5358.,   6086.,   2270.,   2934.,   5836.,   7228.,
      10762.,  12946.,  17112.,  20152.,  18104.,  21272.,  19096.,  22392.,
      20088.,  23512.,  17746.,  20410.,  13660.,  15500.,  7766.,   8718.,
      3334.,   4222.,   8412.,   10252.,  15298.,  18154.,  24056.,  27992.,
      25048.,  29112.,  26040.,  30232.,  27032.,  31352.,  23626.,  26962.,
      18028.,  20316.,  10174.,  11350.,  4398.,   5510.,   10988.,  13276.,
      19834.,  23362.,  31000.,  35832.,  31992.,  36952.,  32984.,  38072.,
      33976.,  39192.,  29506.,  33514.,  22396.,  25132.,  12582.,  13982.,
      5462.,   6798.,   13564.,  16300.,  24370.,  28570.,  37944.,  43672.,
      38936.,  44792.,  39928.,  45912.,  40920.,  47032.,  35386.,  40066.,
      26764.,  29948.,  14990.,  16614.,  5933.,   6689.,   13362.,  14906.,
      22319.,  24683.,  32836.,  36052.,  33588.,  36868.,  34340.,  37684.,
      35092.,  38500.,  28931.,  31535.,  21050.,  22818.,  11417.,  12317.,
      101.,    249.,    482.,    810.,    1175.,   1715.,   2212.,   2996.,
      3476.,   4324.,   4740.,   5652.,   6004.,   6980.,   5291.,   6071.,
      4074.,   4626.,   2321.,   2613.,   2126.,   2598.,   5164.,   6172.,
      9178.,   10786.,  14232.,  16504.,  17272.,  19672.,  20312.,  22840.,
      23352.,  26008.,  19618.,  21706.,  14524.,  15980.,  8006.,   8766.,
      6774.,   7470.,   14908.,  16364.,  24466.,  26746.,  35512.,  38680.,
      38552.,  41848.,  41592.,  45016.,  44632.,  48184.,  36250.,  39010.,
      26060.,  27964.,  13998.,  14982.,  11422.,  12342.,  24652.,  26556.,
      39754.,  42706.,  56792.,  60856.,  59832.,  64024.,  62872.,  67192.,
      65912.,  70360.,  52882.,  56314.,  37596.,  39948.,  19990.,  21198.,
      16070.,  17214.,  34396.,  36748.,  55042.,  58666.,  78072.,  83032.,
      81112.,  86200.,  84152.,  89368.,  87192.,  92536.,  69514.,  73618.,
      49132.,  51932.,  25982.,  27414.,  20718.,  22086.,  44140.,  46940.,
      70330.,  74626.,  99352.,  105208., 102392., 108376., 105432., 111544.,
      108472., 114712., 86146.,  90922.,  60668.,  63916.,  31974.,  33630.,
      25366.,  26958.,  53884.,  57132.,  85618.,  90586.,  120632., 127384.,
      123672., 130552., 126712., 133720., 129752., 136888., 102778., 108226.,
      72204.,  75900.,  37966.,  39846.,  16781.,  17665.,  35314.,  37114.,
      55631.,  58379.,  77764.,  81492.,  79540.,  83332.,  81316.,  85172.,
      83092.,  87012.,  65315.,  68303.,  45562.,  47586.,  23801.,  24829.,
      197.,    473.,    930.,    1514.,   2231.,   3155.,   4132.,   5428.,
      6420.,   7780.,   8708.,   10132.,  10996.,  12484.,  9419.,   10583.,
      7082.,   7890.,   3953.,   4373.,   4110.,   4838.,   9644.,   11164.,
      16666.,  19042.,  25240.,  28536.,  30328.,  33752.,  35416.,  38968.,
      40504.,  44184.,  33250.,  36106.,  24124.,  26092.,  13062.,  14078.,
      12342.,  13294.,  26556.,  28524.,  42706.,  45754.,  60856.,  65048.,
      65944.,  70264.,  71032.,  75480.,  76120.,  80696.,  60634.,  64162.,
      42828.,  45244.,  22638.,  23878.,  20574.,  21750.,  43468.,  45884.,
      68746.,  72466.,  96472.,  101560., 101560., 106776., 106648., 111992.,
      111736., 117208., 88018.,  92218.,  61532.,  64396.,  32214.,  33678.,
      28806.,  30206.,  60380.,  63244.,  94786.,  99178.,  132088., 138072.,
      137176., 143288., 142264., 148504., 147352., 153720., 115402., 120274.,
      80236.,  83548.,  41790.,  43478.,  37038.,  38662.,  77292.,  80604.,
      120826., 125890., 167704., 174584., 172792., 179800., 177880., 185016.,
      182968., 190232., 142786., 148330., 98940.,  102700., 51366.,  53278.,
      45270.,  47118.,  94204.,  97964.,  146866., 152602., 203320., 211096.,
      208408., 216312., 213496., 221528., 218584., 226744., 170170., 176386.,
      117644., 121852., 60942.,  63078.,  27629.,  28641.,  57266.,  59322.,
      88943.,  92075.,  122692., 126932., 125492., 129796., 128292., 132660.,
      131092., 135524., 101699., 105071., 70074.,  72354.,  36185.,  37341.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      484448.,   545120.,   677560.,   755960.,   901520.,   998672.,
      1157352.,  1274280.,  1256360.,  1376872.,  1355368.,  1479464.,
      1454376.,  1582056.,  1362704.,  1475216.,  1234040.,  1330360.,
      1067360.,  1146464.,  1042840.,  1140440.,  1420750.,  1545950.,
      1848100.,  2002180.,  2326170.,  2510410.,  2481290.,  2670010.,
      2636410.,  2829610.,  2791530.,  2989210.,  2570500.,  2743780.,
      2292350.,  2439950.,  1955800.,  2076440.,  1919504.,  2062736.,
      2572660.,  2755540.,  3298200.,  3522264.,  4097660.,  4364444.,
      4321436.,  4593596.,  4545212.,  4822748.,  4768988.,  5051900.,
      4340184.,  4587288.,  3829780.,  4039540.,  3236240.,  3407120.,
      3186120.,  3383688.,  4217770.,  4461018.,  5332716.,  5623436.,
      6532750.,  6872734.,  6783454.,  7121518.,  7017774.,  7353918.,
      7235710.,  7569934.,  6404492.,  6689324.,  5582650.,  5824490.,
      4664968.,  4862024.,  4702536.,  4903176.,  6002442.,  6249530.,
      7387180.,  7682508.,  8858542.,  9203902.,  8994558.,  9337998.,
      9114190.,  9455710.,  9217438.,  9557038.,  8009420.,  8298860.,
      6923930.,  7169610.,  5741064.,  5941192.,  5728400.,  5921808.,
      7162004.,  7399412.,  8676696.,  8959640.,  10274012., 10604028.,
      10289404., 10616604., 10288412., 10612796., 10271036., 10592604.,
      8797080.,  9070296.,  7565620.,  7797140.,  6242320.,  6430608.,
      6149272.,  6326744.,  7554446.,  7771294.,  9032612.,  9290116.,
      10585050., 10884490., 10467274., 10763002., 10333114., 10625130.,
      10182570., 10470874., 8592772.,  8836708.,  7369790.,  7576270.,
      6064856.,  6232600.,  5893472.,  6046304.,  7090168.,  7275576.,
      8347408.,  8566416.,  9666216.,  9919848.,  9402728.,  9651752.,
      9122856.,  9367272.,  8826600.,  9066408.,  7288976.,  7490576.,
      6246840.,  6417400.,  5136992.,  5275488.,  1291360.,  1384800.,
      1727160.,  1846520.,  2210192.,  2356496.,  2741480.,  2915752.,
      2840488.,  3018344.,  2939496.,  3120936.,  3038504.,  3223528.,
      2769680.,  2931344.,  2447480.,  2584760.,  2070880.,  2182752.,
      2338200.,  2476760.,  3091150.,  3267550.,  3914020.,  4129540.,
      4808090.,  5064010.,  4963210.,  5223610.,  5113210.,  5369898.,
      5246826.,  5499802.,  4699908.,  4918244.,  4075390.,  4257806.,
      3371992.,  3517208.,  3699216.,  3858832.,  4817780.,  5021140.,
      6016920.,  6265560.,  7298172.,  7593628.,  7521948.,  7822780.,
      7625916.,  7923932.,  7713500.,  8008700.,  6819288.,  7074584.,
      5835284.,  6049140.,  4759952.,  4930832.,  5106120.,  5295496.,
      6612650.,  6853850.,  8214764.,  8509580.,  9914254.,  10264478.,
      10219230., 10575726., 10289710., 10644286., 10343806., 10696462.,
      9091980.,  9397292.,  7733818.,  7989994.,  6267528.,  6472776.,
      5705032.,  5897480.,  7365130.,  7610170.,  9122348.,  9421772.,
      10978478., 11334078., 11283454., 11645326., 11239246., 11599198.,
      11178654., 11536686., 9779404.,  10089324., 8272282.,  8532298.,
      6655496.,  6863816.,  5783696.,  5960720.,  7445140.,  7670260.,
      9195864.,  9470616.,  11037404., 11363324., 11336444., 11667740.,
      11171612., 11500092., 10990396., 11316060., 9555864.,  9837272.,
      8022836.,  8258452.,  6389776.,  6578064.,  5142680.,  5295576.,
      6614670.,  6808990.,  8163748.,  8400772.,  9791194.,  10072202.,
      10071754., 10357242., 9773754.,  10055530., 9459370.,  9737434.,
      8168324.,  8408164.,  6792510.,  6992846.,  5330648.,  5490200.,
      3710304.,  3830368.,  4784120.,  4936760.,  5918480.,  6104720.,
      7114408.,  7335272.,  7363944.,  7588392.,  6920232.,  7140072.,
      6460136.,  6675368.,  5509264.,  5694480.,  4491704.,  4645880.,
      3406432.,  3528544.,  2071648.,  2181472.,  2712248.,  2847992.,
      3400080.,  3562768.,  4136168.,  4326824.,  4148136.,  4334184.,
      4143720.,  4325160.,  4242728.,  4427752.,  3801872.,  3963536.,
      3307640.,  3444920.,  2759008.,  2870880.,  3258776.,  3389144.,
      4163534.,  4325598.,  5125924.,  5320964.,  6147226.,  6376522.,
      6100618.,  6326202.,  6037626.,  6259498.,  6192746.,  6419098.,
      5510404.,  5708260.,  4762750.,  4930830.,  3948504.,  4085528.,
      4534800.,  4694416.,  5736820.,  5936084.,  7011224.,  7251672.,
      8359548.,  8642716.,  8266908.,  8547260.,  8157884.,  8435420.,
      8381660.,  8664572.,  7436760.,  7683864.,  6410260.,  6620020.,
      5300624.,  5471504.,  5971400.,  6168968.,  7521706.,  7769050.,
      9163500.,  9462412.,  10898574., 11250846., 10772446., 11122798.,
      10629934., 10978366., 10934910., 11289614., 9688460.,  9997868.,
      8339770.,  8602090.,  6887048.,  7100488.,  5882184.,  6082824.,
      7356682.,  7607866.,  8924204.,  9227724.,  10586542., 10944190.,
      10345726., 10701454., 10088526., 10442334., 10393502., 10753582.,
      9229004.,  9543020.,  7960730.,  8226890.,  6586888.,  6803400.,
      5243024.,  5420048.,  6471828.,  6692852.,  7781720.,  8048280.,
      9174236.,  9487868.,  8812796.,  9123612.,  8434972.,  8742972.,
      8734012.,  9047388.,  7764888.,  8038104.,  6705460.,  6936980.,
      5554192.,  5742480.,  3769496.,  3914200.,  4533134.,  4713118.,
      5361572.,  5578116.,  6256090.,  6510474.,  5761482.,  6012154.,
      5250490.,  5497450.,  5531050.,  5782490.,  4964740.,  5184100.,
      4325950.,  4511950.,  3613400.,  3764760.,  3022176.,  3142240.,
      3923960.,  4076600.,  4886288.,  5072528.,  5910184.,  6131048.,
      6159720.,  6384168.,  6409256.,  6637288.,  6658792.,  6890408.,
      5912720.,  6114320.,  5099960.,  5270520.,  4219488.,  4357984.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     220.,     764.,     826.,     2026.,    2104.,
      4216.,    3960.,    6584.,    5816.,    8952.,    7672.,    11320.,
      8938.,    12058.,   8252.,    10588.,   5358.,    6654.,    940.,
      2636.,    5016.,    8920.,    12740.,   19364.,   24624.,   34480.,
      32432.,   43312.,   40240.,   52144.,   48048.,   60976.,   46628.,
      57092.,   38488.,   45976.,   23116.,   27116.,   9228.,    12716.,
      25176.,   32664.,   48356.,   60356.,   79280.,   96304.,   87088.,
      105136.,  94896.,   113968.,  102704.,  122800.,  92996.,   108836.,
      72984.,   84056.,   42156.,   47948.,   17516.,   22796.,   45336.,
      56408.,   83972.,   101348.,  133936.,  158128.,  141744.,  166960.,
      149552.,  175792.,  157360.,  184624.,  139364.,  160580.,  107480.,
      122136.,  61196.,   68780.,   25804.,   32876.,   65496.,   80152.,
      119588.,  142340.,  188592.,  219952.,  196400.,  228784.,  204208.,
      237616.,  212016.,  246448.,  185732.,  212324.,  141976.,  160216.,
      80236.,   89612.,   34092.,   42956.,   85656.,   103896.,  155204.,
      183332.,  243248.,  281776.,  251056.,  290608.,  258864.,  299440.,
      266672.,  308272.,  232100.,  264068.,  176472.,  198296.,  99276.,
      110444.,  42380.,   53036.,   105816.,  127640.,  190820.,  224324.,
      297904.,  343600.,  305712.,  352432.,  313520.,  361264.,  321328.,
      370096.,  278468.,  315812.,  210968.,  236376.,  118316.,  131276.,
      46718.,   52750.,   105372.,  117692.,  176218.,  195082.,  259512.,
      285176.,  265464.,  291640.,  271416.,  298104.,  277368.,  304568.,
      228874.,  249658.,  166652.,  180764.,  90446.,   97630.,   670.,
      1838.,    3548.,    6140.,    8890.,    13162.,   16952.,   23160.,
      27000.,   33720.,   37048.,   44280.,   47096.,   54840.,   41578.,
      47770.,   32060.,   36444.,   18286.,   20606.,   16556.,   20300.,
      40344.,   48344.,   71876.,   84644.,   111664.,  129712.,  135856.,
      154928.,  160048.,  180144.,  184240.,  205360.,  154916.,  171524.,
      114776.,  126360.,  63308.,   69356.,   53516.,   59052.,   117848.,
      129432.,  193508.,  211652.,  281008.,  306224.,  305200.,  331440.,
      329392.,  356656.,  353584.,  381872.,  287300.,  309284.,  206616.,
      221784.,  111020.,  118860.,  90476.,   97804.,   195352.,  210520.,
      315140.,  338660.,  450352.,  482736.,  474544.,  507952.,  498736.,
      533168.,  522928.,  558384.,  419684.,  447044.,  298456.,  317208.,
      158732.,  168364.,  127436.,  136556.,  272856.,  291608.,  436772.,
      465668.,  619696.,  659248.,  643888.,  684464.,  668080.,  709680.,
      692272.,  734896.,  552068.,  584804.,  390296.,  412632.,  206444.,
      217868.,  164396.,  175308.,  350360.,  372696.,  558404.,  592676.,
      789040.,  835760.,  813232.,  860976.,  837424.,  886192.,  861616.,
      911408.,  684452.,  722564.,  482136.,  508056.,  254156.,  267372.,
      201356.,  214060.,  427864.,  453784.,  680036.,  719684.,  958384.,
      1012272., 982576.,  1037488., 1006768., 1062704., 1030960., 1087920.,
      816836.,  860324.,  573976.,  603480.,  301868.,  316876.,  133374.,
      140430.,  280732.,  295100.,  442330.,  464266.,  618424.,  648184.,
      632568.,  662840.,  646712.,  677496.,  660856.,  692152.,  519562.,
      543418.,  362492.,  378652.,  189390.,  197598.,  1310.,    3502.,
      6876.,    11516.,   16954.,   24298.,   31800.,   42104.,   50040.,
      60856.,   68280.,   79608.,   86520.,   98360.,   74218.,   83482.,
      55868.,   62300.,   31214.,   34558.,   32172.,   37964.,   75672.,
      87768.,   131012.,  149924.,  198704.,  224944.,  239280.,  266544.,
      279856.,  308144.,  320432.,  349744.,  263204.,  285956.,  191064.,
      206744.,  103500.,  111596.,  97804.,   105388.,  210520.,  226200.,
      338660.,  362948.,  482736.,  516144.,  523312.,  557744.,  563888.,
      599344.,  604464.,  640944.,  481604.,  509732.,  340248.,  359512.,
      179884.,  189772.,  163436.,  172812.,  345368.,  364632.,  546308.,
      575972.,  766768.,  807344.,  807344.,  848944.,  847920.,  890544.,
      888496.,  932144.,  700004.,  733508.,  489432.,  512280.,  256268.,
      267948.,  229068.,  240236.,  480216.,  503064.,  753956.,  788996.,
      1050800., 1098544., 1091376., 1140144., 1131952., 1181744., 1172528.,
      1223344., 918404.,  957284.,  638616.,  665048.,  332652.,  346124.,
      294700.,  307660.,  615064.,  641496.,  961604.,  1002020., 1334832.,
      1389744., 1375408., 1431344., 1415984., 1472944., 1456560., 1514544.,
      1136804., 1181060., 787800.,  817816.,  409036.,  424300.,  360332.,
      375084.,  749912.,  779928.,  1169252., 1215044., 1618864., 1680944.,
      1659440., 1722544., 1700016., 1764144., 1740592., 1805744., 1355204.,
      1404836., 936984.,  970584.,  485420.,  502476.,  220030.,  228110.,
      456092.,  472508.,  708442.,  733450.,  977336.,  1011192., 999672.,
      1034040., 1022008., 1056888., 1044344., 1079736., 810250.,  837178.,
      558332.,  576540.,  288334.,  297566.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      29808.,   31680.,   33584.,   35520.,   41740.,   44160.,   46620.,
      49120.,   55592.,   58592.,   61640.,   64736.,   71428.,   75040.,
      78708.,   82432.,   77588.,   81312.,   85092.,   88928.,   83748.,
      87584.,   91476.,   95424.,   89908.,   93856.,   97860.,   101920.,
      84296.,   87776.,   91304.,   94880.,   76380.,   79360.,   82380.,
      85440.,   66096.,   68544.,   71024.,   73536.,   64420.,   67440.,
      70500.,   73600.,   87825.,   91700.,   95625.,   99600.,   114310.,
      119080.,  123910.,  128800.,  143955.,  149660.,  155435.,  161280.,
      153615.,  159460.,  165375.,  171360.,  163275.,  169260.,  175315.,
      181440.,  172935.,  179060.,  185255.,  191520.,  159310.,  164680.,
      170110.,  175600.,  142125.,  146700.,  151325.,  156000.,  121300.,
      125040.,  128820.,  132640.,  118856.,  123296.,  127784.,  132320.,
      159370.,  165040.,  170770.,  176560.,  204396.,  211344.,  218364.,
      225456.,  254030.,  262304.,  270662.,  279104.,  267974.,  276416.,
      284942.,  293552.,  281918.,  290528.,  299222.,  308000.,  295862.,
      304640.,  313502.,  322448.,  269340.,  277008.,  284748.,  292560.,
      237730.,  244240.,  250810.,  257440.,  200936.,  206240.,  211592.,
      216992.,  197596.,  203728.,  209916.,  216160.,  261975.,  269780.,
      277655.,  285600.,  332570.,  342104.,  351722.,  361424.,  409493.,
      420812.,  432229.,  443744.,  428505.,  440020.,  451633.,  463344.,
      447517.,  459228.,  471037.,  482944.,  466529.,  478436.,  490441.,
      502544.,  421106.,  431480.,  441938.,  452480.,  368795.,  377580.,
      386435.,  395360.,  309484.,  316624.,  323820.,  331072.,  299516.,
      306768.,  314076.,  321440.,  392175.,  401380.,  410655.,  420000.,
      492170.,  503384.,  514682.,  526064.,  599613.,  612892.,  626269.,
      639744.,  618625.,  632100.,  645673.,  659344.,  637637.,  651308.,
      665077.,  678944.,  656649.,  670516.,  684481.,  698544.,  587426.,
      599480.,  611618.,  623840.,  510195.,  520380.,  530635.,  540960.,
      424844.,  433104.,  441420.,  449792.,  392360.,  399392.,  406472.,
      413600.,  507730.,  516640.,  525610.,  534640.,  630204.,  641040.,
      651948.,  662928.,  759878.,  772688.,  785582.,  798560.,  778526.,
      791504.,  804566.,  817712.,  797174.,  810320.,  823550.,  836864.,
      815822.,  829136.,  842534.,  856016.,  722796.,  734352.,  745980.,
      757680.,  622090.,  631840.,  641650.,  651520.,  513608.,  521504.,
      529448.,  537440.,  447460.,  454000.,  460580.,  467200.,  575425.,
      583700.,  592025.,  600400.,  709990.,  720040.,  730150.,  740320.,
      851235.,  863100.,  875035.,  887040.,  868735.,  880740.,  892815.,
      904960.,  886235.,  898380.,  910595.,  922880.,  903735.,  916020.,
      928375.,  940800.,  796270.,  806920.,  817630.,  828400.,  681725.,
      690700.,  699725.,  708800.,  560020.,  567280.,  574580.,  581920.,
      460336.,  466112.,  471920.,  477760.,  589660.,  596960.,  604300.,
      611680.,  724808.,  733664.,  742568.,  751520.,  865844.,  876288.,
      886788.,  897344.,  881412.,  891968.,  902580.,  913248.,  896980.,
      907648.,  918372.,  929152.,  912548.,  923328.,  934164.,  945056.,
      801128.,  810464.,  819848.,  829280.,  683500.,  691360.,  699260.,
      707200.,  559600.,  565952.,  572336.,  578752.,  280688.,  287680.,
      294704.,  301760.,  368140.,  376960.,  385820.,  394720.,  462632.,
      473312.,  484040.,  494816.,  564228.,  576800.,  589428.,  602112.,
      570388.,  583072.,  595812.,  608608.,  576548.,  589344.,  602196.,
      615104.,  582708.,  595616.,  608580.,  621600.,  522056.,  533216.,
      544424.,  555680.,  453980.,  463360.,  472780.,  482240.,  378416.,
      385984.,  393584.,  401216.,  467620.,  477040.,  486500.,  496000.,
      607825.,  619700.,  631625.,  643600.,  757510.,  771880.,  786310.,
      800800.,  916755.,  933660.,  950635.,  967680.,  926415.,  943460.,
      960575.,  977760.,  936075.,  953260.,  970515.,  987840.,  945735.,
      963060.,  980455.,  997920.,  840910.,  855880.,  870910.,  886000.,
      726125.,  738700.,  751325.,  764000.,  601300.,  611440.,  621620.,
      631840.,  710216.,  722336.,  734504.,  746720.,  917770.,  933040.,
      948370.,  963760.,  1137516., 1155984., 1174524., 1193136., 1369550.,
      1391264., 1413062., 1434944., 1383494., 1405376., 1427342., 1449392.,
      1397438., 1419488., 1441622., 1463840., 1411382., 1433600., 1455902.,
      1478288., 1248540., 1267728., 1286988., 1306320., 1072930., 1089040.,
      1105210., 1121440., 884456.,  897440.,  910472.,  923552.,  1012956.,
      1028048., 1043196., 1058400., 1303575., 1322580., 1341655., 1360800.,
      1609370., 1632344., 1655402., 1678544., 1930453., 1957452., 1984549.,
      2011744., 1949465., 1976660., 2003953., 2031344., 1968477., 1995868.,
      2023357., 2050944., 1987489., 2015076., 2042761., 2070544., 1751666.,
      1775480., 1799378., 1823360., 1499995., 1519980., 1540035., 1560160.,
      1232364., 1248464., 1264620., 1280832., 1114876., 1131088., 1147356.,
      1163680., 1433775., 1454180., 1474655., 1495200., 1768970., 1793624.,
      1818362., 1843184., 2120573., 2149532., 2178589., 2207744., 2139585.,
      2168740., 2197993., 2227344., 2158597., 2187948., 2217397., 2246944.,
      2177609., 2207156., 2236801., 2266544., 1917986., 1943480., 1969058.,
      1994720., 1641395., 1662780., 1684235., 1705760., 1347724., 1364944.,
      1382220., 1399552., 1198760., 1213472., 1228232., 1243040., 1534930.,
      1553440., 1572010., 1590640., 1885884., 1908240., 1930668., 1953168.,
      2251718., 2277968., 2304302., 2330720., 2270366., 2296784., 2323286.,
      2349872., 2289014., 2315600., 2342270., 2369024., 2307662., 2334416.,
      2361254., 2388176., 2024556., 2047632., 2070780., 2094000., 1726090.,
      1745440., 1764850., 1784320., 1412168., 1427744., 1443368., 1459040.,
      1209060., 1222000., 1234980., 1248000., 1543425., 1559700., 1576025.,
      1592400., 1890790., 1910440., 1930150., 1949920., 2251235., 2274300.,
      2297435., 2320640., 2268735., 2291940., 2315215., 2338560., 2286235.,
      2309580., 2332995., 2356480., 2303735., 2327220., 2350775., 2374400.,
      2015470., 2035720., 2056030., 2076400., 1713725., 1730700., 1747725.,
      1764800., 1398420., 1412080., 1425780., 1439520., 1141296., 1152192.,
      1163120., 1174080., 1453660., 1467360., 1481100., 1494880., 1776968.,
      1793504., 1810088., 1826720., 2111284., 2130688., 2150148., 2169664.,
      2126852., 2146368., 2165940., 2185568., 2142420., 2162048., 2181732.,
      2201472., 2157988., 2177728., 2197524., 2217376., 1884008., 1901024.,
      1918088., 1935200., 1598700., 1612960., 1627260., 1641600., 1302000.,
      1313472., 1324976., 1336512., 531568.,  543680.,  555824.,  568000.,
      694540.,  709760.,  725020.,  740320.,  869672.,  888032.,  906440.,
      924896.,  1057028., 1078560., 1100148., 1121792., 1063188., 1084832.,
      1106532., 1128288., 1069348., 1091104., 1112916., 1134784., 1075508.,
      1097376., 1119300., 1141280., 959816.,  978656.,  997544.,  1016480.,
      831580.,  847360.,  863180.,  879040.,  690736.,  703424.,  716144.,
      728896.,  870820.,  886640.,  902500.,  918400.,  1127825., 1147700.,
      1167625., 1187600., 1400710., 1424680., 1448710., 1472800., 1689555.,
      1717660., 1745835., 1774080., 1699215., 1727460., 1755775., 1784160.,
      1708875., 1737260., 1765715., 1794240., 1718535., 1747060., 1775655.,
      1804320., 1522510., 1547080., 1571710., 1596400., 1310125., 1330700.,
      1351325., 1372000., 1081300., 1097840., 1114420., 1131040., 1301576.,
      1321376., 1341224., 1361120., 1676170., 1701040., 1725970., 1750960.,
      2070636., 2100624., 2130684., 2160816., 2485070., 2520224., 2555462.,
      2590784., 2499014., 2534336., 2569742., 2605232., 2512958., 2548448.,
      2584022., 2619680., 2526902., 2562560., 2598302., 2634128., 2227740.,
      2258448., 2289228., 2320080., 1908130., 1933840., 1959610., 1985440.,
      1567976., 1588640., 1609352., 1630112., 1828316., 1852368., 1876476.,
      1900640., 2345175., 2375380., 2405655., 2436000., 2886170., 2922584.,
      2959082., 2995664., 3451413., 3494092., 3536869., 3579744., 3470425.,
      3513300., 3556273., 3599344., 3489437., 3532508., 3575677., 3618944.,
      3508449., 3551716., 3595081., 3638544., 3082226., 3119480., 3156818.,
      3194240., 2631195., 2662380., 2693635., 2724960., 2155244., 2180304.,
      2205420., 2230592., 1930236., 1955408., 1980636., 2005920., 2475375.,
      2506980., 2538655., 2570400., 3045770., 3083864., 3122042., 3160304.,
      3641533., 3686172., 3730909., 3775744., 3660545., 3705380., 3750313.,
      3795344., 3679557., 3724588., 3769717., 3814944., 3698569., 3743796.,
      3789121., 3834544., 3248546., 3287480., 3326498., 3365600., 2772595.,
      2805180., 2837835., 2870560., 2270604., 2296784., 2323020., 2349312.,
      2005160., 2027552., 2049992., 2072480., 2562130., 2590240., 2618410.,
      2646640., 3141564., 3175440., 3209388., 3243408., 3743558., 3783248.,
      3823022., 3862880., 3762206., 3802064., 3842006., 3882032., 3780854.,
      3820880., 3860990., 3901184., 3799502., 3839696., 3879974., 3920336.,
      3326316., 3360912., 3395580., 3430320., 2830090., 2859040., 2888050.,
      2917120., 2310728., 2333984., 2357288., 2380640., 1970660., 1990000.,
      2009380., 2028800., 2511425., 2535700., 2560025., 2584400., 3071590.,
      3100840., 3130150., 3159520., 3651235., 3685500., 3719835., 3754240.,
      3668735., 3703140., 3737615., 3772160., 3686235., 3720780., 3755395.,
      3790080., 3703735., 3738420., 3773175., 3808000., 3234670., 3264520.,
      3294430., 3324400., 2745725., 2770700., 2795725., 2820800., 2236820.,
      2256880., 2276980., 2297120., 1822256., 1838272., 1854320., 1870400.,
      2317660., 2337760., 2357900., 2378080., 2829128., 2853344., 2877608.,
      2901920., 3356724., 3385088., 3413508., 3441984., 3372292., 3400768.,
      3429300., 3457888., 3387860., 3416448., 3445092., 3473792., 3403428.,
      3432128., 3460884., 3489696., 2966888., 2991584., 3016328., 3041120.,
      2513900., 2534560., 2555260., 2576000., 2044400., 2060992., 2077616.,
      2094272.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,      4.,      9.,      16.,     10.,     24.,     42.,     64.,
      43.,     76.,     115.,    160.,    116.,    176.,    244.,    320.,
      228.,    304.,    388.,    480.,    340.,    432.,    532.,    640.,
      452.,    560.,    676.,    800.,    535.,    628.,    727.,    832.,
      498.,    568.,    642.,    720.,    325.,    364.,    405.,    448.,
      46.,     96.,     150.,    208.,    284.,    400.,    524.,    656.,
      746.,    944.,    1154.,   1376.,   1464.,   1760.,   2072.,   2400.,
      1944.,   2272.,   2616.,   2976.,   2424.,   2784.,   3160.,   3552.,
      2904.,   3296.,   3704.,   4128.,   2834.,   3152.,   3482.,   3824.,
      2348.,   2576.,   2812.,   3056.,   1414.,   1536.,   1662.,   1792.,
      550.,    656.,    766.,    880.,    1516.,   1744.,   1980.,   2224.,
      2930.,   3296.,   3674.,   4064.,   4824.,   5344.,   5880.,   6432.,
      5304.,   5856.,   6424.,   7008.,   5784.,   6368.,   6968.,   7584.,
      6264.,   6880.,   7512.,   8160.,   5690.,   6176.,   6674.,   7184.,
      4476.,   4816.,   5164.,   5520.,   2590.,   2768.,   2950.,   3136.,
      1054.,   1216.,   1382.,   1552.,   2748.,   3088.,   3436.,   3792.,
      5114.,   5648.,   6194.,   6752.,   8184.,   8928.,   9688.,   10464.,
      8664.,   9440.,   10232.,  11040.,  9144.,   9952.,   10776.,  11616.,
      9624.,   10464.,  11320.,  12192.,  8546.,   9200.,   9866.,   10544.,
      6604.,   7056.,   7516.,   7984.,   3766.,   4000.,   4238.,   4480.,
      1558.,   1776.,   1998.,   2224.,   3980.,   4432.,   4892.,   5360.,
      7298.,   8000.,   8714.,   9440.,   11544.,  12512.,  13496.,  14496.,
      12024.,  13024.,  14040.,  15072.,  12504.,  13536.,  14584.,  15648.,
      12984.,  14048.,  15128.,  16224.,  11402.,  12224.,  13058.,  13904.,
      8732.,   9296.,   9868.,   10448.,  4942.,   5232.,   5526.,   5824.,
      2062.,   2336.,   2614.,   2896.,   5212.,   5776.,   6348.,   6928.,
      9482.,   10352.,  11234.,  12128.,  14904.,  16096.,  17304.,  18528.,
      15384.,  16608.,  17848.,  19104.,  15864.,  17120.,  18392.,  19680.,
      16344.,  17632.,  18936.,  20256.,  14258.,  15248.,  16250.,  17264.,
      10860.,  11536.,  12220.,  12912.,  6118.,   6464.,   6814.,   7168.,
      2566.,   2896.,   3230.,   3568.,   6444.,   7120.,   7804.,   8496.,
      11666.,  12704.,  13754.,  14816.,  18264.,  19680.,  21112.,  22560.,
      18744.,  20192.,  21656.,  23136.,  19224.,  20704.,  22200.,  23712.,
      19704.,  21216.,  22744.,  24288.,  17114.,  18272.,  19442.,  20624.,
      12988.,  13776.,  14572.,  15376.,  7294.,   7696.,   8102.,   8512.,
      2873.,   3060.,   3249.,   3440.,   6490.,   6872.,   7258.,   7648.,
      10867.,  11452.,  12043.,  12640.,  16020.,  16816.,  17620.,  18432.,
      16388.,  17200.,  18020.,  18848.,  16756.,  17584.,  18420.,  19264.,
      17124.,  17968.,  18820.,  19680.,  14143.,  14788.,  15439.,  16096.,
      10306.,  10744.,  11186.,  11632.,  5597.,   5820.,   6045.,   6272.,
      33.,     68.,     105.,    144.,    202.,    280.,    362.,    448.,
      523.,    652.,    787.,    928.,    1012.,   1200.,   1396.,   1600.,
      1636.,   1840.,   2052.,   2272.,   2260.,   2480.,   2708.,   2944.,
      2884.,   3120.,   3364.,   3616.,   2551.,   2740.,   2935.,   3136.,
      1970.,   2104.,   2242.,   2384.,   1125.,   1196.,   1269.,   1344.,
      1006.,   1120.,   1238.,   1360.,   2460.,   2704.,   2956.,   3216.,
      4394.,   4784.,   5186.,   5600.,   6840.,   7392.,   7960.,   8544.,
      8344.,   8928.,   9528.,   10144.,  9848.,   10464.,  11096.,  11744.,
      11352.,  12000.,  12664.,  13344.,  9554.,   10064.,  10586.,  11120.,
      7084.,   7440.,   7804.,   8176.,   3910.,   4096.,   4286.,   4480.,
      3302.,   3472.,   3646.,   3824.,   7276.,   7632.,   7996.,   8368.,
      11954.,  12512.,  13082.,  13664.,  17368.,  18144.,  18936.,  19744.,
      18872.,  19680.,  20504.,  21344.,  20376.,  21216.,  22072.,  22944.,
      21880.,  22752.,  23640.,  24544.,  17786.,  18464.,  19154.,  19856.,
      12796.,  13264.,  13740.,  14224.,  6878.,   7120.,   7366.,   7616.,
      5598.,   5824.,   6054.,   6288.,   12092.,  12560.,  13036.,  13520.,
      19514.,  20240.,  20978.,  21728.,  27896.,  28896.,  29912.,  30944.,
      29400.,  30432.,  31480.,  32544.,  30904.,  31968.,  33048.,  34144.,
      32408.,  33504.,  34616.,  35744.,  26018.,  26864.,  27722.,  28592.,
      18508.,  19088.,  19676.,  20272.,  9846.,   10144.,  10446.,  10752.,
      7894.,   8176.,   8462.,   8752.,   16908.,  17488.,  18076.,  18672.,
      27074.,  27968.,  28874.,  29792.,  38424.,  39648.,  40888.,  42144.,
      39928.,  41184.,  42456.,  43744.,  41432.,  42720.,  44024.,  45344.,
      42936.,  44256.,  45592.,  46944.,  34250.,  35264.,  36290.,  37328.,
      24220.,  24912.,  25612.,  26320.,  12814.,  13168.,  13526.,  13888.,
      10190.,  10528.,  10870.,  11216.,  21724.,  22416.,  23116.,  23824.,
      34634.,  35696.,  36770.,  37856.,  48952.,  50400.,  51864.,  53344.,
      50456.,  51936.,  53432.,  54944.,  51960.,  53472.,  55000.,  56544.,
      53464.,  55008.,  56568.,  58144.,  42482.,  43664.,  44858.,  46064.,
      29932.,  30736.,  31548.,  32368.,  15782.,  16192.,  16606.,  17024.,
      12486.,  12880.,  13278.,  13680.,  26540.,  27344.,  28156.,  28976.,
      42194.,  43424.,  44666.,  45920.,  59480.,  61152.,  62840.,  64544.,
      60984.,  62688.,  64408.,  66144.,  62488.,  64224.,  65976.,  67744.,
      63992.,  65760.,  67544.,  69344.,  50714.,  52064.,  53426.,  54800.,
      35644.,  36560.,  37484.,  38416.,  18750.,  19216.,  19686.,  20160.,
      8281.,   8500.,   8721.,   8944.,   17434.,  17880.,  18330.,  18784.,
      27475.,  28156.,  28843.,  29536.,  38420.,  39344.,  40276.,  41216.,
      39300.,  40240.,  41188.,  42144.,  40180.,  41136.,  42100.,  43072.,
      41060.,  42032.,  43012.,  44000.,  32287.,  33028.,  33775.,  34528.,
      22530.,  23032.,  23538.,  24048.,  11773.,  12028.,  12285.,  12544.,
      65.,     132.,    201.,    272.,    394.,    536.,    682.,    832.,
      1003.,   1228.,   1459.,   1696.,   1908.,   2224.,   2548.,   2880.,
      3044.,   3376.,   3716.,   4064.,   4180.,   4528.,   4884.,   5248.,
      5316.,   5680.,   6052.,   6432.,   4567.,   4852.,   5143.,   5440.,
      3442.,   3640.,   3842.,   4048.,   1925.,   2028.,   2133.,   2240.,
      1966.,   2144.,   2326.,   2512.,   4636.,   5008.,   5388.,   5776.,
      8042.,   8624.,   9218.,   9824.,   12216.,  13024.,  13848.,  14688.,
      14744.,  15584.,  16440.,  17312.,  17272.,  18144.,  19032.,  19936.,
      19800.,  20704.,  21624.,  22560.,  16274.,  16976.,  17690.,  18416.,
      11820.,  12304.,  12796.,  13296.,  6406.,   6656.,   6910.,   7168.,
      6054.,   6288.,   6526.,   6768.,   13036.,  13520.,  14012.,  14512.,
      20978.,  21728.,  22490.,  23264.,  29912.,  30944.,  31992.,  33056.,
      32440.,  33504.,  34584.,  35680.,  34968.,  36064.,  37176.,  38304.,
      37496.,  38624.,  39768.,  40928.,  29882.,  30752.,  31634.,  32528.,
      21116.,  21712.,  22316.,  22928.,  11166.,  11472.,  11782.,  12096.,
      10142.,  10432.,  10726.,  11024.,  21436.,  22032.,  22636.,  23248.,
      33914.,  34832.,  35762.,  36704.,  47608.,  48864.,  50136.,  51424.,
      50136.,  51424.,  52728.,  54048.,  52664.,  53984.,  55320.,  56672.,
      55192.,  56544.,  57912.,  59296.,  43490.,  44528.,  45578.,  46640.,
      30412.,  31120.,  31836.,  32560.,  15926.,  16288.,  16654.,  17024.,
      14230.,  14576.,  14926.,  15280.,  29836.,  30544.,  31260.,  31984.,
      46850.,  47936.,  49034.,  50144.,  65304.,  66784.,  68280.,  69792.,
      67832.,  69344.,  70872.,  72416.,  70360.,  71904.,  73464.,  75040.,
      72888.,  74464.,  76056.,  77664.,  57098.,  58304.,  59522.,  60752.,
      39708.,  40528.,  41356.,  42192.,  20686.,  21104.,  21526.,  21952.,
      18318.,  18720.,  19126.,  19536.,  38236.,  39056.,  39884.,  40720.,
      59786.,  61040.,  62306.,  63584.,  83000.,  84704.,  86424.,  88160.,
      85528.,  87264.,  89016.,  90784.,  88056.,  89824.,  91608.,  93408.,
      90584.,  92384.,  94200.,  96032.,  70706.,  72080.,  73466.,  74864.,
      49004.,  49936.,  50876.,  51824.,  25446.,  25920.,  26398.,  26880.,
      22406.,  22864.,  23326.,  23792.,  46636.,  47568.,  48508.,  49456.,
      72722.,  74144.,  75578.,  77024.,  100696., 102624., 104568., 106528.,
      103224., 105184., 107160., 109152., 105752., 107744., 109752., 111776.,
      108280., 110304., 112344., 114400., 84314.,  85856.,  87410.,  88976.,
      58300.,  59344.,  60396.,  61456.,  30206.,  30736.,  31270.,  31808.,
      13689.,  13940.,  14193.,  14448.,  28378.,  28888.,  29402.,  29920.,
      44083.,  44860.,  45643.,  46432.,  60820.,  61872.,  62932.,  64000.,
      62212.,  63280.,  64356.,  65440.,  63604.,  64688.,  65780.,  66880.,
      64996.,  66096.,  67204.,  68320.,  50431.,  51268.,  52111.,  52960.,
      34754.,  35320.,  35890.,  36464.,  17949.,  18236.,  18525.,  18816.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      234768.,   249680.,   264848.,   280272.,   329140.,   348420.,
      368020.,   387940.,   438808.,   462712.,   487000.,   511672.,
      564284.,   593068.,   622300.,   651980.,   613340.,   643020.,
      673148.,   703724.,   662396.,   692972.,   723996.,   755468.,
      711452.,   742924.,   774844.,   807212.,   667480.,   695224.,
      723352.,   751864.,   605140.,   628900.,   652980.,   677380.,
      523920.,   543440.,   563216.,   583248.,   509380.,   533460.,
      557860.,   582580.,   694925.,   725825.,   757125.,   788825.,
      905030.,   943070.,   981590.,   1020590.,  1140335.,  1185835.,
      1231895.,  1278515.,  1217335.,  1263955.,  1311135.,  1358875.,
      1294335.,  1342075.,  1390375.,  1439235.,  1371335.,  1420195.,
      1469615.,  1519595.,  1263830.,  1306670.,  1349990.,  1393790.,
      1127925.,  1164425.,  1201325.,  1238625.,  962980.,   992820.,
      1022980.,  1053460.,  942040.,   977464.,   1013272.,  1049464.,
      1263710.,  1308950.,  1354670.,  1400870.,  1621380.,  1676820.,
      1732836.,  1789428.,  2015818.,  2081842.,  2148538.,  2215906.,
      2127034.,  2194402.,  2262442.,  2331154.,  2238250.,  2306962.,
      2376346.,  2446402.,  2349466.,  2419522.,  2490250.,  2561650.,
      2139492.,  2200692.,  2262468.,  2324820.,  1888910.,  1940870.,
      1993310.,  2046230.,  1596952.,  1639288.,  1682008.,  1725112.,
      1568588.,  1617532.,  1666924.,  1716764.,  2080295.,  2142595.,
      2205455.,  2268875.,  2641618.,  2717722.,  2794498.,  2871946.,
      3253453.,  3343809.,  3434949.,  3526873.,  3405157.,  3497081.,
      3589789.,  3683281.,  3556861.,  3650353.,  3744629.,  3839689.,
      3708565.,  3803625.,  3899469.,  3996097.,  3348226.,  3431050.,
      3514546.,  3598714.,  2932895.,  3003035.,  3073735.,  3144995.,
      2461676.,  2518684.,  2576140.,  2634044.,  2381708.,  2439612.,
      2497964.,  2556764.,  3119095.,  3192595.,  3266655.,  3341275.,
      3915058.,  4004602.,  4094818.,  4185706.,  4770493.,  4876529.,
      4983349.,  5090953.,  4922197.,  5029801.,  5138189.,  5247361.,
      5073901.,  5183073.,  5293029.,  5403769.,  5225605.,  5336345.,
      5447869.,  5560177.,  4675426.,  4771690.,  4868626.,  4966234.,
      4061295.,  4142635.,  4224535.,  4306995.,  3382316.,  3448284.,
      3514700.,  3581564.,  3124888.,  3181048.,  3237592.,  3294520.,
      4044110.,  4115270.,  4186910.,  4259030.,  5020068.,  5106612.,
      5193732.,  5281428.,  6053530.,  6155842.,  6258826.,  6362482.,
      6202378.,  6306034.,  6410362.,  6515362.,  6351226.,  6456226.,
      6561898.,  6668242.,  6500074.,  6606418.,  6713434.,  6821122.,
      5759364.,  5851668.,  5944548.,  6038004.,  4957310.,  5035190.,
      5113550.,  5192390.,  4093144.,  4156216.,  4219672.,  4283512.,
      3566660.,  3618900.,  3671460.,  3724340.,  4586925.,  4653025.,
      4719525.,  4786425.,  5659910.,  5740190.,  5820950.,  5902190.,
      6786255.,  6881035.,  6976375.,  7072275.,  6925975.,  7021875.,
      7118335.,  7215355.,  7065695.,  7162715.,  7260295.,  7358435.,
      7205415.,  7303555.,  7402255.,  7501515.,  6348950.,  6434030.,
      6519590.,  6605630.,  5435925.,  5507625.,  5579725.,  5652225.,
      4465700.,  4523700.,  4582020.,  4640660.,  3671184.,  3717328.,
      3763728.,  3810384.,  4702740.,  4761060.,  4819700.,  4878660.,
      5780824.,  5851576.,  5922712.,  5994232.,  6905948.,  6989388.,
      7073276.,  7157612.,  7030268.,  7114604.,  7199388.,  7284620.,
      7154588.,  7239820.,  7325500.,  7411628.,  7278908.,  7365036.,
      7451612.,  7538636.,  6390424.,  6465016.,  6539992.,  6615352.,
      5452340.,  5515140.,  5578260.,  5641700.,  4464144.,  4514896.,
      4565904.,  4617168.,  2231568.,  2287440.,  2343568.,  2399952.,
      2927540.,  2998020.,  3068820.,  3139940.,  3679768.,  3765112.,
      3850840.,  3936952.,  4488764.,  4589228.,  4690140.,  4791500.,
      4537820.,  4639180.,  4740988.,  4843244.,  4586876.,  4689132.,
      4791836.,  4894988.,  4635932.,  4739084.,  4842684.,  4946732.,
      4154200.,  4243384.,  4332952.,  4422904.,  3613140.,  3688100.,
      3763380.,  3838980.,  3012240.,  3072720.,  3133456.,  3194448.,
      3722180.,  3797460.,  3873060.,  3948980.,  4838925.,  4933825.,
      5029125.,  5124825.,  6031430.,  6146270.,  6261590.,  6377390.,
      7300335.,  7435435.,  7571095.,  7707315.,  7377335.,  7513555.,
      7650335.,  7787675.,  7451263.,  7584507.,  7718311.,  7852675.,
      7508807.,  7639075.,  7769903.,  7901291.,  6642134.,  6753582.,
      6865510.,  6977918.,  5695861.,  5788169.,  5880877.,  5973985.,
      4669348.,  4742196.,  4815364.,  4888852.,  5546968.,  5627448.,
      5708312.,  5789560.,  7132510.,  7234070.,  7336110.,  7438630.,
      8799108.,  8922132.,  9045732.,  9169908.,  10547530., 10692402.,
      10837946., 10984162., 10658746., 10804962., 10951850., 11099410.,
      10652202., 10795666., 10939802., 11084610., 10629274., 10769986.,
      10911370., 11053426., 9302884.,  9423476.,  9544644.,  9666388.,
      7890830.,  7990918.,  8091486.,  8192534.,  6392344.,  6471544.,
      6551128.,  6631096.,  7393612.,  7481468.,  7569772.,  7658524.,
      9458855.,  9569795.,  9681295.,  9793355.,  11612626., 11747098.,
      11882242., 12018058., 13855821., 14014273., 14173509., 14333529.,
      14007525., 14167545., 14328349., 14489937., 13926781., 14084273.,
      14242549., 14401609., 13829653., 13984617., 14140365., 14296897.,
      12038658., 12171658., 12305330., 12439674., 10153759., 10264347.,
      10375495., 10487203., 8174060.,  8261788.,  8349964.,  8438588.,
      7178636.,  7259068.,  7339948.,  7421276.,  9171575.,  9273235.,
      9375455.,  9478235.,  11245618., 11368954., 11492962., 11617642.,
      13401661., 13547121., 13693365., 13840393., 13553365., 13700393.,
      13848205., 13996801., 13357933., 13502433., 13647717., 13793785.,
      13146117., 13288089., 13430845., 13574385., 11397730., 11519594.,
      11642130., 11765338., 9562863.,  9664171.,  9766039.,  9868467.,
      7640620.,  7720924.,  7801676.,  7882876.,  6476440.,  6544888.,
      6613720.,  6682936.,  8264270.,  8350790.,  8437790.,  8525270.,
      10121124., 10226100., 10331652., 10437780., 12047770., 12171586.,
      12296074., 12421234., 12196618., 12321778., 12447610., 12574114.,
      11883642., 12006050., 12129130., 12252882., 11554282., 11673938.,
      11794266., 11915266., 9961348.,  10063892., 10167012., 10270708.,
      8294782.,  8379830.,  8465358.,  8551366.,  6553816.,  6620984.,
      6688536.,  6756472.,  5186116.,  5240404.,  5295012.,  5349940.,
      6616365.,  6685025.,  6754085.,  6823545.,  8101382.,  8184734.,
      8268566.,  8352878.,  9641807.,  9740171.,  9839095.,  9938579.,
      9781527.,  9881011.,  9981055.,  10081659., 9344735.,  9441243.,
      9538311.,  9635939.,  8891559.,  8985091.,  9079183.,  9173835.,
      7600534.,  7680494.,  7760934.,  7841854.,  6250901.,  6316969.,
      6383437.,  6450305.,  4842020.,  4893876.,  4946052.,  4998548.,
      3271824.,  3309776.,  3347984.,  3386448.,  4183060.,  4231140.,
      4279540.,  4328260.,  5132632.,  5191096.,  5249944.,  5309176.,
      6121052.,  6190156.,  6259708.,  6329708.,  6245372.,  6315372.,
      6385820.,  6456716.,  5678492.,  5745292.,  5812540.,  5880236.,
      5095228.,  5158828.,  5222876.,  5287372.,  4261528.,  4315640.,
      4370136.,  4425016.,  3386420.,  3430788.,  3475476.,  3520484.,
      2469392.,  2503760.,  2538384.,  2573264.,  1033488.,  1064784.,
      1096336.,  1128144.,  1368500.,  1408260.,  1448340.,  1488740.,
      1735192.,  1783672.,  1832536.,  1881784.,  2134076.,  2191532.,
      2249436.,  2307788.,  2183132.,  2241484.,  2300284.,  2359532.,
      2232188.,  2291436.,  2351132.,  2411276.,  2281244.,  2341388.,
      2401980.,  2463020.,  2062168.,  2114488.,  2167192.,  2220280.,
      1808340.,  1852580.,  1897140.,  1942020.,  1519248.,  1555152.,
      1591312.,  1627728.,  1794500.,  1839060.,  1883940.,  1929140.,
      2352525.,  2409025.,  2465925.,  2523225.,  2955590.,  3024350.,
      3093590.,  3163310.,  3604335.,  3685675.,  3767575.,  3850035.,
      3681335.,  3763795.,  3846815.,  3930395.,  3758335.,  3841915.,
      3926055.,  4010755.,  3835335.,  3920035.,  4005295.,  4091115.,
      3437270.,  3510830.,  3584870.,  3659390.,  2990325.,  3052425.,
      3114925.,  3177825.,  2493860.,  2544180.,  2594820.,  2645780.,
      2828248.,  2888248.,  2948632.,  3009400.,  3682910.,  3758870.,
      3835310.,  3912230.,  4598148.,  4690452.,  4783332.,  4876788.,
      5574730.,  5683762.,  5793466.,  5903842.,  5685946.,  5796322.,
      5907370.,  6019090.,  5797162.,  5908882.,  6021274.,  6134338.,
      5908378.,  6021442.,  6135178.,  6249586.,  5263716.,  5361780.,
      5460420.,  5559636.,  4553870.,  4636550.,  4719710.,  4803350.,
      3778072.,  3844984.,  3912280.,  3979960.,  4170572.,  4248188.,
      4326252.,  4404764.,  5404455.,  5502595.,  5601295.,  5700555.,
      6716626.,  6835738.,  6955522.,  7075978.,  8107981.,  8248513.,
      8389829.,  8531929.,  8259685.,  8401785.,  8544669.,  8688337.,
      8411389.,  8555057.,  8699509.,  8844745.,  8563093.,  8708329.,
      8854349.,  9001153.,  7595266.,  7721098.,  7847602.,  7974778.,
      6543775.,  6649755.,  6756295.,  6863395.,  5407724.,  5493404.,
      5579532.,  5666108.,  4983692.,  5070268.,  5157292.,  5244764.,
      6443255.,  6552595.,  6662495.,  6772955.,  7990066.,  8122618.,
      8255842.,  8389738.,  9625021.,  9781233.,  9938229.,  10096009.,
      9776725.,  9934505.,  10093069., 10252417., 9928429.,  10087777.,
      10247909., 10408825., 10080133., 10241049., 10402749., 10565233.,
      8922466.,  9061738.,  9201682.,  9342298.,  7672175.,  7789355.,
      7907095.,  8025395.,  6328364.,  6423004.,  6518092.,  6613628.,
      5699224.,  5779960.,  5861080.,  5942584.,  7323470.,  7425350.,
      7527710.,  7630550.,  9029028.,  9152436.,  9276420.,  9400980.,
      10816666., 10961986., 11107978., 11254642., 10965514., 11112178.,
      11259514., 11407522., 11114362., 11262370., 11411050., 11560402.,
      11263210., 11412562., 11562586., 11713282., 9915780.,  10044948.,
      10174692., 10305012., 8482430.,  8591030.,  8700110.,  8809670.,
      6962392.,  7050040.,  7138072.,  7226488.,  5998660.,  6071380.,
      6144420.,  6217780.,  7678125.,  7769825.,  7861925.,  7954425.,
      9430790.,  9541790.,  9653270.,  9765230.,  11257295., 11387915.,
      11519095., 11650835., 11397015., 11528755., 11661055., 11793915.,
      11536735., 11669595., 11803015., 11936995., 11676455., 11810435.,
      11944975., 12080075., 10242710., 10358510., 10474790., 10591550.,
      8731925.,  8829225.,  8926925.,  9025025.,  7143460.,  7221940.,
      7300740.,  7379860.,  5846160.,  5908688.,  5971472.,  6034512.,
      7462420.,  7541220.,  7620340.,  7699780.,  9141592.,  9236920.,
      9332632.,  9428728.,  10884188., 10996300., 11108860., 11221868.,
      11008508., 11121516., 11234972., 11348876., 11132828., 11246732.,
      11361084., 11475884., 11257148., 11371948., 11487196., 11602892.,
      9849496.,  9948664.,  10048216., 10148152., 8375860.,  8459140.,
      8542740.,  8626660.,  6835728.,  6902864.,  6970256.,  7037904.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      287.,    539.,    839.,    1187.,   820.,    1284.,   1812.,   2404.,
      1684.,   2276.,   2932.,   3652.,   2548.,   3268.,   4052.,   4900.,
      3412.,   4260.,   5172.,   6148.,   4103.,   4835.,   5615.,   6443.,
      3850.,   4402.,   4986.,   5602.,   2525.,   2833.,   3157.,   3497.,
      274.,    666.,    1090.,   1546.,   2052.,   2964.,   3940.,   4980.,
      5590.,   7150.,   8806.,   10558.,  11144.,  13480.,  15944.,  18536.,
      14920.,  17512.,  20232.,  23080.,  18696.,  21544.,  24520.,  27624.,
      22472.,  25576.,  28808.,  32168.,  22054.,  24574.,  27190.,  29902.,
      18340.,  20148.,  22020.,  23956.,  11074.,  12042.,  13042.,  14074.,
      4194.,   5034.,   5906.,   6810.,   11684.,  13492.,  15364.,  17300.,
      22726.,  25630.,  28630.,  31726.,  37576.,  41704.,  45960.,  50344.,
      41352.,  45736.,  50248.,  54888.,  45128.,  49768.,  54536.,  59432.,
      48904.,  53800.,  58824.,  63976.,  44566.,  48430.,  52390.,  56446.,
      35140.,  37844.,  40612.,  43444.,  20370.,  21786.,  23234.,  24714.,
      8114.,   9402.,   10722.,  12074.,  21316.,  24020.,  26788.,  29620.,
      39862.,  44110.,  48454.,  52894.,  64008.,  69928.,  75976.,  82152.,
      67784.,  73960.,  80264.,  86696.,  71560.,  77992.,  84552.,  91240.,
      75336.,  82024.,  88840.,  95784.,  67078.,  72286.,  77590.,  82990.,
      51940.,  55540.,  59204.,  62932.,  29666.,  31530.,  33426.,  35354.,
      12034.,  13770.,  15538.,  17338.,  30948.,  34548.,  38212.,  41940.,
      56998.,  62590.,  68278.,  74062.,  90440.,  98152.,  105992., 113960.,
      94216.,  102184., 110280., 118504., 97992.,  106216., 114568., 123048.,
      101768., 110248., 118856., 127592., 89590.,  96142.,  102790., 109534.,
      68740.,  73236.,  77796.,  82420.,  38962.,  41274.,  43618.,  45994.,
      15954.,  18138.,  20354.,  22602.,  40580.,  45076.,  49636.,  54260.,
      74134.,  81070.,  88102.,  95230.,  116872., 126376., 136008., 145768.,
      120648., 130408., 140296., 150312., 124424., 134440., 144584., 154856.,
      128200., 138472., 148872., 159400., 112102., 119998., 127990., 136078.,
      85540.,  90932.,  96388.,  101908., 48258.,  51018.,  53810.,  56634.,
      19874.,  22506.,  25170.,  27866.,  50212.,  55604.,  61060.,  66580.,
      91270.,  99550.,  107926., 116398., 143304., 154600., 166024., 177576.,
      147080., 158632., 170312., 182120., 150856., 162664., 174600., 186664.,
      154632., 166696., 178888., 191208., 134614., 143854., 153190., 162622.,
      102340., 108628., 114980., 121396., 57554.,  60762.,  64002.,  67274.,
      22613.,  24105.,  25613.,  27137.,  51162.,  54210.,  57290.,  60402.,
      85775.,  90443.,  95159.,  99923.,  126580., 132932., 139348., 145828.,
      129492., 135972., 142516., 149124., 132404., 139012., 145684., 152420.,
      135316., 142052., 148852., 155716., 111863., 117011., 122207., 127451.,
      81578.,  85074.,  88602.,  92162.,  44333.,  46113.,  47909.,  49721.,
      197.,    473.,    765.,    1073.,   1466.,   2082.,   2730.,   3410.,
      3935.,   4955.,   6023.,   7139.,   7732.,   9220.,   10772.,  12388.,
      12692.,  14308.,  15988.,  17732.,  17652.,  19396.,  21204.,  23076.,
      22612.,  24484.,  26420.,  28420.,  20039.,  21539.,  23087.,  24683.,
      15498.,  16562.,  17658.,  18786.,  8861.,   9425.,   10005.,  10601.,
      7826.,   8730.,   9666.,   10634.,  19204.,  21140.,  23140.,  25204.,
      34390.,  37486.,  40678.,  43966.,  53640.,  58024.,  62536.,  67176.,
      65608.,  70248.,  75016.,  79912.,  77576.,  82472.,  87496.,  92648.,
      89544.,  94696.,  99976.,  105384., 75430.,  79486.,  83638.,  87886.,
      55972.,  58804.,  61700.,  64660.,  30914.,  32394.,  33906.,  35450.,
      26082.,  27434.,  28818.,  30234.,  57508.,  60340.,  63236.,  66196.,
      94534.,  98974.,  103510., 108142., 137416., 143592., 149896., 156328.,
      149384., 155816., 162376., 169064., 161352., 168040., 174856., 181800.,
      173320., 180264., 187336., 194536., 140950., 146350., 151846., 157438.,
      101444., 105172., 108964., 112820., 54546.,  56474.,  58434.,  60426.,
      44338.,  46138.,  47970.,  49834.,  95812.,  99540.,  103332., 107188.,
      154678., 160462., 166342., 172318., 221192., 229160., 237256., 245480.,
      233160., 241384., 249736., 258216., 245128., 253608., 262216., 270952.,
      257096., 265832., 274696., 283688., 206470., 213214., 220054., 226990.,
      146916., 151540., 156228., 160980., 78178.,  80554.,  82962.,  85402.,
      62594.,  64842.,  67122.,  69434.,  134116., 138740., 143428., 148180.,
      214822., 221950., 229174., 236494., 304968., 314728., 324616., 334632.,
      316936., 326952., 337096., 347368., 328904., 339176., 349576., 360104.,
      340872., 351400., 362056., 372840., 271990., 280078., 288262., 296542.,
      192388., 197908., 203492., 209140., 101810., 104634., 107490., 110378.,
      80850.,  83546.,  86274.,  89034.,  172420., 177940., 183524., 189172.,
      274966., 283438., 292006., 300670., 388744., 400296., 411976., 423784.,
      400712., 412520., 424456., 436520., 412680., 424744., 436936., 449256.,
      424648., 436968., 449416., 461992., 337510., 346942., 356470., 366094.,
      237860., 244276., 250756., 257300., 125442., 128714., 132018., 135354.,
      99106.,  102250., 105426., 108634., 210724., 217140., 223620., 230164.,
      335110., 344926., 354838., 364846., 472520., 485864., 499336., 512936.,
      484488., 498088., 511816., 525672., 496456., 510312., 524296., 538408.,
      508424., 522536., 536776., 551144., 403030., 413806., 424678., 435646.,
      283332., 290644., 298020., 305460., 149074., 152794., 156546., 160330.,
      65813.,  67561.,  69325.,  71105.,  138586., 142146., 145738., 149362.,
      218447., 223883., 229367., 234899., 305524., 312900., 320340., 327844.,
      312532., 320036., 327604., 335236., 319540., 327172., 334868., 342628.,
      326548., 334308., 342132., 350020., 256823., 262739., 268703., 274715.,
      179242., 183250., 187290., 191362., 93677.,  95713.,  97765.,  99833.,
      389.,    921.,    1469.,   2033.,   2874.,   4002.,   5162.,   6354.,
      7583.,   9371.,   11207.,  13091.,  14644.,  17156.,  19732.,  22372.,
      23700.,  26340.,  29044.,  31812.,  32756.,  35524.,  38356.,  41252.,
      41812.,  44708.,  47668.,  50692.,  35975.,  38243.,  40559.,  42923.,
      27146.,  28722.,  30330.,  31970.,  15197.,  16017.,  16853.,  17705.,
      15378.,  16794.,  18242.,  19722.,  36356.,  39316.,  42340.,  45428.,
      63190.,  67822.,  72550.,  77374.,  96136.,  102568., 109128., 115816.,
      116296., 122984., 129800., 136744., 136456., 143400., 150472., 157672.,
      156616., 163816., 171144., 178600., 128806., 134398., 140086., 145870.,
      93604.,  97460.,  101380., 105364., 50754.,  52746.,  54770.,  56826.,
      47970.,  49834.,  51730.,  53658.,  103332., 107188., 111108., 115092.,
      166342., 172318., 178390., 184558., 237256., 245480., 253832., 262312.,
      257416., 265896., 274504., 283240., 277576., 286312., 295176., 304168.,
      297736., 306728., 315848., 325096., 237334., 244270., 251302., 258430.,
      167748., 172500., 177316., 182196., 88722.,  91162.,  93634.,  96138.,
      80562.,  82874.,  85218.,  87594.,  170308., 175060., 179876., 184756.,
      269494., 276814., 284230., 291742., 378376., 388392., 398536., 408808.,
      398536., 408808., 419208., 429736., 418696., 429224., 439880., 450664.,
      438856., 449640., 460552., 471592., 345862., 354142., 362518., 370990.,
      241892., 247540., 253252., 259028., 126690., 129578., 132498., 135450.,
      113154., 115914., 118706., 121530., 237284., 242932., 248644., 254420.,
      372646., 381310., 390070., 398926., 519496., 531304., 543240., 555304.,
      539656., 551720., 563912., 576232., 559816., 572136., 584584., 597160.,
      579976., 592552., 605256., 618088., 454390., 464014., 473734., 483550.,
      316036., 322580., 329188., 335860., 164658., 167994., 171362., 174762.,
      145746., 148954., 152194., 155466., 304260., 310804., 317412., 324084.,
      475798., 485806., 495910., 506110., 660616., 674216., 687944., 701800.,
      680776., 694632., 708616., 722728., 700936., 715048., 729288., 743656.,
      721096., 735464., 749960., 764584., 562918., 573886., 584950., 596110.,
      390180., 397620., 405124., 412692., 202626., 206410., 210226., 214074.,
      178338., 181994., 185682., 189402., 371236., 378676., 386180., 393748.,
      578950., 590302., 601750., 613294., 801736., 817128., 832648., 848296.,
      821896., 837544., 853320., 869224., 842056., 857960., 873992., 890152.,
      862216., 878376., 894664., 911080., 671446., 683758., 696166., 708670.,
      464324., 472660., 481060., 489524., 240594., 244826., 249090., 253386.,
      109013., 111017., 113037., 115073., 226010., 230082., 234186., 238322.,
      351119., 357323., 363575., 369875., 484468., 492868., 501332., 509860.,
      495572., 504100., 512692., 521348., 506676., 515332., 524052., 532836.,
      517780., 526564., 535412., 544324., 401783., 408467., 415199., 421979.,
      276906., 281426., 285978., 290562., 143021., 145313., 147621., 149945.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x8x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1820384.,  1923040.,  2027744.,  2134496.,  2500376.,  2629720.,
      2761624.,  2896088.,  3269712.,  3427792.,  3588944.,  3753168.,
      4132488.,  4321352.,  4513800.,  4709832.,  4355080.,  4542920.,
      4734344.,  4929352.,  4544904.,  4731720.,  4922120.,  5116104.,
      4936456.,  5130440.,  5328008.,  5529160.,  4593488.,  4765904.,
      4941392.,  5119952.,  4136600.,  4285400.,  4436760.,  4590680.,
      3561696.,  3684832.,  3810016.,  3937248.,  3332312.,  3475480.,
      3621208.,  3769496.,  4368558.,  4541630.,  4717902.,  4897374.,
      5502660.,  5708196.,  5917572.,  6130788.,  6739738.,  6980298.,
      7225338.,  7474858.,  6857978.,  7099306.,  7345114.,  7595402.,
      6943450.,  7185546.,  7432122.,  7683178.,  7460026.,  7711082.,
      7966618.,  8226634.,  6747268.,  6966628.,  7189828.,  7416868.,
      5873166.,  6058270.,  6246574.,  6438078.,  4832600.,  4980888.,
      5131736.,  5285144.,  4971856.,  5140176.,  5311568.,  5486032.,
      6035300.,  6241092.,  6450724.,  6664196.,  7222520.,  7468856.,
      7719800.,  7975352.,  8539660.,  8829612.,  9124940.,  9425644.,
      8472652.,  8765164.,  9063052.,  9366316.,  8372876.,  8667948.,
      8968396.,  9274220.,  8933580.,  9239404.,  9550604.,  9867180.,
      7971192.,  8239032.,  8511480.,  8788536.,  6815396.,  7042180.,
      7272804.,  7507268.,  5460048.,  5642704.,  5828432.,  6017232.,
      5932104.,  6142984.,  6357448.,  6575496.,  6891322.,  7143402.,
      7399962.,  7661002.,  7984876.,  8281740.,  8583980.,  8891596.,
      9219934.,  9565166.,  9916670.,  10274446., 8914430.,  9255822.,
      9603486.,  9957422.,  8543390.,  8880942.,  9224766.,  9574862.,
      9029438.,  9371342.,  9719518.,  10073966., 7795244.,  8088524.,
      8387180.,  8691212.,  6552666.,  6801930.,  7055674.,  7313898.,
      5092808.,  5294472.,  5499720.,  5708552.,  6161224.,  6378248.,
      6598856.,  6823048.,  6521338.,  6781098.,  7045338.,  7314058.,
      7021932.,  7328012.,  7639468.,  7956300.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      9221854.,  9570158.,  9924734.,  10285582., 9478526.,  9831182.,
      10190110., 10555310., 8310956.,  8613452.,  8921324.,  9234572.,
      7358234.,  7615178.,  7876602.,  8142506.,  6182088.,  6389896.,
      6601288.,  6816264.,  6537808.,  6740944.,  6947152.,  7156432.,
      7861668.,  8102788.,  8347748.,  8596548.,  9311352.,  9593528.,
      9880312.,  10171704., 10893004., 11219308., 11550988., 11888044.,
      10695948., 11016620., 11342668., 11674092., 10433356., 10748396.,
      11068812., 11394604., 10438028., 10755628., 11078604., 11406956.,
      8728824.,  8999736.,  9275256.,  9555384.,  7484644.,  7713988.,
      7947172.,  8184196.,  6038864.,  6223568.,  6411344.,  6602192.,
      6602456.,  6774296.,  6948696.,  7125656.,  7195694.,  7396414.,
      7600334.,  7807454.,  7882692.,  8114852.,  8350852.,  8590692.,
      8668570.,  8934730.,  9205370.,  9480490.,  7939962.,  8198698.,
      8461914.,  8729610.,  7145818.,  7397130.,  7652922.,  7913194.,
      6848314.,  7100394.,  7356954.,  7617994.,  5195140.,  5408356.,
      5625412.,  5846308.,  4274574.,  4454558.,  4637742.,  4824126.,
      3191640.,  3335832.,  3482584.,  3631896.,  5128416.,  5267936.,
      5409504.,  5553120.,  4901272.,  5064408.,  5230104.,  5398360.,
      4751184.,  4939984.,  5131856.,  5326800.,  4682248.,  4898760.,
      5118856.,  5342536.,  4097928.,  4313416.,  4532488.,  4755144.,
      4529416.,  4743880.,  4961928.,  5183560.,  4928136.,  5141576.,
      5358600.,  5579208.,  4486736.,  4665296.,  4846928.,  5031632.,
      3981592.,  4131416.,  4283800.,  4438744.,  3337952.,  3456992.,
      3578080.,  3701216.,  3698400.,  3817440.,  3938528.,  4061664.,
      4907800.,  5061720.,  5218200.,  5377240.,  6239312.,  6430160.,
      6624080.,  6821072.,  7233160.,  7454792.,  7680008.,  7908808.,
      7128072.,  7348680.,  7572872.,  7800648.,  6990216.,  7209800.,
      7432968.,  7659720.,  6819592.,  7038152.,  7260296.,  7486024.,
      5881680.,  6070480.,  6262352.,  6457296.,  4797080.,  4954072.,
      5113624.,  5275736.,  3561696.,  3684832.,  3810016.,  3937248.,
      5777624.,  5953560.,  6132056.,  6313112.,  7116462.,  7334590.,
      7555918.,  7780446.,  8602308.,  8865188.,  9131908.,  9402468.,
      9547034.,  9849034.,  10155514., 10466474., 9337594.,  9640362.,
      9947610.,  10259338., 9090266.,  9385610.,  9685434.,  9989738.,
      8777402.,  9065322.,  9357722.,  9654602.,  7172228.,  7416164.,
      7663940.,  7915556.,  5356558.,  5553950.,  5754542.,  5958334.,
      3325272.,  3473560.,  3624408.,  3777816.,  6128976.,  6313680.,
      6501456.,  6692304.,  7246692.,  7477060.,  7711268.,  7949316.,
      8520952.,  8800056.,  9083768.,  9372088.,  9035276.,  9357996.,
      9686092.,  10019564., 8640588.,  8965868.,  9296524.,  9632556.,
      7978636.,  8298284.,  8623308.,  8953708.,  7251148.,  7565164.,
      7884556.,  8209324.,  6627704.,  6895544.,  7167992.,  7445048.,
      5778084.,  5996676.,  6219108.,  6445380.,  4696144.,  4862416.,
      5031760.,  5204176.,  5342280.,  5553160.,  5767624.,  5985672.,
      7046458.,  7310826.,  7579674.,  7853002.,  8934124.,  9255564.,
      9582380.,  9914572.,  10909022., 11282926., 11663102., 12049550.,
      11427838., 11806094., 12190622., 12581422., 11450014., 11824430.,
      12205118., 12592078., 11406654., 11777230., 12154078., 12537198.,
      9956908.,  10274764., 10597996., 10926604., 8247898.,  8509450.,
      8775482.,  9045994.,  6272456.,  6474120.,  6679368.,  6888200.,
      6554440.,  6771464.,  6992072.,  7216264.,  8249338.,  8521386.,
      8797914.,  9078922.,  10133868., 10464524., 10800556., 11141964.,
      11882398., 12267054., 12657982., 13055182., 12171838., 12560846.,
      12956126., 13357678., 11735262., 12120430., 12511870., 12909582.,
      11233150., 11614478., 12002078., 12395950., 9489580.,  9816652.,
      10149100., 10486924., 7480602.,  7749834.,  8023546.,  8301738.,
      5199048.,  5406856.,  5618248.,  5833224.,  5708368.,  5895120.,
      6084944.,  6277840.,  6791588.,  7024516.,  7261284.,  7501892.,
      8033400.,  8315576.,  8602360.,  8893752.,  9439948.,  9774444.,
      10114316., 10459564., 10072332., 10417580., 10768204., 11124204.,
      9782092.,  10129900., 10483084., 10841644., 9459084.,  9809452.,
      10165196., 10526316., 7995640.,  8299320.,  8607608.,  8920504.,
      6303972.,  6557892.,  6815652.,  7077252.,  5426512.,  5627600.,
      5831760.,  6038992.,  4439768.,  4611608.,  4786008.,  4962968.,
      5892654.,  6105662.,  6321870.,  6541278.,  7488452.,  7745188.,
      8005764.,  8270180.,  9232282.,  9535306.,  9842810.,  10154794.,
      9791866.,  10103850., 10420314., 10741258., 10248026., 10560778.,
      10878010., 11199722., 10671418., 10984938., 11302938., 11625418.,
      9507204.,  9777764.,  10052164., 10330404., 8136590.,  8361630.,
      8589870.,  8821310.,  6554456.,  6731416.,  6910936.,  7093016.,
      5128416.,  5267936.,  5409504.,  5553120.,  6348184.,  6519512.,
      6693400.,  6869848.,  7677776.,  7882960.,  8091216.,  8302544.,
      9121288.,  9362376.,  9607048.,  9855304.,  9557896.,  9806152.,
      10057992., 10313416., 9661704.,  9908936.,  10159752., 10414152.,
      9732744.,  9978952.,  10228744., 10482120., 8373840.,  8585168.,
      8799568.,  9017040.,  6847768.,  7022168.,  7199128.,  7378648.,
      5150432.,  5285856.,  5423328.,  5562848.,  1820384.,  1923040.,
      2027744.,  2134496.,  2500376.,  2629720.,  2761624.,  2896088.,
      3269712.,  3427792.,  3588944.,  3753168.,  4132488.,  4321352.,
      4513800.,  4709832.,  4355080.,  4542920.,  4734344.,  4929352.,
      4544904.,  4731720.,  4922120.,  5116104.,  4936456.,  5130440.,
      5328008.,  5529160.,  4593488.,  4765904.,  4941392.,  5119952.,
      4136600.,  4285400.,  4436760.,  4590680.,  3561696.,  3684832.,
      3810016.,  3937248.,  3332312.,  3475480.,  3621208.,  3769496.,
      4368558.,  4541630.,  4717902.,  4897374.,  5502660.,  5708196.,
      5917572.,  6130788.,  6739738.,  6980298.,  7225338.,  7474858.,
      6857978.,  7099306.,  7345114.,  7595402.,  6943450.,  7185546.,
      7432122.,  7683178.,  7460026.,  7711082.,  7966618.,  8226634.,
      6747268.,  6966628.,  7189828.,  7416868.,  5873166.,  6058270.,
      6246574.,  6438078.,  4832600.,  4980888.,  5131736.,  5285144.,
      4971856.,  5140176.,  5311568.,  5486032.,  6035300.,  6241092.,
      6450724.,  6664196.,  7222520.,  7468856.,  7719800.,  7975352.,
      8539660.,  8829612.,  9124940.,  9425644.,  8472652.,  8765164.,
      9063052.,  9366316.,  8372876.,  8667948.,  8968396.,  9274220.,
      8933580.,  9239404.,  9550604.,  9867180.,  7971192.,  8239032.,
      8511480.,  8788536.,  6815396.,  7042180.,  7272804.,  7507268.,
      5460048.,  5642704.,  5828432.,  6017232.,  5932104.,  6142984.,
      6357448.,  6575496.,  6891322.,  7143402.,  7399962.,  7661002.,
      7984876.,  8281740.,  8583980.,  8891596.,  9219934.,  9565166.,
      9916670.,  10274446., 8914430.,  9255822.,  9603486.,  9957422.,
      8543390.,  8880942.,  9224766.,  9574862.,  9029438.,  9371342.,
      9719518.,  10073966., 7795244.,  8088524.,  8387180.,  8691212.,
      6552666.,  6801930.,  7055674.,  7313898.,  5092808.,  5294472.,
      5499720.,  5708552.,  6161224.,  6378248.,  6598856.,  6823048.,
      6521338.,  6781098.,  7045338.,  7314058.,  7021932.,  7328012.,
      7639468.,  7956300.,  8718750.,  9074734.,  9436990.,  9805518.,
      9003070.,  9355214.,  9713630.,  10078318., 9221854.,  9570158.,
      9924734.,  10285582., 9478526.,  9831182.,  10190110., 10555310.,
      8310956.,  8613452.,  8921324.,  9234572.,  7358234.,  7615178.,
      7876602.,  8142506.,  6182088.,  6389896.,  6601288.,  6816264.,
      6537808.,  6740944.,  6947152.,  7156432.,  7861668.,  8102788.,
      8347748.,  8596548.,  9311352.,  9593528.,  9880312.,  10171704.,
      10893004., 11219308., 11550988., 11888044., 10695948., 11016620.,
      11342668., 11674092., 10433356., 10748396., 11068812., 11394604.,
      10438028., 10755628., 11078604., 11406956., 8728824.,  8999736.,
      9275256.,  9555384.,  7484644.,  7713988.,  7947172.,  8184196.,
      6038864.,  6223568.,  6411344.,  6602192.,  6602456.,  6774296.,
      6948696.,  7125656.,  7195694.,  7396414.,  7600334.,  7807454.,
      7882692.,  8114852.,  8350852.,  8590692.,  8668570.,  8934730.,
      9205370.,  9480490.,  7939962.,  8198698.,  8461914.,  8729610.,
      7145818.,  7397130.,  7652922.,  7913194.,  6848314.,  7100394.,
      7356954.,  7617994.,  5195140.,  5408356.,  5625412.,  5846308.,
      4274574.,  4454558.,  4637742.,  4824126.,  3191640.,  3335832.,
      3482584.,  3631896.,  5128416.,  5267936.,  5409504.,  5553120.,
      4901272.,  5064408.,  5230104.,  5398360.,  4751184.,  4939984.,
      5131856.,  5326800.,  4682248.,  4898760.,  5118856.,  5342536.,
      4097928.,  4313416.,  4532488.,  4755144.,  4529416.,  4743880.,
      4961928.,  5183560.,  4928136.,  5141576.,  5358600.,  5579208.,
      4486736.,  4665296.,  4846928.,  5031632.,  3981592.,  4131416.,
      4283800.,  4438744.,  3337952.,  3456992.,  3578080.,  3701216.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x8x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    6136.,    9784.,
      13944.,   18616.,   12920.,   17592.,   22776.,   28472.,   19704.,
      25400.,   31608.,   38328.,   26488.,   33208.,   40440.,   48184.,
      32122.,   37930.,   44122.,   50698.,   30268.,   34652.,   39292.,
      44188.,   19902.,   22350.,   24926.,   27630.,   1820.,    4924.,
      8284.,    11900.,   15544.,   22776.,   30520.,   38776.,   43220.,
      55604.,   68756.,   82676.,   86896.,   105456.,  125040.,  145648.,
      116848.,  137456.,  159088.,  181744.,  146800.,  169456.,  193136.,
      217840.,  176752.,  201456.,  227184.,  253936.,  173972.,  194036.,
      214868.,  236468.,  144952.,  159352.,  174264.,  189688.,  87644.,
      95356.,   103324.,  111548.,  32732.,   39420.,   46364.,   53564.,
      91704.,   106104.,  121016.,  136440.,  178964.,  202100.,  226004.,
      250676.,  296560.,  329456.,  363376.,  398320.,  326512.,  361456.,
      397424.,  434416.,  356464.,  393456.,  431472.,  470512.,  386416.,
      425456.,  465520.,  506608.,  352724.,  383540.,  415124.,  447476.,
      278456.,  300024.,  322104.,  344696.,  161564.,  172860.,  184412.,
      196220.,  63644.,   73916.,   84444.,   95228.,   167864.,  189432.,
      211512.,  234104.,  314708.,  348596.,  383252.,  418676.,  506224.,
      553456.,  601712.,  650992.,  536176.,  585456.,  635760.,  687088.,
      566128.,  617456.,  669808.,  723184.,  596080.,  649456.,  703856.,
      759280.,  531476.,  573044.,  615380.,  658484.,  411960.,  440696.,
      469944.,  499704.,  235484.,  250364.,  265500.,  280892.,  94556.,
      108412.,  122524.,  136892.,  244024.,  272760.,  302008.,  331768.,
      450452.,  495092.,  540500.,  586676.,  715888.,  777456.,  840048.,
      903664.,  745840.,  809456.,  874096.,  939760.,  775792.,  841456.,
      908144.,  975856.,  805744.,  873456.,  942192.,  1011952., 710228.,
      762548.,  815636.,  869492.,  545464.,  581368.,  617784.,  654712.,
      309404.,  327868.,  346588.,  365564.,  125468.,  142908.,  160604.,
      178556.,  320184.,  356088.,  392504.,  429432.,  586196.,  641588.,
      697748.,  754676.,  925552.,  1001456., 1078384., 1156336., 955504.,
      1033456., 1112432., 1192432., 985456.,  1065456., 1146480., 1228528.,
      1015408., 1097456., 1180528., 1264624., 888980.,  952052.,  1015892.,
      1080500., 678968.,  722040.,  765624.,  809720.,  383324.,  405372.,
      427676.,  450236.,  156380.,  177404.,  198684.,  220220.,  396344.,
      439416.,  483000.,  527096.,  721940.,  788084.,  854996.,  922676.,
      1135216., 1225456., 1316720., 1409008., 1165168., 1257456., 1350768.,
      1445104., 1195120., 1289456., 1384816., 1481200., 1225072., 1321456.,
      1418864., 1517296., 1067732., 1141556., 1216148., 1291508., 812472.,
      862712.,  913464.,  964728.,  457244.,  482876.,  508764.,  534908.,
      179422.,  191342.,  203390.,  215566.,  406268.,  430620.,  455228.,
      480092.,  681562.,  718858.,  756538.,  794602.,  1006328., 1057080.,
      1108344., 1160120., 1029496., 1081272., 1133560., 1186360., 1052664.,
      1105464., 1158776., 1212600., 1075832., 1129656., 1183992., 1238840.,
      889786.,  930922.,  972442.,  1014346., 649148.,  677084.,  705276.,
      733724.,  352894.,  367118.,  381470.,  395950.,  1310.,    3502.,
      5822.,    8270.,    11132.,   16028.,   21180.,   26588.,   30490.,
      38602.,   47098.,   55978.,   60408.,   72248.,   84600.,   97464.,
      99960.,   112824.,  126200.,  140088.,  139512.,  153400.,  167800.,
      182712.,  179064.,  193976.,  209400.,  225336.,  158842.,  170794.,
      183130.,  195850.,  122940.,  131420.,  140156.,  149148.,  70334.,
      74830.,   79454.,   84206.,   61724.,   68924.,   76380.,   84092.,
      151736.,  167160.,  183096.,  199544.,  272084.,  296756.,  322196.,
      348404.,  424816.,  459760.,  495728.,  532720.,  520304.,  557296.,
      595312.,  634352.,  615792.,  654832.,  694896.,  735984.,  711280.,
      752368.,  794480.,  837616.,  599444.,  631796.,  664916.,  698804.,
      444984.,  467576.,  490680.,  514296.,  245852.,  257660.,  269724.,
      282044.,  207324.,  218108.,  229148.,  240444.,  457272.,  479864.,
      502968.,  526584.,  751892.,  787316.,  823508.,  860468.,  1093232.,
      1142512., 1192816., 1244144., 1188720., 1240048., 1292400., 1345776.,
      1284208., 1337584., 1391984., 1447408., 1379696., 1435120., 1491568.,
      1549040., 1122260., 1165364., 1209236., 1253876., 807864.,  837624.,
      867896.,  898680.,  434460.,  449852.,  465500.,  481404.,  352924.,
      367292.,  381916.,  396796.,  762808.,  792568.,  822840.,  853624.,
      1231700., 1277876., 1324820., 1372532., 1761648., 1825264., 1889904.,
      1955568., 1857136., 1922800., 1989488., 2057200., 1952624., 2020336.,
      2089072., 2158832., 2048112., 2117872., 2188656., 2260464., 1645076.,
      1698932., 1753556., 1808948., 1170744., 1207672., 1245112., 1283064.,
      623068.,  642044.,  661276.,  680764.,  498524.,  516476.,  534684.,
      553148.,  1068344., 1105272., 1142712., 1180664., 1711508., 1768436.,
      1826132., 1884596., 2430064., 2508016., 2586992., 2666992., 2525552.,
      2605552., 2686576., 2768624., 2621040., 2703088., 2786160., 2870256.,
      2716528., 2800624., 2885744., 2971888., 2167892., 2232500., 2297876.,
      2364020., 1533624., 1577720., 1622328., 1667448., 811676.,  834236.,
      857052.,  880124.,  644124.,  665660.,  687452.,  709500.,  1373880.,
      1417976., 1462584., 1507704., 2191316., 2258996., 2327444., 2396660.,
      3098480., 3190768., 3284080., 3378416., 3193968., 3288304., 3383664.,
      3480048., 3289456., 3385840., 3483248., 3581680., 3384944., 3483376.,
      3582832., 3683312., 2690708., 2766068., 2842196., 2919092., 1896504.,
      1947768., 1999544., 2051832., 1000284., 1026428., 1052828., 1079484.,
      789724.,  814844.,  840220.,  865852.,  1679416., 1730680., 1782456.,
      1834744., 2671124., 2749556., 2828756., 2908724., 3766896., 3873520.,
      3981168., 4089840., 3862384., 3971056., 4080752., 4191472., 3957872.,
      4068592., 4180336., 4293104., 4053360., 4166128., 4279920., 4394736.,
      3213524., 3299636., 3386516., 3474164., 2259384., 2317816., 2376760.,
      2436216., 1188892., 1218620., 1248604., 1278844., 524766.,  538734.,
      552830.,  567054.,  1105148., 1133596., 1162300., 1191260., 1742170.,
      1785610., 1829434., 1873642., 2436856., 2495800., 2555256., 2615224.,
      2492792., 2552760., 2613240., 2674232., 2548728., 2609720., 2671224.,
      2733240., 2604664., 2666680., 2729208., 2792248., 2048698., 2095978.,
      2143642., 2191690., 1429948., 1461980., 1494268., 1526812., 747390.,
      763662.,  780062.,  796590.,  2590.,    6830.,    11198.,   15694.,
      21884.,   30876.,   40124.,   49628.,   58906.,   73162.,   87802.,
      102826.,  114680.,  134712.,  155256.,  176312.,  187000.,  208056.,
      229624.,  251704.,  259320.,  281400.,  303992.,  327096.,  331640.,
      354744.,  378360.,  402488.,  285562.,  303658.,  322138.,  341002.,
      215612.,  228188.,  241020.,  254108.,  120766.,  127310.,  133982.,
      140782.,  121628.,  132924.,  144476.,  156284.,  287928.,  311544.,
      335672.,  360312.,  500948.,  537908.,  575636.,  614132.,  762736.,
      814064.,  866416.,  919792.,  923760.,  977136.,  1031536., 1086960.,
      1084784., 1140208., 1196656., 1254128., 1245808., 1303280., 1361776.,
      1421296., 1024916., 1069556., 1114964., 1161140., 745016.,  775800.,
      807096.,  838904.,  404060.,  419964.,  436124.,  452540.,  381916.,
      396796.,  411932.,  427324.,  822840.,  853624.,  884920.,  916728.,
      1324820., 1372532., 1421012., 1470260., 1889904., 1955568., 2022256.,
      2089968., 2050928., 2118640., 2187376., 2257136., 2211952., 2281712.,
      2352496., 2424304., 2372976., 2444784., 2517616., 2591472., 1891796.,
      1947188., 2003348., 2060276., 1337272., 1375224., 1413688., 1452664.,
      707356.,  726844.,  746588.,  766588.,  642204.,  660668.,  679388.,
      698364.,  1357752., 1395704., 1434168., 1473144., 2148692., 2207156.,
      2266388., 2326388., 3017072., 3097072., 3178096., 3260144., 3178096.,
      3260144., 3343216., 3427312., 3339120., 3423216., 3508336., 3594480.,
      3500144., 3586288., 3673456., 3761648., 2758676., 2824820., 2891732.,
      2959412., 1929528., 1974648., 2020280., 2066424., 1010652., 1033724.,
      1057052., 1080636., 902492.,  924540.,  946844.,  969404.,  1892664.,
      1937784., 1983416., 2029560., 2972564., 3041780., 3111764., 3182516.,
      4144240., 4238576., 4333936., 4430320., 4305264., 4401648., 4499056.,
      4597488., 4466288., 4564720., 4664176., 4764656., 4627312., 4727792.,
      4829296., 4931824., 3625556., 3702452., 3780116., 3858548., 2521784.,
      2574072., 2626872., 2680184., 1313948., 1340604., 1367516., 1394684.,
      1162780., 1188412., 1214300., 1240444., 2427576., 2479864., 2532664.,
      2585976., 3796436., 3876404., 3957140., 4038644., 5271408., 5380080.,
      5489776., 5600496., 5432432., 5543152., 5654896., 5767664., 5593456.,
      5706224., 5820016., 5934832., 5754480., 5869296., 5985136., 6102000.,
      4492436., 4580084., 4668500., 4757684., 3114040., 3173496., 3233464.,
      3293944., 1617244., 1647484., 1677980., 1708732., 1423068., 1452284.,
      1481756., 1511484., 2962488., 3021944., 3081912., 3142392., 4620308.,
      4711028., 4802516., 4894772., 6398576., 6521584., 6645616., 6770672.,
      6559600., 6684656., 6810736., 6937840., 6720624., 6847728., 6975856.,
      7105008., 6881648., 7010800., 7140976., 7272176., 5359316., 5457716.,
      5556884., 5656820., 3706296., 3772920., 3840056., 3907704., 1920540.,
      1954364., 1988444., 2022780., 870110.,  886126.,  902270.,  918542.,
      1804028., 1836572., 1869372., 1902428., 2802778., 2852362., 2902330.,
      2952682., 3867384., 3934520., 4002168., 4070328., 3956088., 4024248.,
      4092920., 4162104., 4044792., 4113976., 4183672., 4253880., 4133496.,
      4203704., 4274424., 4345656., 3207610., 3261034., 3314842., 3369034.,
      2210748., 2246876., 2283260., 2319900., 1141886., 1160206., 1178654.,
      1197230.};
  const std::array<int, 4> in_shape = {{3, 8, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1876.,   2610.,   3458.,   4424.,   4830.,   4550.,   4140.,   3596.,
      3840.,   5225.,   6790.,   8540.,   9170.,   8485.,   7600.,   6510.,
      6850.,   9185.,   11781.,  14644.,  15547.,  14211.,  12590.,  10678.,
      11130.,  14770.,  18767.,  23128.,  24353.,  22064.,  19390.,  16324.,
      16394.,  21490.,  26999.,  32928.,  34153.,  30632.,  26670.,  22260.,
      21658.,  28210.,  35231.,  42728.,  43953.,  39200.,  33950.,  28196.,
      26182.,  33815.,  41895.,  50428.,  51625.,  45693.,  39290.,  32410.,
      28540.,  36675.,  45220.,  54180.,  55300.,  48715.,  41700.,  34250.,
      28508.,  36510.,  44870.,  53592.,  54586.,  47930.,  40900.,  33492.,
      16852.,  22050.,  27650.,  33656.,  34062.,  30470.,  26460.,  22028.,
      27600.,  35825.,  44590.,  53900.,  54530.,  48445.,  41800.,  34590.,
      41410.,  53465.,  66213.,  79660.,  80563.,  71235.,  61190.,  50422.,
      58506.,  75250.,  92855.,  111328., 112553., 99176.,  84910.,  69748.,
      63770.,  81970.,  101087., 121128., 122353., 107744., 92190.,  75684.,
      69034.,  88690.,  109319., 130928., 132153., 116312., 99470.,  81620.,
      72838.,  93215.,  114471., 136612., 137809., 120861., 103010., 84250.,
      72460.,  92475.,  113260., 134820., 135940., 118915., 101100., 82490.,
      67676.,  86190.,  105350., 125160., 126154., 110138., 93460.,  76116.,
      31828.,  41490.,  51842.,  62888.,  63294.,  56390.,  48780.,  40460.,
      51360.,  66425.,  82390.,  99260.,  99890.,  88405.,  76000.,  62670.,
      75970.,  97745.,  120645., 144676., 145579., 128259., 109790., 90166.,
      105882., 135730., 166943., 199528., 200753., 176288., 150430., 123172.,
      111146., 142450., 175175., 209328., 210553., 184856., 157710., 129108.,
      116410., 149170., 183407., 219128., 220353., 193424., 164990., 135044.,
      119494., 152615., 187047., 222796., 223993., 196029., 166730., 136090.,
      116380., 148275., 181300., 215460., 216580., 189115., 160500., 130730.,
      106844., 135870., 165830., 196728., 197722., 172346., 146020., 118740.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    7.,    10.,   13.,   16.,   19.,   14.,   11.,   35.,
      45.,   55.,   65.,   75.,   85.,   56.,   44.,   121.,  142.,  163.,
      184.,  205.,  226.,  140.,  107.,  268.,  289.,  310.,  331.,  352.,
      373.,  224.,  170.,  415.,  436.,  457.,  478.,  499.,  520.,  308.,
      233.,  562.,  583.,  604.,  625.,  646.,  667.,  392.,  296.,  709.,
      730.,  751.,  772.,  793.,  814.,  476.,  309.,  705.,  723.,  741.,
      759.,  777.,  795.,  448.,  215.,  478.,  489.,  500.,  511.,  522.,
      533.,  294.,  7.,    22.,   37.,   52.,   67.,   82.,   97.,   56.,
      65.,   155.,  189.,  223.,  257.,  291.,  325.,  182.,  188.,  427.,
      484.,  541.,  598.,  655.,  712.,  392.,  377.,  826.,  883.,  940.,
      997.,  1054., 1111., 602.,  566.,  1225., 1282., 1339., 1396., 1453.,
      1510., 812.,  755.,  1624., 1681., 1738., 1795., 1852., 1909., 1022.,
      944.,  2023., 2080., 2137., 2194., 2251., 2308., 1232., 783.,  1665.,
      1707., 1749., 1791., 1833., 1875., 994.,  473.,  1000., 1023., 1046.,
      1069., 1092., 1115., 588.,  13.,   40.,   67.,   94.,   121.,  148.,
      175.,  98.,   119.,  275.,  333.,  391.,  449.,  507.,  565.,  308.,
      332.,  733.,  826.,  919.,  1012., 1105., 1198., 644.,  647.,  1384.,
      1477., 1570., 1663., 1756., 1849., 980.,  962.,  2035., 2128., 2221.,
      2314., 2407., 2500., 1316., 1277., 2686., 2779., 2872., 2965., 3058.,
      3151., 1652., 1592., 3337., 3430., 3523., 3616., 3709., 3802., 1988.,
      1257., 2625., 2691., 2757., 2823., 2889., 2955., 1540., 731.,  1522.,
      1557., 1592., 1627., 1662., 1697., 882.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      14144.,   19760.,   26272.,   33712.,   36904.,   34864.,   31800.,
      27680.,   29340.,   40025.,   52130.,   65695.,   70665.,   65510.,
      58775.,   50420.,   52784.,   70900.,   91080.,   113372.,  120512.,
      110304.,  97840.,   83072.,   86268.,   114625.,  145810.,  179879.,
      189581.,  171934.,  151235.,  127428.,  127932.,  167825.,  210994.,
      257495.,  267197.,  239806.,  208915.,  174468.,  169596.,  221025.,
      276178.,  335111.,  344813.,  307678.,  266595.,  221508.,  205952.,
      266080.,  329760.,  397040.,  406532.,  359928.,  309580.,  255440.,
      225100.,  289325.,  356810.,  427595.,  436485.,  384590.,  329275.,
      270500.,  225248.,  288520.,  354640.,  423640.,  431536.,  378976.,
      323440.,  264896.,  131648.,  172400.,  216352.,  263536.,  266728.,
      238768.,  207480.,  172832.,  216540.,  281225.,  350210.,  423535.,
      428505.,  380870.,  328775.,  272180.,  325808.,  420820.,  521352.,
      627452.,  634592.,  561312.,  482320.,  397568.,  461244.,  593425.,
      732466.,  878423.,  888125.,  782782.,  670355.,  550788.,  502908.,
      646625.,  797650.,  956039.,  965741.,  850654.,  728035.,  597828.,
      544572.,  699825.,  862834.,  1033655., 1043357., 918526.,  785715.,
      644868.,  575744.,  736960.,  905184.,  1080464., 1089956., 956088.,
      815020.,  666704.,  573580.,  732125.,  896810.,  1067675., 1076565.,
      941870.,  800875.,  653540.,  536288.,  683080.,  835024.,  992152.,
      1000048., 873184.,  741040.,  603584.,  249152.,  325040.,  406432.,
      493360.,  496552.,  442672.,  383160.,  317984.,  403740.,  522425.,
      648290.,  781375.,  786345.,  696230.,  598775.,  493940.,  598832.,
      770740.,  951624.,  1141532., 1148672., 1012320., 866800.,  712064.,
      836220.,  1072225., 1319122., 1576967., 1586669., 1393630., 1189475.,
      974148.,  877884.,  1125425., 1384306., 1654583., 1664285., 1461502.,
      1247155., 1021188., 919548.,  1178625., 1449490., 1732199., 1741901.,
      1529374., 1304835., 1068228., 945536.,  1207840., 1480608., 1763888.,
      1773380., 1552248., 1320460., 1077968., 922060.,  1174925., 1436810.,
      1707755., 1716645., 1499150., 1272475., 1036580., 847328.,  1077640.,
      1315408., 1560664., 1568560., 1367392., 1158640., 942272.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    42.,    62.,    82.,    102.,   122.,   95.,    64.,
      224.,   296.,   368.,   440.,   512.,   584.,   396.,   289.,   830.,
      986.,   1142.,  1298.,  1454.,  1610.,  1015.,  751.,   1922.,  2078.,
      2234.,  2390.,  2546.,  2702.,  1645.,  1213.,  3014.,  3170.,  3326.,
      3482.,  3638.,  3794.,  2275.,  1675.,  4106.,  4262.,  4418.,  4574.,
      4730.,  4886.,  2905.,  2137.,  5198.,  5354.,  5510.,  5666.,  5822.,
      5978.,  3535.,  2300.,  5288.,  5424.,  5560.,  5696.,  5832.,  5968.,
      3384.,  1625.,  3630.,  3714.,  3798.,  3882.,  3966.,  4050.,  2243.,
      41.,    142.,   258.,   374.,   490.,   606.,   722.,   419.,   472.,
      1136.,  1400.,  1664.,  1928.,  2192.,  2456.,  1380.,  1405.,  3206.,
      3650.,  4094.,  4538.,  4982.,  5426.,  2995.,  2875.,  6314.,  6758.,
      7202.,  7646.,  8090.,  8534.,  4633.,  4345.,  9422.,  9866.,  10310.,
      10754., 11198., 11642., 6271.,  5815.,  12530., 12974., 13418., 13862.,
      14306., 14750., 7909.,  7285.,  15638., 16082., 16526., 16970., 17414.,
      17858., 9547.,  6068.,  12920., 13248., 13576., 13904., 14232., 14560.,
      7728.,  3677.,  7782.,  7962.,  8142.,  8322.,  8502.,  8682.,  4583.,
      77.,    262.,   474.,   686.,   898.,   1110.,  1322.,  743.,   880.,
      2048.,  2504.,  2960.,  3416.,  3872.,  4328.,  2364.,  2521.,  5582.,
      6314.,  7046.,  7778.,  8510.,  9242.,  4975.,  4999.,  10706., 11438.,
      12170., 12902., 13634., 14366., 7621.,  7477.,  15830., 16562., 17294.,
      18026., 18758., 19490., 10267., 9955.,  20954., 21686., 22418., 23150.,
      23882., 24614., 12913., 12433., 26078., 26810., 27542., 28274., 29006.,
      29738., 15559., 9836.,  20552., 21072., 21592., 22112., 22632., 23152.,
      12072., 5729.,  11934., 12210., 12486., 12762., 13038., 13314., 6923.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      109728.,   153640.,   204656.,   263032.,   288344.,   272816.,
      249160.,   217120.,   229240.,   313150.,   408340.,   515130.,
      554610.,   514660.,   462150.,   396760.,   414256.,   556940.,
      716040.,   891940.,   948724.,   868968.,   771260.,   655216.,
      679112.,   902930.,   1149260.,  1418550.,  1495774.,  1357244.,
      1194410.,  1006824.,  1010632.,  1326290.,  1668044.,  2036342.,
      2113566.,  1897532.,  1653610.,  1381352.,  1342152.,  1749650.,
      2186828.,  2654134.,  2731358.,  2437820.,  2112810.,  1755880.,
      1633648.,  2110940.,  2616552.,  3150868.,  3226468.,  2857032.,
      2457740.,  2028208.,  1787960.,  2298350.,  2834740.,  3397450.,
      3468290.,  3056260.,  2616950.,  2150040.,  1790752.,  2293960.,
      2819888.,  3368792.,  3431736.,  3014000.,  2572520.,  2107040.,
      1040544.,  1363240.,  1711472.,  2085496.,  2110808.,  1890224.,
      1643080.,  1369120.,  1715320.,  2228350.,  2775700.,  3357690.,
      3397170.,  3020260.,  2607750.,  2159320.,  2584624.,  3339020.,
      4137480.,  4980388.,  5037172.,  4456296.,  3829820.,  3157360.,
      3662792.,  4713170.,  5818316.,  6978678.,  7055902.,  6219836.,
      5327210.,  4377576.,  3994312.,  5136530.,  6337100.,  7596470.,
      7673694.,  6760124.,  5786410.,  4752104.,  4325832.,  5559890.,
      6855884.,  8214262.,  8291486.,  7300412.,  6245610.,  5126632.,
      4578160.,  5860700.,  7199208.,  8594068.,  8669668.,  7605576.,
      6483980.,  5304496.,  4564280.,  5826350.,  7137460.,  8497930.,
      8568770.,  7497220.,  6375350.,  5202840.,  4269856.,  5438920.,
      6649136.,  7900760.,  7963704.,  6953840.,  5901800.,  4807328.,
      1971360.,  2572840.,  3218288.,  3907960.,  3933272.,  3507632.,
      3037000.,  2521120.,  3201400.,  4143550.,  5143060.,  6200250.,
      6239730.,  5525860.,  4753350.,  3921880.,  4754992.,  6121100.,
      7558920.,  9068836.,  9125620.,  8043624.,  6888380.,  5659504.,
      6646472.,  8523410.,  10487372., 12538806., 12616030., 11082428.,
      9460010.,  7748328.,  6977992.,  8946770.,  11006156., 13156598.,
      13233822., 11622716., 9919210.,  8122856.,  7309512.,  9370130.,
      11524940., 13774390., 13851614., 12163004., 10378410., 8497384.,
      7522672.,  9610460.,  11781864., 14037268., 14112868., 12354120.,
      10510220., 8580784.,  7340600.,  9354350.,  11440180., 13598410.,
      13669250., 11938180., 10133750., 8255640.,  6748960.,  8583880.,
      10478384., 12432728., 12495672., 10893680., 9231080.,  7507616.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,    140.,    284.,    428.,    572.,    716.,    860.,    694.,
      420.,   1576.,   2120.,   2664.,   3208.,   3752.,   4296.,   2964.,
      2066.,  6100.,   7300.,   8500.,   9700.,   10900.,  12100.,  7706.,
      5594.,  14500.,  15700.,  16900.,  18100.,  19300.,  20500.,  12578.,
      9122.,  22900.,  24100.,  25300.,  26500.,  27700.,  28900.,  17450.,
      12650., 31300.,  32500.,  33700.,  34900.,  36100.,  37300.,  22322.,
      16178., 39700.,  40900.,  42100.,  43300.,  44500.,  45700.,  27194.,
      17716., 40904.,  41960.,  43016.,  44072.,  45128.,  46184.,  26276.,
      12622., 28268.,  28924.,  29580.,  30236.,  30892.,  31548.,  17510.,
      270.,   1004.,   1916.,   2828.,   3740.,   4652.,   5564.,   3238.,
      3588.,  8680.,   10760.,  12840.,  14920.,  17000.,  19080.,  10740.,
      10850., 24820.,  28324.,  31828.,  35332.,  38836.,  42340.,  23402.,
      22442., 49348.,  52852.,  56356.,  59860.,  63364.,  66868.,  36338.,
      34034., 73876.,  77380.,  80884.,  84388.,  87892.,  91396.,  49274.,
      45626., 98404.,  101908., 105412., 108916., 112420., 115924., 62210.,
      57218., 122932., 126436., 129940., 133444., 136948., 140452., 75146.,
      47764., 101768., 104360., 106952., 109544., 112136., 114728., 60932.,
      28990., 61388.,  62812.,  64236.,  65660.,  67084.,  68508.,  36182.,
      510.,   1868.,   3548.,   5228.,   6908.,   8588.,   10268.,  5782.,
      6756.,  15784.,  19400.,  23016.,  26632.,  30248.,  33864.,  18516.,
      19634., 43540.,  49348.,  55156.,  60964.,  66772.,  72580.,  39098.,
      39290., 84196.,  90004.,  95812.,  101620., 107428., 113236., 60098.,
      58946., 124852., 130660., 136468., 142276., 148084., 153892., 81098.,
      78602., 165508., 171316., 177124., 182932., 188740., 194548., 102098.,
      98258., 206164., 211972., 217780., 223588., 229396., 235204., 123098.,
      77812., 162632., 166760., 170888., 175016., 179144., 183272., 95588.,
      45358., 94508.,  96700.,  98892.,  101084., 103276., 105468., 54854.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6640.,   7504.,   9320.,   10440.,  12440.,  13832.,  16016.,  17696.,
      17584.,  19320.,  16664.,  18200.,  15240.,  16560.,  13296.,  14384.,
      13980.,  15360.,  19125.,  20900.,  24970.,  27160.,  31535.,  34160.,
      33985.,  36680.,  31570.,  33940.,  28375.,  30400.,  24380.,  26040.,
      25384.,  27400.,  34160.,  36740.,  43956.,  47124.,  54796.,  58576.,
      58324.,  62188.,  53460.,  56844.,  47480.,  50360.,  40360.,  42712.,
      41748.,  44520.,  55545.,  59080.,  70742.,  75068.,  87367.,  92512.,
      92169.,  97412.,  83678.,  88256.,  73675.,  77560.,  62132.,  65296.,
      62356.,  65576.,  81865.,  85960.,  102998., 107996., 125783., 131712.,
      130585., 136612., 117278., 122528., 102235., 106680., 85428.,  89040.,
      82964.,  86632.,  108185., 112840., 135254., 140924., 164199., 170912.,
      169001., 175812., 150878., 156800., 130795., 135800., 108724., 112784.,
      101224., 104728., 130820., 135260., 162180., 167580., 195328., 201712.,
      200032., 206500., 177156., 182772., 152420., 157160., 125800., 129640.,
      110940., 114160., 142625., 146700., 175930., 180880., 210875., 216720.,
      215285., 221200., 189730., 194860., 162475., 166800., 133500., 137000.,
      111216., 114032., 142480., 146040., 175160., 179480., 209272., 214368.,
      213192., 218344., 187256., 191720., 159840., 163600., 130928., 133968.,
      64240.,  67408.,  84200.,  88200.,  105752., 110600., 128912., 134624.,
      130480., 136248., 116888., 121880., 101640., 105840., 84720.,  88112.,
      106140., 110400., 137925., 143300., 171850., 178360., 207935., 215600.,
      210385., 218120., 187090., 193780., 161575., 167200., 133820., 138360.,
      160168., 165640., 206960., 213860., 256500., 264852., 308812., 318640.,
      312340., 322252., 276372., 284940., 237560., 244760., 195880., 201688.,
      227220., 234024., 292425., 301000., 361046., 371420., 433111., 445312.,
      437913., 450212., 386078., 396704., 330715., 339640., 271796., 278992.,
      247828., 255080., 318745., 327880., 393302., 404348., 471527., 484512.,
      476329., 489412., 419678., 430976., 359275., 368760., 295092., 302736.,
      268436., 276136., 345065., 354760., 425558., 437276., 509943., 523712.,
      514745., 528612., 453278., 465248., 387835., 397880., 318388., 326480.,
      284392., 291352., 364100., 372860., 447300., 457884., 534016., 546448.,
      538720., 551236., 472644., 483444., 402980., 412040., 329704., 337000.,
      283740., 289840., 362225., 369900., 443770., 453040., 528395., 539280.,
      532805., 543760., 466210., 475660., 396475., 404400., 323580., 329960.,
      265584., 270704., 338320., 344760., 413624., 421400., 491512., 500640.,
      495432., 504616., 432632., 440552., 367200., 373840., 299120., 304464.,
      121840., 127312., 159080., 165960., 199064., 207368., 241808., 251552.,
      243376., 253176., 217112., 225560., 188040., 195120., 156144., 161840.,
      198300., 205440., 256725., 265700., 318730., 329560., 384335., 397040.,
      386785., 399560., 342610., 353620., 294775., 304000., 243260., 250680.,
      294952., 303880., 379760., 390980., 469044., 482580., 562828., 578704.,
      566356., 582316., 499284., 513036., 427640., 439160., 351400., 360664.,
      412692., 423528., 529305., 542920., 651350., 667772., 778855., 798112.,
      783657., 803012., 688478., 705152., 587755., 601720., 481460., 492688.,
      433300., 444584., 555625., 569800., 683606., 700700., 817271., 837312.,
      822073., 842212., 722078., 739424., 616315., 630840., 504756., 516432.,
      453908., 465640., 581945., 596680., 715862., 733628., 855687., 876512.,
      860489., 881412., 755678., 773696., 644875., 659960., 528052., 540176.,
      467560., 477976., 597380., 610460., 732420., 748188., 872704., 891184.,
      877408., 895972., 768132., 784116., 653540., 666920., 533608., 544360.,
      456540., 465520., 581825., 593100., 711610., 725200., 845915., 861840.,
      850325., 866320., 742690., 756460., 630475., 642000., 513660., 522920.,
      419952., 427376., 534160., 543480., 652088., 663320., 773752., 786912.,
      777672., 790888., 678008., 689384., 574560., 584080., 467312., 474960.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    14.,    28.,    22.,    40.,    30.,
      52.,    38.,    64.,    46.,    76.,    39.,    56.,    20.,    44.,
      84.,    140.,   116.,   180.,   148.,   220.,   180.,   260.,   212.,
      300.,   244.,   340.,   172.,   224.,   113.,   176.,   346.,   484.,
      418.,   568.,   490.,   652.,   562.,   736.,   634.,   820.,   706.,
      904.,   455.,   560.,   323.,   428.,   850.,   1072.,  922.,   1156.,
      994.,   1240.,  1066.,  1324.,  1138.,  1408.,  1210.,  1492.,  749.,
      896.,   533.,   680.,   1354.,  1660.,  1426.,  1744.,  1498.,  1828.,
      1570.,  1912.,  1642.,  1996.,  1714.,  2080.,  1043.,  1232.,  743.,
      932.,   1858.,  2248.,  1930.,  2332.,  2002.,  2416.,  2074.,  2500.,
      2146.,  2584.,  2218.,  2668.,  1337.,  1568.,  953.,   1184.,  2362.,
      2836.,  2434.,  2920.,  2506.,  3004.,  2578.,  3088.,  2650.,  3172.,
      2722.,  3256.,  1631.,  1904.,  1064.,  1236.,  2468.,  2820.,  2532.,
      2892.,  2596.,  2964.,  2660.,  3036.,  2724.,  3108.,  2788.,  3180.,
      1592.,  1792.,  765.,   860.,   1718.,  1912.,  1758.,  1956.,  1798.,
      2000.,  1838.,  2044.,  1878.,  2088.,  1918.,  2132.,  1067.,  1176.,
      13.,    28.,    54.,    88.,    110.,   148.,   166.,   208.,   222.,
      268.,   278.,   328.,   334.,   388.,   195.,   224.,   212.,   260.,
      516.,   620.,   644.,   756.,   772.,   892.,   900.,   1028.,  1028.,
      1164.,  1156.,  1300.,  652.,   728.,   653.,   752.,   1498.,  1708.,
      1714.,  1936.,  1930.,  2164.,  2146.,  2392.,  2362.,  2620.,  2578.,
      2848.,  1427.,  1568.,  1367.,  1508.,  3010.,  3304.,  3226.,  3532.,
      3442.,  3760.,  3658.,  3988.,  3874.,  4216.,  4090.,  4444.,  2225.,
      2408.,  2081.,  2264.,  4522.,  4900.,  4738.,  5128.,  4954.,  5356.,
      5170.,  5584.,  5386.,  5812.,  5602.,  6040.,  3023.,  3248.,  2795.,
      3020.,  6034.,  6496.,  6250.,  6724.,  6466.,  6952.,  6682.,  7180.,
      6898.,  7408.,  7114.,  7636.,  3821.,  4088.,  3509.,  3776.,  7546.,
      8092.,  7762.,  8320.,  7978.,  8548.,  8194.,  8776.,  8410.,  9004.,
      8626.,  9232.,  4619.,  4928.,  2936.,  3132.,  6260.,  6660.,  6420.,
      6828.,  6580.,  6996.,  6740.,  7164.,  6900.,  7332.,  7060.,  7500.,
      3752.,  3976.,  1785.,  1892.,  3782.,  4000.,  3870.,  4092.,  3958.,
      4184.,  4046.,  4276.,  4134.,  4368.,  4222.,  4460.,  2231.,  2352.,
      25.,    52.,    102.,   160.,   206.,   268.,   310.,   376.,   414.,
      484.,   518.,   592.,   622.,   700.,   351.,   392.,   404.,   476.,
      948.,   1100.,  1172.,  1332.,  1396.,  1564.,  1620.,  1796.,  1844.,
      2028.,  2068.,  2260.,  1132.,  1232.,  1193.,  1328.,  2650.,  2932.,
      3010.,  3304.,  3370.,  3676.,  3730.,  4048.,  4090.,  4420.,  4450.,
      4792.,  2399.,  2576.,  2411.,  2588.,  5170.,  5536.,  5530.,  5908.,
      5890.,  6280.,  6250.,  6652.,  6610.,  7024.,  6970.,  7396.,  3701.,
      3920.,  3629.,  3848.,  7690.,  8140.,  8050.,  8512.,  8410.,  8884.,
      8770.,  9256.,  9130.,  9628.,  9490.,  10000., 5003.,  5264.,  4847.,
      5108.,  10210., 10744., 10570., 11116., 10930., 11488., 11290., 11860.,
      11650., 12232., 12010., 12604., 6305.,  6608.,  6065.,  6368.,  12730.,
      13348., 13090., 13720., 13450., 14092., 13810., 14464., 14170., 14836.,
      14530., 15208., 7607.,  7952.,  4808.,  5028.,  10052., 10500., 10308.,
      10764., 10564., 11028., 10820., 11292., 11076., 11556., 11332., 11820.,
      5912.,  6160.,  2805.,  2924.,  5846.,  6088.,  5982.,  6228.,  6118.,
      6368.,  6254.,  6508.,  6390.,  6648.,  6526.,  6788.,  3395.,  3528.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      51440.,   58288.,   72380.,   81260.,   96808.,   107848.,  124852.,
      138180.,  137284.,  151060.,  130312.,  142504.,  119340.,  129820.,
      104240.,  112880.,  109140.,  120100.,  149525.,  163625.,  195470.,
      212870.,  247135.,  267995.,  266595.,  288015.,  247910.,  266750.,
      223025.,  239125.,  191780.,  204980.,  199112.,  215144.,  268210.,
      288730.,  345420.,  370620.,  430934.,  461006.,  458990.,  489734.,
      421020.,  447948.,  374170.,  397090.,  318248.,  336968.,  328524.,
      350588.,  437395.,  465535.,  557410.,  591850.,  688793.,  729757.,
      727013.,  768761.,  660394.,  696850.,  581735.,  612675.,  490812.,
      516012.,  492492.,  518140.,  646835.,  679455.,  814114.,  853930.,
      994553.,  1041789., 1032773., 1080793., 927850.,  969682.,  809095.,
      844515.,  676284.,  705068.,  656460.,  685692.,  856275.,  893375.,
      1070818., 1116010., 1300313., 1353821., 1338533., 1392825., 1195306.,
      1242514., 1036455., 1076355., 861756.,  894124.,  802856.,  830792.,
      1037770., 1073170., 1286748., 1329804., 1549982., 1600886., 1587446.,
      1639022., 1406124., 1450908., 1209970., 1247770., 998792.,  1029416.,
      881140.,  906820.,  1132925., 1165425., 1397630., 1437110., 1675415.,
      1722035., 1710555., 1757735., 1507670., 1548590., 1291225., 1325725.,
      1061060., 1088980., 884144.,  906608.,  1132780., 1161180., 1392712.,
      1427176., 1664068., 1704724., 1695316., 1736420., 1489192., 1524808.,
      1271260., 1301260., 1041392., 1065648., 507632.,  532912.,  665660.,
      697580.,  836392.,  875080.,  1019956., 1065540., 1032388., 1078420.,
      925192.,  965032.,  804780.,  838300.,  671024.,  698096.,  840660.,
      874660.,  1092725., 1135625., 1361870., 1413830., 1648255., 1709435.,
      1667715., 1729455., 1483430., 1536830., 1281425., 1326325., 1061540.,
      1097780., 1270472., 1314152., 1641970., 1697050., 2035404., 2102076.,
      2450966., 2529422., 2479022., 2558150., 2193948., 2262348., 1886170.,
      1943650., 1555496., 1601864., 1804236., 1858556., 2322355., 2390815.,
      2867746., 2950570., 3440633., 3538045., 3478853., 3577049., 3067498.,
      3152338., 2627975., 2699235., 2160060., 2217516., 1968204., 2026108.,
      2531795., 2604735., 3124450., 3212650., 3746393., 3850077., 3784613.,
      3889081., 3334954., 3425170., 2855335., 2931075., 2345532., 2406572.,
      2132172., 2193660., 2741235., 2818655., 3381154., 3474730., 4052153.,
      4162109., 4090373., 4201113., 3602410., 3698002., 3082695., 3162915.,
      2531004., 2595628., 2261288., 2316872., 2895370., 2965330., 3557340.,
      3641868., 4247390., 4346678., 4284854., 4384814., 3759660., 3845916.,
      3205810., 3278170., 2623112., 2681384., 2257780., 2306500., 2882525.,
      2943825., 3531710., 3605750., 4205495., 4292435., 4240635., 4328135.,
      3710870., 3786350., 3156025., 3219325., 2575940., 2626900., 2114480.,
      2155376., 2693740., 2745180., 3293512., 3355624., 3913924., 3986836.,
      3945172., 4018532., 3445288., 3508552., 2924380., 2977420., 2382320.,
      2425008., 963824.,  1007536., 1258940., 1313900., 1575976., 1642312.,
      1915060., 1992900., 1927492., 2005780., 1720072., 1787560., 1490220.,
      1546780., 1237808., 1283312., 1572180., 1629220., 2035925., 2107625.,
      2528270., 2614790., 3049375., 3150875., 3068835., 3170895., 2718950.,
      2806910., 2339825., 2413525., 1931300., 1990580., 2341832., 2413160.,
      3015730., 3105370., 3725388., 3833532., 4470998., 4597838., 4499054.,
      4626566., 3966876., 4076748., 3398170., 3490210., 2792744., 2866760.,
      3279948., 3366524., 4207315., 4316095., 5178082., 5309290., 6192473.,
      6346333., 6230693., 6385337., 5474602., 5607826., 4674215., 4785795.,
      3829308., 3919020., 3443916., 3534076., 4416755., 4530015., 5434786.,
      5571370., 6498233., 6658365., 6536453., 6697369., 5742058., 5880658.,
      4901575., 5017635., 4014780., 4108076., 3607884., 3701628., 4626195.,
      4743935., 5691490., 5833450., 6803993., 6970397., 6842213., 7009401.,
      6009514., 6153490., 5128935., 5249475., 4200252., 4297132., 3719720.,
      3802952., 4752970., 4857490., 5827932., 5953932., 6944798., 7092470.,
      6982262., 7130606., 6113196., 6240924., 5201650., 5308570., 4247432.,
      4333352., 3634420., 3706180., 4632125., 4722225., 5665790., 5774390.,
      6735575., 6862835., 6770715., 6898535., 5914070., 6024110., 5020825.,
      5112925., 4090820., 4164820., 3344816., 3404144., 4254700., 4329180.,
      5194312., 5284072., 6163780., 6268948., 6195028., 6300644., 5401384.,
      5492296., 4577500., 4653580., 3723248., 3784368.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    90.,     194.,    146.,    282.,
      202.,    370.,    258.,    458.,    314.,    546.,    281.,    413.,
      118.,    302.,    572.,    1004.,   812.,    1308.,   1052.,   1612.,
      1292.,   1916.,   1532.,   2220.,   1772.,   2524.,   1278.,   1686.,
      787.,    1279.,   2510.,   3590.,   3062.,   4238.,   3614.,   4886.,
      4166.,   5534.,   4718.,   6182.,   5270.,   6830.,   3439.,   4267.,
      2383.,   3211.,   6374.,   8126.,   6926.,   8774.,   7478.,   9422.,
      8030.,   10070.,  8582.,   10718.,  9134.,   11366.,  5707.,   6871.,
      3979.,   5143.,   10238.,  12662.,  10790.,  13310.,  11342.,  13958.,
      11894.,  14606.,  12446.,  15254.,  12998.,  15902.,  7975.,   9475.,
      5575.,   7075.,   14102.,  17198.,  14654.,  17846.,  15206.,  18494.,
      15758.,  19142.,  16310.,  19790.,  16862.,  20438.,  10243.,  12079.,
      7171.,   9007.,   17966.,  21734.,  18518.,  22382.,  19070.,  23030.,
      19622.,  23678.,  20174.,  24326.,  20726.,  24974.,  12511.,  14683.,
      8174.,   9542.,   19052.,  21852.,  19548.,  22412.,  20044.,  22972.,
      20540.,  23532.,  21036.,  24092.,  21532.,  24652.,  12342.,  13934.,
      5933.,   6689.,   13362.,  14906.,  13674.,  15250.,  13986.,  15594.,
      14298.,  15938.,  14610.,  16282.,  14922.,  16626.,  8321.,   9189.,
      77.,     193.,    370.,    634.,    810.,    1106.,   1250.,   1578.,
      1690.,   2050.,   2130.,   2522.,   2570.,   2994.,   1505.,   1733.,
      1606.,   1982.,   3932.,   4748.,   4940.,   5820.,   5948.,   6892.,
      6956.,   7964.,   7964.,   9036.,   8972.,   10108.,  5070.,   5670.,
      5035.,   5815.,   11582.,  13238.,  13286.,  15038.,  14990.,  16838.,
      16694.,  18638.,  18398.,  20438.,  20102.,  22238.,  11143.,  12259.,
      10663.,  11779.,  23510.,  25838.,  25214.,  27638.,  26918.,  29438.,
      28622.,  31238.,  30326.,  33038.,  32030.,  34838.,  17443.,  18895.,
      16291.,  17743.,  35438.,  38438.,  37142.,  40238.,  38846.,  42038.,
      40550.,  43838.,  42254.,  45638.,  43958.,  47438.,  23743.,  25531.,
      21919.,  23707.,  47366.,  51038.,  49070.,  52838.,  50774.,  54638.,
      52478.,  56438.,  54182.,  58238.,  55886.,  60038.,  30043.,  32167.,
      27547.,  29671.,  59294.,  63638.,  60998.,  65438.,  62702.,  67238.,
      64406.,  69038.,  66110.,  70838.,  67814.,  72638.,  36343.,  38803.,
      23102.,  24662.,  49292.,  52476.,  50556.,  53804.,  51820.,  55132.,
      53084.,  56460.,  54348.,  57788.,  55612.,  59116.,  29574.,  31358.,
      14069.,  14921.,  29826.,  31562.,  30522.,  32290.,  31218.,  33018.,
      31914.,  33746.,  32610.,  34474.,  33306.,  35202.,  17609.,  18573.,
      149.,    361.,    706.,    1162.,   1530.,   2018.,   2354.,   2874.,
      3178.,   3730.,   4002.,   4586.,   4826.,   5442.,   2729.,   3053.,
      3094.,   3662.,   7292.,   8492.,   9068.,   10332.,  10844.,  12172.,
      12620.,  14012.,  14396.,  15852.,  16172.,  17692.,  8862.,   9654.,
      9283.,   10351.,  20654.,  22886.,  23510.,  25838.,  26366.,  28790.,
      29222.,  31742.,  32078.,  34694.,  34934.,  37646.,  18847.,  20251.,
      18943.,  20347.,  40646.,  43550.,  43502.,  46502.,  46358.,  49454.,
      49214.,  52406.,  52070.,  55358.,  54926.,  58310.,  29179.,  30919.,
      28603.,  30343.,  60638.,  64214.,  63494.,  67166.,  66350.,  70118.,
      69206.,  73070.,  72062.,  76022.,  74918.,  78974.,  39511.,  41587.,
      38263.,  40339.,  80630.,  84878.,  83486.,  87830.,  86342.,  90782.,
      89198.,  93734.,  92054.,  96686.,  94910.,  99638.,  49843.,  52255.,
      47923.,  50335.,  100622., 105542., 103478., 108494., 106334., 111446.,
      109190., 114398., 112046., 117350., 114902., 120302., 60175.,  62923.,
      38030.,  39782.,  79532.,  83100.,  81564.,  85196.,  83596.,  87292.,
      85628.,  89388.,  87660.,  91484.,  89692.,  93580.,  46806.,  48782.,
      22205.,  23153.,  46290.,  48218.,  47370.,  49330.,  48450.,  50442.,
      49530.,  51554.,  50610.,  52666.,  51690.,  53778.,  26897.,  27957.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      404832.,   459360.,   570360.,   641080.,   763664.,   851600.,
      985768.,   1091944.,  1084776.,  1194536.,  1030544.,  1127696.,
      944440.,   1027960.,  825440.,   894304.,   862360.,   949720.,
      1182350.,  1294750.,  1546660.,  1685380.,  1956570.,  2122890.,
      2111690.,  2282490.,  1964740.,  2114980.,  1768350.,  1896750.,
      1521240.,  1626520.,  1577104.,  1704976.,  2125460.,  2289140.,
      2738520.,  2939544.,  3417820.,  3657724.,  3641596.,  3886876.,
      3341592.,  3556440.,  2970740.,  3153620.,  2527504.,  2676880.,
      2606408.,  2782472.,  3471370.,  3695930.,  4425260.,  4700108.,
      5469870.,  5796798.,  5774846.,  6108046.,  5247116.,  5538092.,
      4623290.,  4870250.,  3901576.,  4102728.,  3914568.,  4119304.,
      5142410.,  5402810.,  6473516.,  6791372.,  7909678.,  8286782.,
      8214654.,  8598030.,  7381388.,  7715372.,  6437690.,  6720490.,
      5381768.,  5611592.,  5103944.,  5304584.,  6624010.,  6879290.,
      8245292.,  8557004.,  9969582.,  10339518., 10274558., 10650766.,
      9140876.,  9468716.,  7898810.,  8176490.,  6546568.,  6772296.,
      5817616.,  6007952.,  7504180.,  7745940.,  9286680.,  9581400.,
      11166652., 11515868., 11465692., 11820284., 10141656., 10450200.,
      8715540.,  8976500.,  7185808.,  7397648.,  5987352.,  6159704.,
      7694830.,  7913470.,  9489124.,  9755332.,  11371514., 11686570.,
      11652074., 11971610., 10269700., 10547428., 8795390.,  9030030.,
      7227864.,  7418136.,  5555808.,  5702496.,  7124280.,  7310200.,
      8766608.,  8992784.,  10483816., 10751272., 10733352., 11004392.,
      9438992.,  9674384.,  8066680.,  8265400.,  6615392.,  6776416.,
      808288.,   879200.,   1095160.,  1186360.,  1418000.,  1530512.,
      1777832.,  1912680.,  1876840.,  2015272.,  1734032.,  1855760.,
      1551160.,  1655160.,  1327200.,  1412448.,  1510040.,  1617880.,
      2017550.,  2155550.,  2579620.,  2749060.,  3197530.,  3399690.,
      3352650.,  3559290.,  3059140.,  3240100.,  2705950.,  2859950.,
      2291800.,  2417560.,  2526352.,  2678800.,  3342740.,  3537140.,
      4236120.,  4474008.,  5208028.,  5490940.,  5431804.,  5720092.,
      4912920.,  5164632.,  4310900.,  4524500.,  3624208.,  3798160.,
      3914568.,  4119304.,  5142410.,  5402810.,  6473516.,  6791372.,
      7909678.,  8286782.,  8214654.,  8598030.,  7381388.,  7715372.,
      6437690.,  6720490.,  5381768.,  5611592.,  5103944.,  5304584.,
      6624010.,  6879290.,  8245292.,  8557004.,  9969582.,  10339518.,
      10274558., 10650766., 9140876.,  9468716.,  7898810.,  8176490.,
      6546568.,  6772296.,  5834568.,  6031112.,  7532170.,  7782330.,
      9328940.,  9634508.,  11226670., 11589438., 11531646., 11900686.,
      10212236., 10533932., 8786490.,  9059050.,  7252616.,  7474248.,
      6074640.,  6256784.,  7815220.,  8046740.,  9647640.,  9930072.,
      11573436., 11908316., 11872476., 12212732., 10478040., 10774296.,
      8985620.,  9236340.,  7393680.,  7597328.,  5713432.,  5873496.,
      7337070.,  7540350.,  9041380.,  9289156.,  10827642., 11121194.,
      11108202., 11406234., 9785092.,  10044388., 8376190.,  8595470.,
      6880216.,  7058200.,  4693600.,  4823904.,  6026040.,  6191480.,
      7424144.,  7625744.,  8888936.,  9127720.,  9138472.,  9380840.,
      8047376.,  8258192.,  6886520.,  7064760.,  5654880.,  5799520.,
      1211744.,  1299040.,  1619960.,  1731640.,  2072336.,  2209424.,
      2569896.,  2733416.,  2668904.,  2836008.,  2437520.,  2583824.,
      2157880.,  2282360.,  1828960.,  1930592.,  2157720.,  2286040.,
      2852750.,  3016350.,  3612580.,  3812740.,  4438490.,  4676490.,
      4593610.,  4836090.,  4153540.,  4365220.,  3643550.,  3823150.,
      3062360.,  3208600.,  3475600.,  3652624.,  4560020.,  4785140.,
      5733720.,  6008472.,  6998236.,  7324156.,  7222012.,  7553308.,
      6484248.,  6772824.,  5651060.,  5895380.,  4720912.,  4919440.,
      5103944.,  5304584.,  6624010.,  6879290.,  8245292.,  8557004.,
      9969582.,  10339518., 10274558., 10650766., 9140876.,  9468716.,
      7898810.,  8176490.,  6546568.,  6772296.,  5834568.,  6031112.,
      7532170.,  7782330.,  9328940.,  9634508.,  11226670., 11589438.,
      11531646., 11900686., 10212236., 10533932., 8786490.,  9059050.,
      7252616.,  7474248.,  6106440.,  6298888.,  7866890.,  8111930.,
      9724460.,  10023884., 11680942., 12036542., 11985918., 12347790.,
      10595468., 10911020., 9100730.,  9368170.,  7499912.,  7717448.,
      5872912.,  6046864.,  7552820.,  7774100.,  9320472.,  9590616.,
      11177404., 11497948., 11476444., 11802364., 10126296., 10410264.,
      8682260.,  8922740.,  7142800.,  7338256.,  4980760.,  5128536.,
      6405870.,  6593790.,  7905508.,  8134852.,  9480954.,  9753002.,
      9761514.,  10038042., 8612356.,  8853220.,  7383550.,  7587470.,
      6073816.,  6239512.,  3372640.,  3486560.,  4354360.,  4499320.,
      5393552.,  5570576.,  6491240.,  6701352.,  6740776.,  6954472.,
      5967632.,  6153872.,  5132920.,  5290680.,  4235616.,  4363872.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     174.,    220.,    764.,    636.,    1436.,   1052.,   2108.,
      1468.,   2780.,   1884.,   3452.,   2300.,   4124.,   2126.,   3166.,
      780.,    2220.,   4184.,   7576.,   6040.,   9944.,   7896.,   12312.,
      9752.,   14680.,  11608.,  17048.,  13464.,  19416.,  9836.,   13068.,
      5834.,   9722.,   19060.,  27604.,  23380.,  32692.,  27700.,  37780.,
      32020.,  42868.,  36340.,  47956.,  40660.,  53044.,  26714.,  33290.,
      18266.,  24842.,  49300.,  63220.,  53620.,  68308.,  57940.,  73396.,
      62260.,  78484.,  66580.,  83572.,  70900.,  88660.,  44522.,  53786.,
      30698.,  39962.,  79540.,  98836.,  83860.,  103924., 88180.,  109012.,
      92500.,  114100., 96820.,  119188., 101140., 124276., 62330.,  74282.,
      43130.,  55082.,  109780., 134452., 114100., 139540., 118420., 144628.,
      122740., 149716., 127060., 154804., 131380., 159892., 80138.,  94778.,
      55562.,  70202.,  140020., 170068., 144340., 175156., 148660., 180244.,
      152980., 185332., 157300., 190420., 161620., 195508., 97946.,  115274.,
      64044.,  74956.,  149656., 171992., 153560., 176408., 157464., 180824.,
      161368., 185240., 165272., 189656., 169176., 194072., 97164.,  109868.,
      46718.,  52750.,  105372., 117692., 107836., 120412., 110300., 123132.,
      112764., 125852., 115228., 128572., 117692., 131292., 65710.,  72638.,
      510.,    1422.,   2716.,   4796.,   6204.,   8540.,   9692.,   12284.,
      13180.,  16028.,  16668.,  19772.,  20156.,  23516.,  11822.,  13630.,
      12492.,  15468.,  30680.,  37144.,  38680.,  45656.,  46680.,  54168.,
      54680.,  62680.,  62680.,  71192.,  70680.,  79704.,  39980.,  44748.,
      39530.,  45722.,  91060.,  104212., 104596., 118516., 118132., 132820.,
      131668., 147124., 145204., 161428., 158740., 175732., 88058.,  96938.,
      84218.,  93098.,  185812., 204340., 199348., 218644., 212884., 232948.,
      226420., 247252., 239956., 261556., 253492., 275860., 138122., 149690.,
      128906., 140474., 280564., 304468., 294100., 318772., 307636., 333076.,
      321172., 347380., 334708., 361684., 348244., 375988., 188186., 202442.,
      173594., 187850., 375316., 404596., 388852., 418900., 402388., 433204.,
      415924., 447508., 429460., 461812., 442996., 476116., 238250., 255194.,
      218282., 235226., 470068., 504724., 483604., 519028., 497140., 533332.,
      510676., 547636., 524212., 561940., 537748., 576244., 288314., 307946.,
      183276., 195724., 391192., 416600., 401240., 427160., 411288., 437720.,
      421336., 448280., 431384., 458840., 441432., 469400., 234828., 249068.,
      111710., 118510., 236892., 250748., 242428., 256540., 247964., 262332.,
      253500., 268124., 259036., 273916., 264572., 279708., 139918., 147614.,
      990.,    2670.,   5212.,   8828.,   11772.,  15644.,  18332.,  22460.,
      24892.,  29276.,  31452.,  36092.,  38012.,  42908.,  21518.,  24094.,
      24204.,  28716.,  57176.,  66712.,  71320.,  81368.,  85464.,  96024.,
      99608.,  110680., 113752., 125336., 127896., 139992., 70124.,  76428.,
      73226.,  81722.,  163060., 180820., 185812., 204340., 208564., 227860.,
      231316., 251380., 254068., 274900., 276820., 298420., 149402., 160586.,
      150170., 161354., 322324., 345460., 345076., 368980., 367828., 392500.,
      390580., 416020., 413332., 439540., 436084., 463060., 231722., 245594.,
      227114., 240986., 481588., 510100., 504340., 533620., 527092., 557140.,
      549844., 580660., 572596., 604180., 595348., 627700., 314042., 330602.,
      304058., 320618., 640852., 674740., 663604., 698260., 686356., 721780.,
      709108., 745300., 731860., 768820., 754612., 792340., 396362., 415610.,
      381002., 400250., 800116., 839380., 822868., 862900., 845620., 886420.,
      868372., 909940., 891124., 933460., 913876., 956980., 478682., 500618.,
      302508., 316492., 632728., 661208., 648920., 677912., 665112., 694616.,
      681304., 711320., 697496., 728024., 713688., 744728., 372492., 388268.,
      176702., 184270., 368412., 383804., 377020., 392668., 385628., 401532.,
      394236., 410396., 402844., 419260., 411452., 428124., 214126., 222590.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      24880.,   26560.,   28272.,   30016.,   35100.,   37280.,   39500.,
      41760.,   47048.,   49760.,   52520.,   55328.,   60788.,   64064.,
      67396.,   70784.,   66948.,   70336.,   73780.,   77280.,   63656.,
      66656.,   69704.,   72800.,   58380.,   60960.,   63580.,   66240.,
      51056.,   53184.,   55344.,   57536.,   53220.,   55920.,   58660.,
      61440.,   73025.,   76500.,   80025.,   83600.,   95590.,   99880.,
      104230.,  108640.,  120995.,  126140.,  131355.,  136640.,  130655.,
      135940.,  141295.,  146720.,  121630.,  126280.,  130990.,  135760.,
      109525.,  113500.,  117525.,  121600.,  94260.,   97520.,   100820.,
      104160.,  97576.,   101536.,  105544.,  109600.,  131570.,  136640.,
      141770.,  146960.,  169596.,  175824.,  182124.,  188496.,  211750.,
      219184.,  226702.,  234304.,  225694.,  233296.,  240982.,  248752.,
      207180.,  213840.,  220572.,  227376.,  184250.,  189920.,  195650.,
      201440.,  156808.,  161440.,  166120.,  170848.,  161532.,  166992.,
      172508.,  178080.,  215215.,  222180.,  229215.,  236320.,  274442.,
      282968.,  291578.,  300272.,  339325.,  349468.,  359709.,  370048.,
      358337.,  368676.,  379113.,  389648.,  325682.,  334712.,  343826.,
      353024.,  287035.,  294700.,  302435.,  310240.,  242284.,  248528.,
      254828.,  261184.,  243068.,  249424.,  255836.,  262304.,  319375.,
      327460.,  335615.,  343840.,  402122.,  411992.,  421946.,  431984.,
      491421.,  503132.,  514941.,  526848.,  510433.,  522340.,  534345.,
      546448.,  458738.,  469112.,  479570.,  490112.,  400155.,  408940.,
      417795.,  426720.,  334572.,  341712.,  348908.,  356160.,  324604.,
      331856.,  339164.,  346528.,  423535.,  432740.,  442015.,  451360.,
      529802.,  541016.,  552314.,  563696.,  643517.,  656796.,  670173.,
      683648.,  662529.,  676004.,  689577.,  703248.,  591794.,  603512.,
      615314.,  627200.,  513275.,  523180.,  533155.,  543200.,  426860.,
      434896.,  442988.,  451136.,  397960.,  404896.,  411880.,  418912.,
      514490.,  523280.,  532130.,  541040.,  638028.,  648720.,  659484.,
      670320.,  768670.,  781312.,  794038.,  806848.,  787318.,  800128.,
      813022.,  826000.,  697500.,  708624.,  719820.,  731088.,  600290.,
      609680.,  619130.,  628640.,  495592.,  503200.,  510856.,  518560.,
      437380.,  443760.,  450180.,  456640.,  562425.,  570500.,  578625.,
      586800.,  693910.,  703720.,  713590.,  723520.,  831915.,  843500.,
      855155.,  866880.,  849415.,  861140.,  872935.,  884800.,  748750.,
      758920.,  769150.,  779440.,  641325.,  649900.,  658525.,  667200.,
      527060.,  534000.,  540980.,  548000.,  439280.,  444864.,  450480.,
      456128.,  562860.,  569920.,  577020.,  584160.,  692072.,  700640.,
      709256.,  717920.,  826980.,  837088.,  847252.,  857472.,  842548.,
      852768.,  863044.,  873376.,  740168.,  749024.,  757928.,  766880.,
      631900.,  639360.,  646860.,  654400.,  517680.,  523712.,  529776.,
      535872.,  250672.,  256960.,  263280.,  269632.,  328860.,  336800.,
      344780.,  352800.,  413384.,  423008.,  432680.,  442400.,  504308.,
      515648.,  527044.,  538496.,  510468.,  521920.,  533428.,  544992.,
      457640.,  467552.,  477512.,  487520.,  398220.,  406560.,  414940.,
      423360.,  332144.,  338880.,  345648.,  352448.,  416100.,  424560.,
      433060.,  441600.,  541025.,  551700.,  562425.,  573200.,  674470.,
      687400.,  700390.,  713440.,  816515.,  831740.,  847035.,  862400.,
      826175.,  841540.,  856975.,  872480.,  735070.,  748360.,  761710.,
      775120.,  635125.,  646300.,  657525.,  668800.,  526260.,  535280.,
      544340.,  553440.,  629800.,  640672.,  651592.,  662560.,  814130.,
      827840.,  841610.,  855440.,  1009404., 1026000., 1042668., 1059408.,
      1215718., 1235248., 1254862., 1274560., 1229662., 1249360., 1269142.,
      1289008., 1088460., 1105488., 1122588., 1139760., 935930.,  950240.,
      964610.,  979040.,  771976.,  783520.,  795112.,  806752.,  895356.,
      908880.,  922460.,  936096.,  1152655., 1169700., 1186815., 1204000.,
      1423562., 1444184., 1464890., 1485680., 1708189., 1732444., 1756797.,
      1781248., 1727201., 1751652., 1776201., 1800848., 1523186., 1544312.,
      1565522., 1586816., 1305115., 1322860., 1340675., 1358560., 1072876.,
      1087184., 1101548., 1115968., 976892.,  991312.,  1005788., 1020320.,
      1256815., 1274980., 1293215., 1311520., 1551242., 1573208., 1595258.,
      1617392., 1860285., 1886108., 1912029., 1938048., 1879297., 1905316.,
      1931433., 1957648., 1656242., 1678712., 1701266., 1723904., 1418235.,
      1437100., 1456035., 1475040., 1165164., 1180368., 1195628., 1210944.,
      1058428., 1073744., 1089116., 1104544., 1360975., 1380260., 1399615.,
      1419040., 1678922., 1702232., 1725626., 1749104., 2012381., 2039772.,
      2067261., 2094848., 2031393., 2058980., 2086665., 2114448., 1789298.,
      1813112., 1837010., 1860992., 1531355., 1551340., 1571395., 1591520.,
      1257452., 1273552., 1289708., 1305920., 1123720., 1137568., 1151464.,
      1165408., 1438970., 1456400., 1473890., 1491440., 1768140., 1789200.,
      1810332., 1831536., 2111326., 2136064., 2160886., 2185792., 2129974.,
      2154880., 2179870., 2204944., 1869084., 1890576., 1912140., 1933776.,
      1593890., 1611920., 1630010., 1648160., 1304296., 1318816., 1333384.,
      1348000., 1122820., 1134960., 1147140., 1159360., 1433625., 1448900.,
      1464225., 1479600., 1756630., 1775080., 1793590., 1812160., 2091915.,
      2113580., 2135315., 2157120., 2109415., 2131220., 2153095., 2175040.,
      1846030., 1864840., 1883710., 1902640., 1570125., 1585900., 1601725.,
      1617600., 1281620., 1294320., 1307060., 1319840., 1052144., 1062336.,
      1072560., 1082816., 1340460., 1353280., 1366140., 1379040., 1639016.,
      1654496., 1670024., 1685600., 1947876., 1966048., 1984276., 2002560.,
      1963444., 1981728., 2000068., 2018464., 1714760., 1730528., 1746344.,
      1762208., 1455580., 1468800., 1482060., 1495360., 1185840., 1196480.,
      1207152., 1217856., 476464.,  487360.,  498288.,  509248.,  622620.,
      636320.,  650060.,  663840.,  779720.,  796256.,  812840.,  829472.,
      947828.,  967232.,  986692.,  1006208., 953988.,  973504.,  993076.,
      1012704., 851624.,  868448.,  885320.,  902240.,  738060.,  752160.,
      766300.,  780480.,  613232.,  624576.,  635952.,  647360.,  778980.,
      793200.,  807460.,  821760.,  1009025., 1026900., 1044825., 1062800.,
      1253350., 1274920., 1296550., 1318240., 1512035., 1537340., 1562715.,
      1588160., 1521695., 1547140., 1572655., 1598240., 1348510., 1370440.,
      1392430., 1414480., 1160725., 1179100., 1197525., 1216000., 958260.,
      973040.,  987860.,  1002720., 1162024., 1179808., 1197640., 1215520.,
      1496690., 1519040., 1541450., 1563920., 1849212., 1876176., 1903212.,
      1930320., 2219686., 2251312., 2283022., 2314816., 2233630., 2265424.,
      2297302., 2329264., 1969740., 1997136., 2024604., 2052144., 1687610.,
      1710560., 1733570., 1756640., 1387144., 1405600., 1424104., 1442656.,
      1629180., 1650768., 1672412., 1694112., 2090095., 2117220., 2144415.,
      2171680., 2572682., 2605400., 2638202., 2671088., 3077053., 3115420.,
      3153885., 3192448., 3096065., 3134628., 3173289., 3212048., 2720690.,
      2753912., 2787218., 2820608., 2323195., 2351020., 2378915., 2406880.,
      1903468., 1925840., 1948268., 1970752., 1710716., 1733200., 1755740.,
      1778336., 2194255., 2222500., 2250815., 2279200., 2700362., 2734424.,
      2768570., 2802800., 3229149., 3269084., 3309117., 3349248., 3248161.,
      3288292., 3328521., 3368848., 2853746., 2888312., 2922962., 2957696.,
      2436315., 2465260., 2494275., 2523360., 1995756., 2019024., 2042348.,
      2065728., 1792252., 1815632., 1839068., 1862560., 2298415., 2327780.,
      2357215., 2386720., 2828042., 2863448., 2898938., 2934512., 3381245.,
      3422748., 3464349., 3506048., 3400257., 3441956., 3483753., 3525648.,
      2986802., 3022712., 3058706., 3094784., 2549435., 2579500., 2609635.,
      2639840., 2088044., 2112208., 2136428., 2160704., 1849480., 1870240.,
      1891048., 1911904., 2363450., 2389520., 2415650., 2441840., 2898252.,
      2929680., 2961180., 2992752., 3453982., 3490816., 3527734., 3564736.,
      3472630., 3509632., 3546718., 3583888., 3040668., 3072528., 3104460.,
      3136464., 2587490., 2614160., 2640890., 2667680., 2113000., 2134432.,
      2155912., 2177440., 1808260., 1826160., 1844100., 1862080., 2304825.,
      2327300., 2349825., 2372400., 2819350., 2846440., 2873590., 2900800.,
      3351915., 3383660., 3415475., 3447360., 3369415., 3401300., 3433255.,
      3465280., 2943310., 2970760., 2998270., 3025840., 2498925., 2521900.,
      2544925., 2568000., 2036180., 2054640., 2073140., 2091680., 1665008.,
      1679808., 1694640., 1709504., 2118060., 2136640., 2155260., 2173920.,
      2585960., 2608352., 2630792., 2653280., 3068772., 3095008., 3121300.,
      3147648., 3084340., 3110688., 3137092., 3163552., 2689352., 2712032.,
      2734760., 2757536., 2279260., 2298240., 2317260., 2336320., 1854000.,
      1869248., 1884528., 1899840.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    34.,
      56.,    82.,    112.,   58.,    88.,    122.,   160.,   82.,    120.,
      162.,   208.,   106.,   152.,   202.,   256.,   130.,   184.,   242.,
      304.,   125.,   156.,   189.,   224.,   38.,    80.,    126.,   176.,
      236.,   336.,   444.,   560.,   348.,   464.,   588.,   720.,   460.,
      592.,   732.,   880.,   572.,   720.,   876.,   1040.,  684.,   848.,
      1020.,  1200.,  796.,   976.,   1164.,  1360.,  590.,   688.,   790.,
      896.,   335.,   452.,   575.,   704.,   1126.,  1384.,  1654.,  1936.,
      1390.,  1672.,  1966.,  2272.,  1654.,  1960.,  2278.,  2608.,  1918.,
      2248.,  2590.,  2944.,  2182.,  2536.,  2902.,  3280.,  2446.,  2824.,
      3214.,  3616.,  1619.,  1820.,  2027.,  2240.,  1091.,  1292.,  1499.,
      1712.,  2974.,  3400.,  3838.,  4288.,  3238.,  3688.,  4150.,  4624.,
      3502.,  3976.,  4462.,  4960.,  3766.,  4264.,  4774.,  5296.,  4030.,
      4552.,  5086.,  5632.,  4294.,  4840.,  5398.,  5968.,  2711.,  2996.,
      3287.,  3584.,  1847.,  2132.,  2423.,  2720.,  4822.,  5416.,  6022.,
      6640.,  5086.,  5704.,  6334.,  6976.,  5350.,  5992.,  6646.,  7312.,
      5614.,  6280.,  6958.,  7648.,  5878.,  6568.,  7270.,  7984.,  6142.,
      6856.,  7582.,  8320.,  3803.,  4172.,  4547.,  4928.,  2603.,  2972.,
      3347.,  3728.,  6670.,  7432.,  8206.,  8992.,  6934.,  7720.,  8518.,
      9328.,  7198.,  8008.,  8830.,  9664.,  7462.,  8296.,  9142.,  10000.,
      7726.,  8584.,  9454.,  10336., 7990.,  8872.,  9766.,  10672., 4895.,
      5348.,  5807.,  6272.,  3359.,  3812.,  4271.,  4736.,  8518.,  9448.,
      10390., 11344., 8782.,  9736.,  10702., 11680., 9046.,  10024., 11014.,
      12016., 9310.,  10312., 11326., 12352., 9574.,  10600., 11638., 12688.,
      9838.,  10888., 11950., 13024., 5987.,  6524.,  7067.,  7616.,  3918.,
      4256.,  4598.,  4944.,  9180.,  9872.,  10572., 11280., 9420.,  10128.,
      10844., 11568., 9660.,  10384., 11116., 11856., 9900.,  10640., 11388.,
      12144., 10140., 10896., 11660., 12432., 10380., 11152., 11932., 12720.,
      5974.,  6368.,  6766.,  7168.,  2873.,  3060.,  3249.,  3440.,  6490.,
      6872.,  7258.,  7648.,  6642.,  7032.,  7426.,  7824.,  6794.,  7192.,
      7594.,  8000.,  6946.,  7352.,  7762.,  8176.,  7098.,  7512.,  7930.,
      8352.,  7250.,  7672.,  8098.,  8528.,  4053.,  4268.,  4485.,  4704.,
      25.,    52.,    81.,    112.,   154.,   216.,   282.,   352.,   370.,
      440.,   514.,   592.,   586.,   664.,   746.,   832.,   802.,   888.,
      978.,   1072.,  1018.,  1112.,  1210.,  1312.,  1234.,  1336.,  1442.,
      1552.,  725.,   780.,   837.,   896.,   758.,   848.,   942.,   1040.,
      1868.,  2064.,  2268.,  2480.,  2364.,  2576.,  2796.,  3024.,  2860.,
      3088.,  3324.,  3568.,  3356.,  3600.,  3852.,  4112.,  3852.,  4112.,
      4380.,  4656.,  4348.,  4624.,  4908.,  5200.,  2462.,  2608.,  2758.,
      2912.,  2423.,  2612.,  2807.,  3008.,  5590.,  5992.,  6406.,  6832.,
      6430.,  6856.,  7294.,  7744.,  7270.,  7720.,  8182.,  8656.,  8110.,
      8584.,  9070.,  9568.,  8950.,  9448.,  9958.,  10480., 9790.,  10312.,
      10846., 11392., 5435.,  5708.,  5987.,  6272.,  5195.,  5468.,  5747.,
      6032.,  11470., 12040., 12622., 13216., 12310., 12904., 13510., 14128.,
      13150., 13768., 14398., 15040., 13990., 14632., 15286., 15952., 14830.,
      15496., 16174., 16864., 15670., 16360., 17062., 17776., 8543.,  8900.,
      9263.,  9632.,  7967.,  8324.,  8687.,  9056.,  17350., 18088., 18838.,
      19600., 18190., 18952., 19726., 20512., 19030., 19816., 20614., 21424.,
      19870., 20680., 21502., 22336., 20710., 21544., 22390., 23248., 21550.,
      22408., 23278., 24160., 11651., 12092., 12539., 12992., 10739., 11180.,
      11627., 12080., 23230., 24136., 25054., 25984., 24070., 25000., 25942.,
      26896., 24910., 25864., 26830., 27808., 25750., 26728., 27718., 28720.,
      26590., 27592., 28606., 29632., 27430., 28456., 29494., 30544., 14759.,
      15284., 15815., 16352., 13511., 14036., 14567., 15104., 29110., 30184.,
      31270., 32368., 29950., 31048., 32158., 33280., 30790., 31912., 33046.,
      34192., 31630., 32776., 33934., 35104., 32470., 33640., 34822., 36016.,
      33310., 34504., 35710., 36928., 17867., 18476., 19091., 19712., 11358.,
      11744., 12134., 12528., 24252., 25040., 25836., 26640., 24876., 25680.,
      26492., 27312., 25500., 26320., 27148., 27984., 26124., 26960., 27804.,
      28656., 26748., 27600., 28460., 29328., 27372., 28240., 29116., 30000.,
      14566., 15008., 15454., 15904., 6929.,  7140.,  7353.,  7568.,  14698.,
      15128., 15562., 16000., 15042., 15480., 15922., 16368., 15386., 15832.,
      16282., 16736., 15730., 16184., 16642., 17104., 16074., 16536., 17002.,
      17472., 16418., 16888., 17362., 17840., 8685.,  8924.,  9165.,  9408.,
      49.,    100.,   153.,   208.,   298.,   408.,   522.,   640.,   706.,
      824.,   946.,   1072.,  1114.,  1240.,  1370.,  1504.,  1522.,  1656.,
      1794.,  1936.,  1930.,  2072.,  2218.,  2368.,  2338.,  2488.,  2642.,
      2800.,  1325.,  1404.,  1485.,  1568.,  1478.,  1616.,  1758.,  1904.,
      3500.,  3792.,  4092.,  4400.,  4380.,  4688.,  5004.,  5328.,  5260.,
      5584.,  5916.,  6256.,  6140.,  6480.,  6828.,  7184.,  7020.,  7376.,
      7740.,  8112.,  7900.,  8272.,  8652.,  9040.,  4334.,  4528.,  4726.,
      4928.,  4511.,  4772.,  5039.,  5312.,  10054., 10600., 11158., 11728.,
      11470., 12040., 12622., 13216., 12886., 13480., 14086., 14704., 14302.,
      14920., 15550., 16192., 15718., 16360., 17014., 17680., 17134., 17800.,
      18478., 19168., 9251.,  9596.,  9947.,  10304., 9299.,  9644.,  9995.,
      10352., 19966., 20680., 21406., 22144., 21382., 22120., 22870., 23632.,
      22798., 23560., 24334., 25120., 24214., 25000., 25798., 26608., 25630.,
      26440., 27262., 28096., 27046., 27880., 28726., 29584., 14375., 14804.,
      15239., 15680., 14087., 14516., 14951., 15392., 29878., 30760., 31654.,
      32560., 31294., 32200., 33118., 34048., 32710., 33640., 34582., 35536.,
      34126., 35080., 36046., 37024., 35542., 36520., 37510., 38512., 36958.,
      37960., 38974., 40000., 19499., 20012., 20531., 21056., 18875., 19388.,
      19907., 20432., 39790., 40840., 41902., 42976., 41206., 42280., 43366.,
      44464., 42622., 43720., 44830., 45952., 44038., 45160., 46294., 47440.,
      45454., 46600., 47758., 48928., 46870., 48040., 49222., 50416., 24623.,
      25220., 25823., 26432., 23663., 24260., 24863., 25472., 49702., 50920.,
      52150., 53392., 51118., 52360., 53614., 54880., 52534., 53800., 55078.,
      56368., 53950., 55240., 56542., 57856., 55366., 56680., 58006., 59344.,
      56782., 58120., 59470., 60832., 29747., 30428., 31115., 31808., 18798.,
      19232., 19670., 20112., 39324., 40208., 41100., 42000., 40332., 41232.,
      42140., 43056., 41340., 42256., 43180., 44112., 42348., 43280., 44220.,
      45168., 43356., 44304., 45260., 46224., 44364., 45328., 46300., 47280.,
      23158., 23648., 24142., 24640., 10985., 11220., 11457., 11696., 22906.,
      23384., 23866., 24352., 23442., 23928., 24418., 24912., 23978., 24472.,
      24970., 25472., 24514., 25016., 25522., 26032., 25050., 25560., 26074.,
      26592., 25586., 26104., 26626., 27152., 13317., 13580., 13845., 14112.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      195728.,   209104.,   222736.,   236624.,   276500.,   293860.,
      311540.,   329540.,   371032.,   392632.,   414616.,   436984.,
      479836.,   505932.,   532476.,   559468.,   528892.,   555884.,
      583324.,   611212.,   503320.,   527224.,   551512.,   576184.,
      461940.,   482500.,   503380.,   524580.,   404240.,   421200.,
      438416.,   455888.,   420420.,   441940.,   463780.,   485940.,
      577325.,   605025.,   633125.,   661625.,   756230.,   790430.,
      825110.,   860270.,   957775.,   998795.,   1040375.,  1082515.,
      1034775.,  1076915.,  1119615.,  1162875.,  963830.,   1000910.,
      1038470.,  1076510.,  868325.,   900025.,   932125.,   964625.,
      747620.,   773620.,   799940.,   826580.,   772760.,   804344.,
      836312.,   868664.,   1042510.,  1082950.,  1123870.,  1165270.,
      1344420.,  1394100.,  1444356.,  1495188.,  1679258.,  1738562.,
      1798538.,  1859186.,  1790474.,  1851122.,  1912442.,  1974434.,
      1644228.,  1697364.,  1751076.,  1805364.,  1462750.,  1507990.,
      1553710.,  1599910.,  1245272.,  1282232.,  1319576.,  1357304.,
      1281420.,  1324988.,  1369004.,  1413468.,  1707895.,  1763475.,
      1819615.,  1876315.,  2178610.,  2246650.,  2315362.,  2384746.,
      2694461.,  2775409.,  2857141.,  2939657.,  2846165.,  2928681.,
      3011981.,  3096065.,  2587522.,  2659594.,  2732338.,  2805754.,
      2281055.,  2342235.,  2403975.,  2466275.,  1925868.,  1975708.,
      2025996.,  2076732.,  1931916.,  1982652.,  2033836.,  2085468.,
      2538935.,  2603475.,  2668575.,  2734235.,  3197362.,  3276154.,
      3355618.,  3435754.,  3908093.,  4001585.,  4095861.,  4190921.,
      4059797.,  4154857.,  4250701.,  4347329.,  3649282.,  3732106.,
      3815602.,  3899770.,  3183775.,  3253915.,  3324615.,  3395875.,
      2662380.,  2719388.,  2776844.,  2834748.,  2582412.,  2640316.,
      2698668.,  2757468.,  3369975.,  3443475.,  3517535.,  3592155.,
      4216114.,  4305658.,  4395874.,  4486762.,  5121725.,  5227761.,
      5334581.,  5442185.,  5273429.,  5381033.,  5489421.,  5598593.,
      4711042.,  4804618.,  4898866.,  4993786.,  4086495.,  4165595.,
      4245255.,  4325475.,  3398892.,  3463068.,  3527692.,  3592764.,
      3169880.,  3225272.,  3281048.,  3337208.,  4098430.,  4168630.,
      4239310.,  4310470.,  5082948.,  5168340.,  5254308.,  5340852.,
      6124202.,  6225170.,  6326810.,  6429122.,  6273050.,  6375362.,
      6478346.,  6582002.,  5557860.,  5646708.,  5736132.,  5826132.,
      4783630.,  4858630.,  4934110.,  5010070.,  3949592.,  4010360.,
      4071512.,  4133048.,  3486340.,  3537300.,  3588580.,  3640180.,
      4483325.,  4547825.,  4612725.,  4678025.,  5531750.,  5610110.,
      5688950.,  5768270.,  6632255.,  6724795.,  6817895.,  6911555.,
      6771975.,  6865635.,  6959855.,  7054635.,  5969750.,  6050990.,
      6132710.,  6214910.,  5113525.,  5182025.,  5250925.,  5320225.,
      4202660.,  4258100.,  4313860.,  4369940.,  3503120.,  3547728.,
      3592592.,  3637712.,  4488820.,  4545220.,  4601940.,  4658980.,
      5519512.,  5587960.,  5656792.,  5726008.,  6595708.,  6676460.,
      6757660.,  6839308.,  6720028.,  6801676.,  6883772.,  6966316.,
      5903704.,  5974456.,  6045592.,  6117112.,  5040340.,  5099940.,
      5159860.,  5220100.,  4129424.,  4177616.,  4226064.,  4274768.,
      1992848.,  2043088.,  2093584.,  2144336.,  2615060.,  2678500.,
      2742260.,  2806340.,  3287896.,  3364792.,  3442072.,  3519736.,
      4011868.,  4102476.,  4193532.,  4285036.,  4060924.,  4152428.,
      4244380.,  4336780.,  3641368.,  3720568.,  3800152.,  3880120.,
      3169140.,  3235780.,  3302740.,  3370020.,  2643728.,  2697552.,
      2751632.,  2805968.,  3311940.,  3379540.,  3447460.,  3515700.,
      4306925.,  4392225.,  4477925.,  4564025.,  5369990.,  5473310.,
      5577110.,  5681390.,  6501775.,  6623435.,  6745655.,  6868435.,
      6578775.,  6701555.,  6824895.,  6948795.,  5854070.,  5960270.,
      6066950.,  6174110.,  5058725.,  5148025.,  5237725.,  5327825.,
      4192100.,  4264180.,  4336580.,  4409300.,  5016728.,  5103608.,
      5190872.,  5278520.,  6485710.,  6595270.,  6705310.,  6815830.,
      8042148.,  8174772.,  8307972.,  8441748.,  9686810.,  9842882.,
      9999626.,  10157042., 9798026.,  9955442.,  10113530., 10272290.,
      8673732.,  8809812.,  8946468.,  9083700.,  7458910.,  7573270.,
      7688110.,  7803430.,  6152792.,  6245048.,  6337688.,  6430712.,
      7135884.,  7243964.,  7352492.,  7461468.,  9187255.,  9323475.,
      9460255.,  9597595.,  11347378., 11512186., 11677666., 11843818.,
      13617149., 13810993., 14005621., 14201033., 13768853., 13964265.,
      14160461., 14357441., 12143362., 12312202., 12481714., 12651898.,
      10405535., 10547355., 10689735., 10832675., 8554476.,  8668828.,
      8783628.,  8898876.,  7675788.,  7774652.,  7873964.,  7973724.,
      9839095.,  9963795.,  10089055., 10214875., 12101938., 12252922.,
      12404578., 12556906., 14465213., 14642929., 14821429., 15000713.,
      14616917., 14796201., 14976269., 15157121., 12842626., 12997642.,
      13153330., 13309690., 10965215., 11095515., 11226375., 11357795.,
      8983788.,  9088924.,  9194508.,  9300540.,  7756940.,  7846588.,
      7936684.,  8027228.,  9917495.,  10030675., 10144415., 10258715.,
      12168370., 12305530., 12443362., 12581866., 14510461., 14672049.,
      14834421., 14997577., 14662165., 14825321., 14989261., 15153985.,
      12853762., 12994954., 13136818., 13279354., 10951455., 11070235.,
      11189575., 11309475., 8954348.,  9050268.,  9146636.,  9243452.,
      7364696.,  7442616.,  7520920.,  7599608.,  9398270.,  9496630.,
      9595470.,  9694790.,  11510340., 11629524., 11749284., 11869620.,
      13701674., 13842066., 13983130., 14124866., 13850522., 13992258.,
      14134666., 14277746., 12120420., 12243060., 12366276., 12490068.,
      10308750., 10411910., 10515550., 10619670., 8414744.,  8498040.,
      8581720.,  8665784.,  6443396.,  6507668.,  6572260.,  6637172.,
      8212925.,  8294065.,  8375605.,  8457545.,  10047206., 10145534.,
      10244342., 10343630., 11946879., 12062715., 12179111., 12296067.,
      12086599., 12203555., 12321071., 12439147., 10565078., 10666286.,
      10767974., 10870142., 8976245.,  9061385.,  9146925.,  9232865.,
      7319460.,  7388212.,  7457284.,  7526676.,  4964368.,  5013072.,
      5062032.,  5111248.,  6325620.,  6387140.,  6448980.,  6511140.,
      7735960.,  7810552.,  7885528.,  7960888.,  9195900.,  9283820.,
      9372188.,  9461004.,  9320220.,  9409036.,  9498300.,  9588012.,
      8144728.,  8221624.,  8298904.,  8376568.,  6918100.,  6982820.,
      7047860.,  7113220.,  5639824.,  5692112.,  5744656.,  5797456.,
      595088.,   616656.,   638480.,   660560.,   796180.,   823780.,
      851700.,   879940.,   1019224.,  1053112.,  1087384.,  1122040.,
      1264732.,  1305164.,  1346044.,  1387372.,  1313788.,  1355116.,
      1396892.,  1439116.,  1200664.,  1236856.,  1273432.,  1310392.,
      1063540.,  1094340.,  1125460.,  1156900.,  901904.,   927056.,
      952464.,   978128.,   1062980.,  1094740.,  1126820.,  1159220.,
      1406125.,  1446625.,  1487525.,  1528825.,  1781510.,  1831070.,
      1881110.,  1931630.,  2189775.,  2248715.,  2308215.,  2368275.,
      2266775.,  2326835.,  2387455.,  2448635.,  2050550.,  2102990.,
      2155910.,  2209310.,  1799525.,  1844025.,  1888925.,  1934225.,
      1513060.,  1549300.,  1585860.,  1622740.,  1715864.,  1759736.,
      1803992.,  1848632.,  2252110.,  2307910.,  2364190.,  2420950.,
      2832804.,  2900916.,  2969604.,  3038868.,  3458714.,  3539522.,
      3621002.,  3703154.,  3569930.,  3652082.,  3734906.,  3818402.,
      3206340.,  3277908.,  3350052.,  3422772.,  2795230.,  2855830.,
      2916910.,  2978470.,  2335832.,  2385080.,  2434712.,  2484728.,
      2582412.,  2640316.,  2698668.,  2757468.,  3369975.,  3443475.,
      3517535.,  3592155.,  4216114.,  4305658.,  4395874.,  4486762.,
      5121725.,  5227761.,  5334581.,  5442185.,  5273429.,  5381033.,
      5489421.,  5598593.,  4711042.,  4804618.,  4898866.,  4993786.,
      4086495.,  4165595.,  4245255.,  4325475.,  3398892.,  3463068.,
      3527692.,  3592764.,  3232908.,  3297980.,  3363500.,  3429468.,
      4201015.,  4283475.,  4366495.,  4450075.,  5234866.,  5335162.,
      5436130.,  5537770.,  6335357.,  6453937.,  6573301.,  6693449.,
      6487061.,  6607209.,  6728141.,  6849857.,  5772802.,  5877130.,
      5982130.,  6087802.,  4989215.,  5077275.,  5165895.,  5255075.,
      4135404.,  4206748.,  4278540.,  4350780.,  3883404.,  3955644.,
      4028332.,  4101468.,  5032055.,  5123475.,  5215455.,  5307995.,
      6253618.,  6364666.,  6476386.,  6588778.,  7548989.,  7680113.,
      7812021.,  7944713.,  7700693.,  7833385.,  7966861.,  8101121.,
      6834562.,  6949642.,  7065394.,  7181818.,  5891935.,  5988955.,
      6086535.,  6184675.,  4871916.,  4950428.,  5029388.,  5108796.,
      4457048.,  4524728.,  4592792.,  4661240.,  5738110.,  5823670.,
      5909710.,  5996230.,  7087428.,  7191252.,  7295652.,  7400628.,
      8505770.,  8628242.,  8751386.,  8875202.,  8654618.,  8778434.,
      8902922.,  9028082.,  7636068.,  7743348.,  7851204.,  7959636.,
      6546190.,  6636550.,  6727390.,  6818710.,  5384216.,  5457272.,
      5530712.,  5604536.,  4702340.,  4763540.,  4825060.,  4886900.,
      6028925.,  6106225.,  6183925.,  6262025.,  7417190.,  7510910.,
      7605110.,  7699790.,  8867775.,  8978235.,  9089255.,  9200835.,
      9007495.,  9119075.,  9231215.,  9343915.,  7916630.,  8013230.,
      8110310.,  8207870.,  6761525.,  6842825.,  6924525.,  7006625.,
      5541540.,  5607220.,  5673220.,  5739540.,  4590608.,  4643408.,
      4696464.,  4749776.,  5868660.,  5935300.,  6002260.,  6069540.,
      7199896.,  7280632.,  7361752.,  7443256.,  8584828.,  8679916.,
      8775452.,  8871436.,  8709148.,  8805132.,  8901564.,  8998444.,
      7633240.,  7716280.,  7799704.,  7883512.,  6502100.,  6571940.,
      6642100.,  6712580.,  5315216.,  5371600.,  5428240.,  5485136.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      234.,    402.,    602.,    834.,    410.,    642.,    906.,    1202.,
      586.,    882.,    1210.,   1570.,   762.,    1122.,   1514.,   1938.,
      938.,    1362.,   1818.,   2306.,   941.,    1185.,   1445.,   1721.,
      226.,    554.,    914.,    1306.,   1700.,   2484.,   3332.,   4244.,
      2564.,   3476.,   4452.,   5492.,   3428.,   4468.,   5572.,   6740.,
      4292.,   5460.,   6692.,   7988.,   5156.,   6452.,   7812.,   9236.,
      6020.,   7444.,   8932.,   10484.,  4530.,   5306.,   6114.,   6954.,
      2455.,   3379.,   4351.,   5371.,   8510.,   10550.,  12686.,  14918.,
      10574.,  12806.,  15134.,  17558.,  12638.,  15062.,  17582.,  20198.,
      14702.,  17318.,  20030.,  22838.,  16766.,  19574.,  22478.,  25478.,
      18830.,  21830.,  24926.,  28118.,  12559.,  14155.,  15799.,  17491.,
      8335.,   9931.,   11575.,  13267.,  22958.,  26342.,  29822.,  33398.,
      25022.,  28598.,  32270.,  36038.,  27086.,  30854.,  34718.,  38678.,
      29150.,  33110.,  37166.,  41318.,  31214.,  35366.,  39614.,  43958.,
      33278.,  37622.,  42062.,  46598.,  21127.,  23395.,  25711.,  28075.,
      14215.,  16483.,  18799.,  21163.,  37406.,  42134.,  46958.,  51878.,
      39470.,  44390.,  49406.,  54518.,  41534.,  46646.,  51854.,  57158.,
      43598.,  48902.,  54302.,  59798.,  45662.,  51158.,  56750.,  62438.,
      47726.,  53414.,  59198.,  65078.,  29695.,  32635.,  35623.,  38659.,
      20095.,  23035.,  26023.,  29059.,  51854.,  57926.,  64094.,  70358.,
      53918.,  60182.,  66542.,  72998.,  55982.,  62438.,  68990.,  75638.,
      58046.,  64694.,  71438.,  78278.,  60110.,  66950.,  73886.,  80918.,
      62174.,  69206.,  76334.,  83558.,  38263.,  41875.,  45535.,  49243.,
      25975.,  29587.,  33247.,  36955.,  66302.,  73718.,  81230.,  88838.,
      68366.,  75974.,  83678.,  91478.,  70430.,  78230.,  86126.,  94118.,
      72494.,  80486.,  88574.,  96758.,  74558.,  82742.,  91022.,  99398.,
      76622.,  84998.,  93470.,  102038., 46831.,  51115.,  55447.,  59827.,
      30674.,  33370.,  36098.,  38858.,  72068.,  77588.,  83172.,  88820.,
      73956.,  79604.,  85316.,  91092.,  75844.,  81620.,  87460.,  93364.,
      77732.,  83636.,  89604.,  95636.,  79620.,  85652.,  91748.,  97908.,
      81508.,  87668.,  93892.,  100180., 47010.,  50154.,  53330.,  56538.,
      22613.,  24105.,  25613.,  27137.,  51162.,  54210.,  57290.,  60402.,
      52362.,  55474.,  58618.,  61794.,  53562.,  56738.,  59946.,  63186.,
      54762.,  58002.,  61274.,  64578.,  55962.,  59266.,  62602.,  65970.,
      57162.,  60530.,  63930.,  67362.,  31997.,  33713.,  35445.,  37193.,
      149.,    361.,    589.,    833.,    1114.,   1602.,   2122.,   2674.,
      2826.,   3378.,   3962.,   4578.,   4538.,   5154.,   5802.,   6482.,
      6250.,   6930.,   7642.,   8386.,   7962.,   8706.,   9482.,   10290.,
      9674.,   10482.,  11322.,  12194.,  5693.,   6129.,   6581.,   7049.,
      5890.,   6602.,   7346.,   8122.,   14564.,  16116.,  17732.,  19412.,
      18500.,  20180.,  21924.,  23732.,  22436.,  24244.,  26116.,  28052.,
      26372.,  28308.,  30308.,  32372.,  30308.,  32372.,  34500.,  36692.,
      34244.,  36436.,  38692.,  41012.,  19410.,  20570.,  21762.,  22986.,
      19015.,  20515.,  22063.,  23659.,  43934.,  47126.,  50414.,  53798.,
      50606.,  53990.,  57470.,  61046.,  57278.,  60854.,  64526.,  68294.,
      63950.,  67718.,  71582.,  75542.,  70622.,  74582.,  78638.,  82790.,
      77294.,  81446.,  85694.,  90038.,  42943.,  45115.,  47335.,  49603.,
      41023.,  43195.,  45415.,  47683.,  90638.,  95174.,  99806.,  104534.,
      97310.,  102038., 106862., 111782., 103982., 108902., 113918., 119030.,
      110654., 115766., 120974., 126278., 117326., 122630., 128030., 133526.,
      123998., 129494., 135086., 140774., 67639.,  70483.,  73375.,  76315.,
      63031.,  65875.,  68767.,  71707.,  137342., 143222., 149198., 155270.,
      144014., 150086., 156254., 162518., 150686., 156950., 163310., 169766.,
      157358., 163814., 170366., 177014., 164030., 170678., 177422., 184262.,
      170702., 177542., 184478., 191510., 92335.,  95851.,  99415.,  103027.,
      85039.,  88555.,  92119.,  95731.,  184046., 191270., 198590., 206006.,
      190718., 198134., 205646., 213254., 197390., 204998., 212702., 220502.,
      204062., 211862., 219758., 227750., 210734., 218726., 226814., 234998.,
      217406., 225590., 233870., 242246., 117031., 121219., 125455., 129739.,
      107047., 111235., 115471., 119755., 230750., 239318., 247982., 256742.,
      237422., 246182., 255038., 263990., 244094., 253046., 262094., 271238.,
      250766., 259910., 269150., 278486., 257438., 266774., 276206., 285734.,
      264110., 273638., 283262., 292982., 141727., 146587., 151495., 156451.,
      90098.,  93178.,  96290.,  99434.,  192452., 198740., 205092., 211508.,
      197412., 203828., 210308., 216852., 202372., 208916., 215524., 222196.,
      207332., 214004., 220740., 227540., 212292., 219092., 225956., 232884.,
      217252., 224180., 231172., 238228., 115650., 119178., 122738., 126330.,
      55013.,  56697.,  58397.,  60113.,  116730., 120162., 123626., 127122.,
      119466., 122962., 126490., 130050., 122202., 125762., 129354., 132978.,
      124938., 128562., 132218., 135906., 127674., 131362., 135082., 138834.,
      130410., 134162., 137946., 141762., 69005.,  70913.,  72837.,  74777.,
      293.,    697.,    1117.,   1553.,   2170.,   3042.,   3946.,   4882.,
      5418.,   6354.,   7322.,   8322.,   8666.,   9666.,   10698.,  11762.,
      11914.,  12978.,  14074.,  15202.,  15162.,  16290.,  17450.,  18642.,
      18410.,  19602.,  20826.,  22082.,  10445.,  11073.,  11717.,  12377.,
      11554.,  12650.,  13778.,  14938.,  27428.,  29748.,  32132.,  34580.,
      34436.,  36884.,  39396.,  41972.,  41444.,  44020.,  46660.,  49364.,
      48452.,  51156.,  53924.,  56756.,  55460.,  58292.,  61188.,  64148.,
      62468.,  65428.,  68452.,  71540.,  34290.,  35834.,  37410.,  39018.,
      35575.,  37651.,  39775.,  41947.,  79358.,  83702.,  88142.,  92678.,
      90638.,  95174.,  99806.,  104534., 101918., 106646., 111470., 116390.,
      113198., 118118., 123134., 128246., 124478., 129590., 134798., 140102.,
      135758., 141062., 146462., 151958., 73327.,  76075.,  78871.,  81715.,
      73711.,  76459.,  79255.,  82099.,  158318., 164006., 169790., 175670.,
      169598., 175478., 181454., 187526., 180878., 186950., 193118., 199382.,
      192158., 198422., 204782., 211238., 203438., 209894., 216446., 223094.,
      214718., 221366., 228110., 234950., 114151., 117571., 121039., 124555.,
      111847., 115267., 118735., 122251., 237278., 244310., 251438., 258662.,
      248558., 255782., 263102., 270518., 259838., 267254., 274766., 282374.,
      271118., 278726., 286430., 294230., 282398., 290198., 298094., 306086.,
      293678., 301670., 309758., 317942., 154975., 159067., 163207., 167395.,
      149983., 154075., 158215., 162403., 316238., 324614., 333086., 341654.,
      327518., 336086., 344750., 353510., 338798., 347558., 356414., 365366.,
      350078., 359030., 368078., 377222., 361358., 370502., 379742., 389078.,
      372638., 381974., 391406., 400934., 195799., 200563., 205375., 210235.,
      188119., 192883., 197695., 202555., 395198., 404918., 414734., 424646.,
      406478., 416390., 426398., 436502., 417758., 427862., 438062., 448358.,
      429038., 439334., 449726., 460214., 440318., 450806., 461390., 472070.,
      451598., 462278., 473054., 483926., 236623., 242059., 247543., 253075.,
      149522., 152986., 156482., 160010., 312836., 319892., 327012., 334196.,
      320868., 328052., 335300., 342612., 328900., 336212., 343588., 351028.,
      336932., 344372., 351876., 359444., 344964., 352532., 360164., 367860.,
      352996., 360692., 368452., 376276., 184290., 188202., 192146., 196122.,
      87413.,  89289.,  91181.,  93089.,  182298., 186114., 189962., 193842.,
      186570., 190450., 194362., 198306., 190842., 194786., 198762., 202770.,
      195114., 199122., 203162., 207234., 199386., 203458., 207562., 211698.,
      203658., 207794., 211962., 216162., 106013., 108113., 110229., 112361.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1552608.,  1659360.,  1768160.,  1879008.,  2194840.,  2333400.,
      2474520.,  2618200.,  2946896.,  3119312.,  3294800.,  3473360.,
      3812872.,  4021192.,  4233096.,  4448584.,  4204424.,  4419912.,
      4638984.,  4861640.,  4002896.,  4193744.,  4387664.,  4584656.,
      3675160.,  3839320.,  4006040.,  4175320.,  3217120.,  3352544.,
      3490016.,  3629536.,  3124952.,  3264024.,  3405656.,  3549848.,
      4232750.,  4404798.,  4580046.,  4758494.,  5450692.,  5658276.,
      5869700.,  6084964.,  6783898.,  7029578.,  7279738.,  7534378.,
      7300474.,  7555114.,  7814234.,  8077834.,  6644740.,  6867172.,
      7093444.,  7323556.,  5825614.,  6013278.,  6204142.,  6398206.,
      4837976.,  4988312.,  5141208.,  5296664.,  4581968.,  4735952.,
      4893008.,  5053136.,  5825956.,  6017924.,  6213732.,  6413380.,
      7195768.,  7428792.,  7666424.,  7908664.,  8697548.,  8974700.,
      9257228.,  9545132.,  9258252.,  9546156.,  9839436.,  10138092.,
      8274936.,  8527416.,  8784504.,  9046200.,  7108452.,  7322436.,
      7540260.,  7761924.,  5752656.,  5925072.,  6100560.,  6279120.,
      5321544.,  5505800.,  5693640.,  5885064.,  6560762.,  6791850.,
      7027418.,  7267466.,  7956844.,  8238348.,  8525228.,  8817484.,
      9516958.,  9852462.,  10194238., 10542286., 10171966., 10520014.,
      10874334., 11234926., 9056300.,  9361868.,  9672812.,  9989132.,
      7722330.,  7981834.,  8245818.,  8514282.,  6162888.,  6372744.,
      6586184.,  6803208.,  5451592.,  5660424.,  5872840.,  6088840.,
      6522618.,  6784426.,  7050714.,  7321482.,  7775084.,  8093452.,
      8417196.,  8746316.,  9216158.,  9594670.,  9979454.,  10370510.,
      9871166.,  10262222., 10659550., 11063150., 8759852.,  9102284.,
      9450092.,  9803276.,  7405658.,  7695882.,  7990586.,  8289770.,
      5801416.,  6035848.,  6273864.,  6515464.,  4447048.,  4647688.,
      4851912.,  5059720.,  6032890.,  6284458.,  6540506.,  6801034.,
      7791980.,  8098060.,  8409516.,  8726348.,  9731486.,  10095662.,
      10466110., 10842830., 10386494., 10763214., 11146206., 11535470.,
      9514028.,  9844172.,  10179692., 10520588., 8406874.,  8686858.,
      8971322.,  9260266.,  7057864.,  7284104.,  7513928.,  7747336.,
      5741392.,  5922000.,  6105680.,  6292432.,  7341796.,  7567044.,
      7796132.,  8029060.,  9094648.,  9367608.,  9645176.,  9927352.,
      11006092., 11329836., 11658956., 11993452., 11638476., 11972972.,
      12312844., 12658092., 10395000., 10687416., 10984440., 11286072.,
      8941732.,  9188996.,  9440100.,  9695044.,  7272528.,  7471568.,
      7673680.,  7878864.,  4869592.,  5014808.,  5162584.,  5312920.,
      5904622.,  6084350.,  6267278.,  6453406.,  7055940.,  7272740.,
      7493380.,  7717860.,  8328666.,  8585098.,  8846010.,  9111402.,
      8888250.,  9153642.,  9423514.,  9697866.,  7799428.,  8031076.,
      8266564.,  8505892.,  6541070.,  6736414.,  6934958.,  7136702.,
      5108056.,  5264536.,  5423576.,  5585176.,  4047584.,  4174816.,
      4304096.,  4435424.,  4573208.,  4729176.,  4887704.,  5048792.,
      5196368.,  5383120.,  5572944.,  5765840.,  5921160.,  6140744.,
      6363912.,  6590664.,  6357768.,  6584520.,  6814856.,  7048776.,
      5444432.,  5641424.,  5841488.,  6044624.,  4384408.,  4549592.,
      4717336.,  4887640.,  3173600.,  3304928.,  3438304.,  3573728.,
      2928864.,  3035616.,  3144416.,  3255264.,  3915160.,  4053720.,
      4194840.,  4338520.,  5011280.,  5183696.,  5359184.,  5537744.,
      6221320.,  6429640.,  6641544.,  6857032.,  6612872.,  6828360.,
      7047432.,  7270088.,  6067280.,  6258128.,  6452048.,  6649040.,
      5395480.,  5559640.,  5726360.,  5895640.,  4593376.,  4728800.,
      4866272.,  5005792.,  4555480.,  4702744.,  4852568.,  5004952.,
      5779246.,  5961534.,  6147022.,  6335710.,  7121348.,  7341220.,
      7564932.,  7792484.,  8586906.,  8846922.,  9111418.,  9380394.,
      9103482.,  9372458.,  9645914.,  9923850.,  8102404.,  8337124.,
      8575684.,  8818084.,  6929742.,  7127646.,  7328750.,  7533054.,
      5580376.,  5738904.,  5899992.,  6063640.,  5247568.,  5417936.,
      5591376.,  5767888.,  6436772.,  6649220.,  6865508.,  7085636.,
      7768184.,  8025784.,  8287992.,  8554808.,  9247948.,  9553772.,
      9864972.,  10181548., 9808652.,  10125228., 10447180., 10774508.,
      8683512.,  8960568.,  9242232.,  9528504.,  7358820.,  7593284.,
      7831588.,  8073732.,  5828432.,  6017232.,  6209104.,  6404048.,
      5451592.,  5660424.,  5872840.,  6088840.,  6522618.,  6784426.,
      7050714.,  7321482.,  7775084.,  8093452.,  8417196.,  8746316.,
      9216158.,  9594670.,  9979454.,  10370510., 9871166.,  10262222.,
      10659550., 11063150., 8759852.,  9102284.,  9450092.,  9803276.,
      7405658.,  7695882.,  7990586.,  8289770.,  5801416.,  6035848.,
      6273864.,  6515464.,  4447048.,  4647688.,  4851912.,  5059720.,
      6032890.,  6284458.,  6540506.,  6801034.,  7791980.,  8098060.,
      8409516.,  8726348.,  9731486.,  10095662., 10466110., 10842830.,
      10386494., 10763214., 11146206., 11535470., 9514028.,  9844172.,
      10179692., 10520588., 8406874.,  8686858.,  8971322.,  9260266.,
      7057864.,  7284104.,  7513928.,  7747336.,  5801800.,  5994248.,
      6190280.,  6389896.,  7443706.,  7685034.,  7930842.,  8181130.,
      9250668.,  9544460.,  9843628.,  10148172., 11229854., 11579694.,
      11935806., 12298190., 11884862., 12247246., 12615902., 12990830.,
      10661420., 10979276., 11302508., 11631116., 9211482.,  9481226.,
      9755450.,  10034154., 7527880.,  7745928.,  7967560.,  8192776.,
      5206864.,  5371088.,  5538384.,  5708752.,  6370532.,  6575300.,
      6783908.,  6996356.,  7670264.,  7918648.,  8171640.,  8429240.,
      9112204.,  9407276.,  9707724.,  10013548., 9744588.,  10050412.,
      10361612., 10678188., 8610168.,  8878008.,  9150456.,  9427512.,
      7282340.,  7509124.,  7739748.,  7974212.,  5754960.,  5937616.,
      6123344.,  6312144.,  4661720.,  4815128.,  4971096.,  5129624.,
      5403118.,  5593086.,  5786254.,  5982622.,  6268996.,  6498084.,
      6731012.,  6967780.,  7264474.,  7535242.,  7810490.,  8090218.,
      7824058.,  8103786.,  8387994.,  8676682.,  6799492.,  7043428.,
      7291204.,  7542820.,  5597198.,  5802782.,  6011566.,  6223550.,
      4212056.,  4376728.,  4543960.,  4713752.,  2409184.,  2536416.,
      2665696.,  2797024.,  3311640.,  3467608.,  3626136.,  3787224.,
      4311632.,  4498384.,  4688208.,  4881104.,  5413256.,  5632840.,
      5856008.,  6082760.,  5849864.,  6076616.,  6306952.,  6540872.,
      5346128.,  5543120.,  5743184.,  5946320.,  4695704.,  4860888.,
      5028632.,  5198936.,  3894496.,  4025824.,  4159200.,  4294624.,
      3387616.,  3494368.,  3603168.,  3714016.,  4488600.,  4627160.,
      4768280.,  4911960.,  5699408.,  5871824.,  6047312.,  6225872.,
      7024136.,  7232456.,  7444360.,  7659848.,  7415688.,  7631176.,
      7850248.,  8072904.,  6755408.,  6946256.,  7140176.,  7337168.,
      5968920.,  6133080.,  6299800.,  6469080.,  5052128.,  5187552.,
      5325024.,  5464544.,  5068504.,  5223960.,  5381976.,  5542552.,
      6178862.,  6371390.,  6567118.,  6766046.,  7415748.,  7647908.,
      7883908.,  8123748.,  8784282.,  9058634.,  9337466.,  9620778.,
      9300858.,  9584170.,  9871962.,  10164234., 8183812.,  8430820.,
      8681668.,  8936356.,  6886990.,  7095134.,  7306478.,  7521022.,
      5405272.,  5571992.,  5741272.,  5913112.,  4995664.,  5182416.,
      5372240.,  5565136.,  5900708.,  6133636.,  6370404.,  6611012.,
      6964344.,  7246520.,  7533304.,  7824696.,  8192716.,  8527212.,
      8867084.,  9212332.,  8753420.,  9098668.,  9449292.,  9805292.,
      7715832.,  8017464.,  8323704.,  8634552.,  6462308.,  6717252.,
      6976036.,  7238660.,  4986704.,  5191888.,  5400144.,  5611472.,
      4447048.,  4647688.,  4851912.,  5059720.,  6032890.,  6284458.,
      6540506.,  6801034.,  7791980.,  8098060.,  8409516.,  8726348.,
      9731486.,  10095662., 10466110., 10842830., 10386494., 10763214.,
      11146206., 11535470., 9514028.,  9844172.,  10179692., 10520588.,
      8406874.,  8686858.,  8971322.,  9260266.,  7057864.,  7284104.,
      7513928.,  7747336.,  5801800.,  5994248.,  6190280.,  6389896.,
      7443706.,  7685034.,  7930842.,  8181130.,  9250668.,  9544460.,
      9843628.,  10148172., 11229854., 11579694., 11935806., 12298190.,
      11884862., 12247246., 12615902., 12990830., 10661420., 10979276.,
      11302508., 11631116., 9211482.,  9481226.,  9755450.,  10034154.,
      7527880.,  7745928.,  7967560.,  8192776.,  5321544.,  5505800.,
      5693640.,  5885064.,  6560762.,  6791850.,  7027418.,  7267466.,
      7956844.,  8238348.,  8525228.,  8817484.,  9516958.,  9852462.,
      10194238., 10542286., 10171966., 10520014., 10874334., 11234926.,
      9056300.,  9361868.,  9672812.,  9989132.,  7722330.,  7981834.,
      8245818.,  8514282.,  6162888.,  6372744.,  6586184.,  6803208.,
      5282640.,  5463248.,  5646928.,  5833680.,  6244068.,  6469316.,
      6698404.,  6931332.,  7357944.,  7630904.,  7908472.,  8190648.,
      8630412.,  8954156.,  9283276.,  9617772.,  9262796.,  9597292.,
      9937164.,  10282412., 8134008.,  8426424.,  8723448.,  9025080.,
      6795428.,  7042692.,  7293796.,  7548740.,  5240912.,  5439952.,
      5642064.,  5847248.,  3536344.,  3697944.,  3862104.,  4028824.,
      4803310.,  5003518.,  5206926.,  5413534.,  6202948.,  6444324.,
      6689540.,  6938596.,  7740378.,  8025482.,  8315066.,  8609130.,
      8299962.,  8594026.,  8892570.,  9195594.,  7569028.,  7825252.,
      8085316.,  8349220.,  6652174.,  6867998.,  7087022.,  7309246.,
      5544280.,  5717144.,  5892568.,  6070552.,  4047584.,  4174816.,
      4304096.,  4435424.,  5097496.,  5253464.,  5411992.,  5573080.,
      6244944.,  6431696.,  6621520.,  6814416.,  7494024.,  7713608.,
      7936776.,  8163528.,  7930632.,  8157384.,  8387720.,  8621640.,
      7017296.,  7214288.,  7414352.,  7617488.,  5957272.,  6122456.,
      6290200.,  6460504.,  4746464.,  4877792.,  5011168.,  5146592.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    1724.,    3036.,    4604.,    6428.,    3068.,    4892.,
      6972.,    9308.,    4412.,    6748.,    9340.,    12188.,   5756.,
      8604.,    11708.,   15068.,   7100.,    10460.,   14076.,   17948.,
      7294.,    9230.,    11294.,   13486.,   1500.,    4092.,    6940.,
      10044.,   12856.,   19064.,   25784.,   33016.,   19640.,   26872.,
      34616.,   42872.,   26424.,   34680.,   43448.,   52728.,   33208.,
      42488.,   52280.,   62584.,   39992.,   50296.,   61112.,   72440.,
      46776.,   58104.,   69944.,   82296.,   35484.,   41660.,   48092.,
      54780.,   18746.,   26090.,   33818.,   41930.,   66100.,   82324.,
      99316.,   117076.,  82420.,   100180.,  118708.,  138004.,  98740.,
      118036.,  138100.,  158932.,  115060.,  135892.,  157492.,  179860.,
      131380.,  153748.,  176884.,  200788.,  147700.,  171604.,  196276.,
      221716.,  98906.,   111626.,  124730.,  138218.,  65114.,   77834.,
      90938.,   104426.,  180340.,  207316.,  235060.,  263572.,  196660.,
      225172.,  254452.,  284500.,  212980.,  243028.,  273844.,  305428.,
      229300.,  260884.,  293236.,  326356.,  245620.,  278740.,  312628.,
      347284.,  261940.,  296596.,  332020.,  368212.,  166778.,  184874.,
      203354.,  222218.,  111482.,  129578.,  148058.,  166922.,  294580.,
      332308.,  370804.,  410068.,  310900.,  350164.,  390196.,  430996.,
      327220.,  368020.,  409588.,  451924.,  343540.,  385876.,  428980.,
      472852.,  359860.,  403732.,  448372.,  493780.,  376180.,  421588.,
      467764.,  514708.,  234650.,  258122.,  281978.,  306218.,  157850.,
      181322.,  205178.,  229418.,  408820.,  457300.,  506548.,  556564.,
      425140.,  475156.,  525940.,  577492.,  441460.,  493012.,  545332.,
      598420.,  457780.,  510868.,  564724.,  619348.,  474100.,  528724.,
      584116.,  640276.,  490420.,  546580.,  603508.,  661204.,  302522.,
      331370.,  360602.,  390218.,  204218.,  233066.,  262298.,  291914.,
      523060.,  582292.,  642292.,  703060.,  539380.,  600148.,  661684.,
      723988.,  555700.,  618004.,  681076.,  744916.,  572020.,  635860.,
      700468.,  765844.,  588340.,  653716.,  719860.,  786772.,  604660.,
      671572.,  739252.,  807700.,  370394.,  404618.,  439226.,  474218.,
      242716.,  264252.,  286044.,  308092.,  571064.,  615160.,  659768.,
      704888.,  586040.,  631160.,  676792.,  722936.,  601016.,  647160.,
      693816.,  740984.,  615992.,  663160.,  710840.,  759032.,  630968.,
      679160.,  727864.,  777080.,  645944.,  695160.,  744888.,  795128.,
      372956.,  398076.,  423452.,  449084.,  179422.,  191342.,  203390.,
      215566.,  406268.,  430620.,  455228.,  480092.,  415804.,  440668.,
      465788.,  491164.,  425340.,  450716.,  476348.,  502236.,  434876.,
      460764.,  486908.,  513308.,  444412.,  470812.,  497468.,  524380.,
      453948.,  480860.,  508028.,  535452.,  254270.,  267982.,  281822.,
      295790.,  990.,     2670.,    4478.,    6414.,    8444.,    12316.,
      16444.,   20828.,   22076.,   26460.,   31100.,   35996.,   35708.,
      40604.,   45756.,   51164.,   49340.,   54748.,   60412.,   66332.,
      62972.,   68892.,   75068.,   81500.,   76604.,   83036.,   89724.,
      96668.,   45118.,   48590.,   52190.,   55918.,   46428.,   52092.,
      58012.,   64188.,   115000.,  127352.,  140216.,  153592.,  146360.,
      159736.,  173624.,  188024.,  177720.,  192120.,  207032.,  222456.,
      209080.,  224504.,  240440.,  256888.,  240440.,  256888.,  273848.,
      291320.,  271800.,  289272.,  307256.,  325752.,  154140.,  163388.,
      172892.,  182652.,  150650.,  162602.,  174938.,  187658.,  348340.,
      373780.,  399988.,  426964.,  401524.,  428500.,  456244.,  484756.,
      454708.,  483220.,  512500.,  542548.,  507892.,  537940.,  568756.,
      600340.,  561076.,  592660.,  625012.,  658132.,  614260.,  647380.,
      681268.,  715924.,  341402.,  358730.,  376442.,  394538.,  326042.,
      343370.,  361082.,  379178.,  720628.,  756820.,  793780.,  831508.,
      773812.,  811540.,  850036.,  889300.,  826996.,  866260.,  906292.,
      947092.,  880180.,  920980.,  962548.,  1004884., 933364.,  975700.,
      1018804., 1062676., 986548.,  1030420., 1075060., 1120468., 538298.,
      561002.,  584090.,  607562.,  501434.,  524138.,  547226.,  570698.,
      1092916., 1139860., 1187572., 1236052., 1146100., 1194580., 1243828.,
      1293844., 1199284., 1249300., 1300084., 1351636., 1252468., 1304020.,
      1356340., 1409428., 1305652., 1358740., 1412596., 1467220., 1358836.,
      1413460., 1468852., 1525012., 735194.,  763274.,  791738.,  820586.,
      676826.,  704906.,  733370.,  762218.,  1465204., 1522900., 1581364.,
      1640596., 1518388., 1577620., 1637620., 1698388., 1571572., 1632340.,
      1693876., 1756180., 1624756., 1687060., 1750132., 1813972., 1677940.,
      1741780., 1806388., 1871764., 1731124., 1796500., 1862644., 1929556.,
      932090.,  965546.,  999386.,  1033610., 852218.,  885674.,  919514.,
      953738.,  1837492., 1905940., 1975156., 2045140., 1890676., 1960660.,
      2031412., 2102932., 1943860., 2015380., 2087668., 2160724., 1997044.,
      2070100., 2143924., 2218516., 2050228., 2124820., 2200180., 2276308.,
      2103412., 2179540., 2256436., 2334100., 1128986., 1167818., 1207034.,
      1246634., 717724.,  742332.,  767196.,  792316.,  1533368., 1583608.,
      1634360., 1685624., 1572920., 1624184., 1675960., 1728248., 1612472.,
      1664760., 1717560., 1770872., 1652024., 1705336., 1759160., 1813496.,
      1691576., 1745912., 1800760., 1856120., 1731128., 1786488., 1842360.,
      1898744., 921692.,  949884.,  978332.,  1007036., 438430.,  451886.,
      465470.,  479182.,  930428.,  957852.,  985532.,  1013468., 952252.,
      980188.,  1008380., 1036828., 974076.,  1002524., 1031228., 1060188.,
      995900.,  1024860., 1054076., 1083548., 1017724., 1047196., 1076924.,
      1106908., 1039548., 1069532., 1099772., 1130268., 550142.,  565390.,
      580766.,  596270.,  1950.,    5166.,    8510.,    11982.,   16508.,
      23452.,   30652.,   38108.,   42428.,   49884.,   57596.,   65564.,
      68348.,   76316.,   84540.,   93020.,   94268.,   102748.,  111484.,
      120476.,  120188.,  129180.,  138428.,  147932.,  146108.,  155612.,
      165372.,  175388.,  82942.,   87950.,   93086.,   98350.,   91356.,
      100092.,  109084.,  118332.,  217144.,  235640.,  254648.,  274168.,
      273080.,  292600.,  312632.,  333176.,  329016.,  349560.,  370616.,
      392184.,  384952.,  406520.,  428600.,  451192.,  440888.,  463480.,
      486584.,  510200.,  496824.,  520440.,  544568.,  569208.,  272796.,
      285116.,  297692.,  310524.,  282554.,  299114.,  316058.,  333386.,
      630580.,  665236.,  700660.,  736852.,  720628.,  756820.,  793780.,
      831508.,  810676.,  848404.,  886900.,  926164.,  900724.,  939988.,
      980020.,  1020820., 990772.,  1031572., 1073140., 1115476., 1080820.,
      1123156., 1166260., 1210132., 583898.,  605834.,  628154.,  650858.,
      586970.,  608906.,  631226.,  653930.,  1260916., 1306324., 1352500.,
      1399444., 1350964., 1397908., 1445620., 1494100., 1441012., 1489492.,
      1538740., 1588756., 1531060., 1581076., 1631860., 1683412., 1621108.,
      1672660., 1724980., 1778068., 1711156., 1764244., 1818100., 1872724.,
      909818.,  937130.,  964826.,  992906.,  891386.,  918698.,  946394.,
      974474.,  1891252., 1947412., 2004340., 2062036., 1981300., 2038996.,
      2097460., 2156692., 2071348., 2130580., 2190580., 2251348., 2161396.,
      2222164., 2283700., 2346004., 2251444., 2313748., 2376820., 2440660.,
      2341492., 2405332., 2469940., 2535316., 1235738., 1268426., 1301498.,
      1334954., 1195802., 1228490., 1261562., 1295018., 2521588., 2588500.,
      2656180., 2724628., 2611636., 2680084., 2749300., 2819284., 2701684.,
      2771668., 2842420., 2913940., 2791732., 2863252., 2935540., 3008596.,
      2881780., 2954836., 3028660., 3103252., 2971828., 3046420., 3121780.,
      3197908., 1561658., 1599722., 1638170., 1677002., 1500218., 1538282.,
      1576730., 1615562., 3151924., 3229588., 3308020., 3387220., 3241972.,
      3321172., 3401140., 3481876., 3332020., 3412756., 3494260., 3576532.,
      3422068., 3504340., 3587380., 3671188., 3512116., 3595924., 3680500.,
      3765844., 3602164., 3687508., 3773620., 3860500., 1887578., 1931018.,
      1974842., 2019050., 1192732., 1220412., 1248348., 1276540., 2495672.,
      2552056., 2608952., 2666360., 2559800., 2617208., 2675128., 2733560.,
      2623928., 2682360., 2741304., 2800760., 2688056., 2747512., 2807480.,
      2867960., 2752184., 2812664., 2873656., 2935160., 2816312., 2877816.,
      2939832., 3002360., 1470428., 1501692., 1533212., 1564988., 697438.,
      712430.,  727550.,  742798.,  1454588., 1485084., 1515836., 1546844.,
      1488700., 1519708., 1550972., 1582492., 1522812., 1554332., 1586108.,
      1618140., 1556924., 1588956., 1621244., 1653788., 1591036., 1623580.,
      1656380., 1689436., 1625148., 1658204., 1691516., 1725084., 846014.,
      862798.,  879710.,  896750.};
  const std::array<int, 4> in_shape = {{3, 9, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2048.,   2840.,   3752.,   4788.,   5194.,   5600.,   5240.,   4740.,
      4096.,   4220.,   5725.,   7420.,   9310.,   9940.,   10570.,  9730.,
      8675.,   7400.,   7560.,   10110.,  12936.,  16044.,  16947.,  17850.,
      16248.,  14340.,  12120.,  12320.,  16310.,  20678.,  25431.,  26656.,
      27881.,  25172.,  22050.,  18508.,  18242.,  23870.,  29939.,  36456.,
      37681.,  38906.,  34811.,  30240.,  25186.,  24164.,  31430.,  39200.,
      47481.,  48706.,  49931.,  44450.,  38430.,  31864.,  29256.,  37740.,
      46704.,  56154.,  57351.,  58548.,  51744.,  44430.,  36600.,  31920.,
      40975.,  50470.,  60410.,  61530.,  62650.,  55120.,  47125.,  38660.,
      31904.,  40820.,  50120.,  59808.,  60802.,  61796.,  54200.,  46200.,
      37792.,  18896.,  24710.,  30968.,  37674.,  38080.,  38486.,  34400.,
      29850.,  24832.,  30950.,  40150.,  49945.,  60340.,  60970.,  61600.,
      54685.,  47150.,  38990.,  46440.,  59925.,  74172.,  89187.,  90090.,
      90993.,  80400.,  69015.,  56832.,  65618.,  84350.,  104027., 124656.,
      125881., 127106., 111923., 95760.,  78610.,  71540.,  91910.,  113288.,
      135681., 136906., 138131., 121562., 103950., 85288.,  77462.,  99470.,
      122549., 146706., 147931., 149156., 131201., 112140., 91966.,  81744.,
      104565., 128352., 153111., 154308., 155505., 136308., 116115., 94920.,
      81330.,  103750., 127015., 151130., 152250., 153370., 134095., 113950.,
      92930.,  75968.,  96710.,  118160., 140322., 141316., 142310., 124184.,
      105330., 85744.,  35744.,  46580.,  58184.,  70560.,  70966.,  71372.,
      63560.,  54960.,  45568.,  57680.,  74575.,  92470.,  111370., 112000.,
      112630., 99640.,  85625.,  70580.,  85320.,  109740., 135408., 162330.,
      163233., 164136., 144552., 123690., 101544., 118916., 152390., 187376.,
      223881., 225106., 226331., 198674., 169470., 138712., 124838., 159950.,
      196637., 234906., 236131., 237356., 208313., 177660., 145390., 130760.,
      167510., 205898., 245931., 247156., 248381., 217952., 185850., 152068.,
      134232., 171390., 210000., 250068., 251265., 252462., 220872., 187800.,
      153240., 130740., 166525., 203560., 241850., 242970., 244090., 213070.,
      180775., 147200., 120032., 152600., 186200., 220836., 221830., 222824.,
      194168., 164460., 133696.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    10.,   16.,   22.,   28.,   34.,   32.,   21.,   12.,
      38.,   80.,   101.,  122.,  143.,  164.,  138.,  84.,   54.,   144.,
      273.,  318.,  363.,  408.,  453.,  360.,  210.,  138.,  333.,  588.,
      633.,  678.,  723.,  768.,  591.,  336.,  222.,  522.,  903.,  948.,
      993.,  1038., 1083., 822.,  462.,  306.,  711.,  1218., 1263., 1308.,
      1353., 1398., 1053., 588.,  390.,  900.,  1533., 1578., 1623., 1668.,
      1713., 1284., 714.,  424.,  938.,  1544., 1583., 1622., 1661., 1700.,
      1238., 672.,  301.,  652.,  1054., 1078., 1102., 1126., 1150., 824.,
      441.,  10.,   31.,   64.,   97.,   130.,  163.,  196.,  149.,  84.,
      93.,   218.,  377.,  452.,  527.,  602.,  677.,  498.,  273.,  270.,
      603.,  1002., 1128., 1254., 1380., 1506., 1089., 588.,  543.,  1170.,
      1884., 2010., 2136., 2262., 2388., 1698., 903.,  816.,  1737., 2766.,
      2892., 3018., 3144., 3270., 2307., 1218., 1089., 2304., 3648., 3774.,
      3900., 4026., 4152., 2916., 1533., 1362., 2871., 4530., 4656., 4782.,
      4908., 5034., 3525., 1848., 1135., 2378., 3731., 3824., 3917., 4010.,
      4103., 2858., 1491., 688.,  1435., 2242., 2293., 2344., 2395., 2446.,
      1697., 882.,  19.,   58.,   118.,  178.,  238.,  298.,  358.,  266.,
      147.,  174.,  398.,  674.,  803.,  932.,  1061., 1190., 858.,  462.,
      486.,  1062., 1731., 1938., 2145., 2352., 2559., 1818., 966.,  948.,
      2007., 3180., 3387., 3594., 3801., 4008., 2805., 1470., 1410., 2952.,
      4629., 4836., 5043., 5250., 5457., 3792., 1974., 1872., 3897., 6078.,
      6285., 6492., 6699., 6906., 4779., 2478., 2334., 4842., 7527., 7734.,
      7941., 8148., 8355., 5766., 2982., 1846., 3818., 5918., 6065., 6212.,
      6359., 6506., 4478., 2310., 1075., 2218., 3430., 3508., 3586., 3664.,
      3742., 2570., 1323.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      15472.,   21540.,   28552.,   36540.,   39732.,   42924.,   40264.,
      36500.,   31600.,   32300.,   43925.,   57050.,   71715.,   76685.,
      81655.,   75290.,   67225.,   57420.,   58344.,   78150.,   100140.,
      124362.,  131502.,  138642.,  126348.,  111630.,  94440.,   95620.,
      126735.,  160846.,  198009.,  207711.,  217413.,  196462.,  172235.,
      144676.,  142492.,  186585.,  234178.,  285327.,  295029.,  304731.,
      272818.,  237125.,  197596.,  189364.,  246435.,  307510.,  372645.,
      382347.,  392049.,  349174.,  302015.,  250516.,  230280.,  297150.,
      367836.,  442386.,  451878.,  461370.,  407868.,  350310.,  288648.,
      251900.,  323425.,  398450.,  477015.,  485905.,  494795.,  435410.,
      372325.,  305500.,  252208.,  322740.,  396328.,  473004.,  480900.,
      488796.,  428776.,  365540.,  299056.,  147664.,  193260.,  242392.,
      295092.,  298284.,  301476.,  269656.,  234140.,  194896.,  242900.,
      315275.,  392390.,  474285.,  479255.,  484225.,  430070.,  370975.,
      306900.,  365496.,  471810.,  584196.,  702702.,  709842.,  716982.,
      633732.,  544170.,  448248.,  517468.,  665385.,  820834.,  983871.,
      993573.,  1003275., 883666.,  756245.,  620956.,  564340.,  725235.,
      894166.,  1071189., 1080891., 1090593., 960022.,  821135.,  673876.,
      611212.,  785085.,  967498.,  1158507., 1168209., 1177911., 1036378.,
      886025.,  726796.,  646296.,  826890.,  1015188., 1211238., 1220730.,
      1230222., 1078548., 918930.,  751320.,  643940.,  821575.,  1005950.,
      1197105., 1205995., 1214885., 1062350., 902875.,  736420.,  602128.,
      766620.,  936760.,  1112580., 1120476., 1128372., 984760.,  835340.,
      680080.,  279856.,  364980.,  456232.,  553644.,  556836.,  560028.,
      499048.,  431780.,  358192.,  453500.,  586625.,  727730.,  876855.,
      881825.,  886795.,  784850.,  674725.,  556380.,  672648.,  865470.,
      1068252., 1281042., 1288182., 1295322., 1141116., 976710.,  802056.,
      939316.,  1204035., 1480822., 1769733., 1779435., 1789137., 1570870.,
      1340255., 1097236., 986188.,  1263885., 1554154., 1857051., 1866753.,
      1876455., 1647226., 1405145., 1150156., 1033060., 1323735., 1627486.,
      1944369., 1954071., 1963773., 1723582., 1470035., 1203076., 1062312.,
      1356630., 1662540., 1980090., 1989582., 1999074., 1749228., 1487550.,
      1213992., 1035980., 1319725., 1613450., 1917195., 1926085., 1934975.,
      1689290., 1433425., 1167340., 952048.,  1210500., 1477192., 1752156.,
      1760052., 1767948., 1540744., 1305140., 1061104.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    59.,    101.,   143.,   185.,   227.,   222.,   149.,
      70.,    244.,   538.,   694.,   850.,   1006.,  1162.,  996.,   614.,
      363.,   1002.,  1941.,  2283.,  2625.,  2967.,  3309.,  2658.,  1563.,
      993.,   2430.,  4335.,  4677.,  5019.,  5361.,  5703.,  4422.,  2529.,
      1623.,  3858.,  6729.,  7071.,  7413.,  7755.,  8097.,  6186.,  3495.,
      2253.,  5286.,  9123.,  9465.,  9807.,  10149., 10491., 7950.,  4461.,
      2883.,  6714.,  11517., 11859., 12201., 12543., 12885., 9714.,  5427.,
      3214.,  7140.,  11794., 12094., 12394., 12694., 12994., 9492.,  5166.,
      2309.,  5014.,  8123.,  8309.,  8495.,  8681.,  8867.,  6366.,  3413.,
      59.,    202.,   437.,   695.,   953.,   1211.,  1469.,  1122.,  635.,
      682.,   1612.,  2806.,  3394.,  3982.,  4570.,  5158.,  3804.,  2090.,
      2037.,  4566.,  7611.,  8601.,  9591.,  10581., 11571., 8382.,  4533.,
      4179.,  9018.,  14541., 15531., 16521., 17511., 18501., 13170., 7011.,
      6321.,  13470., 21471., 22461., 23451., 24441., 25431., 17958., 9489.,
      8463.,  17922., 28401., 29391., 30381., 31371., 32361., 22746., 11967.,
      10605., 22374., 35331., 36321., 37311., 38301., 39291., 27534., 14445.,
      8866.,  18588., 29182., 29914., 30646., 31378., 32110., 22380., 11682.,
      5387.,  11242., 17573., 17975., 18377., 18779., 19181., 13314., 6923.,
      113.,   382.,   815.,   1289.,  1763.,  2237.,  2711.,  2022.,  1121.,
      1294.,  2980.,  5074.,  6094.,  7114.,  8134.,  9154.,  6612.,  3566.,
      3711.,  8130.,  13281., 14919., 16557., 18195., 19833., 14106., 7503.,
      7365.,  15606., 24747., 26385., 28023., 29661., 31299., 21918., 11493.,
      11019., 23082., 36213., 37851., 39489., 41127., 42765., 29730., 15483.,
      14673., 30558., 47679., 49317., 50955., 52593., 54231., 37542., 19473.,
      18327., 38034., 59145., 60783., 62421., 64059., 65697., 45354., 23463.,
      14518., 30036., 46570., 47734., 48898., 50062., 51226., 35268., 18198.,
      8465.,  17470., 27023., 27641., 28259., 28877., 29495., 20262., 10433.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      120160.,   167640.,   222608.,   285320.,   310632.,   335944.,
      315536.,   286360.,   248160.,   252600.,   343950.,   447220.,
      562730.,   602210.,   641690.,   592180.,   529150.,   452280.,
      458256.,   614340.,   787800.,   979020.,   1035804.,  1092588.,
      996312.,   880740.,   745488.,   753256.,   998970.,   1268540.,
      1562414.,  1639638.,  1716862.,  1552124.,  1361290.,  1143912.,
      1126216.,  1475250.,  1852172.,  2257430.,  2334654.,  2411878.,
      2159948.,  1877890.,  1565256.,  1499176.,  1951530.,  2435804.,
      2952446.,  3029670.,  3106894.,  2767772.,  2394490.,  1986600.,
      1827216.,  2358180.,  2919576.,  3511788.,  3587388.,  3662988.,
      3238680.,  2782020.,  2292624.,  2001400.,  2569950.,  3166420.,
      3791130.,  3861970.,  3932810.,  3461140.,  2959950.,  2428920.,
      2005600.,  2566680.,  3152144.,  3762248.,  3825192.,  3888136.,
      3410960.,  2908120.,  2379360.,  1167328.,  1528440.,  1917776.,
      2335592.,  2360904.,  2386216.,  2135120.,  1854520.,  1544160.,
      1924440.,  2498550.,  3110500.,  3760610.,  3800090.,  3839570.,
      3410980.,  2942950.,  2435160.,  2899920.,  3744180.,  4636920.,
      5578524.,  5635308.,  5692092.,  5032056.,  4321620.,  3560400.,
      4109896.,  5285490.,  6521228.,  7817558.,  7894782.,  7972006.,
      7022540.,  6010690.,  4936008.,  4482856.,  5761770.,  7104860.,
      8512574.,  8589798.,  8667022.,  7630364.,  6527290.,  5357352.,
      4855816.,  6238050.,  7688492.,  9207590.,  9284814.,  9362038.,
      8238188.,  7043890.,  5778696.,  5139792.,  6576660.,  8075064.,
      9635388.,  9710988.,  9786588.,  8580792.,  7311540.,  5978448.,
      5124760.,  6538950.,  8006980.,  9529170.,  9600010.,  9670850.,
      8457220.,  7188150.,  5863320.,  4794592.,  6104760.,  7460048.,
      8860712.,  8923656.,  8986600.,  7843280.,  6653560.,  5417184.,
      2214496.,  2889240.,  3612944.,  4385864.,  4411176.,  4436488.,
      3954704.,  3422680.,  2840160.,  3596280.,  4653150.,  5773780.,
      6958490.,  6997970.,  7037450.,  6229780.,  5356750.,  4418040.,
      5341584.,  6874020.,  8486040.,  10178028., 10234812., 10291596.,
      9067800.,  7762500.,  6375312.,  7466536.,  9572010.,  11773916.,
      14072702., 14149926., 14227150., 12492956., 10660090., 8728104.,
      7839496.,  10048290., 12357548., 14767718., 14844942., 14922166.,
      13100780., 11176690., 9149448.,  8212456.,  10524570., 12941180.,
      15462734., 15539958., 15617182., 13708604., 11693290., 9570792.,
      8452368.,  10795140., 13230552., 15758988., 15834588., 15910188.,
      13922904., 11841060., 9664272.,  8248120.,  10507950., 12847540.,
      15267210., 15338050., 15408890., 13453300., 11416350., 9297720.,
      7583584.,  9642840.,  11767952., 13959176., 14022120., 14085064.,
      12275600., 10399000., 8455008.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    706.,    1018.,   1330.,   1642.,   1644.,
      1118.,   460.,    1720.,   3908.,   5108.,   6308.,   7508.,   8708.,
      7544.,   4684.,   2634.,   7428.,   14574.,  17238.,  19902.,  22566.,
      25230.,  20388.,  12042.,  7506.,   18516.,  33222.,  35886.,  38550.,
      41214.,  43878.,  34164.,  19602.,  12378.,  29604.,  51870.,  54534.,
      57198.,  59862.,  62526.,  47940.,  27162.,  17250.,  40692.,  70518.,
      73182.,  75846.,  78510.,  81174.,  61716.,  34722.,  22122.,  51780.,
      89166.,  91830.,  94494.,  97158.,  99822.,  75492.,  42282.,  25004.,
      55672.,  92132.,  94484.,  96836.,  99188.,  101540., 74296.,  40492.,
      18078.,  39308.,  63754.,  65218.,  66682.,  68146.,  69610.,  50028.,
      26846.,  390.,    1436.,   3202.,   5242.,   7282.,   9322.,   11362.,
      8700.,   4934.,   5212.,   12376.,  21620.,  26276.,  30932.,  35588.,
      40244.,  29720.,  16348.,  15810.,  35508.,  59286.,  67134.,  74982.,
      82830.,  90678.,  65748.,  35586.,  32778.,  70788.,  114222., 122070.,
      129918., 137766., 145614., 103716., 55242.,  49746.,  106068., 169158.,
      177006., 184854., 192702., 200550., 141684., 74898.,  66714.,  141348.,
      224094., 231942., 239790., 247638., 255486., 179652., 94554.,  83682.,
      176628., 279030., 286878., 294726., 302574., 310422., 217620., 114210.,
      70076.,  146968., 230804., 236612., 242420., 248228., 254036., 177112.,
      92476.,  42630.,  88988.,  139138., 142330., 145522., 148714., 151906.,
      105468., 54854.,  750.,    2732.,   6010.,   9778.,   13546.,  17314.,
      21082.,  15756.,  8750.,   9964.,   23032.,  39332.,  47444.,  55556.,
      63668.,  71780.,  51896.,  28012.,  28986.,  63588.,  103998., 117030.,
      130062., 143094., 156126., 111108., 59130.,  58050.,  123060., 195222.,
      208254., 221286., 234318., 247350., 173268., 90882.,  87114.,  182532.,
      286446., 299478., 312510., 325542., 338574., 235428., 122634., 116178.,
      242004., 377670., 390702., 403734., 416766., 429798., 297588., 154386.,
      145242., 301476., 468894., 481926., 494958., 507990., 521022., 359748.,
      186138., 115148., 238264., 369476., 378740., 388004., 397268., 406532.,
      279928., 144460., 67182.,  138668., 214522., 219442., 224362., 229282.,
      234202., 160908., 82862.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7280.,   8192.,    10180.,  11360.,   13544.,  15008.,  17388.,  19152.,
      18956.,  20776.,   20524.,  22400.,   19304.,  20960.,  17540.,  18960.,
      15216.,  16384.,   15420.,  16880.,   21025.,  22900.,  27370.,  29680.,
      34475.,  37240.,   36925.,  39760.,   39375.,  42280.,  36370.,  38920.,
      32525.,  34700.,   27820.,  29600.,   28104.,  30240.,  37710.,  40440.,
      48396.,  51744.,   60186.,  64176.,   63714.,  67788.,  67242.,  71400.,
      61356.,  64992.,   54270.,  57360.,   45960.,  48480.,  46340.,  49280.,
      61495.,  65240.,   78134.,  82712.,   96285.,  101724., 101087., 106624.,
      105889., 111524.,  95774.,  100688.,  84035.,  88200.,  70644.,  74032.,
      69524.,  72968.,   91105.,  95480.,   114422., 119756., 139503., 145824.,
      144305., 150724.,  149107., 155624.,  133574., 139244., 116165., 120960.,
      96852.,  100744.,  92708.,  96656.,   120715., 125720., 150710., 156800.,
      182721., 189924.,  187523., 194824.,  192325., 199724., 171374., 177800.,
      148295., 153720.,  123060., 127456.,  113256., 117024., 146190., 150960.,
      181020., 186816.,  217770., 224616.,  222474., 229404., 227178., 234192.,
      200892., 206976.,  172590., 177720.,  142248., 146400., 124220., 127680.,
      159525., 163900.,  196570., 201880.,  235375., 241640., 239785., 246120.,
      244195., 250600.,  214930., 220480.,  183825., 188500., 150860., 154640.,
      124592., 127616.,  159460., 163280.,  195848., 200480., 233772., 239232.,
      237692., 243208.,  241612., 247184.,  211976., 216800., 180740., 184800.,
      147888., 151168.,  72080.,  75584.,   94420.,  98840.,  118520., 123872.,
      144396., 150696.,  145964., 152320.,  147532., 153944., 132056., 137600.,
      114740., 119400.,  95568.,  99328.,   119100., 123800., 154675., 160600.,
      192610., 199780.,  232925., 241360.,  235375., 243880., 237825., 246400.,
      211330., 218740.,  182375., 188600.,  150940., 155960., 179736., 185760.,
      232110., 239700.,  287508., 296688.,  345954., 356748., 349482., 360360.,
      353010., 363972.,  312132., 321600.,  268110., 276060., 220920., 227328.,
      254996., 262472.,  327985., 337400.,  404726., 416108., 485247., 498624.,
      490049., 503524.,  494851., 508424.,  435974., 447692., 373205., 383040.,
      306516., 314440.,  278180., 286160.,  357595., 367640., 441014., 453152.,
      528465., 542724.,  533267., 547624.,  538069., 552524., 473774., 486248.,
      405335., 415800.,  332724., 341152.,  301364., 309848., 387205., 397880.,
      477302., 490196.,  571683., 586824.,  576485., 591724., 581287., 596624.,
      511574., 524804.,  437465., 448560.,  358932., 367864., 319320., 326976.,
      408630., 418260.,  501780., 513408.,  598794., 612444., 603498., 617232.,
      608202., 622020.,  533316., 545232.,  454470., 464460., 371640., 379680.,
      318620., 325320.,  406575., 415000.,  497890., 508060., 592585., 604520.,
      596995., 609000.,  601405., 613480.,  525970., 536380., 447075., 455800.,
      364700., 371720.,  298256., 303872.,  379780., 386840., 464120., 472640.,
      551292., 561288.,  555212., 565264.,  559132., 569240., 488024., 496736.,
      414020., 421320.,  337104., 342976.,  136880., 142976., 178660., 186320.,
      223496., 232736.,  271404., 282240.,  272972., 283864., 274540., 285488.,
      244808., 254240.,  211940., 219840.,  175920., 182272., 222780., 230720.,
      288325., 298300.,  357850., 369880.,  431375., 445480., 433825., 448000.,
      436275., 450520.,  386290., 398560.,  332225., 342500., 274060., 282320.,
      331368., 341280.,  426510., 438960.,  526620., 541632., 631722., 649320.,
      635250., 652932.,  638778., 656544.,  562908., 578208., 481950., 494760.,
      395880., 406176.,  463652., 475664.,  594475., 609560., 731318., 749504.,
      874209., 895524.,  879011., 900424.,  883813., 905324., 776174., 794696.,
      662375., 677880.,  542388., 554848.,  486836., 499352., 624085., 639800.,
      767606., 786548.,  917427., 939624.,  922229., 944524., 927031., 949424.,
      813974., 833252.,  694505., 710640.,  568596., 581560., 510020., 523040.,
      653695., 670040.,  803894., 823592.,  960645., 983724., 965447., 988624.,
      970249., 993524.,  851774., 871808.,  726635., 743400., 594804., 608272.,
      525384., 536928.,  671070., 685560.,  822540., 840000., 979818., 1000272.,
      984522., 1005060., 989226., 1009848., 865740., 883488., 736350., 751200.,
      601032., 612960.,  513020., 522960.,  653625., 666100., 799210., 814240.,
      949795., 967400.,  954205., 971880.,  958615., 976360., 837010., 852280.,
      710325., 723100.,  578540., 588800.,  471920., 480128., 600100., 610400.,
      732392., 744800.,  868812., 883344.,  872732., 887320., 876652., 891296.,
      764072., 776672.,  647300., 657840.,  526320., 534784.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    37.,    64.,    55.,
      88.,    73.,    112.,   91.,    136.,   94.,    128.,   65.,    84.,
      22.,    48.,    92.,    152.,   218.,   320.,   290.,   404.,   362.,
      488.,   434.,   572.,   506.,   656.,   444.,   552.,   278.,   336.,
      147.,   216.,   426.,   576.,   849.,   1092.,  1011.,  1272.,  1173.,
      1452.,  1335.,  1632.,  1497.,  1812.,  1218.,  1440.,  723.,   840.,
      441.,   552.,   1098.,  1332.,  1983.,  2352.,  2145.,  2532.,  2307.,
      2712.,  2469.,  2892.,  2631.,  3072.,  2058.,  2364.,  1185.,  1344.,
      735.,   888.,   1770.,  2088.,  3117.,  3612.,  3279.,  3792.,  3441.,
      3972.,  3603.,  4152.,  3765.,  4332.,  2898.,  3288.,  1647.,  1848.,
      1029.,  1224.,  2442.,  2844.,  4251.,  4872.,  4413.,  5052.,  4575.,
      5232.,  4737.,  5412.,  4899.,  5592.,  3738.,  4212.,  2109.,  2352.,
      1323.,  1560.,  3114.,  3600.,  5385.,  6132.,  5547.,  6312.,  5709.,
      6492.,  5871.,  6672.,  6033.,  6852.,  4578.,  5136.,  2571.,  2856.,
      1518.,  1696.,  3388.,  3752.,  5618.,  6176.,  5762.,  6332.,  5906.,
      6488.,  6050.,  6644.,  6194.,  6800.,  4540.,  4952.,  2478.,  2688.,
      1105.,  1204.,  2406.,  2608.,  3907.,  4216.,  3997.,  4312.,  4087.,
      4408.,  4177.,  4504.,  4267.,  4600.,  3070.,  3296.,  1649.,  1764.,
      19.,    40.,    78.,    124.,   181.,   256.,   307.,   388.,   433.,
      520.,   559.,   652.,   685.,   784.,   526.,   596.,   299.,   336.,
      310.,   372.,   740.,   872.,   1298.,  1508.,  1586.,  1808.,  1874.,
      2108.,  2162.,  2408.,  2450.,  2708.,  1812.,  1992.,  998.,   1092.,
      957.,   1080.,  2154.,  2412.,  3603.,  4008.,  4089.,  4512.,  4575.,
      5016.,  5061.,  5520.,  5547.,  6024.,  4026.,  4356.,  2181.,  2352.,
      2007.,  2172.,  4338.,  4680.,  7005.,  7536.,  7491.,  8040.,  7977.,
      8544.,  8463.,  9048.,  8949.,  9552.,  6378.,  6792.,  3399.,  3612.,
      3057.,  3264.,  6522.,  6948.,  10407., 11064., 10893., 11568., 11379.,
      12072., 11865., 12576., 12351., 13080., 8730.,  9228.,  4617.,  4872.,
      4107.,  4356.,  8706.,  9216.,  13809., 14592., 14295., 15096., 14781.,
      15600., 15267., 16104., 15753., 16608., 11082., 11664., 5835.,  6132.,
      5157.,  5448.,  10890., 11484., 17211., 18120., 17697., 18624., 18183.,
      19128., 18669., 19632., 19155., 20136., 13434., 14100., 7053.,  7392.,
      4326.,  4540.,  9076.,  9512.,  14258., 14924., 14618., 15296., 14978.,
      15668., 15338., 16040., 15698., 16412., 10948., 11432., 5718.,  5964.,
      2635.,  2752.,  5502.,  5740.,  8605.,  8968.,  8803.,  9172.,  9001.,
      9376.,  9199.,  9580.,  9397.,  9784.,  6526.,  6788.,  3395.,  3528.,
      37.,    76.,    150.,   232.,   343.,   472.,   577.,   712.,   811.,
      952.,   1045.,  1192.,  1279.,  1432.,  958.,   1064.,  533.,   588.,
      598.,   696.,   1388.,  1592.,  2378.,  2696.,  2882.,  3212.,  3386.,
      3728.,  3890.,  4244.,  4394.,  4760.,  3180.,  3432.,  1718.,  1848.,
      1767.,  1944.,  3882.,  4248.,  6357.,  6924.,  7167.,  7752.,  7977.,
      8580.,  8787.,  9408.,  9597.,  10236., 6834.,  7272.,  3639.,  3864.,
      3573.,  3792.,  7578.,  8028.,  12027., 12720., 12837., 13548., 13647.,
      14376., 14457., 15204., 15267., 16032., 10698., 11220., 5613.,  5880.,
      5379.,  5640.,  11274., 11808., 17697., 18516., 18507., 19344., 19317.,
      20172., 20127., 21000., 20937., 21828., 14562., 15168., 7587.,  7896.,
      7185.,  7488.,  14970., 15588., 23367., 24312., 24177., 25140., 24987.,
      25968., 25797., 26796., 26607., 27624., 18426., 19116., 9561.,  9912.,
      8991.,  9336.,  18666., 19368., 29037., 30108., 29847., 30936., 30657.,
      31764., 31467., 32592., 32277., 33420., 22290., 23064., 11535., 11928.,
      7134.,  7384.,  14764., 15272., 22898., 23672., 23474., 24260., 24050.,
      24848., 24626., 25436., 25202., 26024., 17356., 17912., 8958.,  9240.,
      4165.,  4300.,  8598.,  8872.,  13303., 13720., 13609., 14032., 13915.,
      14344., 14221., 14656., 14527., 14968., 9982.,  10280., 5141.,  5292.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      56464.,   63696.,   79140.,   88500.,   105496.,  117112.,  135660.,
      149660.,  148092.,  162540.,  160524.,  175420.,  151192.,  164344.,
      137540.,  148820.,  119440.,  128720.,  120500.,  132100.,  164525.,
      179425.,  214430.,  232790.,  270375.,  292355.,  289835.,  312375.,
      309295.,  332395.,  285950.,  306230.,  255925.,  273225.,  219060.,
      233220.,  220632.,  237624.,  296310.,  318030.,  380580.,  407220.,
      473634.,  505386.,  501690.,  534114.,  529746.,  562842.,  483684.,
      512628.,  428070.,  452670.,  362712.,  382776.,  364924.,  388332.,
      484575.,  514395.,  616042.,  652498.,  759549.,  802865.,  797769.,
      841869.,  835989.,  880873.,  756490.,  795634.,  664055.,  697235.,
      558460.,  585452.,  549388.,  576828.,  720195.,  755055.,  904834.,
      947338.,  1103529., 1153901., 1141749., 1192905., 1179969., 1231909.,
      1057378., 1102570., 919835.,  958055.,  767116.,  798140.,  733852.,
      765324.,  955815.,  995715.,  1193626., 1242178., 1447509., 1504937.,
      1485729., 1543941., 1523949., 1582945., 1358266., 1409506., 1175615.,
      1218875., 975772.,  1010828., 898584.,  928632.,  1160070., 1198110.,
      1436676., 1482900., 1728594., 1783194., 1766058., 1821330., 1803522.,
      1859466., 1595076., 1643604., 1370550., 1411470., 1129752., 1162872.,
      986900.,  1014500., 1267525., 1302425., 1562030., 1604390., 1870575.,
      1920555., 1905715., 1956255., 1940855., 1991955., 1708430., 1752710.,
      1461325., 1498625., 1199380., 1229540., 990736.,  1014864., 1268100.,
      1298580., 1557592., 1594552., 1859340., 1902908., 1890588., 1934604.,
      1921836., 1966300., 1686232., 1724728., 1437860., 1470260., 1176592.,
      1202768., 569680.,  597648.,  746580.,  781860.,  937528.,  980248.,
      1142652., 1192940., 1155084., 1205820., 1167516., 1218700., 1045432.,
      1089688., 908660.,  945860.,  757072.,  787088.,  943460.,  980980.,
      1225625., 1272925., 1526630., 1583870., 1846635., 1913975., 1866095.,
      1933995., 1885555., 1954015., 1675910., 1735070., 1446625., 1496325.,
      1197540., 1237620., 1425912., 1474008., 1841790., 1902390., 2281812.,
      2355108., 2746170., 2832354., 2774226., 2861082., 2802282., 2889810.,
      2478228., 2553828., 2129070., 2192550., 1754616., 1805784., 2025100.,
      2084796., 2605155., 2680335., 3215170., 3306058., 3855369., 3962189.,
      3893589., 4001193., 3931809., 4040197., 3464482., 3558058., 2966075.,
      3044615., 2436364., 2499644., 2209564., 2273292., 2840775., 2920995.,
      3503962., 3600898., 4199349., 4313225., 4237569., 4352229., 4275789.,
      4391233., 3765370., 3864994., 3221855., 3305435., 2645020., 2712332.,
      2394028., 2461788., 3076395., 3161655., 3792754., 3895738., 4543329.,
      4664261., 4581549., 4703265., 4619769., 4742269., 4066258., 4171930.,
      3477635., 3566255., 2853676., 2925020., 2539320., 2600472., 3249870.,
      3326790., 3991092., 4083972., 4763178., 4872210., 4800642., 4910346.,
      4838106., 4948482., 4242804., 4337988., 3615870., 3695670., 2957112.,
      3021336., 2535620., 2589140., 3235825., 3303125., 3962870., 4044110.,
      4716915., 4812255., 4752055., 4847955., 4787195., 4883655., 4187030.,
      4270190., 3559225., 3628925., 2903620., 2959700., 2374864., 2419728.,
      3024180., 3080580., 3695992., 3764056., 4390428., 4470284., 4421676.,
      4501980., 4452924., 4533676., 3886840., 3956440., 3297620., 3355940.,
      2685136., 2732048., 1082896., 1131600., 1414020., 1475220., 1769560.,
      1843384., 2149644., 2236220., 2162076., 2249100., 2174508., 2261980.,
      1939672., 2015032., 1679780., 1742900., 1394704., 1445456., 1766420.,
      1829860., 2286725., 2366425., 2838830., 2934950., 3422895., 3535595.,
      3442355., 3555615., 3461815., 3575635., 3065870., 3163910., 2637325.,
      2719425., 2176020., 2242020., 2631192., 2710392., 3387270., 3486750.,
      4183044., 4302996., 5018706., 5159322., 5046762., 5188050., 5074818.,
      5216778., 4472772., 4595028., 3830070., 3932430., 3146520., 3228792.,
      3685276., 3781260., 4725735., 4846275., 5814298., 5959618., 6951189.,
      7121513., 6989409., 7160517., 7027629., 7199521., 6172474., 6320482.,
      5268095., 5391995., 4314268., 4413836., 3869740., 3969756., 4961355.,
      5086935., 6103090., 6254458., 7295169., 7472549., 7333389., 7511553.,
      7371609., 7550557., 6473362., 6627418., 5523875., 5652815., 4522924.,
      4626524., 4054204., 4158252., 5196975., 5327595., 6391882., 6549298.,
      7639149., 7823585., 7677369., 7862589., 7715589., 7901593., 6774250.,
      6934354., 5779655., 5913635., 4731580., 4839212., 4180056., 4272312.,
      5339670., 5455470., 6545508., 6685044., 7797762., 7961226., 7835226.,
      7999362., 7872690., 8037498., 6890532., 7032372., 5861190., 5979870.,
      4784472., 4879800., 4084340., 4163780., 5204125., 5303825., 6363710.,
      6483830., 7563255., 7703955., 7598395., 7739655., 7633535., 7775355.,
      6665630., 6787670., 5657125., 5759225., 4607860., 4689860., 3758992.,
      3824592., 4780260., 4862580., 5834392., 5933560., 6921516., 7037660.,
      6952764., 7069356., 6984012., 7101052., 6087448., 6188152., 5157380.,
      5241620., 4193680., 4261328.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    119.,    275.,    251.,    455.,
      383.,    635.,    515.,    815.,    647.,    995.,    690.,    954.,
      485.,    633.,    130.,    330.,    628.,    1092.,   1558.,   2350.,
      2110.,   2998.,   2662.,   3646.,   3214.,   4294.,   3766.,   4942.,
      3348.,   4196.,   2114.,   2570.,   1047.,   1587.,   3126.,   4302.,
      6333.,   8241.,   7593.,   9645.,   8853.,   11049.,  10113.,  12453.,
      11373.,  13857.,  9318.,   11070.,  5559.,   6483.,   3315.,   4191.,
      8334.,   10182.,  15153.,  18069.,  16413.,  19473.,  17673.,  20877.,
      18933.,  22281.,  20193.,  23685.,  15870.,  18294.,  9171.,   10431.,
      5583.,   6795.,   13542.,  16062.,  23973.,  27897.,  25233.,  29301.,
      26493.,  30705.,  27753.,  32109.,  29013.,  33513.,  22422.,  25518.,
      12783.,  14379.,  7851.,   9399.,   18750.,  21942.,  32793.,  37725.,
      34053.,  39129.,  35313.,  40533.,  36573.,  41937.,  37833.,  43341.,
      28974.,  32742.,  16395.,  18327.,  10119.,  12003.,  23958.,  27822.,
      41613.,  47553.,  42873.,  48957.,  44133.,  50361.,  45393.,  51765.,
      46653.,  53169.,  35526.,  39966.,  20007.,  22275.,  11794.,  13210.,
      26388.,  29284.,  43846.,  48286.,  44974.,  49510.,  46102.,  50734.,
      47230.,  51958.,  48358.,  53182.,  35508.,  38788.,  19410.,  21082.,
      8645.,   9433.,   18850.,  20458.,  30647.,  33107.,  31355.,  33863.,
      32063.,  34619.,  32771.,  35375.,  33479.,  36131.,  24114.,  25914.,
      12965.,  13881.,  113.,    277.,    538.,    898.,    1307.,   1895.,
      2303.,   2939.,   3299.,   3983.,   4295.,   5027.,   5291.,   6071.,
      4074.,   4626.,   2321.,   2613.,   2362.,   2850.,   5668.,   6708.,
      9982.,   11638.,  12262.,  14014.,  14542.,  16390.,  16822.,  18766.,
      19102.,  21142.,  14148.,  15572.,  7802.,   8546.,   7419.,   8391.,
      16734.,  18774.,  28041.,  31245.,  31893.,  35241.,  35745.,  39237.,
      39597.,  43233.,  43449.,  47229.,  31566.,  34182.,  17115.,  18471.,
      15735.,  17043.,  34038.,  36750.,  55005.,  59217.,  58857.,  63213.,
      62709.,  67209.,  66561.,  71205.,  70413.,  75201.,  50214.,  53502.,
      26775.,  28467.,  24051.,  25695.,  51342.,  54726.,  81969.,  87189.,
      85821.,  91185.,  89673.,  95181.,  93525.,  99177.,  97377.,  103173.,
      68862.,  72822.,  36435.,  38463.,  32367.,  34347.,  68646.,  72702.,
      108933., 115161., 112785., 119157., 116637., 123153., 120489., 127149.,
      124341., 131145., 87510.,  92142.,  46095.,  48459.,  40683.,  42999.,
      85950.,  90678.,  135897., 143133., 139749., 147129., 143601., 151125.,
      147453., 155121., 151305., 159117., 106158., 111462., 55755.,  58455.,
      34186.,  35890.,  71748.,  75220.,  112750., 118054., 115606., 121006.,
      118462., 123958., 121318., 126910., 124174., 129862., 86628.,  90484.,
      45258.,  47218.,  20849.,  21781.,  43546.,  45442.,  68123.,  71015.,
      69695.,  72635.,  71267.,  74255.,  72839.,  75875.,  74411.,  77495.,
      51690.,  53778.,  26897.,  27957.,  221.,    529.,    1042.,   1690.,
      2495.,   3515.,   4355.,   5423.,   6215.,   7331.,   8075.,   9239.,
      9935.,   11147.,  7458.,   8298.,   4157.,   4593.,   4594.,   5370.,
      10708.,  12324.,  18406.,  20926.,  22414.,  25030.,  26422.,  29134.,
      30430.,  33238.,  34438.,  37342.,  24948.,  26948.,  13490.,  14522.,
      13791.,  15195.,  30342.,  33246.,  49749.,  54249.,  56193.,  60837.,
      62637.,  67425.,  69081.,  74013.,  75525.,  80601.,  53814.,  57294.,
      28671.,  30459.,  28155.,  29895.,  59742.,  63318.,  94857.,  100365.,
      101301., 106953., 107745., 113541., 114189., 120129., 120633., 126717.,
      84558.,  88710.,  44379.,  46503.,  42519.,  44595.,  89142.,  93390.,
      139965., 146481., 146409., 153069., 152853., 159657., 159297., 166245.,
      165741., 172833., 115302., 120126., 60087.,  62547.,  56883.,  59295.,
      118542., 123462., 185073., 192597., 191517., 199185., 197961., 205773.,
      204405., 212361., 210849., 218949., 146046., 151542., 75795.,  78591.,
      71247.,  73995.,  147942., 153534., 230181., 238713., 236625., 245301.,
      243069., 251889., 249513., 258477., 255957., 265065., 176790., 182958.,
      91503.,  94635.,  56578.,  58570.,  117108., 121156., 181654., 187822.,
      186238., 192502., 190822., 197182., 195406., 201862., 199990., 206542.,
      137748., 142180., 71106.,  73354.,  33053.,  34129.,  68242.,  70426.,
      105599., 108923., 108035., 111407., 110471., 113891., 112907., 116375.,
      115343., 118859., 79266.,  81642.,  40829.,  42033.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      444640.,   502240.,   623960.,   698520.,   832592.,   925136.,
      1071560.,  1183112.,  1170568.,  1285704.,  1269576.,  1388296.,
      1196624.,  1301456.,  1089240.,  1179160.,  946400.,   1020384.,
      952600.,   1045080.,  1301550.,  1420350.,  1697380.,  1843780.,
      2141370.,  2316650.,  2296490.,  2476250.,  2451610.,  2635850.,
      2267620.,  2429380.,  2030350.,  2168350.,  1738520.,  1851480.,
      1748304.,  1883856.,  2349060.,  2522340.,  3018360.,  3230904.,
      3757740.,  4011084.,  3981516.,  4240236.,  4205292.,  4469388.,
      3840888.,  4071864.,  3400260.,  3596580.,  2881872.,  3042000.,
      2896264.,  3083080.,  3847130.,  4085130.,  4892300.,  5183276.,
      6033566.,  6379310.,  6338542.,  6690558.,  6643518.,  7001806.,
      6013196.,  6325676.,  5279610.,  5544490.,  4440968.,  4656456.,
      4303432.,  4497928.,  5608266.,  5853818.,  7007148.,  7305548.,
      8501870.,  8854910.,  8703422.,  9054542.,  9008398.,  9365790.,
      8039468.,  8351180.,  6967530.,  7231770.,  5790792.,  6005768.,
      5312264.,  5506248.,  6839994.,  7084906.,  8461516.,  8759148.,
      10178622., 10530766., 10265486., 10615710., 10570462., 10926958.,
      9377612.,  9688556.,  8082010.,  8345610.,  6681864.,  6896328.,
      5828688.,  6011344.,  7443652.,  7673764.,  9146616.,  9425720.,
      10939116., 11268748., 10905356., 11232172., 11204396., 11536588.,
      9898488.,  10187832., 8496900.,  8741860.,  6998096.,  7197136.,
      5734808.,  5897944.,  7274190.,  7479262.,  8891684.,  9139972.,
      10588570., 10881354., 10421642., 10710714., 10702202., 10995754.,
      9433252.,  9688708.,  8079790.,  8295870.,  6640536.,  6815960.,
      4966112.,  5101536.,  6250968.,  6420760.,  7599952.,  7805136.,
      9014088.,  9255688.,  8701448.,  8938440.,  8950984.,  9191560.,
      7885136.,  8094416.,  6750040.,  6927000.,  5544672.,  5688288.,
      1301984.,  1394400.,  1739160.,  1857240.,  2223056.,  2367824.,
      2754696.,  2927176.,  2853704.,  3029768.,  2952712.,  3132360.,
      2691536.,  2848592.,  2378520.,  2511960.,  2012640.,  2121440.,
      2328920.,  2464920.,  3076350.,  3249550.,  3892420.,  4104100.,
      4778410.,  5029850.,  4933530.,  5189450.,  5088650.,  5349050.,
      4593220.,  4820260.,  4022750.,  4215150.,  3375960.,  3532440.,
      3738832.,  3910224.,  4871268.,  5085252.,  6081976.,  6340088.,
      7372492.,  7676268.,  7509228.,  7810188.,  7629580.,  7927724.,
      6805176.,  7065336.,  5894820.,  6115460.,  4896976.,  5076560.,
      5301320.,  5499912.,  6800074.,  7048698.,  8390828.,  8691276.,
      10075374., 10429438., 10178622., 10530766., 10265486., 10615710.,
      9110828.,  9416396.,  7855210.,  8114330.,  6496840.,  6707720.,
      5966088.,  6164168.,  7573050.,  7821034.,  9271756.,  9571436.,
      11063998., 11417166., 11052558., 11403806., 11024734., 11374062.,
      9760844.,  10065644., 8396250.,  8654730.,  6929160.,  7139528.,
      6172104.,  6369672.,  7772586.,  8019930.,  9464556.,  9763468.,
      11249806., 11602078., 11123678., 11474030., 10981166., 11329598.,
      9722732.,  10026764., 8363850.,  8621690.,  6902728.,  7112584.,
      5854160.,  6031696.,  7293732.,  7515396.,  8814648.,  9081976.,
      10418444., 10732972., 10171692., 10483404., 9908556.,  10217452.,
      8767800.,  9037176.,  7538020.,  7766340.,  6217680.,  6403408.,
      4804056.,  4953368.,  5889438.,  6075182.,  7041924.,  7265380.,
      8262794.,  8525242.,  7882874.,  8141610.,  7486570.,  7741594.,
      6643972.,  6866404.,  5727870.,  5916430.,  4736984.,  4890392.,
      2957280.,  3070176.,  3479064.,  3618648.,  4049616.,  4216912.,
      4669960.,  4865992.,  4144328.,  4335752.,  3602312.,  3789128.,
      3254480.,  3417680.,  2852760.,  2991320.,  2396128.,  2509024.,
      2154208.,  2273248.,  2827736.,  2972952.,  3549008.,  3721424.,
      4319048.,  4519688.,  4347400.,  4543432.,  4359368.,  4550792.,
      3811664.,  3971792.,  3314520.,  3450520.,  2763488.,  2874336.,
      3466648.,  3605208.,  4405710.,  4575966.,  5402404.,  5605636.,
      6458010.,  6695498.,  6427786.,  6661562.,  6381178.,  6611242.,
      5481124.,  5675140.,  4735150.,  4900030.,  3923864.,  4058328.,
      4851792.,  5018064.,  6084804.,  6290340.,  7389432.,  7635768.,
      8767212.,  9055884.,  8690956.,  8976812.,  8598316.,  8881356.,
      7330296.,  7570488.,  6315780.,  6519780.,  5220432.,  5386704.,
      6374152.,  6576328.,  7945658.,  8196714.,  9606860.,  9908588.,
      11359550., 11713742., 11249806., 11602078., 11123678., 11474030.,
      9455948.,  9754604.,  8137050.,  8390410.,  6717704.,  6923976.,
      6236104.,  6437768.,  7686442.,  7936858.,  9226220.,  9527180.,
      10857230., 11210526., 10632798., 10984174., 10391982., 10741438.,
      8729708.,  9027596.,  7531210.,  7783930.,  6232520.,  6438280.,
      5639304.,  5840456.,  6853786.,  7103562.,  8157452.,  8457644.,
      9552094.,  9904494.,  9212974.,  9563454.,  8857470.,  9206030.,
      7315340.,  7612460.,  6351930.,  6604010.,  5288584.,  5493832.,
      4486992.,  4659408.,  5292420.,  5505636.,  6172536.,  6428088.,
      7128876.,  7428300.,  6669132.,  6965740.,  6193004.,  6486796.,
      4884600.,  5134008.,  4285380.,  4497060.,  3602256.,  3774672.,
      3288600.,  3432280.,  4285550.,  4468350.,  5354980.,  5578180.,
      6498170.,  6763050.,  6778730.,  7048090.,  7059290.,  7333130.,
      6293860.,  6532420.,  5449550.,  5651550.,  4525080.,  4689240.,
      3808480.,  3939808.,  4920920.,  5087640.,  6099536.,  6302672.,
      7345352.,  7585928.,  7594888.,  7839048.,  7844424.,  8092168.,
      6942800.,  7158224.,  5969880.,  6151960.,  4924640.,  5072352.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     220.,     764.,     826.,     2026.,    1834.,
      3418.,    2842.,    4810.,    3850.,    6202.,    4858.,    7594.,
      5276.,    7356.,    3742.,    4910.,    860.,     2428.,    4600.,
      8248.,    11732.,   17972.,   16052.,   23060.,   20372.,   28148.,
      24692.,   33236.,   29012.,   38324.,   25976.,   32696.,   16476.,
      20092.,   7866.,    12138.,   23892.,   33204.,   48846.,   63966.,
      58782.,   75054.,   68718.,   86142.,   78654.,   97230.,   88590.,
      108318.,  72852.,   86772.,   43578.,   50922.,   25674.,   32634.,
      64884.,   79572.,   118398.,  141582.,  128334.,  152670.,  138270.,
      163758.,  148206.,  174846.,  158142.,  185934.,  124596.,  143892.,
      72138.,   82170.,   43482.,   53130.,   105876.,  125940.,  187950.,
      219198.,  197886.,  230286.,  207822.,  241374.,  217758.,  252462.,
      227694.,  263550.,  176340.,  201012.,  100698.,  113418.,  61290.,
      73626.,   146868.,  172308.,  257502.,  296814.,  267438.,  307902.,
      277374.,  318990.,  287310.,  330078.,  297246.,  341166.,  228084.,
      258132.,  129258.,  144666.,  79098.,   94122.,   187860.,  218676.,
      327054.,  374430.,  336990.,  385518.,  346926.,  396606.,  356862.,
      407694.,  366798.,  418782.,  279828.,  315252.,  157818.,  175914.,
      92956.,   104252.,  208248.,  231352.,  346388.,  381812.,  355316.,
      391508.,  364244.,  401204.,  373172.,  410900.,  382100.,  420596.,
      280824.,  307000.,  153628.,  166972.,  68382.,   74670.,   149212.,
      162044.,  242746.,  262378.,  248362.,  268378.,  253978.,  274378.,
      259594.,  280378.,  265210.,  286378.,  191132.,  205500.,  102814.,
      110126.,  750.,     2046.,    3964.,    6812.,    9898.,    14554.,
      17818.,   22858.,   25738.,   31162.,   33658.,   39466.,   41578.,
      47770.,   32060.,   36444.,   18286.,   20606.,   18428.,   22300.,
      44344.,   52600.,   78260.,   91412.,   96404.,   110324.,  114548.,
      129236.,  132692.,  148148.,  150836.,  167060.,  111800.,  123128.,
      61692.,   67612.,   58410.,   66138.,   131892.,  148116.,  221214.,
      246702.,  251886.,  278526.,  282558.,  310350.,  313230.,  342174.,
      343902.,  373998.,  249972.,  270804.,  135594.,  146394.,  124602.,
      135018.,  269652.,  291252.,  435918.,  469470.,  466590.,  501294.,
      497262.,  533118.,  527934.,  564942.,  558606.,  596766.,  398484.,
      424692.,  212538.,  226026.,  190794.,  203898.,  407412.,  434388.,
      650622.,  692238.,  681294.,  724062.,  711966.,  755886.,  742638.,
      787710.,  773310.,  819534.,  546996.,  578580.,  289482.,  305658.,
      256986.,  272778.,  545172.,  577524.,  865326.,  915006.,  895998.,
      946830.,  926670.,  978654.,  957342.,  1010478., 988014.,  1042302.,
      695508.,  732468.,  366426.,  385290.,  323178.,  341658.,  682932.,
      720660.,  1080030., 1137774., 1110702., 1169598., 1141374., 1201422.,
      1172046., 1233246., 1202718., 1265070., 844020.,  886356.,  443370.,
      464922.,  271804.,  285404.,  570552.,  598264.,  896756.,  939092.,
      919508.,  962612.,  942260.,  986132.,  965012.,  1009652., 987764.,
      1033172., 689208.,  719992.,  360124.,  375772.,  165870.,  173310.,
      346492.,  361628.,  542122.,  565210.,  554650.,  578122.,  567178.,
      591034.,  579706.,  603946.,  592234.,  616858.,  411452.,  428124.,
      214126.,  222590.,  1470.,    3918.,    7708.,    12860.,   18970.,
      27082.,   33802.,   42298.,   48634.,   57514.,   63466.,   72730.,
      78298.,   87946.,   58844.,   65532.,   32830.,   36302.,   35996.,
      42172.,   84088.,   96952.,   144788.,  164852.,  176756.,  197588.,
      208724.,  230324.,  240692.,  263060.,  272660.,  295796.,  197624.,
      213560.,  106908.,  115132.,  108954.,  120138.,  239892.,  263028.,
      393582.,  429438.,  444990.,  481998.,  496398.,  534558.,  547806.,
      587118.,  599214.,  639678.,  427092.,  454836.,  227610.,  241866.,
      223530.,  237402.,  474420.,  502932.,  753438.,  797358.,  804846.,
      849918.,  856254.,  902478.,  907662.,  955038.,  959070.,  1007598.,
      672372.,  705492.,  352938.,  369882.,  338106.,  354666.,  708948.,
      742836.,  1113294., 1165278., 1164702., 1217838., 1216110., 1270398.,
      1267518., 1322958., 1318926., 1375518., 917652.,  956148.,  478266.,
      497898.,  452682.,  471930.,  943476.,  982740.,  1473150., 1533198.,
      1524558., 1585758., 1575966., 1638318., 1627374., 1690878., 1678782.,
      1743438., 1162932., 1206804., 603594.,  625914.,  567258.,  589194.,
      1178004., 1222644., 1833006., 1901118., 1884414., 1953678., 1935822.,
      2006238., 1987230., 2058798., 2038638., 2111358., 1408212., 1457460.,
      728922.,  753930.,  450652.,  466556.,  932856.,  965176.,  1447124.,
      1496372., 1483700., 1533716., 1520276., 1571060., 1556852., 1608404.,
      1593428., 1645748., 1097592., 1132984., 566620.,  584572.,  263358.,
      271950.,  543772.,  561212.,  841498.,  868042.,  860938.,  887866.,
      880378.,  907690.,  899818.,  927514.,  919258.,  947338.,  631772.,
      650748.,  325438.,  335054.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      27344.,   29120.,   30928.,   32768.,   38420.,   40720.,   43060.,
      45440.,   51320.,   54176.,   57080.,   60032.,   66108.,   69552.,
      73052.,   76608.,   72268.,   75824.,   79436.,   83104.,   78428.,
      82096.,   85820.,   89600.,   73976.,   77216.,   80504.,   83840.,
      67380.,   70160.,   72980.,   75840.,   58576.,   60864.,   63184.,
      65536.,   58820.,   61680.,   64580.,   67520.,   80425.,   84100.,
      87825.,   91600.,   104950.,  109480.,  114070.,  118720.,  132475.,
      137900.,  143395.,  148960.,  142135.,  147700.,  153335.,  159040.,
      151795.,  157500.,  163275.,  169120.,  140470.,  145480.,  150550.,
      155680.,  125825.,  130100.,  134425.,  138800.,  107780.,  111280.,
      114820.,  118400.,  108216.,  112416.,  116664.,  120960.,  145470.,
      150840.,  156270.,  161760.,  186996.,  193584.,  200244.,  206976.,
      232890.,  240744.,  248682.,  256704.,  246834.,  254856.,  262962.,
      271152.,  260778.,  268968.,  277242.,  285600.,  238260.,  245424.,
      252660.,  259968.,  210990.,  217080.,  223230.,  229440.,  178872.,
      183840.,  188856.,  193920.,  179564.,  185360.,  191212.,  197120.,
      238595.,  245980.,  253435.,  260960.,  303506.,  312536.,  321650.,
      330848.,  374409.,  385140.,  395969.,  406896.,  393421.,  404348.,
      415373.,  426496.,  412433.,  423556.,  434777.,  446096.,  373394.,
      383096.,  392882.,  402752.,  327915.,  336140.,  344435.,  352800.,
      275884.,  282576.,  289324.,  296128.,  271292.,  278096.,  284956.,
      291872.,  355775.,  364420.,  373135.,  381920.,  447146.,  457688.,
      468314.,  479024.,  545517.,  558012.,  570605.,  583296.,  564529.,
      577220.,  590009.,  602896.,  583541.,  596428.,  609413.,  622496.,
      523082.,  534296.,  545594.,  556976.,  455175.,  464660.,  474215.,
      483840.,  379708.,  387408.,  395164.,  402976.,  363020.,  370832.,
      378700.,  386624.,  472955.,  482860.,  492835.,  502880.,  590786.,
      602840.,  614978.,  627200.,  716625.,  730884.,  745241.,  759696.,
      735637.,  750092.,  764645.,  779296.,  754649.,  769300.,  784049.,
      798896.,  672770.,  685496.,  698306.,  711200.,  582435.,  593180.,
      603995.,  614880.,  483532.,  492240.,  501004.,  509824.,  445560.,
      453024.,  460536.,  468096.,  575310.,  584760.,  594270.,  603840.,
      712596.,  724080.,  735636.,  747264.,  857514.,  871080.,  884730.,
      898464.,  876162.,  889896.,  903714.,  917616.,  894810.,  908712.,
      922698.,  936768.,  791508.,  803568.,  815700.,  827904.,  680190.,
      690360.,  700590.,  710880.,  560760.,  568992.,  577272.,  585600.,
      490020.,  496880.,  503780.,  510720.,  629425.,  638100.,  646825.,
      655600.,  775750.,  786280.,  796870.,  807520.,  929075.,  941500.,
      953995.,  966560.,  946575.,  959140.,  971775.,  984480.,  964075.,
      976780.,  989555.,  1002400., 848710.,  859720.,  870790.,  881920.,
      726025.,  735300.,  744625.,  754000.,  595940.,  603440.,  610980.,
      618560.,  492368.,  498368.,  504400.,  510464.,  630260.,  637840.,
      645460.,  653120.,  774200.,  783392.,  792632.,  801920.,  924252.,
      935088.,  945980.,  956928.,  939820.,  950768.,  961772.,  972832.,
      955388.,  966448.,  977564.,  988736.,  838328.,  847904.,  857528.,
      867200.,  714900.,  722960.,  731060.,  739200.,  585040.,  591552.,
      598096.,  604672.,  281360.,  288320.,  295312.,  302336.,  368900.,
      377680.,  386500.,  395360.,  463448.,  474080.,  484760.,  495488.,
      565068.,  577584.,  590156.,  602784.,  571228.,  583856.,  596540.,
      609280.,  577388.,  590128.,  602924.,  615776.,  517208.,  528224.,
      539288.,  550400.,  449700.,  458960.,  468260.,  477600.,  374800.,
      382272.,  389776.,  397312.,  467060.,  476400.,  485780.,  495200.,
      606925.,  618700.,  630525.,  642400.,  756190.,  770440.,  784750.,
      799120.,  914935.,  931700.,  948535.,  965440.,  924595.,  941500.,
      958475.,  975520.,  934255.,  951300.,  968415.,  985600.,  830590.,
      845320.,  860110.,  874960.,  717125.,  729500.,  741925.,  754400.,
      593780.,  603760.,  613780.,  623840.,  706968.,  718944.,  730968.,
      743040.,  913350.,  928440.,  943590.,  958800.,  1131780., 1150032.,
      1168356., 1186752., 1362354., 1383816., 1405362., 1426992., 1376298.,
      1397928., 1419642., 1441440., 1390242., 1412040., 1433922., 1455888.,
      1229700., 1248528., 1267428., 1286400., 1056630., 1072440., 1088310.,
      1104240., 870936.,  883680.,  896472.,  909312.,  1005116., 1019984.,
      1034908., 1049888., 1293215., 1311940., 1330735., 1349600., 1596266.,
      1618904., 1641626., 1664432., 1914381., 1940988., 1967693., 1994496.,
      1933393., 1960196., 1987097., 2014096., 1952405., 1979404., 2006501.,
      2033696., 1720586., 1743896., 1767290., 1790768., 1473255., 1492820.,
      1512455., 1532160., 1210300., 1226064., 1241884., 1257760., 1096844.,
      1112720., 1128652., 1144640., 1410395., 1430380., 1450435., 1470560.,
      1739906., 1764056., 1788290., 1812608., 2085489., 2113860., 2142329.,
      2170896., 2104501., 2133068., 2161733., 2190496., 2123513., 2152276.,
      2181137., 2210096., 1870274., 1895096., 1920002., 1944992., 1600515.,
      1621340., 1642235., 1663200., 1314124., 1330896., 1347724., 1364608.,
      1188572., 1205456., 1222396., 1239392., 1527575., 1548820., 1570135.,
      1591520., 1883546., 1909208., 1934954., 1960784., 2256597., 2286732.,
      2316965., 2347296., 2275609., 2305940., 2336369., 2366896., 2294621.,
      2325148., 2355773., 2386496., 2019962., 2046296., 2072714., 2099216.,
      1727775., 1749860., 1772015., 1794240., 1417948., 1435728., 1453564.,
      1471456., 1262040., 1277280., 1292568., 1307904., 1615350., 1634520.,
      1653750., 1673040., 1983972., 2007120., 2030340., 2053632., 2368002.,
      2395176., 2422434., 2449776., 2386650., 2413992., 2441418., 2468928.,
      2405298., 2432808., 2460402., 2488080., 2109540., 2133264., 2157060.,
      2180928., 1797990., 1817880., 1837830., 1857840., 1470552., 1486560.,
      1502616., 1518720., 1261140., 1274480., 1287860., 1301280., 1609525.,
      1626300., 1643125., 1660000., 1971310., 1991560., 2011870., 2032240.,
      2346575., 2370340., 2394175., 2418080., 2364075., 2387980., 2411955.,
      2436000., 2381575., 2405620., 2429735., 2453920., 2083150., 2103880.,
      2124670., 2145520., 1770925., 1788300., 1805725., 1823200., 1444820.,
      1458800., 1472820., 1486880., 1181840., 1193024., 1204240., 1215488.,
      1505060., 1519120., 1533220., 1547360., 1839512., 1856480., 1873496.,
      1890560., 2185260., 2205168., 2225132., 2245152., 2200828., 2220848.,
      2240924., 2261056., 2216396., 2236528., 2256716., 2276960., 1934744.,
      1952096., 1969496., 1986944., 1641540., 1656080., 1670660., 1685280.,
      1336720., 1348416., 1360144., 1371904., 535376.,  547520.,  559696.,
      571904.,  699380.,  714640.,  729940.,  745280.,  875576.,  893984.,
      912440.,  930944.,  1064028., 1085616., 1107260., 1128960., 1070188.,
      1091888., 1113644., 1135456., 1076348., 1098160., 1120028., 1141952.,
      960440.,  979232.,  998072.,  1016960., 832020.,  847760.,  863540.,
      879360.,  691024.,  703680.,  716368.,  729088.,  875300.,  891120.,
      906980.,  922880.,  1133425., 1153300., 1173225., 1193200., 1407430.,
      1431400., 1455430., 1479520., 1697395., 1725500., 1753675., 1781920.,
      1707055., 1735300., 1763615., 1792000., 1716715., 1745100., 1773555.,
      1802080., 1520710., 1545160., 1569670., 1594240., 1308425., 1328900.,
      1349425., 1370000., 1079780., 1096240., 1112740., 1129280., 1305720.,
      1325472., 1345272., 1365120., 1681230., 1706040., 1730910., 1755840.,
      2076564., 2106480., 2136468., 2166528., 2491818., 2526888., 2562042.,
      2597280., 2505762., 2541000., 2576322., 2611728., 2519706., 2555112.,
      2590602., 2626176., 2221140., 2251632., 2282196., 2312832., 1902270.,
      1927800., 1953390., 1979040., 1563000., 1583520., 1604088., 1624704.,
      1830668., 1854608., 1878604., 1902656., 2347835., 2377900., 2408035.,
      2438240., 2889026., 2925272., 2961602., 2998016., 3454353., 3496836.,
      3539417., 3582096., 3473365., 3516044., 3558821., 3601696., 3492377.,
      3535252., 3578225., 3621296., 3067778., 3104696., 3141698., 3178784.,
      2618595., 2649500., 2680475., 2711520., 2144716., 2169552., 2194444.,
      2219392., 1922396., 1947344., 1972348., 1997408., 2465015., 2496340.,
      2527735., 2559200., 3032666., 3070424., 3108266., 3146192., 3625461.,
      3669708., 3714053., 3758496., 3644473., 3688916., 3733457., 3778096.,
      3663485., 3708124., 3752861., 3797696., 3217466., 3255896., 3294410.,
      3333008., 2745855., 2778020., 2810255., 2842560., 2248540., 2274384.,
      2300284., 2326240., 2014124., 2040080., 2066092., 2092160., 2582195.,
      2614780., 2647435., 2680160., 3176306., 3215576., 3254930., 3294368.,
      3796569., 3842580., 3888689., 3934896., 3815581., 3861788., 3908093.,
      3954496., 3834593., 3880996., 3927497., 3974096., 3367154., 3407096.,
      3447122., 3487232., 2873115., 2906540., 2940035., 2973600., 2352364.,
      2379216., 2406124., 2433088., 2078520., 2101536., 2124600., 2147712.,
      2655390., 2684280., 2713230., 2742240., 3255348., 3290160., 3325044.,
      3360000., 3878490., 3919272., 3960138., 4001088., 3897138., 3938088.,
      3979122., 4020240., 3915786., 3956904., 3998106., 4039392., 3427572.,
      3462960., 3498420., 3533952., 2915790., 2945400., 2975070., 3004800.,
      2380344., 2404128., 2427960., 2451840., 2032260., 2052080., 2071940.,
      2091840., 2589625., 2614500., 2639425., 2664400., 3166870., 3196840.,
      3226870., 3256960., 3764075., 3799180., 3834355., 3869600., 3781575.,
      3816820., 3852135., 3887520., 3799075., 3834460., 3869915., 3905440.,
      3317590., 3348040., 3378550., 3409120., 2815825., 2841300., 2866825.,
      2892400., 2293700., 2314160., 2334660., 2355200., 1871312., 1887680.,
      1904080., 1920512., 2379860., 2400400., 2420980., 2441600., 2904824.,
      2929568., 2954360., 2979200., 3446268., 3475248., 3504284., 3533376.,
      3461836., 3490928., 3520076., 3549280., 3477404., 3506608., 3535868.,
      3565184., 3031160., 3056288., 3081464., 3106688., 2568180., 2589200.,
      2610260., 2631360., 2088400., 2105280., 2122192., 2139136.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,      4.,      9.,      16.,     10.,     24.,     42.,     64.,
      43.,     76.,     115.,    160.,    103.,    148.,    199.,    256.,
      163.,    220.,    283.,    352.,    223.,    292.,    367.,    448.,
      283.,    364.,    451.,    544.,    314.,    376.,    442.,    512.,
      225.,    260.,    297.,    336.,    42.,     88.,     138.,    192.,
      260.,    368.,    484.,    608.,    686.,    872.,    1070.,   1280.,
      950.,    1160.,   1382.,   1616.,   1214.,   1448.,   1694.,   1952.,
      1478.,   1736.,   2006.,   2288.,   1742.,   2024.,   2318.,   2624.,
      1572.,   1776.,   1988.,   2208.,   1002.,   1112.,   1226.,   1344.,
      459.,    588.,    723.,    864.,    1422.,   1704.,   1998.,   2304.,
      2937.,   3396.,   3873.,   4368.,   3549.,   4044.,   4557.,   5088.,
      4161.,   4692.,   5241.,   5808.,   4773.,   5340.,   5925.,   6528.,
      5385.,   5988.,   6609.,   7248.,   4446.,   4872.,   5310.,   5760.,
      2667.,   2892.,   3123.,   3360.,   1551.,   1764.,   1983.,   2208.,
      3942.,   4392.,   4854.,   5328.,   7221.,   7932.,   8661.,   9408.,
      7833.,   8580.,   9345.,   10128.,  8445.,   9228.,   10029.,  10848.,
      9057.,   9876.,   10713.,  11568.,  9669.,   10524.,  11397.,  12288.,
      7638.,   8232.,   8838.,   9456.,   4431.,   4740.,   5055.,   5376.,
      2643.,   2940.,   3243.,   3552.,   6462.,   7080.,   7710.,   8352.,
      11505.,  12468.,  13449.,  14448.,  12117.,  13116.,  14133.,  15168.,
      12729.,  13764.,  14817.,  15888.,  13341.,  14412.,  15501.,  16608.,
      13953.,  15060.,  16185.,  17328.,  10830.,  11592.,  12366.,  13152.,
      6195.,   6588.,   6987.,   7392.,   3735.,   4116.,   4503.,   4896.,
      8982.,   9768.,   10566.,  11376.,  15789.,  17004.,  18237.,  19488.,
      16401.,  17652.,  18921.,  20208.,  17013.,  18300.,  19605.,  20928.,
      17625.,  18948.,  20289.,  21648.,  18237.,  19596.,  20973.,  22368.,
      14022.,  14952.,  15894.,  16848.,  7959.,   8436.,   8919.,   9408.,
      4827.,   5292.,   5763.,   6240.,   11502.,  12456.,  13422.,  14400.,
      20073.,  21540.,  23025.,  24528.,  20685.,  22188.,  23709.,  25248.,
      21297.,  22836.,  24393.,  25968.,  21909.,  23484.,  25077.,  26688.,
      22521.,  24132.,  25761.,  27408.,  17214.,  18312.,  19422.,  20544.,
      9723.,   10284.,  10851.,  11424.,  5722.,   6072.,   6426.,   6784.,
      12836.,  13552.,  14276.,  15008.,  21374.,  22472.,  23582.,  24704.,
      21926.,  23048.,  24182.,  25328.,  22478.,  23624.,  24782.,  25952.,
      23030.,  24200.,  25382.,  26576.,  23582.,  24776.,  25982.,  27200.,
      17348.,  18160.,  18980.,  19808.,  9498.,   9912.,   10330.,  10752.,
      4225.,   4420.,   4617.,   4816.,   9226.,   9624.,   10026.,  10432.,
      15019.,  15628.,  16243.,  16864.,  15367.,  15988.,  16615.,  17248.,
      15715.,  16348.,  16987.,  17632.,  16063.,  16708.,  17359.,  18016.,
      16411.,  17068.,  17731.,  18400.,  11834.,  12280.,  12730.,  13184.,
      6369.,   6596.,   6825.,   7056.,   37.,     76.,     117.,    160.,
      226.,    312.,    402.,    496.,    583.,    724.,    871.,    1024.,
      1075.,   1228.,   1387.,   1552.,   1567.,   1732.,   1903.,   2080.,
      2059.,   2236.,   2419.,   2608.,   2551.,   2740.,   2935.,   3136.,
      1970.,   2104.,   2242.,   2384.,   1125.,   1196.,   1269.,   1344.,
      1122.,   1240.,   1362.,   1488.,   2708.,   2960.,   3220.,   3488.,
      4790.,   5192.,   5606.,   6032.,   5918.,   6344.,   6782.,   7232.,
      7046.,   7496.,   7958.,   8432.,   8174.,   8648.,   9134.,   9632.,
      9302.,   9800.,   10310.,  10832.,  6900.,   7248.,   7604.,   7968.,
      3810.,   3992.,   4178.,   4368.,   3591.,   3828.,   4071.,   4320.,
      8118.,   8616.,   9126.,   9648.,   13629.,  14412.,  15213.,  16032.,
      15537.,  16356.,  17193.,  18048.,  17445.,  18300.,  19173.,  20064.,
      19353.,  20244.,  21153.,  22080.,  21261.,  22188.,  23133.,  24096.,
      15462.,  16104.,  16758.,  17424.,  8391.,   8724.,   9063.,   9408.,
      7707.,   8028.,   8355.,   8688.,   16686.,  17352.,  18030.,  18720.,
      26985.,  28020.,  29073.,  30144.,  28893.,  29964.,  31053.,  32160.,
      30801.,  31908.,  33033.,  34176.,  32709.,  33852.,  35013.,  36192.,
      34617.,  35796.,  36993.,  38208.,  24702.,  25512.,  26334.,  27168.,
      13179.,  13596.,  14019.,  14448.,  11823.,  12228.,  12639.,  13056.,
      25254.,  26088.,  26934.,  27792.,  40341.,  41628.,  42933.,  44256.,
      42249.,  43572.,  44913.,  46272.,  44157.,  45516.,  46893.,  48288.,
      46065.,  47460.,  48873.,  50304.,  47973.,  49404.,  50853.,  52320.,
      33942.,  34920.,  35910.,  36912.,  17967.,  18468.,  18975.,  19488.,
      15939.,  16428.,  16923.,  17424.,  33822.,  34824.,  35838.,  36864.,
      53697.,  55236.,  56793.,  58368.,  55605.,  57180.,  58773.,  60384.,
      57513.,  59124.,  60753.,  62400.,  59421.,  61068.,  62733.,  64416.,
      61329.,  63012.,  64713.,  66432.,  43182.,  44328.,  45486.,  46656.,
      22755.,  23340.,  23931.,  24528.,  20055.,  20628.,  21207.,  21792.,
      42390.,  43560.,  44742.,  45936.,  67053.,  68844.,  70653.,  72480.,
      68961.,  70788.,  72633.,  74496.,  70869.,  72732.,  74613.,  76512.,
      72777.,  74676.,  76593.,  78528.,  74685.,  76620.,  78573.,  80544.,
      52422.,  53736.,  55062.,  56400.,  27543.,  28212.,  28887.,  29568.,
      16882.,  17304.,  17730.,  18160.,  35444.,  36304.,  37172.,  38048.,
      55718.,  57032.,  58358.,  59696.,  57134.,  58472.,  59822.,  61184.,
      58550.,  59912.,  61286.,  62672.,  59966.,  61352.,  62750.,  64160.,
      61382.,  62792.,  64214.,  65648.,  42836.,  43792.,  44756.,  45728.,
      22386.,  22872.,  23362.,  23856.,  10309.,  10540.,  10773.,  11008.,
      21538.,  22008.,  22482.,  22960.,  33703.,  34420.,  35143.,  35872.,
      34483.,  35212.,  35947.,  36688.,  35263.,  36004.,  36751.,  37504.,
      36043.,  36796.,  37555.,  38320.,  36823.,  37588.,  38359.,  39136.,
      25586.,  26104.,  26626.,  27152.,  13317.,  13580.,  13845.,  14112.,
      73.,     148.,    225.,    304.,    442.,    600.,    762.,    928.,
      1123.,   1372.,   1627.,   1888.,   2047.,   2308.,   2575.,   2848.,
      2971.,   3244.,   3523.,   3808.,   3895.,   4180.,   4471.,   4768.,
      4819.,   5116.,   5419.,   5728.,   3626.,   3832.,   4042.,   4256.,
      2025.,   2132.,   2241.,   2352.,   2202.,   2392.,   2586.,   2784.,
      5156.,   5552.,   5956.,   6368.,   8894.,   9512.,   10142.,  10784.,
      10886.,  11528.,  12182.,  12848.,  12878.,  13544.,  14222.,  14912.,
      14870.,  15560.,  16262.,  16976.,  16862.,  17576.,  18302.,  19040.,
      12228.,  12720.,  13220.,  13728.,  6618.,   6872.,   7130.,   7392.,
      6723.,   7068.,   7419.,   7776.,   14814.,  15528.,  16254.,  16992.,
      24321.,  25428.,  26553.,  27696.,  27525.,  28668.,  29829.,  31008.,
      30729.,  31908.,  33105.,  34320.,  33933.,  35148.,  36381.,  37632.,
      37137.,  38388.,  39657.,  40944.,  26478.,  27336.,  28206.,  29088.,
      14115.,  14556.,  15003.,  15456.,  13863.,  14292.,  14727.,  15168.,
      29430.,  30312.,  31206.,  32112.,  46749.,  48108.,  49485.,  50880.,
      49953.,  51348.,  52761.,  54192.,  53157.,  54588.,  56037.,  57504.,
      56361.,  57828.,  59313.,  60816.,  59565.,  61068.,  62589.,  64128.,
      41766.,  42792.,  43830.,  44880.,  21927.,  22452.,  22983.,  23520.,
      21003.,  21516.,  22035.,  22560.,  44046.,  45096.,  46158.,  47232.,
      69177.,  70788.,  72417.,  74064.,  72381.,  74028.,  75693.,  77376.,
      75585.,  77268.,  78969.,  80688.,  78789.,  80508.,  82245.,  84000.,
      81993.,  83748.,  85521.,  87312.,  57054.,  58248.,  59454.,  60672.,
      29739.,  30348.,  30963.,  31584.,  28143.,  28740.,  29343.,  29952.,
      58662.,  59880.,  61110.,  62352.,  91605.,  93468.,  95349.,  97248.,
      94809.,  96708.,  98625.,  100560., 98013.,  99948.,  101901., 103872.,
      101217., 103188., 105177., 107184., 104421., 106428., 108453., 110496.,
      72342.,  73704.,  75078.,  76464.,  37551.,  38244.,  38943.,  39648.,
      35283.,  35964.,  36651.,  37344.,  73278.,  74664.,  76062.,  77472.,
      114033., 116148., 118281., 120432., 117237., 119388., 121557., 123744.,
      120441., 122628., 124833., 127056., 123645., 125868., 128109., 130368.,
      126849., 129108., 131385., 133680., 87630.,  89160.,  90702.,  92256.,
      45363.,  46140.,  46923.,  47712.,  28042.,  28536.,  29034.,  29536.,
      58052.,  59056.,  60068.,  61088.,  90062.,  91592.,  93134.,  94688.,
      92342.,  93896.,  95462.,  97040.,  94622.,  96200.,  97790.,  99392.,
      96902.,  98504.,  100118., 101744., 99182.,  100808., 102446., 104096.,
      68324.,  69424.,  70532.,  71648.,  35274.,  35832.,  36394.,  36960.,
      16393.,  16660.,  16929.,  17200.,  33850.,  34392.,  34938.,  35488.,
      52387.,  53212.,  54043.,  54880.,  53599.,  54436.,  55279.,  56128.,
      54811.,  55660.,  56515.,  57376.,  56023.,  56884.,  57751.,  58624.,
      57235.,  58108.,  58987.,  59872.,  39338.,  39928.,  40522.,  41120.,
      20265.,  20564.,  20865.,  21168.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      215248.,   229392.,   243792.,   258448.,   302820.,   321140.,
      339780.,   358740.,   404920.,   427672.,   450808.,   474328.,
      522060.,   549500.,   577388.,   605724.,   571116.,   599452.,
      628236.,   657468.,   620172.,   649404.,   679084.,   709212.,
      585400.,   611224.,   637432.,   664024.,   533540.,   555700.,
      578180.,   600980.,   464080.,   482320.,   500816.,   519568.,
      464900.,   487700.,   510820.,   534260.,   636125.,   665425.,
      695125.,   725225.,   830630.,   866750.,   903350.,   940430.,
      1049055.,  1092315.,  1136135.,  1180515.,  1126055.,  1170435.,
      1215375.,  1260875.,  1203055.,  1248555.,  1294615.,  1341235.,
      1113830.,  1153790.,  1194230.,  1235150.,  998125.,   1032225.,
      1066725.,  1101625.,  855300.,   883220.,   911460.,   940020.,
      857400.,   890904.,   924792.,   959064.,   1153110.,  1195950.,
      1239270.,  1283070.,  1482900.,  1535460.,  1588596.,  1642308.,
      1847538.,  1910202.,  1973538.,  2037546.,  1958754.,  2022762.,
      2087442.,  2152794.,  2069970.,  2135322.,  2201346.,  2268042.,
      1891860.,  1949028.,  2006772.,  2065092.,  1675830.,  1724430.,
      1773510.,  1823070.,  1421112.,  1460760.,  1500792.,  1541208.,
      1425004.,  1471260.,  1517964.,  1565116.,  1894095.,  1953035.,
      2012535.,  2072595.,  2410114.,  2482186.,  2554930.,  2628346.,
      2973957.,  3059609.,  3146045.,  3233265.,  3125661.,  3212881.,
      3300885.,  3389673.,  3277365.,  3366153.,  3455725.,  3546081.,
      2967874.,  3045322.,  3123442.,  3202234.,  2606975.,  2672635.,
      2738855.,  2805635.,  2193772.,  2247196.,  2301068.,  2355388.,
      2156812.,  2211132.,  2265900.,  2321116.,  2829015.,  2898035.,
      2967615.,  3037755.,  3556210.,  3640378.,  3725218.,  3810730.,
      4339293.,  4439057.,  4539605.,  4640937.,  4490997.,  4592329.,
      4694445.,  4797345.,  4642701.,  4745601.,  4849285.,  4953753.,
      4162354.,  4251898.,  4342114.,  4433002.,  3622535.,  3698275.,
      3774575.,  3851435.,  3022348.,  3083836.,  3145772.,  3208156.,
      2888620.,  2951004.,  3013836.,  3077116.,  3763935.,  3843035.,
      3922695.,  4002915.,  4702306.,  4798570.,  4895506.,  4993114.,
      5704629.,  5818505.,  5933165.,  6048609.,  5856333.,  5971777.,
      6088005.,  6205017.,  6008037.,  6125049.,  6242845.,  6361425.,
      5356834.,  5458474.,  5560786.,  5663770.,  4638095.,  4723915.,
      4810295.,  4897235.,  3850924.,  3920476.,  3990476.,  4060924.,
      3549624.,  3609240.,  3669240.,  3729624.,  4583670.,  4659150.,
      4735110.,  4811550.,  5677908.,  5769636.,  5861940.,  5954820.,
      6833106.,  6941466.,  7050498.,  7160202.,  6981954.,  7091658.,
      7202034.,  7313082.,  7130802.,  7241850.,  7353570.,  7465962.,
      6308052.,  6404388.,  6501300.,  6598788.,  5421270.,  5502510.,
      5584230.,  5666430.,  4469688.,  4535448.,  4601592.,  4668120.,
      3906500.,  3961300.,  4016420.,  4071860.,  5018125.,  5087425.,
      5157125.,  5227225.,  6185030.,  6269150.,  6353750.,  6438830.,
      7407855.,  7507115.,  7606935.,  7707315.,  7547575.,  7647955.,
      7748895.,  7850395.,  7687295.,  7788795.,  7890855.,  7993475.,
      6767750.,  6855710.,  6944150.,  7033070.,  5789725.,  5863825.,
      5938325.,  6013225.,  4752580.,  4812500.,  4872740.,  4933300.,
      3926992.,  3974928.,  4023120.,  4071568.,  5026980.,  5087540.,
      5148420.,  5209620.,  6175288.,  6248728.,  6322552.,  6396760.,
      7372428.,  7459004.,  7546028.,  7633500.,  7496748.,  7584220.,
      7672140.,  7760508.,  7621068.,  7709436.,  7798252.,  7887516.,
      6687544.,  6764056.,  6840952.,  6918232.,  5703140.,  5767540.,
      5832260.,  5897300.,  4667344.,  4719376.,  4771664.,  4824208.,
      2237008.,  2292624.,  2348496.,  2404624.,  2933700.,  3003860.,
      3074340.,  3145140.,  3686392.,  3771352.,  3856696.,  3942424.,
      4495596.,  4595612.,  4696076.,  4796988.,  4544652.,  4645564.,
      4746924.,  4848732.,  4593708.,  4695516.,  4797772.,  4900476.,
      4115704.,  4203736.,  4292152.,  4380952.,  3579140.,  3653140.,
      3727460.,  3802100.,  2983504.,  3043216.,  3103184.,  3163408.,
      3717860.,  3792500.,  3867460.,  3942740.,  4831925.,  4926025.,
      5020525.,  5115425.,  6021110.,  6134990.,  6249350.,  6364190.,
      7286055.,  7420035.,  7554575.,  7689675.,  7363055.,  7498155.,
      7633815.,  7770035.,  7440055.,  7576275.,  7713055.,  7850395.,
      6615350.,  6733070.,  6851270.,  6969950.,  5712325.,  5811225.,
      5910525.,  6010225.,  4730340.,  4810100.,  4890180.,  4970580.,
      5609336.,  5696856.,  5784760.,  5873048.,  7218342.,  7326654.,
      7435446.,  7544718.,  8907252.,  9036740.,  9166804.,  9297444.,
      10676834., 10827882., 10979602., 11131994., 10703058., 10851354.,
      11000322., 11149962., 10712898., 10858442., 11004658., 11151546.,
      9437556.,  9563460.,  9689940.,  9816996.,  8078470.,  8184350.,
      8290710.,  8397550.,  6634872.,  6720344.,  6806200.,  6892440.,
      7648780.,  7743036.,  7837740.,  7932892.,  9726743.,  9843635.,
      9961087.,  10079099., 11891442., 12031418., 12172066., 12313386.,
      14143773., 14307281., 14471573., 14636649., 14095797., 14256777.,
      14418541., 14581089., 14031437., 14189889., 14349125., 14509145.,
      12305074., 12442234., 12580066., 12718570., 10487495., 10602915.,
      10718895., 10835435., 8577804.,  8671036.,  8764716.,  8858844.,
      7581868.,  7667804.,  7754188.,  7841020.,  9564959.,  9671451.,
      9778503.,  9886115.,  11626466., 11753962., 11882130., 12010970.,
      13767285., 13916233., 14065965., 14216481., 13604621., 13751041.,
      13898245., 14046233., 13425573., 13569465., 13714141., 13859601.,
      11760802., 11885482., 12010834., 12136858., 10013135., 10118155.,
      10223735., 10329875., 8181676.,  8266588.,  8351948.,  8437756.,
      7056204.,  7133820.,  7211884.,  7290396.,  8829735.,  8925827.,
      9022479.,  9119691.,  10673362., 10788378., 10904066., 11020426.,
      12587981., 12722369., 12857541., 12993497., 12310629., 12442489.,
      12575133., 12708561., 12016893., 12146225., 12276341., 12407241.,
      10528402., 10640602., 10753474., 10867018., 8965335.,  9059955.,
      9155135.,  9250875.,  7326796.,  7403388.,  7480428.,  7557916.,
      6041592.,  6106072.,  6170936.,  6236184.,  7471686.,  7551198.,
      7631190.,  7711662.,  8958644.,  9053572.,  9149076.,  9245156.,
      10503234., 10613962., 10725362., 10837434., 10108338., 10216314.,
      10324962., 10434282., 9697058.,  9802282.,  9908178.,  10014746.,
      8497716.,  8589060.,  8680980.,  8773476.,  7237670.,  7314750.,
      7392310.,  7470350.,  5916152.,  5978584.,  6041400.,  6104600.,
      4432548.,  4481844.,  4531460.,  4581396.,  5365477.,  5425849.,
      5486621.,  5547793.,  6339990.,  6411758.,  6484006.,  6556734.,
      7356727.,  7440211.,  7524255.,  7608859.,  6838015.,  6918523.,
      6999591.,  7081219.,  6302919.,  6380451.,  6458543.,  6537195.,
      5540054.,  5607470.,  5675366.,  5743742.,  4732405.,  4789385.,
      4846765.,  4904545.,  3879332.,  3925556.,  3972100.,  4018964.,
      2196816.,  2228880.,  2261200.,  2293776.,  2470788.,  2509460.,
      2548452.,  2587764.,  2769016.,  2814552.,  2860472.,  2906776.,
      3092012.,  3144668.,  3197772.,  3251324.,  2443212.,  2492668.,
      2542572.,  2592924.,  1778028.,  1824284.,  1870988.,  1918140.,
      1607032.,  1647448.,  1688248.,  1729432.,  1409220.,  1443540.,
      1478180.,  1513140.,  1184080.,  1212048.,  1240272.,  1268752.,
      1063888.,  1095440.,  1127248.,  1159312.,  1407140.,  1447220.,
      1487620.,  1528340.,  1782328.,  1831192.,  1880440.,  1930072.,
      2189964.,  2247868.,  2306220.,  2365020.,  2239020.,  2297820.,
      2357068.,  2416764.,  2288076.,  2347772.,  2407916.,  2468508.,
      2067256.,  2119192.,  2171512.,  2224216.,  1811940.,  1855860.,
      1900100.,  1944660.,  1521616.,  1557264.,  1593168.,  1629328.,
      1830340.,  1874900.,  1919780.,  1964980.,  2397325.,  2453825.,
      2510725.,  2568025.,  3009350.,  3078110.,  3147350.,  3217070.,
      3667055.,  3748395.,  3830295.,  3912755.,  3744055.,  3826515.,
      3909535.,  3993115.,  3821055.,  3904635.,  3988775.,  4073475.,
      3423110.,  3495710.,  3568790.,  3642350.,  2976925.,  3038225.,
      3099925.,  3162025.,  2481860.,  2531540.,  2581540.,  2631860.,
      2861496.,  2921112.,  2981112.,  3041496.,  3723510.,  3798990.,
      3874950.,  3951390.,  4645716.,  4737444.,  4829748.,  4922628.,
      5628882.,  5737242.,  5846274.,  5955978.,  5740098.,  5849802.,
      5960178.,  6071226.,  5851314.,  5962362.,  6074082.,  6186474.,
      5211348.,  5307684.,  5404596.,  5502084.,  4507350.,  4588590.,
      4670310.,  4752510.,  3738552.,  3804312.,  3870456.,  3936984.,
      4189612.,  4266332.,  4343500.,  4421116.,  5426015.,  5523035.,
      5620615.,  5718755.,  6739810.,  6857578.,  6976018.,  7095130.,
      8131893.,  8270857.,  8410605.,  8551137.,  8283597.,  8424129.,
      8565445.,  8707545.,  8435301.,  8577401.,  8720285.,  8863953.,
      7480354.,  7603498.,  7727314.,  7851802.,  6443535.,  6547275.,
      6651575.,  6756435.,  5323948.,  5407836.,  5492172.,  5576956.,
      4921420.,  5006204.,  5091436.,  5177116.,  6360935.,  6468035.,
      6575695.,  6683915.,  7885906.,  8015770.,  8146306.,  8277514.,
      9497229.,  9650305.,  9804165.,  9958809.,  9648933.,  9803577.,
      9959005.,  10115217., 9800637.,  9956849.,  10113845., 10271625.,
      8674834.,  8810074.,  8945986.,  9082570.,  7459095.,  7572915.,
      7687295.,  7802235.,  6152524.,  6244476.,  6336876.,  6429724.,
      5653228.,  5746076.,  5839372.,  5933116.,  7295855.,  7413035.,
      7530775.,  7649075.,  9032002.,  9173962.,  9316594.,  9459898.,
      10862565., 11029753., 11197725., 11366481., 11014269., 11183025.,
      11352565., 11522889., 11165973., 11336297., 11507405., 11679297.,
      9869314.,  10016650., 10164658., 10313338., 8474655.,  8598555.,
      8723015.,  8848035.,  6981100.,  7081116.,  7181580.,  7282492.,
      6284856.,  6370584.,  6456696.,  6543192.,  8067990.,  8176110.,
      8284710.,  8393790.,  9937428.,  10068324., 10199796., 10331844.,
      11893938., 12047994., 12202722., 12358122., 12042786., 12198186.,
      12354258., 12511002., 12191634., 12348378., 12505794., 12663882.,
      10724244., 10859748., 10995828., 11132484., 9166710.,  9280590.,
      9394950.,  9509790.,  7518264.,  7610136.,  7702392.,  7795032.,
      6490500.,  6567060.,  6643940.,  6721140.,  8302525.,  8399025.,
      8495925.,  8593225.,  10191590., 10308350., 10425590., 10543310.,
      12158335., 12295675., 12433575., 12572035., 12298055., 12436515.,
      12575535., 12715115., 12437775., 12577355., 12717495., 12858195.,
      10904870., 11025470., 11146550., 11268110., 9291725.,  9393025.,
      9494725.,  9596825.,  7597700.,  7679380.,  7761380.,  7843700.,
      6237904.,  6303248.,  6368848.,  6434704.,  7959140.,  8041460.,
      8124100.,  8207060.,  9746104.,  9845656.,  9945592.,  10045912.,
      11599308., 11716348., 11833836., 11951772., 11723628., 11841564.,
      11959948., 12078780., 11847948., 11966780., 12086060., 12205788.,
      10362808., 10465432., 10568440., 10671832., 8809380.,  8895540.,
      8982020.,  9068820.,  7187152.,  7256592.,  7326288.,  7396240.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,       25.,      61.,      113.,     58.,      162.,     298.,
      466.,     287.,     539.,     839.,     1187.,    743.,     1091.,
      1487.,    1931.,    1199.,    1643.,    2135.,    2675.,    1655.,
      2195.,    2783.,    3419.,    2111.,    2747.,    3431.,    4163.,
      2394.,    2882.,    3402.,    3954.,    1733.,    2009.,    2301.,
      2609.,    250.,     610.,     1002.,    1426.,    1876.,    2724.,
      3636.,    4612.,    5134.,    6598.,    8158.,    9814.,    7198.,
      8854.,    10606.,   12454.,   9262.,    11110.,   13054.,   15094.,
      11326.,   13366.,   15502.,   17734.,   13390.,   15622.,   17950.,
      20374.,   12180.,   13796.,   15476.,   17220.,   7802.,    8674.,
      9578.,    10514.,   3423.,    4443.,    5511.,    6627.,    10830.,
      13062.,   15390.,   17814.,   22605.,   26241.,   30021.,   33945.,
      27429.,   31353.,   35421.,   39633.,   32253.,   36465.,   40821.,
      45321.,   37077.,   41577.,   46221.,   51009.,   41901.,   46689.,
      51621.,   56697.,   34734.,   38118.,   41598.,   45174.,   20895.,
      22683.,   24519.,   26403.,   11991.,   13683.,   15423.,   17211.,
      30654.,   34230.,   37902.,   41670.,   56373.,   62025.,   67821.,
      73761.,   61197.,   67137.,   73221.,   79449.,   66021.,   72249.,
      78621.,   85137.,   70845.,   77361.,   84021.,   90825.,   75669.,
      82473.,   89421.,   96513.,   59934.,   64662.,   69486.,   74406.,
      34839.,   37299.,   39807.,   42363.,   20559.,   22923.,   25335.,
      27795.,   50478.,   55398.,   60414.,   65526.,   90141.,   97809.,
      105621.,  113577.,  94965.,   102921.,  111021.,  119265.,  99789.,
      108033.,  116421.,  124953.,  104613.,  113145.,  121821.,  130641.,
      109437.,  118257.,  127221.,  136329.,  85134.,   91206.,   97374.,
      103638.,  48783.,   51915.,   55095.,   58323.,   29127.,   32163.,
      35247.,   38379.,   70302.,   76566.,   82926.,   89382.,   123909.,
      133593.,  143421.,  153393.,  128733.,  138705.,  148821.,  159081.,
      133557.,  143817.,  154221.,  164769.,  138381.,  148929.,  159621.,
      170457.,  143205.,  154041.,  165021.,  176145.,  110334.,  117750.,
      125262.,  132870.,  62727.,   66531.,   70383.,   74283.,   37695.,
      41403.,   45159.,   48963.,   90126.,   97734.,   105438.,  113238.,
      157677.,  169377.,  181221.,  193209.,  162501.,  174489.,  186621.,
      198897.,  167325.,  179601.,  192021.,  204585.,  172149.,  184713.,
      197421.,  210273.,  176973.,  189825.,  202821.,  215961.,  135534.,
      144294.,  153150.,  162102.,  76671.,   81147.,   85671.,   90243.,
      45082.,   47874.,   50698.,   53554.,   101268.,  106980.,  112756.,
      118596.,  168814.,  177574.,  186430.,  195382.,  173182.,  182134.,
      191182.,  200326.,  177550.,  186694.,  195934.,  205270.,  181918.,
      191254.,  200686.,  210214.,  186286.,  195814.,  205438.,  215158.,
      137172.,  143652.,  150196.,  156804.,  75162.,   78466.,   81802.,
      85170.,   33413.,   34969.,   36541.,   38129.,   73018.,   76194.,
      79402.,   82642.,   118943.,  123803.,  128711.,  133667.,  121703.,
      126659.,  131663.,  136715.,  124463.,  129515.,  134615.,  139763.,
      127223.,  132371.,  137567.,  142811.,  129983.,  135227.,  140519.,
      145859.,  93786.,   97346.,   100938.,  104562.,  50501.,   52313.,
      54141.,   55985.,   221.,     529.,     853.,     1193.,    1642.,
      2322.,    3034.,    3778.,    4391.,    5507.,    6671.,    7883.,
      8303.,    9515.,    10775.,   12083.,   12215.,   13523.,   14879.,
      16283.,   16127.,   17531.,   18983.,   20483.,   20039.,   21539.,
      23087.,   24683.,   15498.,   16562.,   17658.,   18786.,   8861.,
      9425.,    10005.,   10601.,   8746.,    9682.,    10650.,   11650.,
      21172.,   23172.,   25236.,   27364.,   37534.,   40726.,   44014.,
      47398.,   46510.,   49894.,   53374.,   56950.,   55486.,   59062.,
      62734.,   66502.,   64462.,   68230.,   72094.,   76054.,   73438.,
      77398.,   81454.,   85606.,   54516.,   57284.,   60116.,   63012.,
      30122.,   31570.,   33050.,   34562.,   28263.,   30147.,   32079.,
      34059.,   63966.,   67926.,   71982.,   76134.,   107493.,  113721.,
      120093.,  126609.,  122685.,  129201.,  135861.,  142665.,  137877.,
      144681.,  151629.,  158721.,  153069.,  160161.,  167397.,  174777.,
      168261.,  175641.,  183165.,  190833.,  122430.,  127542.,  132750.,
      138054.,  66471.,   69123.,   71823.,   74571.,   61023.,   63579.,
      66183.,   68835.,   132174.,  137478.,  142878.,  148374.,  213837.,
      222081.,  230469.,  239001.,  229029.,  237561.,  246237.,  255057.,
      244221.,  253041.,  262005.,  271113.,  259413.,  268521.,  277773.,
      287169.,  274605.,  284001.,  293541.,  303225.,  196014.,  202470.,
      209022.,  215670.,  104607.,  107931.,  111303.,  114723.,  93783.,
      97011.,   100287.,  103611.,  200382.,  207030.,  213774.,  220614.,
      320181.,  330441.,  340845.,  351393.,  335373.,  345921.,  356613.,
      367449.,  350565.,  361401.,  372381.,  383505.,  365757.,  376881.,
      388149.,  399561.,  380949.,  392361.,  403917.,  415617.,  269598.,
      277398.,  285294.,  293286.,  142743.,  146739.,  150783.,  154875.,
      126543.,  130443.,  134391.,  138387.,  268590.,  276582.,  284670.,
      292854.,  426525.,  438801.,  451221.,  463785.,  441717.,  454281.,
      466989.,  479841.,  456909.,  469761.,  482757.,  495897.,  472101.,
      485241.,  498525.,  511953.,  487293.,  500721.,  514293.,  528009.,
      343182.,  352326.,  361566.,  370902.,  180879.,  185547.,  190263.,
      195027.,  159303.,  163875.,  168495.,  173163.,  336798.,  346134.,
      355566.,  365094.,  532869.,  547161.,  561597.,  576177.,  548061.,
      562641.,  577365.,  592233.,  563253.,  578121.,  593133.,  608289.,
      578445.,  593601.,  608901.,  624345.,  593637.,  609081.,  624669.,
      640401.,  416766.,  427254.,  437838.,  448518.,  219015.,  224355.,
      229743.,  235179.,  134218.,  137586.,  140986.,  144418.,  281844.,
      288708.,  295636.,  302628.,  443134.,  453622.,  464206.,  474886.,
      454414.,  465094.,  475870.,  486742.,  465694.,  476566.,  487534.,
      498598.,  476974.,  488038.,  499198.,  510454.,  488254.,  499510.,
      510862.,  522310.,  340788.,  348420.,  356116.,  363876.,  178122.,
      182002.,  185914.,  189858.,  82013.,   83857.,   85717.,   87593.,
      171370.,  175122.,  178906.,  182722.,  268199.,  273923.,  279695.,
      285515.,  274415.,  280235.,  286103.,  292019.,  280631.,  286547.,
      292511.,  298523.,  286847.,  292859.,  298919.,  305027.,  293063.,
      299171.,  305327.,  311531.,  203658.,  207794.,  211962.,  216162.,
      106013.,  108113.,  110229.,  112361.,  437.,     1033.,    1645.,
      2273.,    3226.,    4482.,    5770.,    7090.,    8495.,    10475.,
      12503.,   14579.,   15863.,   17939.,   20063.,   22235.,   23231.,
      25403.,   27623.,   29891.,   30599.,   32867.,   35183.,   37547.,
      37967.,   40331.,   42743.,   45203.,   28602.,   30242.,   31914.,
      33618.,   15989.,   16841.,   17709.,   18593.,   17242.,   18754.,
      20298.,   21874.,   40468.,   43620.,   46836.,   50116.,   69934.,
      74854.,   79870.,   84982.,   85822.,   90934.,   96142.,   101446.,
      101710.,  107014.,  112414.,  117910.,  117598.,  123094.,  128686.,
      134374.,  133486.,  139174.,  144958.,  150838.,  96852.,   100772.,
      104756.,  108804.,  52442.,   54466.,   56522.,   58610.,   53103.,
      55851.,   58647.,   61491.,   117102.,  122790.,  128574.,  134454.,
      192381.,  201201.,  210165.,  219273.,  217941.,  227049.,  236301.,
      245697.,  243501.,  252897.,  262437.,  272121.,  269061.,  278745.,
      288573.,  298545.,  294621.,  304593.,  314709.,  324969.,  210126.,
      216966.,  223902.,  230934.,  112047.,  115563.,  119127.,  122739.,
      110055.,  113475.,  116943.,  120459.,  233694.,  240726.,  247854.,
      255078.,  371301.,  382137.,  393117.,  404241.,  396861.,  407985.,
      419253.,  430665.,  422421.,  433833.,  445389.,  457089.,  447981.,
      459681.,  471525.,  483513.,  473541.,  485529.,  497661.,  509937.,
      332094.,  340278.,  348558.,  356934.,  174375.,  178563.,  182799.,
      187083.,  167007.,  171099.,  175239.,  179427.,  350286.,  358662.,
      367134.,  375702.,  550221.,  563073.,  576069.,  589209.,  575781.,
      588921.,  602205.,  615633.,  601341.,  614769.,  628341.,  642057.,
      626901.,  640617.,  654477.,  668481.,  652461.,  666465.,  680613.,
      694905.,  454062.,  463590.,  473214.,  482934.,  236703.,  241563.,
      246471.,  251427.,  223959.,  228723.,  233535.,  238395.,  466878.,
      476598.,  486414.,  496326.,  729141.,  744009.,  759021.,  774177.,
      754701.,  769857.,  785157.,  800601.,  780261.,  795705.,  811293.,
      827025.,  805821.,  821553.,  837429.,  853449.,  831381.,  847401.,
      863565.,  879873.,  576030.,  586902.,  597870.,  608934.,  299031.,
      304563.,  310143.,  315771.,  280911.,  286347.,  291831.,  297363.,
      583470.,  594534.,  605694.,  616950.,  908061.,  924945.,  941973.,
      959145.,  933621.,  950793.,  968109.,  985569.,  959181.,  976641.,
      994245.,  1011993., 984741.,  1002489., 1020381., 1038417., 1010301.,
      1028337., 1046517., 1064841., 697998.,  710214.,  722526.,  734934.,
      361359.,  367563.,  373815.,  380115.,  223354.,  227298.,  231274.,
      235282.,  462420.,  470436.,  478516.,  486660.,  717454.,  729670.,
      741982.,  754390.,  735646.,  748054.,  760558.,  773158.,  753838.,
      766438.,  779134.,  791926.,  772030.,  784822.,  797710.,  810694.,
      790222.,  803206.,  816286.,  829462.,  544404.,  553188.,  562036.,
      570948.,  281082.,  285538.,  290026.,  294546.,  130613.,  132745.,
      134893.,  137057.,  269722.,  274050.,  278410.,  282802.,  417455.,
      424043.,  430679.,  437363.,  427127.,  433811.,  440543.,  447323.,
      436799.,  443579.,  450407.,  457283.,  446471.,  453347.,  460271.,
      467243.,  456143.,  463115.,  470135.,  477203.,  313530.,  318242.,
      322986.,  327762.,  161525.,  163913.,  166317.,  168737.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1708000.,  1820896.,  1935840.,  2052832.,  2404440.,  2550680.,
      2699480.,  2850840.,  3211728.,  3385168.,  3561680.,  3741264.,
      4106312.,  4309000.,  4515272.,  4725128.,  4427208.,  4628872.,
      4834120.,  5042952.,  4715336.,  4915976.,  5120200.,  5328008.,
      4309456.,  4482896.,  4659408.,  4838992.,  3767128.,  3911320.,
      4058072.,  4207384.,  3084256.,  3197152.,  3312096.,  3429088.,
      3479512.,  3628824.,  3780696.,  3935128.,  4701550.,  4886398.,
      5074446.,  5265694.,  5809476.,  6024228.,  6242820.,  6465252.,
      7010138.,  7257354.,  7509050.,  7765226.,  7226682.,  7474666.,
      7727130.,  7984074.,  7410458.,  7659210.,  7912442.,  8170154.,
      6477892.,  6690596.,  6907140.,  7127524.,  5366574.,  5540670.,
      5717966.,  5898462.,  4071384.,  4204312.,  4339800.,  4477848.,
      5257168.,  5426512.,  5598928.,  5774416.,  6675588.,  6886756.,
      7101764.,  7320612.,  7771320.,  8019192.,  8271672.,  8528760.,
      8981612.,  9269260.,  9562284.,  9860684.,  9012908.,  9303116.,
      9598700.,  9899660.,  9011436.,  9304204.,  9602348.,  9905868.,
      7675576.,  7927544.,  8184120.,  8445304.,  6135044.,  6343140.,
      6555076.,  6770852.,  4383696.,  4544848.,  4709072.,  4876368.,
      6336456.,  6542216.,  6751560.,  6964488.,  7817626.,  8075594.,
      8338042.,  8604970.,  8783916.,  9089484.,  9400428.,  9716748.,
      9902974.,  10259726., 10622750., 10992046., 9799198.,  10160302.,
      10527678., 10901326., 9662654.,  10028110., 10399838., 10777838.,
      8108332.,  8424140.,  8745324.,  9071884.,  6307034.,  6569610.,
      6836666.,  7108202.,  4251592.,  4457352.,  4666696.,  4879624.,
      6740296.,  6953224.,  7169736.,  7389832.,  8031866.,  8296746.,
      8566106.,  8839946.,  8578156.,  8890380.,  9207980.,  9530956.,
      9276190.,  9639342.,  10008766., 10384462., 8741310.,  9100622.,
      9466206.,  9838062.,  8375390.,  8739054.,  9108990.,  9485198.,
      7793004.,  8107276.,  8426924.,  8751948.,  6964666.,  7225962.,
      7491738.,  7761994.,  5883208.,  6087944.,  6296264.,  6508168.,
      5435080.,  5646984.,  5862472.,  6081544.,  7094106.,  7357706.,
      7625786.,  7898346.,  8826028.,  9136716.,  9452780.,  9774220.,
      10708670., 11070030., 11437662., 11811566., 10763614., 11121134.,
      11484926., 11854990., 11216894., 11578766., 11946910., 12321326.,
      9968044.,  10280780., 10598892., 10922380., 8474266.,  8734282.,
      8998778.,  9267754.,  6728392.,  6932104.,  7139400.,  7350280.,
      6367696.,  6557520.,  6750416.,  6946384.,  7855620.,  8090340.,
      8328900.,  8571300.,  9164216.,  9438712.,  9717816.,  10001528.,
      10599660., 10917004., 11239724., 11567820., 10173228., 10484940.,
      10802028., 11124492., 10374508., 10688780., 11008428., 11333452.,
      8899512.,  9169912.,  9444920.,  9724536.,  7207556.,  7431012.,
      7658308.,  7889444.,  5292496.,  5465936.,  5642448.,  5822032.,
      4869336.,  5020696.,  5174616.,  5331096.,  5537454.,  5722814.,
      5911374.,  6103134.,  6319812.,  6541732.,  6767492.,  6997092.,
      7221530.,  7482570.,  7748090.,  8018090.,  6891258.,  7153066.,
      7419354.,  7690122.,  7450842.,  7721610.,  7996858.,  8276586.,
      6478276.,  6714532.,  6954628.,  7198564.,  5333102.,  5532286.,
      5734670.,  5940254.,  4010200.,  4169752.,  4331864.,  4496536.,
      3127264.,  3256544.,  3387872.,  3521248.,  2955608.,  3112088.,
      3271128.,  3432728.,  3923920.,  4109648.,  4298448.,  4490320.,
      4987720.,  5204744.,  5425352.,  5649544.,  5353672.,  5569672.,
      5789256.,  6012424.,  5790280.,  6013448.,  6240200.,  6470536.,
      5288912.,  5482832.,  5679824.,  5879888.,  4642904.,  4805528.,
      4970712.,  5138456.,  3848160.,  3977440.,  4108768.,  4242144.,
      3742176.,  3859168.,  3978208.,  4099296.,  4957400.,  5108760.,
      5262680.,  5419160.,  6292688.,  6480464.,  6671312.,  6865232.,
      7288264.,  7506312.,  7727944.,  7953160.,  7183176.,  7400200.,
      7620808.,  7845000.,  7045320.,  7261320.,  7480904.,  7704072.,
      6169808.,  6357584.,  6548432.,  6742352.,  5153752.,  5311256.,
      5471320.,  5633944.,  3993056.,  4118240.,  4245472.,  4374752.,
      5743704.,  5914520.,  6087896.,  6263832.,  7028494.,  7240222.,
      7455150.,  7673278.,  8455172.,  8710372.,  8969412.,  9232292.,
      9335610.,  9628650.,  9926170.,  10228170., 9126170.,  9419978.,
      9718266.,  10021034., 8883962.,  9178538.,  9477594.,  9781130.,
      7450372.,  7703524.,  7960516.,  8221348.,  5816526.,  6025694.,
      6238062.,  6453630.,  3977304.,  4139928.,  4305112.,  4472856.,
      5967568.,  6159440.,  6354384.,  6552400.,  7043908.,  7279140.,
      7518212.,  7761124.,  8267576.,  8549240.,  8835512.,  9126392.,
      8722092.,  9045068.,  9373420.,  9707148.,  8158444.,  8475788.,
      8798508.,  9126604.,  7529260.,  7840972.,  8158060.,  8480524.,
      6101304.,  6370680.,  6644664.,  6923256.,  5511108.,  5735076.,
      5962884.,  6194532.,  4703952.,  4879440.,  5058000.,  5239632.,
      5347656.,  5560584.,  5777096.,  5997192.,  6957434.,  7220266.,
      7487578.,  7759370.,  8736364.,  9052684.,  9374380.,  9701452.,
      10588190., 10953390., 11324862., 11702606., 10708670., 11070030.,
      11437662., 11811566., 10763614., 11121134., 11484926., 11854990.,
      9633644.,  9943820.,  10259372., 10580300., 8265914.,  8525162.,
      8788890.,  9057098.,  6653256.,  6857992.,  7066312.,  7278216.,
      6631112.,  6843016.,  7058504.,  7277576.,  8149594.,  8411146.,
      8677178.,  8947690.,  9836204.,  10150988., 10471148., 10796684.,
      11365310., 11728718., 12098398., 12474350., 11027038., 11386606.,
      11752446., 12124558., 10623230., 10978958., 11340958., 11709230.,
      9285548.,  9594188.,  9908204.,  10227596., 7711130.,  7969098.,
      8231546.,  8498474.,  5892808.,  6096520.,  6303816.,  6514696.,
      6079560.,  6290440.,  6504904.,  6722952.,  7047994.,  7308266.,
      7573018.,  7842250.,  8183532.,  8496780.,  8815404.,  9139404.,
      9493342.,  9863150.,  10239230., 10621582., 9286142.,  9652110.,
      10024350., 10402862., 9013406.,  9375534.,  9743934.,  10118606.,
      7959532.,  8274828.,  8595500.,  8921548.,  6669946.,  6934826.,
      7204186.,  7478026.,  5137480.,  5348360.,  5562824.,  5780872.,
      5901520.,  6105680.,  6312912.,  6523216.,  6402244.,  6652836.,
      6907268.,  7165540.,  7062584.,  7362680.,  7667384.,  7976696.,
      8937260.,  9289932.,  9647980.,  10011404., 9297260.,  9644300.,
      9996716.,  10354508., 9591724.,  9933132.,  10279916., 10632076.,
      8669752.,  8965752.,  9266360.,  9571576.,  7524676.,  7772196.,
      8023556.,  8278756.,  6150352.,  6346320.,  6545360.,  6747472.,
      5819736.,  6000792.,  6184408.,  6370584.,  7408718.,  7629150.,
      7852782.,  8079614.,  9133444.,  9395812.,  9662020.,  9932068.,
      10999034., 11305898., 11617242., 11933066., 10827482., 11126922.,
      11430842., 11739242., 10590394., 10882410., 11178906., 11479882.,
      9241732.,  9493860.,  9749828.,  10009636., 7698958.,  7908638.,
      8121518.,  8337598.,  5956952.,  6121624.,  6288856.,  6458648.,
      5576160.,  5717728.,  5861344.,  6007008.,  6599128.,  6768920.,
      6941272.,  7116184.,  7717584.,  7917648.,  8120784.,  8326992.,
      8935624.,  9168008.,  9403976.,  9643528.,  8182344.,  8405512.,
      8632264.,  8862600.,  7363528.,  7577480.,  7795016.,  8016136.,
      6142672.,  6326352.,  6513104.,  6702928.,  4773080.,  4924440.,
      5078360.,  5234840.,  3250656.,  3367648.,  3486688.,  3607776.,
      2101216.,  2214112.,  2329056.,  2446048.,  2879832.,  3019928.,
      3162584.,  3307800.,  3749840.,  3919184.,  4091600.,  4267088.,
      4715336.,  4915976.,  5120200.,  5328008.,  4970696.,  5170312.,
      5373512.,  5580296.,  5193288.,  5391880.,  5594056.,  5799816.,
      4634576.,  4803920.,  4976336.,  5151824.,  4165720.,  4311960.,
      4460760.,  4612120.,  3580896.,  3701984.,  3825120.,  3950304.,
      3886296.,  4037656.,  4191576.,  4348056.,  4961454.,  5142718.,
      5327182.,  5514846.,  6134468.,  6348196.,  6565764.,  6787172.,
      7410458.,  7659210.,  7912442.,  8170154.,  7561466.,  7810986.,
      8064986.,  8323466.,  7679706.,  7929994.,  8184762.,  8444010.,
      6536644.,  6748324.,  6963844.,  7183204.,  5668462.,  5847166.,
      6029070.,  6214174.,  4638936.,  4782104.,  4927832.,  5076120.,
      5472720.,  5646160.,  5822672.,  6002256.,  6529540.,  6739684.,
      6953668.,  7171492.,  7707064.,  7956984.,  8211512.,  8470648.,
      9011436.,  9304204.,  9602348.,  9905868.,  8977196.,  9272524.,
      9573228.,  9879308.,  8910188.,  9208076.,  9511340.,  9819980.,
      7357368.,  7611384.,  7870008.,  8133240.,  6280836.,  6496100.,
      6715204.,  6938148.,  5013968.,  5187408.,  5363920.,  5543504.,
      6418120.,  6630024.,  6845512.,  7064584.,  7337306.,  7596810.,
      7860794.,  8129258.,  8416428.,  8727116.,  9043180.,  9364620.,
      9662654.,  10028110., 10399838., 10777838., 9493342.,  9863150.,
      10239230., 10621582., 9286142.,  9652110.,  10024350., 10402862.,
      7461292.,  7774028.,  8092140.,  8415628.,  6297754.,  6561866.,
      6830458.,  7103530.,  4898504.,  5110408.,  5325896.,  5544968.,
      6489160.,  6700040.,  6914504.,  7132552.,  6956602.,  7214826.,
      7477530.,  7744714.,  7582956.,  7892108.,  8206636.,  8526540.,
      8375390.,  8739054.,  9108990.,  9485198.,  9025278.,  9393294.,
      9767582.,  10148142., 9407902.,  9772078.,  10142526., 10519246.,
      8554988.,  8866188.,  9182764.,  9504716.,  7545210.,  7808042.,
      8075354.,  8347146.,  6300744.,  6511624.,  6726088.,  6944136.,
      5773768.,  5983624.,  6197064.,  6414088.,  7427866.,  7684810.,
      7946234.,  8212138.,  9239852.,  9547468.,  9860460.,  10178828.,
      11216894., 11578766., 11946910., 12321326., 11637406., 12003630.,
      12376126., 12754894., 11561278., 11923662., 12292318., 12667246.,
      10041900., 10351564., 10666604., 10987020., 8596058.,  8857610.,
      9123642.,  9394154.,  6916552.,  7126408.,  7339848.,  7556872.,
      6234064.,  6419792.,  6608592.,  6800464.,  7479172.,  7704676.,
      7934020.,  8167204.,  8857272.,  9125624.,  9398584.,  9676152.,
      10374508., 10688780., 11008428., 11333452., 10543020., 10859852.,
      11182060., 11509644., 9985516.,  10296716., 10613292., 10935244.,
      8240312.,  8504568.,  8773432.,  9046904.,  6828036.,  7050468.,
      7276740.,  7506852.,  5213136.,  5390672.,  5571280.,  5754960.,
      4768216.,  4921624.,  5077592.,  5236120.,  5536238.,  5726206.,
      5919374.,  6115742.,  6428740.,  6657828.,  6890756.,  7127524.,
      7450842.,  7721610.,  7996858.,  8276586.,  8010426.,  8290154.,
      8574362.,  8863050.,  7647386.,  7927882.,  8212858.,  8502314.,
      6484804.,  6728228.,  6975492.,  7226596.,  5139374.,  5343166.,
      5550158.,  5760350.,  3605976.,  3767576.,  3931736.,  4098456.,
      2668512.,  2797792.,  2929120.,  3062496.,  3608152.,  3766680.,
      3927768.,  4091416.,  4647376.,  4837200.,  5030096.,  5226064.,
      5790280.,  6013448.,  6240200.,  6470536.,  6226888.,  6457224.,
      6691144.,  6928648.,  6560072.,  6789384.,  7022280.,  7258760.,
      5897680.,  6095696.,  6296784.,  6500944.,  5082456.,  5247128.,
      5414360.,  5584152.,  4110304.,  4239584.,  4370912.,  4504288.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    5626.,    8362.,
      11482.,   14986.,   9178.,    12682.,   16570.,   20842.,   12730.,
      17002.,   21658.,   26698.,   16282.,   21322.,   26746.,   32554.,
      18684.,   22556.,   26684.,   31068.,   13598.,   15790.,   18110.,
      20558.,   1660.,    4508.,    7612.,    10972.,   14200.,   20920.,
      28152.,   35896.,   39668.,   51284.,   63668.,   76820.,   55988.,
      69140.,   83060.,   97748.,   72308.,   86996.,   102452.,  118676.,
      88628.,   104852.,  121844.,  139604.,  104948.,  122708.,  141236.,
      160532.,  95864.,   108728.,  122104.,  135992.,  61564.,   68508.,
      75708.,   83164.,   26394.,   34506.,   43002.,   51882.,   84468.,
      102228.,  120756.,  140052.,  177294.,  206238.,  236334.,  267582.,
      215598.,  246846.,  279246.,  312798.,  253902.,  287454.,  322158.,
      358014.,  292206.,  328062.,  365070.,  403230.,  330510.,  368670.,
      407982.,  448446.,  274548.,  301524.,  329268.,  357780.,  165402.,
      179658.,  194298.,  209322.,  94266.,   107754.,  121626.,  135882.,
      241716.,  270228.,  299508.,  329556.,  445422.,  490494.,  536718.,
      584094.,  483726.,  531102.,  579630.,  629310.,  522030.,  571710.,
      622542.,  674526.,  560334.,  612318.,  665454.,  719742.,  598638.,
      652926.,  708366.,  764958.,  474804.,  512532.,  551028.,  590292.,
      276282.,  295914.,  315930.,  336330.,  162138.,  181002.,  200250.,
      219882.,  398964.,  438228.,  478260.,  519060.,  713550.,  774750.,
      837102.,  900606.,  751854.,  815358.,  880014.,  945822.,  790158.,
      855966.,  922926.,  991038.,  828462.,  896574.,  965838.,  1036254.,
      866766.,  937182.,  1008750., 1081470., 675060.,  723540.,  772788.,
      822804.,  387162.,  412170.,  437562.,  463338.,  230010.,  254250.,
      278874.,  303882.,  556212.,  606228.,  657012.,  708564.,  981678.,
      1059006., 1137486., 1217118., 1019982., 1099614., 1180398., 1262334.,
      1058286., 1140222., 1223310., 1307550., 1096590., 1180830., 1266222.,
      1352766., 1134894., 1221438., 1309134., 1397982., 875316.,  934548.,
      994548.,  1055316., 498042.,  528426.,  559194.,  590346.,  297882.,
      327498.,  357498.,  387882.,  713460.,  774228.,  835764.,  898068.,
      1249806., 1343262., 1437870., 1533630., 1288110., 1383870., 1480782.,
      1578846., 1326414., 1424478., 1523694., 1624062., 1364718., 1465086.,
      1566606., 1669278., 1403022., 1505694., 1609518., 1714494., 1075572.,
      1145556., 1216308., 1287828., 608922.,  644682.,  680826.,  717354.,
      357884.,  380188.,  402748.,  425564.,  804472.,  850104.,  896248.,
      942904.,  1341812., 1411796., 1482548., 1554068., 1376564., 1448084.,
      1520372., 1593428., 1411316., 1484372., 1558196., 1632788., 1446068.,
      1520660., 1596020., 1672148., 1480820., 1556948., 1633844., 1711508.,
      1090936., 1142712., 1195000., 1247800., 598012.,  624412.,  651068.,
      677980.,  265758.,  278190.,  290750.,  303438.,  580988.,  606364.,
      631996.,  657884.,  946714.,  985546.,  1024762., 1064362., 968698.,
      1008298., 1048282., 1088650., 990682.,  1031050., 1071802., 1112938.,
      1012666., 1053802., 1095322., 1137226., 1034650., 1076554., 1118842.,
      1161514., 746748.,  775196.,  803900.,  832860.,  402206.,  416686.,
      431294.,  446030.,  1470.,    3918.,    6494.,    9198.,    12476.,
      17884.,   23548.,   29468.,   34042.,   42922.,   52186.,   61834.,
      65242.,   74890.,   84922.,   95338.,   96442.,   106858.,  117658.,
      128842.,  127642.,  138826.,  150394.,  162346.,  158842.,  170794.,
      183130.,  195850.,  122940.,  131420.,  140156.,  149148.,  70334.,
      74830.,   79454.,   84206.,   69052.,   76508.,   84220.,   92188.,
      167416.,  183352.,  199800.,  216760.,  297140.,  322580.,  348788.,
      375764.,  368756.,  395732.,  423476.,  451988.,  440372.,  468884.,
      498164.,  528212.,  511988.,  542036.,  572852.,  604436.,  583604.,
      615188.,  647540.,  680660.,  433400.,  455480.,  478072.,  501176.,
      239548.,  251100.,  262908.,  274972.,  224250.,  239274.,  254682.,
      270474.,  507828.,  539412.,  571764.,  604884.,  853806.,  903486.,
      954318.,  1006302., 975054.,  1027038., 1080174., 1134462., 1096302.,
      1150590., 1206030., 1262622., 1217550., 1274142., 1331886., 1390782.,
      1338798., 1397694., 1457742., 1518942., 974388.,  1015188., 1056756.,
      1099092., 529146.,  550314.,  571866.,  593802.,  485658.,  506058.,
      526842.,  548010.,  1052148., 1094484., 1137588., 1181460., 1702542.,
      1768350., 1835310., 1903422., 1823790., 1891902., 1961166., 2031582.,
      1945038., 2015454., 2087022., 2159742., 2066286., 2139006., 2212878.,
      2287902., 2187534., 2262558., 2338734., 2416062., 1561716., 1613268.,
      1665588., 1718676., 833562.,  860106.,  887034.,  914346.,  747066.,
      772842.,  799002.,  825546.,  1596468., 1649556., 1703412., 1758036.,
      2551278., 2633214., 2716302., 2800542., 2672526., 2756766., 2842158.,
      2928702., 2793774., 2880318., 2968014., 3056862., 2915022., 3003870.,
      3093870., 3185022., 3036270., 3127422., 3219726., 3313182., 2149044.,
      2211348., 2274420., 2338260., 1137978., 1169898., 1202202., 1234890.,
      1008474., 1039626., 1071162., 1103082., 2140788., 2204628., 2269236.,
      2334612., 3400014., 3498078., 3597294., 3697662., 3521262., 3621630.,
      3723150., 3825822., 3642510., 3745182., 3849006., 3953982., 3763758.,
      3868734., 3974862., 4082142., 3885006., 3992286., 4100718., 4210302.,
      2736372., 2809428., 2883252., 2957844., 1442394., 1479690., 1517370.,
      1555434., 1269882., 1306410., 1343322., 1380618., 2685108., 2759700.,
      2835060., 2911188., 4248750., 4362942., 4478286., 4594782., 4369998.,
      4486494., 4604142., 4722942., 4491246., 4610046., 4729998., 4851102.,
      4612494., 4733598., 4855854., 4979262., 4733742., 4857150., 4981710.,
      5107422., 3323700., 3407508., 3492084., 3577428., 1746810., 1789482.,
      1832538., 1875978., 1070396., 1097308., 1124476., 1151900., 2247928.,
      2302776., 2358136., 2414008., 3534644., 3618452., 3703028., 3788372.,
      3624692., 3710036., 3796148., 3883028., 3714740., 3801620., 3889268.,
      3977684., 3804788., 3893204., 3982388., 4072340., 3894836., 3984788.,
      4075508., 4166996., 2718712., 2779704., 2841208., 2903224., 1421116.,
      1452124., 1483388., 1514908., 654270.,  669006.,  683870.,  698862.,
      1367228., 1397212., 1427452., 1457948., 2139898., 2185642., 2231770.,
      2278282., 2189530., 2236042., 2282938., 2330218., 2239162., 2286442.,
      2334106., 2382154., 2288794., 2336842., 2385274., 2434090., 2338426.,
      2387242., 2436442., 2486026., 1625148., 1658204., 1691516., 1725084.,
      846014.,  862798.,  879710.,  896750.,  2910.,    7662.,    12542.,
      17550.,   24572.,   34588.,   44860.,   55388.,   66010.,   81802.,
      97978.,   114538.,  124858.,  141418.,  158362.,  175690.,  183706.,
      201034.,  218746.,  236842.,  242554.,  260650.,  279130.,  297994.,
      301402.,  320266.,  339514.,  359146.,  227196.,  240284.,  253628.,
      267228.,  127070.,  133870.,  140798.,  147854.,  136444.,  148508.,
      160828.,  173404.,  320632.,  345784.,  371448.,  397624.,  554612.,
      593876.,  633908.,  674708.,  681524.,  722324.,  763892.,  806228.,
      808436.,  850772.,  893876.,  937748.,  935348.,  979220.,  1023860.,
      1069268., 1062260., 1107668., 1153844., 1200788., 770936.,  802232.,
      834040.,  866360.,  417532.,  433692.,  450108.,  466780.,  422106.,
      444042.,  466362.,  489066.,  931188.,  976596.,  1022772., 1069716.,
      1530318., 1600734., 1672302., 1745022., 1734510., 1807230., 1881102.,
      1956126., 1938702., 2013726., 2089902., 2167230., 2142894., 2220222.,
      2298702., 2378334., 2347086., 2426718., 2507502., 2589438., 1674228.,
      1728852., 1784244., 1840404., 892890.,  920970.,  949434.,  978282.,
      877050.,  904362.,  932058.,  960138.,  1862580., 1918740., 1975668.,
      2033364., 2959662., 3046206., 3133902., 3222750., 3163854., 3252702.,
      3342702., 3433854., 3368046., 3459198., 3551502., 3644958., 3572238.,
      3665694., 3760302., 3856062., 3776430., 3872190., 3969102., 4067166.,
      2648628., 2714004., 2780148., 2847060., 1390842., 1424298., 1458138.,
      1492362., 1331994., 1364682., 1397754., 1431210., 2793972., 2860884.,
      2928564., 2997012., 4389006., 4491678., 4595502., 4700478., 4593198.,
      4698174., 4804302., 4911582., 4797390., 4904670., 5013102., 5122686.,
      5001582., 5111166., 5221902., 5333790., 5205774., 5317662., 5430702.,
      5544894., 3623028., 3699156., 3776052., 3853716., 1888794., 1927626.,
      1966842., 2006442., 1786938., 1825002., 1863450., 1902282., 3725364.,
      3803028., 3881460., 3960660., 5818350., 5937150., 6057102., 6178206.,
      6022542., 6143646., 6265902., 6389310., 6226734., 6350142., 6474702.,
      6600414., 6430926., 6556638., 6683502., 6811518., 6635118., 6763134.,
      6892302., 7022622., 4597428., 4684308., 4771956., 4860372., 2386746.,
      2430954., 2475546., 2520522., 2241882., 2285322., 2329146., 2373354.,
      4656756., 4745172., 4834356., 4924308., 7247694., 7382622., 7518702.,
      7655934., 7451886., 7589118., 7727502., 7867038., 7656078., 7795614.,
      7936302., 8078142., 7860270., 8002110., 8145102., 8289246., 8064462.,
      8208606., 8353902., 8500350., 5571828., 5669460., 5767860., 5867028.,
      2884698., 2934282., 2984250., 3034602., 1782908., 1814428., 1846204.,
      1878236., 3691384., 3755448., 3820024., 3885112., 5727476., 5825108.,
      5923508., 6022676., 5872820., 5971988., 6071924., 6172628., 6018164.,
      6118868., 6220340., 6322580., 6163508., 6265748., 6368756., 6472532.,
      6308852., 6412628., 6517172., 6622484., 4346488., 4416696., 4487416.,
      4558648., 2244220., 2279836., 2315708., 2351836., 1042782., 1059822.,
      1076990., 1094286., 2153468., 2188060., 2222908., 2258012., 3333082.,
      3385738., 3438778., 3492202., 3410362., 3463786., 3517594., 3571786.,
      3487642., 3541834., 3596410., 3651370., 3564922., 3619882., 3675226.,
      3730954., 3642202., 3697930., 3754042., 3810538., 2503548., 2541212.,
      2579132., 2617308., 1289822., 1308910., 1328126., 1347470.};
  const std::array<int, 4> in_shape = {{3, 9, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2220.,   3070.,   4046.,   5152.,   5558.,   5964.,   6370.,   5930.,
      5340.,   4596.,   4600.,   6225.,   8050.,   10080.,  10710.,  11340.,
      11970.,  10975.,  9750.,   8290.,   8270.,   11035.,  14091.,  17444.,
      18347.,  19250.,  20153.,  18285.,  16090.,  13562.,  13510.,  17850.,
      22589.,  27734.,  28959.,  30184.,  31409.,  28280.,  24710.,  20692.,
      20090.,  26250.,  32879.,  39984.,  41209.,  42434.,  43659.,  38990.,
      33810.,  28112.,  26670.,  34650.,  43169.,  52234.,  53459.,  54684.,
      55909.,  49700.,  42910.,  35532.,  32330.,  41665.,  51513.,  61880.,
      63077.,  64274.,  65471.,  57795.,  49570.,  40790.,  35300.,  45275.,
      55720.,  66640.,  67760.,  68880.,  70000.,  61525.,  52550.,  43070.,
      35300.,  45130.,  55370.,  66024.,  67018.,  68012.,  69006.,  60470.,
      51500.,  42092.,  20940.,  27370.,  34286.,  41692.,  42098.,  42504.,
      42910.,  38330.,  33240.,  27636.,  34300.,  44475.,  55300.,  66780.,
      67410.,  68040.,  68670.,  60925.,  52500.,  43390.,  51470.,  66385.,
      82131.,  98714.,  99617.,  100520., 101423., 89565.,  76840.,  63242.,
      72730.,  93450.,  115199., 137984., 139209., 140434., 141659., 124670.,
      106610., 87472.,  79310.,  101850., 125489., 150234., 151459., 152684.,
      153909., 135380., 115710., 94892.,  85890.,  110250., 135779., 162484.,
      163709., 164934., 166159., 146090., 124810., 102312., 90650.,  115915.,
      142233., 169610., 170807., 172004., 173201., 151755., 129220., 105590.,
      90200.,  115025., 140770., 167440., 168560., 169680., 170800., 149275.,
      126800., 103370., 84260.,  107230., 130970., 155484., 156478., 157472.,
      158466., 138230., 117200., 95372.,  39660.,  51670.,  64526.,  78232.,
      78638.,  79044.,  79450.,  70730.,  61140.,  50676.,  64000.,  82725.,
      102550., 123480., 124110., 124740., 125370., 110875., 95250.,  78490.,
      94670.,  121735., 150171., 179984., 180887., 181790., 182693., 160845.,
      137590., 112922., 131950., 169050., 207809., 248234., 249459., 250684.,
      251909., 221060., 188510., 154252., 138530., 177450., 218099., 260484.,
      261709., 262934., 264159., 231770., 197610., 161672., 145110., 185850.,
      228389., 272734., 273959., 275184., 276409., 242480., 206710., 169092.,
      148970., 190165., 232953., 277340., 278537., 279734., 280931., 245715.,
      208870., 170390., 145100., 184775., 225820., 268240., 269360., 270480.,
      271600., 237025., 201050., 163670., 133220., 169330., 206570., 244944.,
      245938., 246932., 247926., 215990., 182900., 148652.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     10.,    20.,    30.,    40.,   50.,   52.,   45.,
      28.,    13.,    41.,    86.,    150.,   186.,  222.,  258.,  239.,
      191.,   112.,   64.,    167.,   312.,   502.,  580.,  658.,  736.,
      645.,   494.,   280.,   169.,   398.,   690.,  1048., 1126., 1204.,
      1282.,  1086.,  809.,   448.,   274.,   629.,  1068., 1594., 1672.,
      1750.,  1828.,  1527.,  1124.,  616.,   379.,  860.,  1446., 2140.,
      2218.,  2296.,  2374.,  1968.,  1439.,  784.,  484.,  1091., 1824.,
      2686.,  2764.,  2842.,  2920.,  2409.,  1754., 952.,  539.,  1171.,
      1898.,  2722.,  2790.,  2858.,  2926.,  2357., 1681., 896.,  387.,
      826.,   1318.,  1864.,  1906.,  1948.,  1990., 1582., 1115., 588.,
      13.,    40.,    82.,    140.,   198.,   256.,  314.,  268.,  201.,
      112.,   121.,   281.,   482.,   726.,   858.,  990.,  1122., 923.,
      671.,   364.,   352.,   779.,   1284.,  1870., 2092., 2314., 2536.,
      2049.,  1466.,  784.,   709.,   1514.,  2418., 3424., 3646., 3868.,
      4090.,  3246.,  2285.,  1204.,  1066.,  2249., 3552., 4978., 5200.,
      5422.,  5644.,  4443.,  3104.,  1624.,  1423., 2984., 4686., 6532.,
      6754.,  6976.,  7198.,  5640.,  3923.,  2044., 1780., 3719., 5820.,
      8086.,  8308.,  8530.,  8752.,  6837.,  4742., 2464., 1487., 3091.,
      4814.,  6658.,  6822.,  6986.,  7150.,  5561., 3841., 1988., 903.,
      1870.,  2902.,  4000.,  4090.,  4180.,  4270., 3310., 2279., 1176.,
      25.,    76.,    154.,   260.,   366.,   472.,  578.,  484.,  357.,
      196.,   229.,   521.,   878.,   1302.,  1530., 1758., 1986., 1607.,
      1151.,  616.,   640.,   1391.,  2256.,  3238., 3604., 3970., 4336.,
      3453.,  2438.,  1288.,  1249.,  2630.,  4146., 5800., 6166., 6532.,
      6898.,  5406.,  3761.,  1960.,  1858.,  3869., 6036., 8362., 8728.,
      9094.,  9460.,  7359.,  5084.,  2632.,  2467., 5108., 7926., 10924.,
      11290., 11656., 12022., 9312.,  6407.,  3304., 3076., 6347., 9816.,
      13486., 13852., 14218., 14584., 11265., 7730., 3976., 2435., 5011.,
      7730.,  10594., 10854., 11114., 11374., 8765., 6001., 3080., 1419.,
      2914.,  4486.,  6136.,  6274.,  6412.,  6550., 5038., 3443., 1764.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      16800.,   23320.,   30832.,   39368.,   42560.,   45752.,   48944.,
      45664.,   41200.,   35520.,   35260.,   47825.,   61970.,   77735.,
      82705.,   87675.,   92645.,   85070.,   75675.,   64420.,   63904.,
      85400.,   109200.,  135352.,  142492.,  149632.,  156772.,  142392.,
      125420.,  105808.,  104972.,  138845.,  175882.,  216139.,  225841.,
      235543.,  245245.,  220990.,  193235.,  161924.,  157052.,  205345.,
      257362.,  313159.,  322861.,  332563.,  342265.,  305830.,  265335.,
      220724.,  209132.,  271845.,  338842.,  410179.,  419881.,  429583.,
      439285.,  390670.,  337435.,  279524.,  254608.,  328220.,  405912.,
      487732.,  497224.,  506716.,  516208.,  455808.,  391040.,  321856.,
      278700.,  357525.,  440090.,  526435.,  535325.,  544215.,  553105.,
      486230.,  415375.,  340500.,  279168.,  356960.,  438016.,  522368.,
      530264.,  538160.,  546056.,  478576.,  407640.,  333216.,  163680.,
      214120.,  268432.,  326648.,  329840.,  333032.,  336224.,  300544.,
      260800.,  216960.,  269260.,  349325.,  434570.,  525035.,  530005.,
      534975.,  539945.,  479270.,  413175.,  341620.,  405184.,  522800.,
      647040.,  777952.,  785092.,  792232.,  799372.,  706152.,  606020.,
      498928.,  573692.,  737345.,  909202.,  1089319., 1099021., 1108723.,
      1118425., 984550.,  842135.,  691124.,  625772.,  803845.,  990682.,
      1186339., 1196041., 1205743., 1215445., 1069390., 914235.,  749924.,
      677852.,  870345.,  1072162., 1283359., 1293061., 1302763., 1312465.,
      1154230., 986335.,  808724.,  716848.,  916820.,  1125192., 1342012.,
      1351504., 1360996., 1370488., 1201008., 1022840., 835936.,  714300.,
      911025.,  1115090., 1326535., 1335425., 1344315., 1353205., 1182830.,
      1004875., 819300.,  667968.,  850160.,  1038496., 1233008., 1240904.,
      1248800., 1256696., 1096336., 929640.,  756576.,  310560.,  404920.,
      506032.,  613928.,  617120.,  620312.,  623504.,  555424.,  480400.,
      398400.,  503260.,  650825.,  807170.,  972335.,  977305.,  982275.,
      987245.,  873470.,  750675.,  618820.,  746464.,  960200.,  1184880.,
      1420552., 1427692., 1434832., 1441972., 1269912., 1086620., 892048.,
      1042412., 1335845., 1642522., 1962499., 1972201., 1981903., 1991605.,
      1748110., 1491035., 1220324., 1094492., 1402345., 1724002., 2059519.,
      2069221., 2078923., 2088625., 1832950., 1563135., 1279124., 1146572.,
      1468845., 1805482., 2156539., 2166241., 2175943., 2185645., 1917790.,
      1635235., 1337924., 1179088., 1505420., 1844472., 2196292., 2205784.,
      2215276., 2224768., 1946208., 1654640., 1350016., 1149900., 1464525.,
      1790090., 2126635., 2135525., 2144415., 2153305., 1879430., 1594375.,
      1298100., 1056768., 1343360., 1638976., 1943648., 1951544., 1959440.,
      1967336., 1714096., 1451640., 1179936.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    59.,    124.,    196.,    268.,    340.,    365.,
      322.,   203.,   76.,    264.,    580.,    1040.,   1312.,   1584.,
      1856.,  1744.,  1408.,  832.,    437.,    1174.,   2235.,   3644.,
      4244.,  4844.,  5444.,  4809.,   3706.,   2111.,   1235.,   2938.,
      5133.,  7844.,  8444.,  9044.,   9644.,   8211.,   6142.,   3413.,
      2033.,  4702.,  8031.,  12044.,  12644.,  13244.,  13844.,  11613.,
      8578.,  4715.,  2831.,  6466.,   10929.,  16244.,  16844.,  17444.,
      18044., 15015., 11014., 6017.,   3629.,   8230.,   13827.,  20444.,
      21044., 21644., 22244., 18417.,  13450.,  7319.,   4128.,   8992.,
      14608., 20992., 21520., 22048.,  22576.,  18220.,  13016.,  6948.,
      2993.,  6398.,  10223., 14476.,  14804.,  15132.,  15460.,  12305.,
      8682.,  4583.,  77.,    262.,    563.,    988.,    1444.,   1900.,
      2356.,  2021.,  1522.,  851.,    892.,    2088.,   3604.,   5456.,
      6496.,  7536.,  8576.,  7072.,   5152.,   2800.,   2669.,   5926.,
      9795.,  14300., 16052., 17804.,  19556.,  15825.,  11338.,  6071.,
      5483.,  11722., 18741., 26564.,  28316.,  30068.,  31820.,  25275.,
      17806., 9389.,  8297.,  17518.,  27687.,  38828.,  40580.,  42332.,
      44084., 34725., 24274., 12707.,  11111.,  23314.,  36633.,  51092.,
      52844., 54596., 56348., 44175.,  30742.,  16025.,  13925.,  29110.,
      45579., 63356., 65108., 66860.,  68612.,  53625.,  37210.,  19343.,
      11664., 24256., 37792., 52288.,  53584.,  54880.,  56176.,  43708.,
      30200., 15636., 7097.,  14702.,  22823.,  31468.,  32180.,  32892.,
      33604., 26057., 17946., 9263.,   149.,    502.,    1067.,   1852.,
      2692.,  3532.,  4372.,  3677.,   2722.,   1499.,   1708.,   3912.,
      6628.,  9872.,  11680., 13488.,  15296.,  12400.,  8896.,   4768.,
      4901.,  10678., 17355., 24956.,  27860.,  30764.,  33668.,  26841.,
      18970., 10031., 9731.,  20506.,  32349.,  45284.,  48188.,  51092.,
      53996., 42339., 29470., 15365.,  14561.,  30334.,  47343.,  65612.,
      68516., 71420., 74324., 57837.,  39970.,  20699.,  19391.,  40162.,
      62337., 85940., 88844., 91748.,  94652.,  73335.,  50470.,  26033.,
      24221., 49990., 77331., 106268., 109172., 112076., 114980., 88833.,
      60970., 31367., 19200., 39520.,  60976.,  83584.,  85648.,  87712.,
      89776., 69196., 47384., 24324.,  11201.,  23006.,  35423.,  48460.,
      49556., 50652., 51748., 39809.,  27210.,  13943.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      130592.,   181640.,   240560.,   307608.,   332920.,   358232.,
      383544.,   358256.,   323560.,   279200.,   275960.,   374750.,
      486100.,   610330.,   649810.,   689290.,   728770.,   669700.,
      596150.,   507800.,   502256.,   671740.,   859560.,   1066100.,
      1122884.,  1179668.,  1236452.,  1123656.,  990220.,   835760.,
      827400.,   1095010.,  1387820.,  1706278.,  1783502.,  1860726.,
      1937950.,  1747004.,  1528170.,  1281000.,  1241800.,  1624210.,
      2036300.,  2478518.,  2555742.,  2632966.,  2710190.,  2422364.,
      2102170.,  1749160.,  1656200.,  2153410.,  2684780.,  3250758.,
      3327982.,  3405206.,  3482430.,  3097724.,  2676170.,  2217320.,
      2020784.,  2605420.,  3222600.,  3872708.,  3948308.,  4023908.,
      4099508.,  3620328.,  3106300.,  2557040.,  2214840.,  2841550.,
      3498100.,  4184810.,  4255650.,  4326490.,  4397330.,  3866020.,
      3302950.,  2707800.,  2220448.,  2839400.,  3484400.,  4155704.,
      4218648.,  4281592.,  4344536.,  3807920.,  3243720.,  2651680.,
      1294112.,  1693640.,  2124080.,  2585688.,  2611000.,  2636312.,
      2661624.,  2380016.,  2065960.,  1719200.,  2133560.,  2768750.,
      3445300.,  4163530.,  4203010.,  4242490.,  4281970.,  3801700.,
      3278150.,  2711000.,  3215216.,  4149340.,  5136360.,  6176660.,
      6233444.,  6290228.,  6347012.,  5607816.,  4813420.,  3963440.,
      4557000.,  5857810.,  7224140.,  8656438.,  8733662.,  8810886.,
      8888110.,  7825244.,  6694170.,  5494440.,  4971400.,  6387010.,
      7872620.,  9428678.,  9505902.,  9583126.,  9660350.,  8500604.,
      7268170.,  5962600.,  5385800.,  6916210.,  8521100.,  10200918.,
      10278142., 10355366., 10432590., 9175964.,  7842170.,  6430760.,
      5701424.,  7292620.,  8950920.,  10676708., 10752308., 10827908.,
      10903508., 9556008.,  8139100.,  6652400.,  5685240.,  7251550.,
      8876500.,  10560410., 10631250., 10702090., 10772930., 9417220.,
      8000950.,  6523800.,  5319328.,  6770600.,  8270960.,  9820664.,
      9883608.,  9946552.,  10009496., 8732720.,  7405320.,  6027040.,
      2457632.,  3205640.,  4007600.,  4863768.,  4889080.,  4914392.,
      4939704.,  4401776.,  3808360.,  3159200.,  3991160.,  5162750.,
      6404500.,  7716730.,  7756210.,  7795690.,  7835170.,  6933700.,
      5960150.,  4914200.,  5928176.,  7626940.,  9413160.,  11287220.,
      11344004., 11400788., 11457572., 10091976., 8636620.,  7091120.,
      8286600.,  10620610., 13060460., 15606598., 15683822., 15761046.,
      15838270., 13903484., 11860170., 9707880.,  8701000.,  11149810.,
      13708940., 16368598., 16419198., 16453414., 16471246., 14374044.,
      12163834., 9840168.,  8976136.,  11463970., 14050220., 16610406.,
      16546318., 16465846., 16368990., 14185148., 11900202., 9513704.,
      8784048.,  11191340., 13683912., 16022532., 15842132., 15645348.,
      15432180., 13275752., 11031740., 8699760.,  8098872.,  10299630.,
      12571444., 14560330., 14260482., 13944250., 13611634., 11605604.,
      9526598.,  7374296.,  6902688.,  8766440.,  10685936., 12192440.,
      11770008., 11331192., 10875992., 9147824.,  7362376.,  5519392.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    856.,    1400.,   1944.,   2488.,   2722.,
      2428.,   1542.,   500.,    1864.,   4220.,   7696.,   9808.,   11920.,
      14032.,  13292.,  10792.,  6404.,   3202.,   8756.,   16854.,  27688.,
      32392.,  37096.,  41800.,  37086.,  28676.,  16378.,  9418.,   22532.,
      39534.,  60616.,  65320.,  70024.,  74728.,  63798.,  47828.,  26626.,
      15634.,  36308.,  62214.,  93544.,  98248.,  102952., 107656., 90510.,
      66980.,  36874.,  21850.,  50084.,  84894.,  126472., 131176., 135880.,
      140584., 117222., 86132.,  47122.,  28066.,  63860.,  107574., 159400.,
      164104., 168808., 173512., 143934., 105284., 57370.,  32292.,  70440.,
      114572., 164816., 168976., 173136., 177296., 143228., 102408., 54708.,
      23534.,  50348.,  80506.,  114072., 116664., 119256., 121848., 97042.,
      68508.,  36182.,  510.,    1868.,   4138.,   7384.,   11000.,  14616.,
      18232.,  15682.,  11836.,  6630.,   6836.,   16072.,  27836.,  42256.,
      50512.,  58768.,  67024.,  55340.,  40360.,  21956.,  20770.,  46196.,
      76470.,  111784., 125704., 139624., 153544., 124350., 89156.,  47770.,
      43114.,  92228.,  147534., 209224., 223144., 237064., 250984., 199446.,
      140564., 74146.,  65458.,  138260., 218598., 306664., 320584., 334504.,
      348424., 274542., 191972., 100522., 87802.,  184292., 289662., 404104.,
      418024., 431944., 445864., 349638., 243380., 126898., 110146., 230324.,
      360726., 501544., 515464., 529384., 543304., 424734., 294788., 153274.,
      92388.,  192168., 299468., 414416., 424720., 435024., 445328., 346556.,
      239496., 124020., 56270.,  116588., 181018., 249624., 255288., 260952.,
      266616., 206770., 142428., 73526.,  990.,    3596.,   7882.,   13912.,
      20600.,  27288.,  33976.,  28642.,  21244.,  11718.,  13172.,  30280.,
      51452.,  76816.,  91216.,  105616., 120016., 97388.,  69928.,  37508.,
      38338.,  83636.,  136086., 195880., 219016., 242152., 265288., 211614.,
      149636., 79162.,  76810.,  161924., 255534., 357832., 380968., 404104.,
      427240., 335094., 233300., 121666., 115282., 240212., 374982., 519784.,
      542920., 566056., 589192., 458574., 316964., 164170., 153754., 318500.,
      494430., 681736., 704872., 728008., 751144., 582054., 400628., 206674.,
      192226., 396788., 613878., 843688., 866824., 889960., 913096., 705534.,
      484292., 249178., 152484., 313896., 484364., 664016., 680464., 696912.,
      713360., 549884., 376584., 193332., 89006.,  182828., 281530., 385176.,
      393912., 402648., 411384., 316498., 216348., 110870.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7920.,    8880.,    11040.,   12280.,   14648.,   16184.,   18760.,
      20608.,   20328.,   22232.,   21896.,   23856.,   23464.,   25480.,
      21944.,   23720.,   19840.,   21360.,   17136.,   18384.,   16860.,
      18400.,   22925.,   24900.,   29770.,   32200.,   37415.,   40320.,
      39865.,   42840.,   42315.,   45360.,   44765.,   47880.,   41170.,
      43900.,   36675.,   39000.,   31260.,   33160.,   30824.,   33080.,
      41260.,   44140.,   52836.,   56364.,   65576.,   69776.,   69104.,
      73388.,   72632.,   77000.,   76160.,   80612.,   69252.,   73140.,
      61060.,   64360.,   51560.,   54248.,   50932.,   54040.,   67445.,
      71400.,   85526.,   90356.,   105203.,  110936.,  110005.,  115836.,
      114807.,  120736.,  119609.,  125636.,  107870.,  113120.,  94395.,
      98840.,   79156.,   82768.,   76692.,   80360.,   100345.,  105000.,
      125846.,  131516.,  153223.,  159936.,  158025.,  164836.,  162827.,
      169736.,  167629.,  174636.,  149870.,  155960.,  130095.,  135240.,
      108276.,  112448.,  102452.,  106680.,  133245.,  138600.,  166166.,
      172676.,  201243.,  208936.,  206045.,  213836.,  210847.,  218736.,
      215649.,  223636.,  191870.,  198800.,  165795.,  171640.,  137396.,
      142128.,  125288.,  129320.,  161560.,  166660.,  199860.,  206052.,
      240212.,  247520.,  244916.,  252308.,  249620.,  257096.,  254324.,
      261884.,  224628.,  231180.,  192760.,  198280.,  158696.,  163160.,
      137500.,  141200.,  176425.,  181100.,  217210.,  222880.,  259875.,
      266560.,  264285.,  271040.,  268695.,  275520.,  273105.,  280000.,
      240130.,  246100.,  205175.,  210200.,  168220.,  172280.,  137968.,
      141200.,  176440.,  180520.,  216536.,  221480.,  258272.,  264096.,
      262192.,  268072.,  266112.,  272048.,  270032.,  276024.,  236696.,
      241880.,  201640.,  206000.,  164848.,  168368.,  79920.,   83760.,
      104640.,  109480.,  131288.,  137144.,  159880.,  166768.,  161448.,
      168392.,  163016.,  170016.,  164584.,  171640.,  147224.,  153320.,
      127840.,  132960.,  106416.,  110544.,  132060.,  137200.,  171425.,
      177900.,  213370.,  221200.,  257915.,  267120.,  260365.,  269640.,
      262815.,  272160.,  265265.,  274680.,  235570.,  243700.,  203175.,
      210000.,  168060.,  173560.,  199304.,  205880.,  257260.,  265540.,
      318516.,  328524.,  383096.,  394856.,  386624.,  398468.,  390152.,
      402080.,  393680.,  405692.,  347892.,  358260.,  298660.,  307360.,
      245960.,  252968.,  282772.,  290920.,  363545.,  373800.,  448406.,
      460796.,  537383.,  551936.,  542185.,  556836.,  546987.,  561736.,
      551789.,  566636.,  485870.,  498680.,  415695.,  426440.,  341236.,
      349888.,  308532.,  317240.,  396445.,  407400.,  488726.,  501956.,
      585403.,  600936.,  590205.,  605836.,  595007.,  610736.,  599809.,
      615636.,  527870.,  541520.,  451395.,  462840.,  370356.,  379568.,
      334292.,  343560.,  429345.,  441000.,  529046.,  543116.,  633423.,
      649936.,  638225.,  654836.,  643027.,  659736.,  647829.,  664636.,
      569870.,  584360.,  487095.,  499240.,  399476.,  409248.,  354248.,
      362600.,  453160.,  463660.,  556260.,  568932.,  663572.,  678440.,
      668276.,  683228.,  672980.,  688016.,  677684.,  692804.,  593988.,
      607020.,  505960.,  516880.,  413576.,  422360.,  353500.,  360800.,
      450925.,  460100.,  552010.,  563080.,  656775.,  669760.,  661185.,
      674240.,  665595.,  678720.,  670005.,  683200.,  585730.,  597100.,
      497675.,  507200.,  405820.,  413480.,  330928.,  337040.,  421240.,
      428920.,  514616.,  523880.,  611072.,  621936.,  614992.,  625912.,
      618912.,  629888.,  622832.,  633864.,  543416.,  552920.,  460840.,
      468800.,  375088.,  381488.,  151920.,  158640.,  198240.,  206680.,
      247928.,  258104.,  301000.,  312928.,  302568.,  314552.,  304136.,
      316176.,  305704.,  317800.,  272504.,  282920.,  235840.,  244560.,
      195696.,  202704.,  247260.,  256000.,  319925.,  330900.,  396970.,
      410200.,  478415.,  493920.,  480865.,  496440.,  483315.,  498960.,
      485765.,  501480.,  429970.,  443500.,  369675.,  381000.,  304860.,
      313960.,  367784.,  378680.,  473260.,  486940.,  584196.,  600684.,
      700616.,  719936.,  704144.,  723548.,  707672.,  727160.,  711200.,
      730772.,  626532.,  643380.,  536260.,  550360.,  440360.,  451688.,
      514612.,  527800.,  659645.,  676200.,  811286.,  831236.,  969563.,
      992936.,  974365.,  997836.,  979167.,  1002736., 983969.,  1007636.,
      863870.,  884240.,  736995.,  754040.,  603316.,  617008.,  540372.,
      554120.,  692545.,  709800.,  851606.,  872396.,  1017583., 1041936.,
      1022385., 1046836., 1027187., 1051736., 1031989., 1056636., 905870.,
      927080.,  772695.,  790440.,  632436.,  646688.,  566132.,  580440.,
      725445.,  743400.,  891926.,  913556.,  1065603., 1090936., 1070405.,
      1095836., 1075207., 1100736., 1080009., 1105636., 947870.,  969920.,
      808395.,  826840.,  661556.,  676368.,  583208.,  595880.,  744760.,
      760660.,  912660.,  931812.,  1086932., 1109360., 1091636., 1114148.,
      1096340., 1118936., 1101044., 1123724., 963348.,  982860.,  819160.,
      835480.,  668456.,  681560.,  569500.,  580400.,  725425.,  739100.,
      886810.,  903280.,  1053675., 1072960., 1058085., 1077440., 1062495.,
      1081920., 1066905., 1086400., 931330.,  948100.,  790175.,  804200.,
      643420.,  654680.,  523888.,  532880.,  666040.,  677320.,  812696.,
      826280.,  963872.,  979776.,  967792.,  983752.,  971712.,  987728.,
      975632.,  991704.,  850136.,  863960.,  720040.,  731600.,  585328.,
      594608.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    44.,    80.,    76.,
      120.,   108.,   160.,   140.,   200.,   157.,   208.,   142.,   180.,
      91.,    112.,   24.,    52.,    100.,   164.,   236.,   344.,   440.,
      600.,   568.,   744.,   696.,   888.,   824.,   1032.,  788.,   956.,
      644.,   764.,   384.,   448.,   181.,   256.,   506.,   668.,   987.,
      1248.,  1636.,  2008.,  1924.,  2320.,  2212.,  2632.,  2500.,  2944.,
      2229.,  2580.,  1730.,  1976.,  991.,   1120.,  559.,   676.,   1346.,
      1592.,  2373.,  2760.,  3652.,  4192.,  3940.,  4504.,  4228.,  4816.,
      4516.,  5128.,  3867.,  4344.,  2906.,  3236.,  1621.,  1792.,  937.,
      1096.,  2186.,  2516.,  3759.,  4272.,  5668.,  6376.,  5956.,  6688.,
      6244.,  7000.,  6532.,  7312.,  5505.,  6108.,  4082.,  4496.,  2251.,
      2464.,  1315.,  1516.,  3026.,  3440.,  5145.,  5784.,  7684.,  8560.,
      7972.,  8872.,  8260.,  9184.,  8548.,  9496.,  7143.,  7872.,  5258.,
      5756.,  2881.,  3136.,  1693.,  1936.,  3866.,  4364.,  6531.,  7296.,
      9700.,  10744., 9988.,  11056., 10276., 11368., 10564., 11680., 8781.,
      9636.,  6434.,  7016.,  3511.,  3808.,  1972.,  2156.,  4308.,  4684.,
      7016.,  7592.,  10104., 10888., 10360., 11160., 10616., 11432., 10872.,
      11704., 8792.,  9428.,  6292.,  6724.,  3364.,  3584.,  1445.,  1548.,
      3094.,  3304.,  4951.,  5272.,  7020.,  7456.,  7180.,  7624.,  7340.,
      7792.,  7500.,  7960.,  5977.,  6328.,  4222.,  4460.,  2231.,  2352.,
      25.,    52.,    102.,   160.,   235.,   328.,   428.,   560.,   652.,
      792.,   876.,   1024.,  1100.,  1256.,  949.,   1072.,  718.,   804.,
      403.,   448.,   408.,   484.,   964.,   1124.,  1676.,  1928.,  2552.,
      2904.,  3064.,  3432.,  3576.,  3960.,  4088.,  4488.,  3380.,  3692.,
      2468.,  2684.,  1344.,  1456.,  1261.,  1408.,  2810.,  3116.,  4659.,
      5136.,  6820.,  7480.,  7684.,  8368.,  8548.,  9256.,  9412.,  10144.,
      7629.,  8196.,  5474.,  5864.,  2935.,  3136.,  2647.,  2836.,  5666.,
      6056.,  9069.,  9672.,  12868., 13696., 13732., 14584., 14596., 15472.,
      15460., 16360., 12291., 12984., 8666.,  9140.,  4573.,  4816.,  4033.,
      4264.,  8522.,  8996.,  13479., 14208., 18916., 19912., 19780., 20800.,
      20644., 21688., 21508., 22576., 16953., 17772., 11858., 12416., 6211.,
      6496.,  5419.,  5692.,  11378., 11936., 17889., 18744., 24964., 26128.,
      25828., 27016., 26692., 27904., 27556., 28792., 21615., 22560., 15050.,
      15692., 7849.,  8176.,  6805.,  7120.,  14234., 14876., 22299., 23280.,
      31012., 32344., 31876., 33232., 32740., 34120., 33604., 35008., 26277.,
      27348., 18242., 18968., 9487.,  9856.,  5716.,  5948.,  11892., 12364.,
      18536., 19256., 25656., 26632., 26296., 27288., 26936., 27944., 27576.,
      28600., 21464., 22244., 14836., 15364., 7684.,  7952.,  3485.,  3612.,
      7222.,  7480.,  11215., 11608., 15468., 16000., 15820., 16360., 16172.,
      16720., 16524., 17080., 12817., 13240., 8830.,  9116.,  4559.,  4704.,
      49.,    100.,   198.,   304.,   451.,   616.,   812.,   1040.,  1228.,
      1464.,  1644.,  1888.,  2060.,  2312.,  1741.,  1936.,  1294.,  1428.,
      715.,   784.,   792.,   916.,   1828.,  2084.,  3116.,  3512.,  4664.,
      5208.,  5560.,  6120.,  6456.,  7032.,  7352.,  7944.,  5972.,  6428.,
      4292.,  4604.,  2304.,  2464.,  2341.,  2560.,  5114.,  5564.,  8331.,
      9024.,  12004., 12952., 13444., 14416., 14884., 15880., 16324., 17344.,
      13029., 13812., 9218.,  9752.,  4879.,  5152.,  4735.,  4996.,  9986.,
      10520., 15765., 16584., 22084., 23200., 23524., 24664., 24964., 26128.,
      26404., 27592., 20715., 21624., 14426., 15044., 7525.,  7840.,  7129.,
      7432.,  14858., 15476., 23199., 24144., 32164., 33448., 33604., 34912.,
      35044., 36376., 36484., 37840., 28401., 29436., 19634., 20336., 10171.,
      10528., 9523.,  9868.,  19730., 20432., 30633., 31704., 42244., 43696.,
      43684., 45160., 45124., 46624., 46564., 48088., 36087., 37248., 24842.,
      25628., 12817., 13216., 11917., 12304., 24602., 25388., 38067., 39264.,
      52324., 53944., 53764., 55408., 55204., 56872., 56644., 58336., 43773.,
      45060., 30050., 30920., 15463., 15904., 9460.,  9740.,  19476., 20044.,
      30056., 30920., 41208., 42376., 42232., 43416., 43256., 44456., 44280.,
      45496., 34136., 35060., 23380., 24004., 12004., 12320., 5525.,  5676.,
      11350., 11656., 17479., 17944., 23916., 24544., 24460., 25096., 25004.,
      25648., 25548., 26200., 19657., 20152., 13438., 13772., 6887.,  7056.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      61488.,   69104.,   85900.,   95740.,   114184.,  126376.,  146468.,
      161140.,  158900.,  174020.,  171332.,  186900.,  183764.,  199780.,
      172072.,  186184.,  155740.,  167820.,  134640.,  144560.,  131860.,
      144100.,  179525.,  195225.,  233390.,  252710.,  293615.,  316715.,
      313075.,  336735.,  332535.,  356755.,  351995.,  376775.,  323990.,
      345710.,  288825.,  307325.,  246340.,  261460.,  242152.,  260104.,
      324410.,  347330.,  415740.,  443820.,  516334.,  549766.,  544390.,
      578494.,  572446.,  607222.,  600502.,  635950.,  546348.,  577308.,
      481970.,  508250.,  407176.,  428584.,  401324.,  426076.,  531755.,
      563255.,  674674.,  713146.,  830305.,  875973.,  868525.,  914977.,
      906745.,  953981.,  944965.,  992985.,  852586.,  894418.,  746375.,
      781795.,  626108.,  654892.,  606284.,  635516.,  793555.,  830655.,
      995554.,  1040746., 1212505., 1266013., 1250725., 1305017., 1288945.,
      1344021., 1327165., 1383025., 1186906., 1235458., 1030575., 1071595.,
      857948.,  891212.,  811244.,  844956.,  1055355., 1098055., 1316434.,
      1368346., 1594705., 1656053., 1632925., 1695057., 1671145., 1734061.,
      1709365., 1773065., 1521226., 1576498., 1314775., 1361395., 1089788.,
      1127532., 994312.,  1026472., 1282370., 1323050., 1586604., 1635996.,
      1907206., 1965502., 1944670., 2003638., 1982134., 2041774., 2019598.,
      2079910., 1784028., 1836300., 1531130., 1575170., 1260712., 1296328.,
      1092660., 1122180., 1402125., 1439425., 1726430., 1771670., 2065735.,
      2119075., 2100875., 2154775., 2136015., 2190475., 2171155., 2226175.,
      1909190., 1956830., 1631425., 1671525., 1337700., 1370100., 1097328.,
      1123120., 1403420., 1435980., 1722472., 1761928., 2054612., 2101092.,
      2085860., 2132788., 2117108., 2164484., 2148356., 2196180., 1883272.,
      1924648., 1604460., 1639260., 1311792., 1339888., 631728.,  662384.,
      827500.,  866140.,  1038664., 1085416., 1265348., 1320340., 1277780.,
      1333220., 1290212., 1346100., 1302644., 1358980., 1165672., 1214344.,
      1012540., 1053420., 843120.,  876080.,  1046260., 1087300., 1358525.,
      1410225., 1691390., 1753910., 2045015., 2118515., 2064475., 2138535.,
      2083935., 2158555., 2103395., 2178575., 1868390., 1933310., 1611825.,
      1666325., 1333540., 1377460., 1581352., 1633864., 2041610., 2107730.,
      2528220., 2608140., 3041374., 3135286., 3069430., 3164014., 3097486.,
      3192742., 3125542., 3221470., 2762508., 2845308., 2371970., 2441450.,
      1953736., 2009704., 2245964., 2311036., 2887955., 2969855., 3562594.,
      3661546., 4270105., 4386333., 4308325., 4425337., 4346545., 4464341.,
      4384765., 4503345., 3861466., 3963778., 3304175., 3389995., 2712668.,
      2781772., 2450924., 2520476., 3149755., 3237255., 3883474., 3989146.,
      4652305., 4776373., 4690525., 4815377., 4728745., 4854381., 4766965.,
      4893385., 4195786., 4304818., 3588375., 3679795., 2944508., 3018092.,
      2655884., 2729916., 3411555., 3504655., 4204354., 4316746., 5034505.,
      5166413., 5072725., 5205417., 5110945., 5244421., 5149165., 5283425.,
      4530106., 4645858., 3872575., 3969595., 3176348., 3254412., 2817352.,
      2884072., 3604370., 3688250., 4424844., 4526076., 5278966., 5397742.,
      5316430., 5435878., 5353894., 5474014., 5391358., 5512150., 4725948.,
      4830060., 4025930., 4113170., 3291112., 3361288., 2813460., 2871780.,
      3589125., 3662425., 4394030., 4482470., 5228335., 5332075., 5263475.,
      5367775., 5298615., 5403475., 5333755., 5439175., 4663190., 4754030.,
      3962425., 4038525., 3231300., 3292500., 2635248., 2684080., 3354620.,
      3415980., 4098472., 4172488., 4866932., 4953732., 4898180., 4985428.,
      4929428., 5017124., 4960676., 5048820., 4328392., 4404328., 3670860.,
      3734460., 2987952., 3039088., 1201968., 1255664., 1569100., 1636540.,
      1963144., 2044456., 2384228., 2479540., 2396660., 2492420., 2409092.,
      2505300., 2421524., 2518180., 2159272., 2242504., 1869340., 1939020.,
      1551600., 1607600., 1960660., 2030500., 2537525., 2625225., 3149390.,
      3255110., 3796415., 3920315., 3815875., 3940335., 3835335., 3960355.,
      3854795., 3980375., 3412790., 3520910., 2934825., 3025325., 2420740.,
      2493460., 2920552., 3007624., 3758810., 3868130., 4640700., 4772460.,
      5566414., 5720806., 5594470., 5749534., 5622526., 5778262., 5650582.,
      5806990., 4978668., 5113308., 4261970., 4374650., 3500296., 3590824.,
      4090604., 4195996., 5244155., 5376455., 6450514., 6609946., 7709905.,
      7896693., 7748125., 7935697., 7786345., 7974701., 7824565., 8013705.,
      6870346., 7033138., 5861975., 5998195., 4799228., 4908652., 4295564.,
      4405436., 5505955., 5643855., 6771394., 6937546., 8092105., 8286733.,
      8130325., 8325737., 8168545., 8364741., 8206765., 8403745., 7204666.,
      7374178., 6146175., 6287995., 5031068., 5144972., 4500524., 4614876.,
      5767755., 5911255., 7092274., 7265146., 8474305., 8676773., 8512525.,
      8715777., 8550745., 8754781., 8588965., 8793785., 7538986., 7715218.,
      6430375., 6577795., 5262908., 5381292., 4640392., 4741672., 5926370.,
      6053450., 7263084., 7416156., 8650726., 8829982., 8688190., 8868118.,
      8725654., 8906254., 8763118., 8944390., 7667868., 7823820., 6520730.,
      6651170., 5321512., 5426248., 4534260., 4621380., 5776125., 5885425.,
      7061630., 7193270., 8390935., 8545075., 8426075., 8580775., 8461215.,
      8616475., 8496355., 8652175., 7417190., 7551230., 6293425., 6405525.,
      5124900., 5214900., 4173168., 4245040., 5305820., 5395980., 6474472.,
      6583048., 7679252., 7806372., 7710500., 7838068., 7741748., 7869764.,
      7772996., 7901460., 6773512., 6884008., 5737260., 5829660., 4664112.,
      4738288.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    119.,    275.,    292.,    564.,
      532.,    868.,    772.,    1172.,   1012.,   1476.,   1163.,   1559.,
      1066.,   1362.,   689.,    853.,    142.,    358.,    684.,    1180.,
      1690.,   2530.,   3224.,   4472.,   4216.,   5592.,   5208.,   6712.,
      6200.,   7832.,   5986.,   7306.,   4924.,   5868.,   2950.,   3454.,
      1307.,   1895.,   3742.,   5014.,   7401.,   9453.,   12380.,  15308.,
      14636.,  17756.,  16892.,  20204.,  19148.,  22652.,  17157.,  19929.,
      13366.,  15310.,  7679.,   8699.,   4247.,   5171.,   10294.,  12238.,
      18237.,  21297.,  28172.,  32444.,  30428.,  34892.,  32684.,  37340.,
      34940.,  39788.,  30009.,  33789.,  22606.,  25222.,  12635.,  13991.,
      7187.,   8447.,   16846.,  19462.,  29073.,  33141.,  43964.,  49580.,
      46220.,  52028.,  48476.,  54476.,  50732.,  56924.,  42861.,  47649.,
      31846.,  35134.,  17591.,  19283.,  10127.,  11723.,  23398.,  26686.,
      39909.,  44985.,  59756.,  66716.,  62012.,  69164.,  64268.,  71612.,
      66524.,  74060.,  55713.,  61509.,  41086.,  45046.,  22547.,  24575.,
      13067.,  14999.,  29950.,  33910.,  50745.,  56829.,  75548.,  83852.,
      77804.,  86300.,  80060.,  88748.,  82316.,  91196.,  68565.,  75369.,
      50326.,  54958.,  27503.,  29867.,  15414.,  16878.,  33724.,  36716.,
      54994.,  59578.,  79288.,  85528.,  81304.,  87672.,  83320.,  89816.,
      85336.,  91960.,  69082.,  74146.,  49484.,  52924.,  26478.,  28230.,
      11357.,  12177.,  24338.,  26010.,  38975.,  41531.,  55300.,  58772.,
      56564.,  60100.,  57828.,  61428.,  59092.,  62756.,  47123.,  49919.,
      33306.,  35202.,  17609.,  18573.,  149.,    361.,    706.,    1162.,
      1703.,   2435.,   3172.,   4212.,   4948.,   6052.,   6724.,   7892.,
      8500.,   9732.,   7355.,   8327.,   5578.,   6258.,   3137.,   3493.,
      3118.,   3718.,   7404.,   8668.,   12922.,  14914.,  19736.,  22520.,
      23800.,  26712.,  27864.,  30904.,  31928.,  35096.,  26434.,  28906.,
      19324.,  21036.,  10534.,  11422.,  9803.,   10967.,  21886.,  24310.,
      36345.,  40125.,  53276.,  58508.,  60140.,  65564.,  67004.,  72620.,
      73868.,  79676.,  59925.,  64425.,  43030.,  46126.,  23087.,  24683.,
      20807.,  22307.,  44566.,  47662.,  71373.,  76161.,  101324., 107900.,
      108188., 114956., 115052., 122012., 121916., 129068., 96969.,  102477.,
      68398.,  72166.,  36107.,  38039.,  31811.,  33647.,  67246.,  71014.,
      106401., 112197., 149372., 157292., 156236., 164348., 163100., 171404.,
      169964., 178460., 134013., 140529., 93766.,  98206.,  49127.,  51395.,
      42815.,  44987.,  89926.,  94366.,  141429., 148233., 197420., 206684.,
      204284., 213740., 211148., 220796., 218012., 227852., 171057., 178581.,
      119134., 124246., 62147.,  64751.,  53819.,  56327.,  112606., 117718.,
      176457., 184269., 245468., 256076., 252332., 263132., 259196., 270188.,
      266060., 277244., 208101., 216633., 144502., 150286., 75167.,  78107.,
      45270.,  47118.,  94204.,  97964.,  146866., 152602., 203320., 211096.,
      208408., 216312., 213496., 221528., 218584., 226744., 170170., 176386.,
      117644., 121852., 60942.,  63078.,  27629.,  28641.,  57266.,  59322.,
      88943.,  92075.,  122692., 126932., 125492., 129796., 128292., 132660.,
      131092., 135524., 101699., 105071., 70074.,  72354.,  36185.,  37341.,
      293.,    697.,    1378.,   2218.,   3287.,   4595.,   6052.,   7860.,
      9364.,   11236.,  12676.,  14612.,  15988.,  17988.,  13547.,  15095.,
      10090.,  11154.,  5585.,   6133.,   6094.,   7078.,   14124.,  16156.,
      24154.,  27298.,  36248.,  40568.,  43384.,  47832.,  50520.,  55096.,
      57656.,  62360.,  46882.,  50506.,  33724.,  36204.,  18118.,  19390.,
      18299.,  20039.,  40030.,  43606.,  65289.,  70797.,  94172.,  101708.,
      105644., 113372., 117116., 125036., 128588., 136700., 102693., 108921.,
      72694.,  76942.,  38495.,  40667.,  37367.,  39443.,  78838.,  83086.,
      124509., 131025., 174476., 183356., 185948., 195020., 197420., 206684.,
      208892., 218348., 163929., 171165., 114190., 119110., 59579.,  62087.,
      56435.,  58847.,  117646., 122566., 183729., 191253., 254780., 265004.,
      266252., 276668., 277724., 288332., 289196., 299996., 225165., 233409.,
      155686., 161278., 80663.,  83507.,  75503.,  78251.,  156454., 162046.,
      242949., 251481., 335084., 346652., 346556., 358316., 358028., 369980.,
      369500., 381644., 286401., 295653., 197182., 203446., 101747., 104927.,
      94571.,  97655.,  195262., 201526., 302169., 311709., 415388., 428300.,
      426860., 439964., 438332., 451628., 449804., 463292., 347637., 357897.,
      238678., 245614., 122831., 126347., 75126.,  77358.,  154684., 159212.,
      238738., 245626., 327352., 336664., 335512., 344952., 343672., 353240.,
      351832., 361528., 271258., 278626., 185804., 190780., 95406.,  97926.,
      43901.,  45105.,  90194.,  92634.,  138911., 142619., 190084., 195092.,
      194420., 199492., 198756., 203892., 203092., 208292., 156275., 160223.,
      106842., 109506., 54761.,  56109.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      484448.,   545120.,   677560.,   755960.,   901520.,   998672.,
      1157352.,  1274280.,  1256360.,  1376872.,  1355368.,  1479464.,
      1454376.,  1582056.,  1362704.,  1475216.,  1234040.,  1330360.,
      1067360.,  1146464.,  1042840.,  1140440.,  1420750.,  1545950.,
      1848100.,  2002180.,  2326170.,  2510410.,  2481290.,  2670010.,
      2636410.,  2829610.,  2791530.,  2989210.,  2570500.,  2743780.,
      2292350.,  2439950.,  1955800.,  2076440.,  1919504.,  2062736.,
      2572660.,  2755540.,  3298200.,  3522264.,  4097660.,  4364444.,
      4321436.,  4593596.,  4545212.,  4822748.,  4768988.,  5051900.,
      4340184.,  4587288.,  3829780.,  4039540.,  3236240.,  3407120.,
      3186120.,  3383688.,  4217770.,  4461018.,  5332716.,  5623436.,
      6532750.,  6872734.,  6783454.,  7121518.,  7017774.,  7353918.,
      7235710.,  7569934.,  6404492.,  6689324.,  5582650.,  5824490.,
      4664968.,  4862024.,  4702536.,  4903176.,  6002442.,  6249530.,
      7387180.,  7682508.,  8858542.,  9203902.,  8994558.,  9337998.,
      9114190.,  9455710.,  9217438.,  9557038.,  8009420.,  8298860.,
      6923930.,  7169610.,  5741064.,  5941192.,  5760200.,  5963912.,
      7213674.,  7464602.,  8753516.,  9053452.,  10381518., 10732254.,
      10402846., 10751662., 10407790., 10754686., 10396350., 10741326.,
      8926220.,  9220268.,  7691770.,  7941290.,  6358408.,  6561608.,
      6308752.,  6500112.,  7770196.,  8005044.,  9311704.,  9591576.,
      10934812., 11261244., 10835516., 11159132., 10719836., 11040636.,
      10587772., 10905756., 8967192.,  9237336.,  7704820.,  7933780.,
      6351632.,  6537872.,  6180632.,  6350936.,  7469998.,  7677886.,
      8828772.,  9075524.,  10258234., 10545130., 10025770., 10308954.,
      9776922.,  10056394., 9511690.,  9787450.,  7908676.,  8141860.,
      6790750.,  6988270.,  5594456.,  5755032.,  5304160.,  5444704.,
      6223480.,  6393528.,  7197200.,  7397776.,  8226344.,  8458472.,
      7848168.,  8075688.,  7453608.,  7676520.,  7042664.,  7260968.,
      5643152.,  5826320.,  4859960.,  5015160.,  4015200.,  4141408.,
      1795680.,  1909600.,  2383160.,  2528120.,  3028112.,  3205136.,
      3731560.,  3941672.,  3830568.,  4044264.,  3924456.,  4133544.,
      4001960.,  4206440.,  3589648.,  3765648.,  3113720.,  3260216.,
      2573152.,  2689120.,  3029016.,  3160408.,  3945710.,  4113150.,
      4928740.,  5133508.,  5979386.,  6222762.,  6134506.,  6382362.,
      6169818.,  6413962.,  6188746.,  6429178.,  5463748.,  5671332.,
      4664734.,  4838190.,  3790424.,  3928472.,  4308240.,  4465808.,
      5576500.,  5777300.,  6924312.,  7169880.,  8353212.,  8645084.,
      8576988.,  8874236.,  8566268.,  8860700.,  8539164.,  8830780.,
      7491160.,  7743384.,  6354388.,  6565684.,  5127312.,  5296144.,
      5705032.,  5897480.,  7365130.,  7610170.,  9122348.,  9421772.,
      10978478., 11334078., 11283454., 11645326., 11239246., 11599198.,
      11178654., 11536686., 9779404.,  10089324., 8272282.,  8532298.,
      6655496.,  6863816.,  5845192.,  6040712.,  7544170.,  7793050.,
      9341804.,  9645836.,  11239886., 11600862., 11544862., 11912110.,
      11385966., 11751294., 11210686., 11574094., 9778700.,  10093228.,
      8237306.,  8501162.,  6584712.,  6796104.,  5526600.,  5725192.,
      7149770.,  7402490.,  8873132.,  9181772.,  10698478., 11064830.,
      11003454., 11376078., 10729870., 11100574., 10439902., 10808686.,
      9089868.,  9409004.,  7628890.,  7896586.,  6055176.,  6269640.,
      4650640.,  4823568.,  6023700.,  6243700.,  7483992.,  7752600.,
      9033052.,  9351804.,  9332092.,  9656220.,  8937884.,  9259196.,
      8527292.,  8845788.,  7372952.,  7648216.,  6122164.,  6352660.,
      4773392.,  4957584.,  2911640.,  3050200.,  3807950.,  3984350.,
      4774180.,  4989700.,  5811610.,  6067530.,  6092170.,  6352570.,
      6372730.,  6637610.,  6653290.,  6922650.,  5942020.,  6176740.,
      5153150.,  5351950.,  4285400.,  4447000.,  3567968.,  3696224.,
      4616440.,  4779320.,  5729552.,  5928080.,  6908328.,  7143528.,
      7157864.,  7396648.,  7407400.,  7649768.,  7656936.,  7902888.,
      6780560.,  6994448.,  5833400.,  6014200.,  4814432.,  4961120.,
      1925216.,  2010464.,  2383800.,  2488824.,  2877328.,  3003152.,
      3406824.,  3554472.,  3189416.,  3332456.,  2955624.,  3094056.,
      3054632.,  3196648.,  2746640.,  2871440.,  2397560.,  2504120.,
      2006368.,  2093664.,  2805400.,  2921432.,  3464206.,  3608350.,
      4173476.,  4347012.,  4934490.,  5138698.,  4658506.,  4859002.,
      4366138.,  4562922.,  4521258.,  4722522.,  4056196.,  4232548.,
      3532990.,  3683150.,  2950360.,  3073048.,  3917840.,  4073360.,
      4845812.,  5039956.,  5844120.,  6078424.,  6914300.,  7190300.,
      6592284.,  6865468.,  6253884.,  6524252.,  6477660.,  6753404.,
      5798616.,  6039576.,  5040020.,  5244660.,  4200336.,  4367120.,
      5334216.,  5537928.,  6618218.,  6873242.,  7996780.,  8304908.,
      9471694.,  9834718.,  9116190.,  9477294.,  8744302.,  9103486.,
      9049278.,  9414734.,  8081420.,  8400044.,  7008250.,  7278250.,
      5827976.,  6047560.,  4327496.,  4534280.,  5306314.,  5565178.,
      6381228.,  6693964.,  7548910.,  7909118.,  7057214.,  7407310.,
      6532750.,  6872734.,  6783454.,  7121518.,  6061388.,  6351852.,
      5232474.,  5473546.,  4294920.,  4484808.,  4375496.,  4568968.,
      5704490.,  5950810.,  7131116.,  7432076.,  8537358.,  8886558.,
      8706142.,  9053422.,  8858542.,  9203902.,  8994558.,  9337998.,
      7895692.,  8190764.,  6688442.,  6933354.,  5371016.,  5563976.,
      5405072.,  5592336.,  6984660.,  7222580.,  8658648.,  8948760.,
      10194076., 10529724., 10242236., 10575068., 10274012., 10604028.,
      10289404., 10616604., 8924440.,  9204824.,  7455860.,  7687892.,
      5882128.,  6064272.,  5843992.,  6016344.,  7515630.,  7734270.,
      9274084.,  9540292.,  10771450., 11078314., 10686442., 10989594.,
      10585050., 10884490., 10467274., 10763002., 8982724.,  9235364.,
      7403678.,  7611950.,  5728856.,  5891480.,  5620576.,  5769312.,
      7207800.,  7396280.,  8869904.,  9099152.,  10144040., 10406888.,
      9913320.,  10171560., 9666216.,  9919848.,  9402728.,  9651752.,
      7963024.,  8174864.,  6442296.,  6615928.,  4839520.,  4973920.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     220.,     764.,     826.,     2026.,    2104.,
      4216.,    3960.,    6584.,    5816.,    8952.,    7672.,    11320.,
      8938.,    12058.,   8252.,    10588.,   5358.,    6654.,    940.,
      2636.,    5016.,    8920.,    12740.,   19364.,   24624.,   34480.,
      32432.,   43312.,   40240.,   52144.,   48048.,   60976.,   46628.,
      57092.,   38488.,   45976.,   23116.,   27116.,   9898.,    14554.,
      28724.,   38804.,   57246.,   73518.,   96232.,   119464.,  114088.,
      138856.,  131944.,  158248.,  149800.,  177640.,  134574.,  156606.,
      105044.,  120500.,  60442.,   68554.,   33082.,   40426.,   80468.,
      95924.,   142926.,  167262.,  221224.,  255208.,  239080.,  274600.,
      256936.,  293992.,  274792.,  313384.,  236382.,  266478.,  178292.,
      199124.,  99754.,   110554.,  56266.,   66298.,   132212.,  153044.,
      228606.,  261006.,  346216.,  390952.,  364072.,  410344.,  381928.,
      429736.,  399784.,  449128.,  338190.,  376350.,  251540.,  277748.,
      139066.,  152554.,  79450.,   92170.,   183956.,  210164.,  314286.,
      354750.,  471208.,  526696.,  489064.,  546088.,  506920.,  565480.,
      524776.,  584872.,  439998.,  486222.,  324788.,  356372.,  178378.,
      194554.,  102634.,  118042.,  235700.,  267284.,  399966.,  448494.,
      596200.,  662440.,  614056.,  681832.,  631912.,  701224.,  649768.,
      720616.,  541806.,  596094.,  398036.,  434996.,  217690.,  236554.,
      121868.,  133548.,  266840.,  290712.,  435428.,  472004.,  628144.,
      677936.,  644144.,  694960.,  660144.,  711984.,  676144.,  729008.,
      547652.,  588068.,  392472.,  419928.,  210092.,  224076.,  90046.,
      96590.,   193052.,  206396.,  309274.,  329674.,  438968.,  466680.,
      449016.,  477240.,  459064.,  487800.,  469112.,  498360.,  374218.,
      396538.,  264572.,  279708.,  139918.,  147614.,  990.,     2670.,
      5212.,    8828.,    12922.,   18730.,   24376.,   32632.,   38520.,
      47288.,   52664.,   61944.,   66808.,   76600.,   57898.,   65626.,
      43964.,   49372.,   24750.,   27582.,   24364.,   29132.,   58008.,
      68056.,   101444.,  117284.,  155184.,  177328.,  187568.,  210736.,
      219952.,  244144.,  252336.,  277552.,  209060.,  228740.,  152920.,
      166552.,  83404.,   90476.,   77290.,   86554.,   172724.,  192020.,
      287070.,  317166.,  421096.,  462760.,  475816.,  519016.,  530536.,
      575272.,  585256.,  631528.,  474990.,  510846.,  341204.,  365876.,
      183130.,  195850.,  164986.,  176938.,  353492.,  378164.,  566286.,
      604446.,  804136.,  856552.,  858856.,  912808.,  913576.,  969064.,
      968296.,  1025320., 770334.,  814254.,  543476.,  573524.,  286954.,
      302362.,  252682.,  267322.,  534260.,  564308.,  845502.,  891726.,
      1187176., 1250344., 1241896., 1306600., 1296616., 1362856., 1351336.,
      1419112., 1065678., 1117662., 745748.,  781172.,  390778.,  408874.,
      340378.,  357706.,  715028.,  750452.,  1124718., 1179006., 1570216.,
      1644136., 1624936., 1700392., 1679656., 1756648., 1734376., 1812904.,
      1361022., 1421070., 948020.,  988820.,  494602.,  515386.,  428074.,
      448090.,  895796.,  936596.,  1403934., 1466286., 1953256., 2037928.,
      2007976., 2094184., 2062696., 2150440., 2117416., 2206696., 1656366.,
      1724478., 1150292., 1196468., 598426.,  621898.,  360332.,  375084.,
      749912.,  779928.,  1169252., 1215044., 1618864., 1680944., 1659440.,
      1722544., 1700016., 1764144., 1740592., 1805744., 1355204., 1404836.,
      936984.,  970584.,  485420.,  502476.,  220030.,  228110.,  456092.,
      472508.,  708442.,  733450.,  977336.,  1011192., 999672.,  1034040.,
      1022008., 1056888., 1044344., 1079736., 810250.,  837178.,  558332.,
      576540.,  288334.,  297566.,  1950.,    5166.,    10204.,   16892.,
      25018.,   35434.,   46648.,   61048.,   73080.,   87992.,   99512.,
      114936.,  125944.,  141880.,  106858.,  119194.,  79676.,   88156.,
      44142.,   48510.,   47788.,   55628.,   111000.,  127192.,  190148.,
      215204.,  285744.,  320176.,  342704.,  378160.,  399664.,  436144.,
      456624.,  494128.,  371492.,  400388.,  267352.,  287128.,  143692.,
      153836.,  144682.,  158554.,  316724.,  345236.,  516894.,  560814.,
      745960.,  806056.,  837544.,  899176.,  929128.,  992296.,  1020712.,
      1085416., 815406.,  865086.,  577364.,  611252.,  305818.,  323146.,
      296890.,  313450.,  626516.,  660404.,  989646.,  1041630., 1387048.,
      1457896., 1478632., 1551016., 1570216., 1644136., 1661800., 1737256.,
      1304286., 1362030., 908660.,  947924.,  474154.,  494170.,  449098.,
      468346.,  936308.,  975572.,  1462398., 1522446., 2028136., 2109736.,
      2119720., 2202856., 2211304., 2295976., 2302888., 2389096., 1793166.,
      1858974., 1239956., 1284596., 642490.,  665194.,  601306.,  623242.,
      1246100., 1290740., 1935150., 2003262., 2669224., 2761576., 2760808.,
      2854696., 2852392., 2947816., 2943976., 3040936., 2282046., 2355918.,
      1571252., 1621268., 810826.,  836218.,  753514.,  778138.,  1555892.,
      1605908., 2407902., 2484078., 3310312., 3413416., 3401896., 3506536.,
      3493480., 3599656., 3585064., 3692776., 2770926., 2852862., 1902548.,
      1957940., 979162.,  1007242., 598796.,  616620.,  1232984., 1269144.,
      1903076., 1958084., 2609584., 2683952., 2674736., 2750128., 2739888.,
      2816304., 2805040., 2882480., 2162756., 2221604., 1481496., 1521240.,
      760748.,  780876.,  350014.,  359630.,  719132.,  738620.,  1107610.,
      1137226., 1515704., 1555704., 1550328., 1590840., 1584952., 1625976.,
      1619576., 1661112., 1246282., 1277818., 852092.,  873372.,  436750.,
      447518.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      29808.,   31680.,   33584.,   35520.,   41740.,   44160.,   46620.,
      49120.,   55592.,   58592.,   61640.,   64736.,   71428.,   75040.,
      78708.,   82432.,   77588.,   81312.,   85092.,   88928.,   83748.,
      87584.,   91476.,   95424.,   89908.,   93856.,   97860.,   101920.,
      84296.,   87776.,   91304.,   94880.,   76380.,   79360.,   82380.,
      85440.,   66096.,   68544.,   71024.,   73536.,   64420.,   67440.,
      70500.,   73600.,   87825.,   91700.,   95625.,   99600.,   114310.,
      119080.,  123910.,  128800.,  143955.,  149660.,  155435.,  161280.,
      153615.,  159460.,  165375.,  171360.,  163275.,  169260.,  175315.,
      181440.,  172935.,  179060.,  185255.,  191520.,  159310.,  164680.,
      170110.,  175600.,  142125.,  146700.,  151325.,  156000.,  121300.,
      125040.,  128820.,  132640.,  118856.,  123296.,  127784.,  132320.,
      159370.,  165040.,  170770.,  176560.,  204396.,  211344.,  218364.,
      225456.,  254030.,  262304.,  270662.,  279104.,  267974.,  276416.,
      284942.,  293552.,  281918.,  290528.,  299222.,  308000.,  295862.,
      304640.,  313502.,  322448.,  269340.,  277008.,  284748.,  292560.,
      237730.,  244240.,  250810.,  257440.,  200936.,  206240.,  211592.,
      216992.,  197596.,  203728.,  209916.,  216160.,  261975.,  269780.,
      277655.,  285600.,  332570.,  342104.,  351722.,  361424.,  409493.,
      420812.,  432229.,  443744.,  428505.,  440020.,  451633.,  463344.,
      447517.,  459228.,  471037.,  482944.,  466529.,  478436.,  490441.,
      502544.,  421106.,  431480.,  441938.,  452480.,  368795.,  377580.,
      386435.,  395360.,  309484.,  316624.,  323820.,  331072.,  299516.,
      306768.,  314076.,  321440.,  392175.,  401380.,  410655.,  420000.,
      492170.,  503384.,  514682.,  526064.,  599613.,  612892.,  626269.,
      639744.,  618625.,  632100.,  645673.,  659344.,  637637.,  651308.,
      665077.,  678944.,  656649.,  670516.,  684481.,  698544.,  587426.,
      599480.,  611618.,  623840.,  510195.,  520380.,  530635.,  540960.,
      424844.,  433104.,  441420.,  449792.,  401436.,  409808.,  418236.,
      426720.,  522375.,  532980.,  543655.,  554400.,  651770.,  664664.,
      677642.,  690704.,  789733.,  804972.,  820309.,  835744.,  808745.,
      824180.,  839713.,  855344.,  827757.,  843388.,  859117.,  874944.,
      846769.,  862596.,  878521.,  894544.,  753746.,  767480.,  781298.,
      795200.,  651595.,  663180.,  674835.,  686560.,  540204.,  549584.,
      559020.,  568512.,  493160.,  501152.,  509192.,  517280.,  636130.,
      646240.,  656410.,  666640.,  787164.,  799440.,  811788.,  824208.,
      946358.,  960848.,  975422.,  990080.,  965006.,  979664.,  994406.,
      1009232., 983654.,  998480.,  1013390., 1028384., 1002302., 1017296.,
      1032374., 1047536., 885516.,  898512.,  911580.,  924720.,  760090.,
      771040.,  782050.,  793120.,  625928.,  634784.,  643688.,  652640.,
      542660.,  550000.,  557380.,  564800.,  696425.,  705700.,  715025.,
      724400.,  857590.,  868840.,  880150.,  891520.,  1026235., 1039500.,
      1052835., 1066240., 1043735., 1057140., 1070615., 1084160., 1061235.,
      1074780., 1088395., 1102080., 1078735., 1092420., 1106175., 1120000.,
      948670.,  960520.,  972430.,  984400.,  810725.,  820700.,  830725.,
      840800.,  664820.,  672880.,  680980.,  689120.,  545456.,  551872.,
      558320.,  564800.,  697660.,  705760.,  713900.,  722080.,  856328.,
      866144.,  876008.,  885920.,  1021524., 1033088., 1044708., 1056384.,
      1037092., 1048768., 1060500., 1072288., 1052660., 1064448., 1076292.,
      1088192., 1068228., 1080128., 1092084., 1104096., 936488.,  946784.,
      957128.,  967520.,  797900.,  806560.,  815260.,  824000.,  652400.,
      659392.,  666416.,  673472.,  312048.,  319680.,  327344.,  335040.,
      408940.,  418560.,  428220.,  437920.,  513512.,  525152.,  536840.,
      548576.,  625828.,  639520.,  653268.,  667072.,  631988.,  645792.,
      659652.,  673568.,  638148.,  652064.,  666036.,  680064.,  644308.,
      658336.,  672420.,  686560.,  576776.,  588896.,  601064.,  613280.,
      501180.,  511360.,  521580.,  531840.,  417456.,  425664.,  433904.,
      442176.,  518020.,  528240.,  538500.,  548800.,  672825.,  685700.,
      698625.,  711600.,  837910.,  853480.,  869110.,  884800.,  1013355.,
      1031660., 1050035., 1068480., 1023015., 1041460., 1059975., 1078560.,
      1032675., 1051260., 1069915., 1088640., 1042335., 1061060., 1079855.,
      1098720., 926110.,  942280.,  958510.,  974800.,  799125.,  812700.,
      826325.,  840000.,  661300.,  672240.,  683220.,  694240.,  784136.,
      797216.,  810344.,  823520.,  1012570., 1029040., 1045570., 1062160.,
      1254156., 1274064., 1294044., 1314096., 1508990., 1532384., 1555862.,
      1579424., 1522934., 1546496., 1570142., 1593872., 1536878., 1560608.,
      1584422., 1608320., 1550822., 1574720., 1598702., 1622768., 1370940.,
      1391568., 1412268., 1433040., 1177330., 1194640., 1212010., 1229440.,
      969896.,  983840.,  997832.,  1011872., 1114876., 1131088., 1147356.,
      1163680., 1433775., 1454180., 1474655., 1495200., 1768970., 1793624.,
      1818362., 1843184., 2120573., 2149532., 2178589., 2207744., 2139585.,
      2168740., 2197993., 2227344., 2158597., 2187948., 2217397., 2246944.,
      2177609., 2207156., 2236801., 2266544., 1917986., 1943480., 1969058.,
      1994720., 1641395., 1662780., 1684235., 1705760., 1347724., 1364944.,
      1382220., 1399552., 1216796., 1234128., 1251516., 1268960., 1563975.,
      1585780., 1607655., 1629600., 1928570., 1954904., 1981322., 2007824.,
      2310693., 2341612., 2372629., 2403744., 2329705., 2360820., 2392033.,
      2423344., 2348717., 2380028., 2411437., 2442944., 2367729., 2399236.,
      2430841., 2462544., 2084306., 2111480., 2138738., 2166080., 1782795.,
      1805580., 1828435., 1851360., 1463084., 1481424., 1499820., 1518272.,
      1318716., 1337168., 1355676., 1374240., 1694175., 1717380., 1740655.,
      1764000., 2088170., 2116184., 2144282., 2172464., 2500813., 2533692.,
      2566669., 2599744., 2519825., 2552900., 2586073., 2619344., 2538837.,
      2572108., 2605477., 2638944., 2557849., 2591316., 2624881., 2658544.,
      2250626., 2279480., 2308418., 2337440., 1924195., 1948380., 1972635.,
      1996960., 1578444., 1597904., 1617420., 1636992., 1400360., 1416992.,
      1433672., 1450400., 1791730., 1812640., 1833610., 1854640., 2199804.,
      2225040., 2250348., 2275728., 2624678., 2654288., 2683982., 2713760.,
      2643326., 2673104., 2702966., 2732912., 2661974., 2691920., 2721950.,
      2752064., 2680622., 2710736., 2740934., 2771216., 2349996., 2375952.,
      2401980., 2428080., 2002090., 2023840., 2045650., 2067520., 1636808.,
      1654304., 1671848., 1689440., 1399460., 1414000., 1428580., 1443200.,
      1785425., 1803700., 1822025., 1840400., 2185990., 2208040., 2230150.,
      2252320., 2601235., 2627100., 2653035., 2679040., 2618735., 2644740.,
      2670815., 2696960., 2636235., 2662380., 2688595., 2714880., 2653735.,
      2680020., 2706375., 2732800., 2320270., 2342920., 2365630., 2388400.,
      1971725., 1990700., 2009725., 2028800., 1608020., 1623280., 1638580.,
      1653920., 1311536., 1323712., 1335920., 1348160., 1669660., 1684960.,
      1700300., 1715680., 2040008., 2058464., 2076968., 2095520., 2422644.,
      2444288., 2465988., 2487744., 2438212., 2459968., 2481780., 2503648.,
      2453780., 2475648., 2497572., 2519552., 2469348., 2491328., 2513364.,
      2535456., 2154728., 2173664., 2192648., 2211680., 1827500., 1843360.,
      1859260., 1875200., 1487600., 1500352., 1513136., 1525952., 594288.,
      607680.,  621104.,  634560.,  776140.,  792960.,  809820.,  826720.,
      971432.,  991712.,  1012040., 1032416., 1180228., 1204000., 1227828.,
      1251712., 1186388., 1210272., 1234212., 1258208., 1192548., 1216544.,
      1240596., 1264704., 1198708., 1222816., 1246980., 1271200., 1069256.,
      1090016., 1110824., 1131680., 925980.,  943360.,  960780.,  978240.,
      768816.,  782784.,  796784.,  810816.,  971620.,  989040.,  1006500.,
      1024000., 1257825., 1279700., 1301625., 1323600., 1561510., 1587880.,
      1614310., 1640800., 1882755., 1913660., 1944635., 1975680., 1892415.,
      1923460., 1954575., 1985760., 1902075., 1933260., 1964515., 1995840.,
      1911735., 1943060., 1974455., 2005920., 1692910., 1719880., 1746910.,
      1774000., 1456125., 1478700., 1501325., 1524000., 1201300., 1219440.,
      1237620., 1255840., 1449416., 1471136., 1492904., 1514720., 1865770.,
      1893040., 1920370., 1947760., 2303916., 2336784., 2369724., 2402736.,
      2763950., 2802464., 2841062., 2879744., 2777894., 2816576., 2855342.,
      2894192., 2791838., 2830688., 2869622., 2908640., 2805782., 2844800.,
      2883902., 2923088., 2472540., 2506128., 2539788., 2573520., 2116930.,
      2145040., 2173210., 2201440., 1738856., 1761440., 1784072., 1806752.,
      2032156., 2058448., 2084796., 2111200., 2605575., 2638580., 2671655.,
      2704800., 3205370., 3245144., 3285002., 3324944., 3831653., 3878252.,
      3924949., 3971744., 3850665., 3897460., 3944353., 3991344., 3869677.,
      3916668., 3963757., 4010944., 3888689., 3935876., 3983161., 4030544.,
      3414866., 3455480., 3496178., 3536960., 2913995., 2947980., 2982035.,
      3016160., 2385964., 2413264., 2440620., 2468032., 2134076., 2161488.,
      2188956., 2216480., 2735775., 2770180., 2804655., 2839200., 3364970.,
      3406424., 3447962., 3489584., 4021773., 4070332., 4118989., 4167744.,
      4040785., 4089540., 4138393., 4187344., 4059797., 4108748., 4157797.,
      4206944., 4078809., 4127956., 4177201., 4226544., 3581186., 3623480.,
      3665858., 3708320., 3055395., 3090780., 3126235., 3161760., 2501324.,
      2529744., 2558220., 2586752., 2235996., 2264528., 2293116., 2321760.,
      2865975., 2901780., 2937655., 2973600., 3524570., 3567704., 3610922.,
      3654224., 4211893., 4262412., 4313029., 4363744., 4230905., 4281620.,
      4332433., 4383344., 4249917., 4300828., 4351837., 4402944., 4268929.,
      4320036., 4371241., 4422544., 3747506., 3791480., 3835538., 3879680.,
      3196795., 3233580., 3270435., 3307360., 2616684., 2646224., 2675820.,
      2705472., 2307560., 2332832., 2358152., 2383520., 2947330., 2979040.,
      3010810., 3042640., 3612444., 3650640., 3688908., 3727248., 4302998.,
      4347728., 4392542., 4437440., 4321646., 4366544., 4411526., 4456592.,
      4340294., 4385360., 4430510., 4475744., 4358942., 4404176., 4449494.,
      4494896., 3814476., 3853392., 3892380., 3931440., 3244090., 3276640.,
      3309250., 3341920., 2647688., 2673824., 2700008., 2726240., 2256260.,
      2278000., 2299780., 2321600., 2874425., 2901700., 2929025., 2956400.,
      3514390., 3547240., 3580150., 3613120., 4176235., 4214700., 4253235.,
      4291840., 4193735., 4232340., 4271015., 4309760., 4211235., 4249980.,
      4288795., 4327680., 4228735., 4267620., 4306575., 4345600., 3691870.,
      3725320., 3758830., 3792400., 3132725., 3160700., 3188725., 3216800.,
      2551220., 2573680., 2596180., 2618720., 2077616., 2095552., 2113520.,
      2131520., 2641660., 2664160., 2686700., 2709280., 3223688., 3250784.,
      3277928., 3305120., 3823764., 3855488., 3887268., 3919104., 3839332.,
      3871168., 3903060., 3935008., 3854900., 3886848., 3918852., 3950912.,
      3870468., 3902528., 3934644., 3966816., 3372968., 3400544., 3428168.,
      3455840., 2857100., 2880160., 2903260., 2926400., 2322800., 2341312.,
      2359856., 2378432.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,      4.,      9.,      16.,     10.,     24.,     42.,     64.,
      43.,     76.,     115.,    160.,    116.,    176.,    244.,    320.,
      228.,    304.,    388.,    480.,    340.,    432.,    532.,    640.,
      452.,    560.,    676.,    800.,    535.,    628.,    727.,    832.,
      498.,    568.,    642.,    720.,    325.,    364.,    405.,    448.,
      46.,     96.,     150.,    208.,    284.,    400.,    524.,    656.,
      746.,    944.,    1154.,   1376.,   1464.,   1760.,   2072.,   2400.,
      1944.,   2272.,   2616.,   2976.,   2424.,   2784.,   3160.,   3552.,
      2904.,   3296.,   3704.,   4128.,   2834.,   3152.,   3482.,   3824.,
      2348.,   2576.,   2812.,   3056.,   1414.,   1536.,   1662.,   1792.,
      583.,    724.,    871.,    1024.,   1718.,   2024.,   2342.,   2672.,
      3453.,   3948.,   4461.,   4992.,   5836.,   6544.,   7276.,   8032.,
      6940.,   7696.,   8476.,   9280.,   8044.,   8848.,   9676.,   10528.,
      9148.,   10000.,  10876.,  11776.,  8241.,   8916.,   9609.,   10320.,
      6446.,   6920.,   7406.,   7904.,   3715.,   3964.,   4219.,   4480.,
      2011.,   2236.,   2467.,   2704.,   4910.,   5384.,   5870.,   6368.,
      8745.,   9492.,   10257.,  11040.,  13564.,  14608.,  15676.,  16768.,
      14668.,  15760.,  16876.,  18016.,  15772.,  16912.,  18076.,  19264.,
      16876.,  18064.,  19276.,  20512.,  14541.,  15468.,  16413.,  17376.,
      10982.,  11624.,  12278.,  12944.,  6151.,   6484.,   6823.,   7168.,
      3439.,   3748.,   4063.,   4384.,   8102.,   8744.,   9398.,   10064.,
      14037.,  15036.,  16053.,  17088.,  21292.,  22672.,  24076.,  25504.,
      22396.,  23824.,  25276.,  26752.,  23500.,  24976.,  26476.,  28000.,
      24604.,  26128.,  27676.,  29248.,  20841.,  22020.,  23217.,  24432.,
      15518.,  16328.,  17150.,  17984.,  8587.,   9004.,   9427.,   9856.,
      4867.,   5260.,   5659.,   6064.,   11294.,  12104.,  12926.,  13760.,
      19329.,  20580.,  21849.,  23136.,  29020.,  30736.,  32476.,  34240.,
      30124.,  31888.,  33676.,  35488.,  31228.,  33040.,  34876.,  36736.,
      32332.,  34192.,  36076.,  37984.,  27141.,  28572.,  30021.,  31488.,
      20054.,  21032.,  22022.,  23024.,  11023.,  11524.,  12031.,  12544.,
      6295.,   6772.,   7255.,   7744.,   14486.,  15464.,  16454.,  17456.,
      24621.,  26124.,  27645.,  29184.,  36748.,  38800.,  40876.,  42976.,
      37852.,  39952.,  42076.,  44224.,  38956.,  41104.,  43276.,  45472.,
      40060.,  42256.,  44476.,  46720.,  33441.,  35124.,  36825.,  38544.,
      24590.,  25736.,  26894.,  28064.,  13459.,  14044.,  14635.,  15232.,
      7526.,   7888.,   8254.,   8624.,   16492.,  17232.,  17980.,  18736.,
      26930.,  28064.,  29210.,  30368.,  38872.,  40416.,  41976.,  43552.,
      39864.,  41440.,  43032.,  44640.,  40856.,  42464.,  44088.,  45728.,
      41848.,  43488.,  45144.,  46816.,  33914.,  35168.,  36434.,  37712.,
      24316.,  25168.,  26028.,  26896.,  13022.,  13456.,  13894.,  14336.,
      5577.,   5780.,   5985.,   6192.,   11962.,  12376.,  12794.,  13216.,
      19171.,  19804.,  20443.,  21088.,  27220.,  28080.,  28948.,  29824.,
      27844.,  28720.,  29604.,  30496.,  28468.,  29360.,  30260.,  31168.,
      29092.,  30000.,  30916.,  31840.,  23215.,  23908.,  24607.,  25312.,
      16418.,  16888.,  17362.,  17840.,  8685.,   8924.,   9165.,   9408.,
      49.,     100.,    153.,    208.,    298.,    408.,    522.,    640.,
      763.,    940.,    1123.,   1312.,   1460.,   1712.,   1972.,   2240.,
      2340.,   2608.,   2884.,   3168.,   3220.,   3504.,   3796.,   4096.,
      4100.,   4400.,   4708.,   5024.,   3559.,   3796.,   4039.,   4288.,
      2706.,   2872.,   3042.,   3216.,   1525.,   1612.,   1701.,   1792.,
      1486.,   1632.,   1782.,   1936.,   3548.,   3856.,   4172.,   4496.,
      6218.,   6704.,   7202.,   7712.,   9528.,   10208.,  10904.,  11616.,
      11544.,  12256.,  12984.,  13728.,  13560.,  14304.,  15064.,  15840.,
      15576.,  16352.,  17144.,  17952.,  12914.,  13520.,  14138.,  14768.,
      9452.,   9872.,   10300.,  10736.,  5158.,   5376.,   5598.,   5824.,
      4759.,   5044.,   5335.,   5632.,   10646.,  11240.,  11846.,  12464.,
      17709.,  18636.,  19581.,  20544.,  25996.,  27280.,  28588.,  29920.,
      29404.,  30736.,  32092.,  33472.,  32812.,  34192.,  35596.,  37024.,
      36220.,  37648.,  39100.,  40576.,  29409.,  30516.,  31641.,  32784.,
      21134.,  21896.,  22670.,  23456.,  11347.,  11740.,  12139.,  12544.,
      10219.,  10588.,  10963.,  11344.,  21902.,  22664.,  23438.,  24224.,
      35097.,  36276.,  37473.,  38688.,  49852.,  51472.,  53116.,  54784.,
      53260.,  54928.,  56620.,  58336.,  56668.,  58384.,  60124.,  61888.,
      60076.,  61840.,  63628.,  65440.,  47805.,  49164.,  50541.,  51936.,
      33734.,  34664.,  35606.,  36560.,  17815.,  18292.,  18775.,  19264.,
      15679.,  16132.,  16591.,  17056.,  33158.,  34088.,  35030.,  35984.,
      52485.,  53916.,  55365.,  56832.,  73708.,  75664.,  77644.,  79648.,
      77116.,  79120.,  81148.,  83200.,  80524.,  82576.,  84652.,  86752.,
      83932.,  86032.,  88156.,  90304.,  66201.,  67812.,  69441.,  71088.,
      46334.,  47432.,  48542.,  49664.,  24283.,  24844.,  25411.,  25984.,
      21139.,  21676.,  22219.,  22768.,  44414.,  45512.,  46622.,  47744.,
      69873.,  71556.,  73257.,  74976.,  97564.,  99856.,  102172., 104512.,
      100972., 103312., 105676., 108064., 104380., 106768., 109180., 111616.,
      107788., 110224., 112684., 115168., 84597.,  86460.,  88341.,  90240.,
      58934.,  60200.,  61478.,  62768.,  30751.,  31396.,  32047.,  32704.,
      26599.,  27220.,  27847.,  28480.,  55670.,  56936.,  58214.,  59504.,
      87261.,  89196.,  91149.,  93120.,  121420., 124048., 126700., 129376.,
      124828., 127504., 130204., 132928., 128236., 130960., 133708., 136480.,
      131644., 134416., 137212., 140032., 102993., 105108., 107241., 109392.,
      71534.,  72968.,  74414.,  75872.,  37219.,  37948.,  38683.,  39424.,
      22406.,  22864.,  23326.,  23792.,  46636.,  47568.,  48508.,  49456.,
      72722.,  74144.,  75578.,  77024.,  100696., 102624., 104568., 106528.,
      103224., 105184., 107160., 109152., 105752., 107744., 109752., 111776.,
      108280., 110304., 112344., 114400., 84314.,  85856.,  87410.,  88976.,
      58300.,  59344.,  60396.,  61456.,  30206.,  30736.,  31270.,  31808.,
      13689.,  13940.,  14193.,  14448.,  28378.,  28888.,  29402.,  29920.,
      44083.,  44860.,  45643.,  46432.,  60820.,  61872.,  62932.,  64000.,
      62212.,  63280.,  64356.,  65440.,  63604.,  64688.,  65780.,  66880.,
      64996.,  66096.,  67204.,  68320.,  50431.,  51268.,  52111.,  52960.,
      34754.,  35320.,  35890.,  36464.,  17949.,  18236.,  18525.,  18816.,
      97.,     196.,    297.,    400.,    586.,    792.,    1002.,   1216.,
      1483.,   1804.,   2131.,   2464.,   2804.,   3248.,   3700.,   4160.,
      4452.,   4912.,   5380.,   5856.,   6100.,   6576.,   7060.,   7552.,
      7748.,   8240.,   8740.,   9248.,   6583.,   6964.,   7351.,   7744.,
      4914.,   5176.,   5442.,   5712.,   2725.,   2860.,   2997.,   3136.,
      2926.,   3168.,   3414.,   3664.,   6812.,   7312.,   7820.,   8336.,
      11690.,  12464.,  13250.,  14048.,  17592.,  18656.,  19736.,  20832.,
      21144.,  22240.,  23352.,  24480.,  24696.,  25824.,  26968.,  28128.,
      28248.,  29408.,  30584.,  31776.,  22994.,  23888.,  24794.,  25712.,
      16556.,  17168.,  17788.,  18416.,  8902.,   9216.,   9534.,   9856.,
      8935.,   9364.,   9799.,   10240.,  19574.,  20456.,  21350.,  22256.,
      31965.,  33324.,  34701.,  36096.,  46156.,  48016.,  49900.,  51808.,
      51868.,  53776.,  55708.,  57664.,  57580.,  59536.,  61516.,  63520.,
      63292.,  65296.,  67324.,  69376.,  50577.,  52116.,  53673.,  55248.,
      35822.,  36872.,  37934.,  39008.,  18979.,  19516.,  20059.,  20608.,
      18427.,  18940.,  19459.,  19984.,  38894.,  39944.,  41006.,  42080.,
      61449.,  63060.,  64689.,  66336.,  86140.,  88336.,  90556.,  92800.,
      91852.,  94096.,  96364.,  98656.,  97564.,  99856.,  102172., 104512.,
      103276., 105616., 107980., 110368., 81069.,  82860.,  84669.,  86496.,
      56486.,  57704.,  58934.,  60176.,  29479.,  30100.,  30727.,  31360.,
      27919.,  28516.,  29119.,  29728.,  58214.,  59432.,  60662.,  61904.,
      90933.,  92796.,  94677.,  96576.,  126124., 128656., 131212., 133792.,
      131836., 134416., 137020., 139648., 137548., 140176., 142828., 145504.,
      143260., 145936., 148636., 151360., 111561., 113604., 115665., 117744.,
      77150.,  78536.,  79934.,  81344.,  39979.,  40684.,  41395.,  42112.,
      37411.,  38092.,  38779.,  39472.,  77534.,  78920.,  80318.,  81728.,
      120417., 122532., 124665., 126816., 166108., 168976., 171868., 174784.,
      171820., 174736., 177676., 180640., 177532., 180496., 183484., 186496.,
      183244., 186256., 189292., 192352., 142053., 144348., 146661., 148992.,
      97814.,  99368.,  100934., 102512., 50479.,  51268.,  52063.,  52864.,
      46903.,  47668.,  48439.,  49216.,  96854.,  98408.,  99974.,  101552.,
      149901., 152268., 154653., 157056., 206092., 209296., 212524., 215776.,
      211804., 215056., 218332., 221632., 217516., 220816., 224140., 227488.,
      223228., 226576., 229948., 233344., 172545., 175092., 177657., 180240.,
      118478., 120200., 121934., 123680., 60979.,  61852.,  62731.,  63616.,
      37286.,  37840.,  38398.,  38960.,  76780.,  77904.,  79036.,  80176.,
      118514., 120224., 121946., 123680., 162520., 164832., 167160., 169504.,
      166584., 168928., 171288., 173664., 170648., 173024., 175416., 177824.,
      174712., 177120., 179544., 181984., 134714., 136544., 138386., 140240.,
      92284.,  93520.,  94764.,  96016.,  47390.,  48016.,  48646.,  49280.,
      21801.,  22100.,  22401.,  22704.,  44794.,  45400.,  46010.,  46624.,
      68995.,  69916.,  70843.,  71776.,  94420.,  95664.,  96916.,  98176.,
      96580.,  97840.,  99108.,  100384., 98740.,  100016., 101300., 102592.,
      100900., 102192., 103492., 104800., 77647.,  78628.,  79615.,  80608.,
      53090.,  53752.,  54418.,  55088.,  27213.,  27548.,  27885.,  28224.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      234768.,   249680.,   264848.,   280272.,   329140.,   348420.,
      368020.,   387940.,   438808.,   462712.,   487000.,   511672.,
      564284.,   593068.,   622300.,   651980.,   613340.,   643020.,
      673148.,   703724.,   662396.,   692972.,   723996.,   755468.,
      711452.,   742924.,   774844.,   807212.,   667480.,   695224.,
      723352.,   751864.,   605140.,   628900.,   652980.,   677380.,
      523920.,   543440.,   563216.,   583248.,   509380.,   533460.,
      557860.,   582580.,   694925.,   725825.,   757125.,   788825.,
      905030.,   943070.,   981590.,   1020590.,  1140335.,  1185835.,
      1231895.,  1278515.,  1217335.,  1263955.,  1311135.,  1358875.,
      1294335.,  1342075.,  1390375.,  1439235.,  1371335.,  1420195.,
      1469615.,  1519595.,  1263830.,  1306670.,  1349990.,  1393790.,
      1127925.,  1164425.,  1201325.,  1238625.,  962980.,   992820.,
      1022980.,  1053460.,  942040.,   977464.,   1013272.,  1049464.,
      1263710.,  1308950.,  1354670.,  1400870.,  1621380.,  1676820.,
      1732836.,  1789428.,  2015818.,  2081842.,  2148538.,  2215906.,
      2127034.,  2194402.,  2262442.,  2331154.,  2238250.,  2306962.,
      2376346.,  2446402.,  2349466.,  2419522.,  2490250.,  2561650.,
      2139492.,  2200692.,  2262468.,  2324820.,  1888910.,  1940870.,
      1993310.,  2046230.,  1596952.,  1639288.,  1682008.,  1725112.,
      1568588.,  1617532.,  1666924.,  1716764.,  2080295.,  2142595.,
      2205455.,  2268875.,  2641618.,  2717722.,  2794498.,  2871946.,
      3253453.,  3343809.,  3434949.,  3526873.,  3405157.,  3497081.,
      3589789.,  3683281.,  3556861.,  3650353.,  3744629.,  3839689.,
      3708565.,  3803625.,  3899469.,  3996097.,  3348226.,  3431050.,
      3514546.,  3598714.,  2932895.,  3003035.,  3073735.,  3144995.,
      2461676.,  2518684.,  2576140.,  2634044.,  2381708.,  2439612.,
      2497964.,  2556764.,  3119095.,  3192595.,  3266655.,  3341275.,
      3915058.,  4004602.,  4094818.,  4185706.,  4770493.,  4876529.,
      4983349.,  5090953.,  4922197.,  5029801.,  5138189.,  5247361.,
      5073901.,  5183073.,  5293029.,  5403769.,  5225605.,  5336345.,
      5447869.,  5560177.,  4675426.,  4771690.,  4868626.,  4966234.,
      4061295.,  4142635.,  4224535.,  4306995.,  3382316.,  3448284.,
      3514700.,  3581564.,  3194828.,  3261692.,  3329004.,  3396764.,
      4157895.,  4242595.,  4327855.,  4413675.,  5188498.,  5291482.,
      5395138.,  5499466.,  6287533.,  6409249.,  6531749.,  6655033.,
      6439237.,  6562521.,  6686589.,  6811441.,  6590941.,  6715793.,
      6841429.,  6967849.,  6742645.,  6869065.,  6996269.,  7124257.,
      6002626.,  6112330.,  6222706.,  6333754.,  5189695.,  5282235.,
      5375335.,  5468995.,  4302956.,  4377884.,  4453260.,  4529084.,
      3929368.,  3993208.,  4057432.,  4122040.,  5068910.,  5149670.,
      5230910.,  5312630.,  6272868.,  6370932.,  6469572.,  6568788.,
      7542010.,  7657762.,  7774186.,  7891282.,  7690858.,  7807954.,
      7925722.,  8044162.,  7839706.,  7958146.,  8077258.,  8197042.,
      7988554.,  8108338.,  8228794.,  8349922.,  7058244.,  7162068.,
      7266468.,  7371444.,  6058910.,  6146390.,  6234350.,  6322790.,
      4989784.,  5060536.,  5131672.,  5203192.,  4326660.,  4385300.,
      4444260.,  4503540.,  5552925.,  5627025.,  5701525.,  5776425.,
      6838310.,  6928190.,  7018550.,  7109390.,  8183455.,  8289435.,
      8395975.,  8503075.,  8323175.,  8430275.,  8537935.,  8646155.,
      8462895.,  8571115.,  8679895.,  8789235.,  8602615.,  8711955.,
      8821855.,  8932315.,  7565750.,  7660430.,  7755590.,  7851230.,
      6465925.,  6545625.,  6625725.,  6706225.,  5302500.,  5366900.,
      5431620.,  5496660.,  4350864.,  4402128.,  4453648.,  4505424.,
      5565140.,  5629860.,  5694900.,  5760260.,  6831064.,  6909496.,
      6988312.,  7067512.,  8149148.,  8241548.,  8334396.,  8427692.,
      8273468.,  8366764.,  8460508.,  8554700.,  8397788.,  8491980.,
      8586620.,  8681708.,  8522108.,  8617196.,  8712732.,  8808716.,
      7471384.,  7553656.,  7636312.,  7719352.,  6365940.,  6435140.,
      6504660.,  6574500.,  5205264.,  5261136.,  5317264.,  5373648.,
      2481168.,  2542160.,  2603408.,  2664912.,  3252340.,  3329220.,
      3406420.,  3483940.,  4084888.,  4177912.,  4271320.,  4365112.,
      4979324.,  5088748.,  5198620.,  5308940.,  5028380.,  5138700.,
      5249468.,  5360684.,  5074364.,  5181484.,  5289052.,  5397068.,
      5103964.,  5207884.,  5312252.,  5417068.,  4534744.,  4623416.,
      4712472.,  4801912.,  3901076.,  3974244.,  4047732.,  4121540.,
      3202448.,  3259856.,  3317520.,  3375440.,  4013188.,  4078484.,
      4144100.,  4210036.,  5177725.,  5260145.,  5342965.,  5426185.,
      6408038.,  6507902.,  6608246.,  6709070.,  7704767.,  7822395.,
      7940583.,  8059331.,  7781767.,  7900515.,  8019823.,  8139691.,
      7741007.,  7856779.,  7973111.,  8090003.,  7683863.,  7796659.,
      7910015.,  8023931.,  6729462.,  6825934.,  6922886.,  7020318.,
      5705445.,  5785273.,  5865501.,  5946129.,  4611172.,  4674036.,
      4737220.,  4800724.,  5567064.,  5638840.,  5711000.,  5783544.,
      7135870.,  7226550.,  7317710.,  7409350.,  8777028.,  8886996.,
      8997540.,  9108660.,  10491306., 10620946., 10751258., 10882242.,
      10602522., 10733506., 10865162., 10997490., 10481290., 10609522.,
      10738426., 10868002., 10343674., 10469154., 10595306., 10722130.,
      8999204.,  9106740.,  9214852.,  9323540.,  7577774.,  7666982.,
      7756670.,  7846838.,  6078616.,  6149112.,  6219992.,  6291256.,
      7178636.,  7259068.,  7339948.,  7421276.,  9171575.,  9273235.,
      9375455.,  9478235.,  11245618., 11368954., 11492962., 11617642.,
      13401661., 13547121., 13693365., 13840393., 13553365., 13700393.,
      13848205., 13996801., 13357933., 13502433., 13647717., 13793785.,
      13146117., 13288089., 13430845., 13574385., 11397730., 11519594.,
      11642130., 11765338., 9562863.,  9664171.,  9766039.,  9868467.,
      7640620.,  7720924.,  7801676.,  7882876.,  6504908.,  6577916.,
      6651372.,  6725276.,  8310855.,  8403235.,  8496175.,  8589675.,
      10190482., 10302682., 10415554., 10529098., 12144685., 12277153.,
      12410405., 12544441., 12296389., 12430425., 12565245., 12700849.,
      11986269., 12117777., 12250069., 12383145., 11659765., 11788745.,
      11918509., 12049057., 10068674., 10179402., 10290802., 10402874.,
      8398527.,  8490555.,  8583143.,  8676291.,  6648428.,  6721308.,
      6794636.,  6868412.,  5372428.,  5438012.,  5504044.,  5570524.,
      6876695.,  6959795.,  7043455.,  7127675.,  8447218.,  8548282.,
      8650018.,  8752426.,  10084893., 10204369., 10324629., 10445673.,
      10236597., 10357641., 10479469., 10602081., 9811789.,  9930305.,
      10049605., 10169689., 9370597.,  9486585.,  9603357.,  9720913.,
      8051490.,  8151082.,  8251346.,  8352282.,  6660751.,  6743499.,
      6826807.,  6910675.,  5197484.,  5262940.,  5328844.,  5395196.,
      3735448.,  3786488.,  3837912.,  3889720.,  4794510.,  4859270.,
      4924510.,  4990230.,  5905188.,  5984052.,  6063492.,  6143508.,
      7068250.,  7161602.,  7255626.,  7350322.,  7217098.,  7311794.,
      7407162.,  7503202.,  6674746.,  6766690.,  6859306.,  6952594.,
      6116010.,  6205202.,  6295066.,  6385602.,  5182212.,  5258644.,
      5335652.,  5413236.,  4192190.,  4255478.,  4319246.,  4383494.,
      3145176.,  3194936.,  3245080.,  3295608.,  1438660.,  1472980.,
      1507620.,  1542580.,  1882125.,  1925825.,  1969925.,  2014425.,
      2360390.,  2413790.,  2467670.,  2522030.,  2874095.,  2937515.,
      3001495.,  3066035.,  3013815.,  3078355.,  3143455.,  3209115.,
      3153535.,  3219195.,  3285415.,  3352195.,  3293255.,  3360035.,
      3427375.,  3495275.,  2941910.,  3000110.,  3058790.,  3117950.,
      2551925.,  2601225.,  2650925.,  2701025.,  2122660.,  2162740.,
      2203140.,  2243860.,  1768080.,  1799888.,  1831952.,  1864272.,
      2288020.,  2328420.,  2369140.,  2410180.,  2840152.,  2889400.,
      2939032.,  2989048.,  3424988.,  3483340.,  3542140.,  3601388.,
      3549308.,  3608556.,  3668252.,  3728396.,  3673628.,  3733772.,
      3794364.,  3855404.,  3797948.,  3858988.,  3920476.,  3982412.,
      3363736.,  3416824.,  3470296.,  3524152.,  2894260.,  2939140.,
      2984340.,  3029860.,  2389008.,  2425424.,  2462096.,  2499024.,
      1532688.,  1574224.,  1616016.,  1658064.,  2018100.,  2070660.,
      2123540.,  2176740.,  2545432.,  2609272.,  2673496.,  2738104.,
      3115196.,  3190572.,  3266396.,  3342668.,  3164252.,  3240524.,
      3317244.,  3394412.,  3213308.,  3290476.,  3368092.,  3446156.,
      3262364.,  3340428.,  3418940.,  3497900.,  2933848.,  3001528.,
      3069592.,  3138040.,  2560340.,  2617380.,  2674740.,  2732420.,
      2141328.,  2187472.,  2233872.,  2280528.,  2597700.,  2655060.,
      2712740.,  2770740.,  3388525.,  3461025.,  3533925.,  3607225.,
      4237190.,  4325150.,  4413590.,  4502510.,  5144335.,  5248075.,
      5352375.,  5457235.,  5221335.,  5326195.,  5431615.,  5537595.,
      5298335.,  5404315.,  5510855.,  5617955.,  5375335.,  5482435.,
      5590095.,  5698315.,  4795670.,  4888430.,  4981670.,  5075390.,
      4154325.,  4232425.,  4310925.,  4389825.,  3450660.,  3513780.,
      3577220.,  3640980.,  4007128.,  4082488.,  4158232.,  4234360.,
      5194910.,  5290070.,  5385710.,  5481830.,  6458628.,  6573972.,
      6689892.,  6806388.,  7799050.,  7934962.,  8071546.,  8208802.,
      7910266.,  8047522.,  8185450.,  8324050.,  8021482.,  8160082.,
      8299354.,  8439298.,  8132698.,  8272642.,  8413258.,  8554546.,
      7216356.,  7337460.,  7459140.,  7581396.,  6219470.,  6321350.,
      6423710.,  6526550.,  5141272.,  5223544.,  5306200.,  5389240.,
      5796812.,  5892348.,  5988332.,  6084764.,  7482055.,  7602595.,
      7723695.,  7845355.,  9263506.,  9409498.,  9556162.,  9703498.,
      11142061., 11313953., 11486629., 11660089., 11293765., 11467225.,
      11641469., 11816497., 11445469., 11620497., 11796309., 11972905.,
      11597173., 11773769., 11951149., 12129313., 10249666., 10402378.,
      10555762., 10709818., 8800575.,  8928955.,  9057895.,  9187395.,
      7249004.,  7352604.,  7456652.,  7561148.,  6609932.,  6714428.,
      6819372.,  6924764.,  8520855.,  8652595.,  8784895.,  8917755.,
      10536946., 10696378., 10856482., 11017258., 12656029., 12839505.,
      13023765., 13208809., 12788277., 12969225., 13150957., 13333473.,
      12904141., 13082561., 13261765., 13441753., 13003621., 13179513.,
      13356189., 13533649., 11400738., 11550506., 11700946., 11852058.,
      9687311.,  9810507.,  9934263.,  10058579., 7862444.,  7958620.,
      8055244.,  8152316.,  7312460.,  7409532.,  7507052.,  7605020.,
      9380455.,  9502915.,  9625935.,  9749515.,  11546194., 11694490.,
      11843458., 11993098., 13692813., 13863297., 14034565., 14206617.,
      13710373., 13878329., 14047069., 14216593., 13711549., 13876977.,
      14043189., 14210185., 13696341., 13859241., 14022925., 14187393.,
      11906690., 12045322., 12184626., 12324602., 10013919., 10127835.,
      10242311., 10357347., 8017132.,  8105884.,  8195084.,  8284732.,
      7543320.,  7630712.,  7718488.,  7806648.,  9645230.,  9755430.,
      9866110.,  9977270.,  11835108., 11968500., 12102468., 12237012.,
      13881274., 14034146., 14187690., 14341906., 13781290., 13931410.,
      14082202., 14233666., 13664922., 13812290., 13960330., 14109042.,
      13532170., 13676786., 13822074., 13968034., 11668164., 11790932.,
      11914276., 12038196., 9711582.,  9812118.,  9913134.,  10014630.,
      7661656.,  7739576.,  7817880.,  7896568.,  7250564.,  7326100.,
      7401956.,  7478132.,  9250045.,  9345265.,  9440885.,  9536905.,
      11325542., 11440766., 11556470., 11672654., 13130559., 13262011.,
      13394023., 13526595., 12906759., 13035235., 13164271., 13293867.,
      12666575., 12792075., 12918135., 13044755., 12410007., 12532531.,
      12655615., 12779259., 10601974., 10705614., 10809734., 10914334.,
      8714085.,  8798521.,  8883357.,  8968593.,  6745700.,  6810612.,
      6875844.,  6941396.,  6398352.,  6459856.,  6521616.,  6583632.,
      8150100.,  8227620.,  8305460.,  8383620.,  9963736.,  10057528.,
      10151704., 10246264., 11377948., 11484172., 11590844., 11697964.,
      11024060., 11127084., 11230556., 11334476., 10653788., 10753612.,
      10853884., 10954604., 10267132., 10363756., 10460828., 10558348.,
      8654360.,  8735608.,  8817240.,  8899256.,  6976628.,  7042244.,
      7108180.,  7174436.,  5233424.,  5283152.,  5333136.,  5383376.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,       25.,      61.,      113.,     58.,      162.,     298.,
      466.,     287.,     539.,     839.,     1187.,    820.,     1284.,
      1812.,    2404.,    1684.,    2276.,    2932.,    3652.,    2548.,
      3268.,    4052.,    4900.,    3412.,    4260.,    5172.,    6148.,
      4103.,    4835.,    5615.,    6443.,    3850.,    4402.,    4986.,
      5602.,    2525.,    2833.,    3157.,    3497.,    274.,     666.,
      1090.,    1546.,    2052.,    2964.,    3940.,    4980.,    5590.,
      7150.,    8806.,    10558.,   11144.,   13480.,   15944.,   18536.,
      14920.,   17512.,   20232.,   23080.,   18696.,   21544.,   24520.,
      27624.,   22472.,   25576.,   28808.,   32168.,   22054.,   24574.,
      27190.,   29902.,   18340.,   20148.,   22020.,   23956.,   11074.,
      12042.,   13042.,   14074.,   4391.,    5507.,    6671.,    7883.,
      13150.,   15574.,   18094.,   20710.,   26661.,   30585.,   34653.,
      38865.,   45308.,   50924.,   56732.,   62732.,   54044.,   60044.,
      66236.,   72620.,   62780.,   69164.,   75740.,   82508.,   71516.,
      78284.,   85244.,   92396.,   64605.,   69969.,   75477.,   81129.,
      50638.,   54406.,   58270.,   62230.,   29231.,   31211.,   33239.,
      35315.,   15647.,   17435.,   19271.,   21155.,   38350.,   42118.,
      45982.,   49942.,   68493.,   74433.,   80517.,   86745.,   106460.,
      114764.,  123260.,  131948.,  115196.,  123884.,  132764.,  141836.,
      123932.,  133004.,  142268.,  151724.,  132668.,  142124.,  151772.,
      161612.,  114501.,  121881.,  129405.,  137073.,  86590.,   91702.,
      96910.,   102214.,  48551.,   51203.,   53903.,   56651.,   26903.,
      29363.,   31871.,   34427.,   63550.,   68662.,   73870.,   79174.,
      110325.,  118281.,  126381.,  134625.,  167612.,  178604.,  189788.,
      201164.,  176348.,  187724.,  199292.,  211052.,  185084.,  196844.,
      208796.,  220940.,  193820.,  205964.,  218300.,  230828.,  164397.,
      173793.,  183333.,  193017.,  122542.,  128998.,  135550.,  142198.,
      67871.,   71195.,   74567.,   77987.,   38159.,   41291.,   44471.,
      47699.,   88750.,   95206.,   101758.,  108406.,  152157.,  162129.,
      172245.,  182505.,  228764.,  242444.,  256316.,  270380.,  237500.,
      251564.,  265820.,  280268.,  246236.,  260684.,  275324.,  290156.,
      254972.,  269804.,  284828.,  300044.,  214293.,  225705.,  237261.,
      248961.,  158494.,  166294.,  174190.,  182182.,  87191.,   91187.,
      95231.,   99323.,   49415.,   53219.,   57071.,   60971.,   113950.,
      121750.,  129646.,  137638.,  193989.,  205977.,  218109.,  230385.,
      289916.,  306284.,  322844.,  339596.,  298652.,  315404.,  332348.,
      349484.,  307388.,  324524.,  341852.,  359372.,  316124.,  333644.,
      351356.,  369260.,  264189.,  277617.,  291189.,  304905.,  194446.,
      203590.,  212830.,  222166.,  106511.,  111179.,  115895.,  120659.,
      59490.,   62378.,   65298.,   68250.,   130468.,  136372.,  142340.,
      148372.,  213190.,  222238.,  231382.,  240622.,  307912.,  320232.,
      332680.,  345256.,  315784.,  328360.,  341064.,  353896.,  323656.,
      336488.,  349448.,  362536.,  331528.,  344616.,  357832.,  371176.,
      268822.,  278830.,  288934.,  299134.,  192836.,  199636.,  206500.,
      213428.,  103314.,  106778.,  110274.,  113802.,  44213.,   45833.,
      47469.,   49121.,   94874.,   98178.,   101514.,  104882.,  152111.,
      157163.,  162263.,  167411.,  216052.,  222916.,  229844.,  236836.,
      221012.,  228004.,  235060.,  242180.,  225972.,  233092.,  240276.,
      247524.,  230932.,  238180.,  245492.,  252868.,  184343.,  189875.,
      195455.,  201083.,  130410.,  134162.,  137946.,  141762.,  69005.,
      70913.,   72837.,   74777.,   293.,     697.,     1117.,    1553.,
      2170.,    3042.,    3946.,    4882.,    5759.,    7163.,    8615.,
      10115.,   11188.,   13188.,   15252.,   17380.,   18196.,   20324.,
      22516.,   24772.,   25204.,   27460.,   29780.,   32164.,   32212.,
      34596.,   37044.,   39556.,   28007.,   29891.,   31823.,   33803.,
      21322.,   22642.,   23994.,   25378.,   12029.,   12721.,   13429.,
      14153.,   11602.,   12762.,   13954.,   15178.,   27780.,   30228.,
      32740.,   35316.,   48790.,   52654.,   56614.,   60670.,   74888.,
      80296.,   85832.,   91496.,   90952.,   96616.,   102408.,  108328.,
      107016.,  112936.,  118984.,  125160.,  123080.,  129256.,  135560.,
      141992.,  102118.,  106942.,  111862.,  116878.,  74788.,   78132.,
      81540.,   85012.,   40834.,   42570.,   44338.,   46138.,   37511.,
      39779.,   42095.,   44459.,   83998.,   88726.,   93550.,   98470.,
      139845.,  147225.,  154749.,  162417.,  205436.,  215660.,  226076.,
      236684.,  232604.,  243212.,  254012.,  265004.,  259772.,  270764.,
      281948.,  293324.,  286940.,  298316.,  309884.,  321644.,  233085.,
      241905.,  250869.,  259977.,  167566.,  173638.,  179806.,  186070.,
      89999.,   93131.,   96311.,   99539.,   81023.,   83963.,   86951.,
      89987.,   173710.,  179782.,  185950.,  192214.,  278445.,  287841.,
      297381.,  307065.,  395612.,  408524.,  421628.,  434924.,  422780.,
      436076.,  449564.,  463244.,  449948.,  463628.,  477500.,  491564.,
      477116.,  491180.,  505436.,  519884.,  379749.,  390585.,  401565.,
      412689.,  268030.,  275446.,  282958.,  290566.,  141575.,  145379.,
      149231.,  153131.,  124535.,  128147.,  131807.,  135515.,  263422.,
      270838.,  278350.,  285958.,  417045.,  428457.,  440013.,  451713.,
      585788.,  601388.,  617180.,  633164.,  612956.,  628940.,  645116.,
      661484.,  640124.,  656492.,  673052.,  689804.,  667292.,  684044.,
      700988.,  718124.,  526413.,  539265.,  552261.,  565401.,  368494.,
      377254.,  386110.,  395062.,  193151.,  197627.,  202151.,  206723.,
      168047.,  172331.,  176663.,  181043.,  353134.,  361894.,  370750.,
      379702.,  555645.,  569073.,  582645.,  596361.,  775964.,  794252.,
      812732.,  831404.,  803132.,  821804.,  840668.,  859724.,  830300.,
      849356.,  868604.,  888044.,  857468.,  876908.,  896540.,  916364.,
      673077.,  687945.,  702957.,  718113.,  468958.,  479062.,  489262.,
      499558.,  244727.,  249875.,  255071.,  260315.,  211559.,  216515.,
      221519.,  226571.,  442846.,  452950.,  463150.,  473446.,  694245.,
      709689.,  725277.,  741009.,  966140.,  987116.,  1008284., 1029644.,
      993308.,  1014668., 1036220., 1057964., 1020476., 1042220., 1064156.,
      1086284., 1047644., 1069772., 1092092., 1114604., 819741.,  836625.,
      853653.,  870825.,  569422.,  580870.,  592414.,  604054.,  296303.,
      302123.,  307991.,  313907.,  178338.,  181994.,  185682.,  189402.,
      371236.,  378676.,  386180.,  393748.,  578950.,  590302.,  601750.,
      613294.,  801736.,  817128.,  832648.,  848296.,  821896.,  837544.,
      853320.,  869224.,  842056.,  857960.,  873992.,  890152.,  862216.,
      878376.,  894664.,  911080.,  671446.,  683758.,  696166.,  708670.,
      464324.,  472660.,  481060.,  489524.,  240594.,  244826.,  249090.,
      253386.,  109013.,  111017.,  113037.,  115073.,  226010.,  230082.,
      234186.,  238322.,  351119.,  357323.,  363575.,  369875.,  484468.,
      492868.,  501332.,  509860.,  495572.,  504100.,  512692.,  521348.,
      506676.,  515332.,  524052.,  532836.,  517780.,  526564.,  535412.,
      544324.,  401783.,  408467.,  415199.,  421979.,  276906.,  281426.,
      285978.,  290562.,  143021.,  145313.,  147621.,  149945.,  581.,
      1369.,    2173.,    2993.,    4282.,    5922.,    7594.,    9298.,
      11231.,   13787.,   16391.,   19043.,   21556.,   25092.,   28692.,
      32356.,   34708.,   38372.,   42100.,   45892.,   47860.,   51652.,
      55508.,   59428.,   61012.,   64932.,   68916.,   72964.,   51911.,
      54947.,   58031.,   61163.,   38794.,   40882.,   43002.,   45154.,
      21533.,   22609.,   23701.,   24809.,   22930.,   24858.,   26818.,
      28810.,   53508.,   57492.,   61540.,   65652.,   91990.,   98158.,
      104422.,  110782.,  138632.,  147112.,  155720.,  164456.,  166984.,
      175720.,  184584.,  193576.,  195336.,  204328.,  213448.,  222696.,
      223688.,  232936.,  242312.,  251816.,  182182.,  189310.,  196534.,
      203854.,  131236.,  136116.,  141060.,  146068.,  70594.,   73098.,
      75634.,   78202.,   70631.,   74051.,   77519.,   81035.,   154846.,
      161878.,  169006.,  176230.,  253029.,  263865.,  274845.,  285969.,
      365564.,  380396.,  395420.,  410636.,  411164.,  426380.,  441788.,
      457388.,  456764.,  472364.,  488156.,  504140.,  502364.,  518348.,
      534524.,  550892.,  401565.,  413841.,  426261.,  438825.,  284494.,
      292870.,  301342.,  309910.,  150767.,  155051.,  159383.,  163763.,
      146399.,  150491.,  154631.,  158819.,  309070.,  317446.,  325918.,
      334486.,  488397.,  501249.,  514245.,  527385.,  684764.,  702284.,
      719996.,  737900.,  730364.,  748268.,  766364.,  784652.,  775964.,
      794252.,  812732.,  831404.,  821564.,  840236.,  859100.,  878156.,
      644997.,  659289.,  673725.,  688305.,  449470.,  459190.,  469006.,
      478918.,  234599.,  239555.,  244559.,  249611.,  222167.,  226931.,
      231743.,  236603.,  463294.,  473014.,  482830.,  492742.,  723765.,
      738633.,  753645.,  768801.,  1003964., 1024172., 1044572., 1065164.,
      1049564., 1070156., 1090940., 1111916., 1095164., 1116140., 1137308.,
      1158668., 1140764., 1162124., 1183676., 1205420., 888429.,  904737.,
      921189.,  937785.,  614446.,  625510.,  636670.,  647926.,  318431.,
      324059.,  329735.,  335459.,  297935.,  303371.,  308855.,  314387.,
      617518.,  628582.,  639742.,  650998.,  959133.,  976017.,  993045.,
      1010217., 1323164., 1346060., 1369148., 1392428., 1368764., 1392044.,
      1415516., 1439180., 1414364., 1438028., 1461884., 1485932., 1459964.,
      1484012., 1508252., 1532684., 1131861., 1150185., 1168653., 1187265.,
      779422.,  791830.,  804334.,  816934.,  402263.,  408563.,  414911.,
      421307.,  373703.,  379811.,  385967.,  392171.,  771742.,  784150.,
      796654.,  809254.,  1194501., 1213401., 1232445., 1251633., 1642364.,
      1667948., 1693724., 1719692., 1687964., 1713932., 1740092., 1766444.,
      1733564., 1759916., 1786460., 1813196., 1779164., 1805900., 1832828.,
      1859948., 1375293., 1395633., 1416117., 1436745., 944398.,  958150.,
      971998.,  985942.,  486095.,  493067.,  500087.,  507155.,  297186.,
      301610.,  306066.,  310554.,  612004.,  620980.,  630020.,  639124.,
      944710.,  958366.,  972118.,  985966.,  1295560., 1314024., 1332616.,
      1351336., 1328008., 1346728., 1365576., 1384552., 1360456., 1379432.,
      1398536., 1417768., 1392904., 1412136., 1431496., 1450984., 1074070.,
      1088686., 1103398., 1118206., 735812.,  745684.,  755620.,  765620.,
      377874.,  382874.,  387906.,  392970.,  173813.,  176201.,  178605.,
      181025.,  357146.,  361986.,  366858.,  371762.,  550127.,  557483.,
      564887.,  572339.,  752884.,  762820.,  772820.,  782884.,  770132.,
      780196.,  790324.,  800516.,  787380.,  797572.,  807828.,  818148.,
      804628.,  814948.,  825332.,  835780.,  619223.,  627059.,  634943.,
      642875.,  423402.,  428690.,  434010.,  439362.,  217037.,  219713.,
      222405.,  225113.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x9x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1820384.,  1923040.,  2027744.,  2134496.,  2500376.,  2629720.,
      2761624.,  2896088.,  3269712.,  3427792.,  3588944.,  3753168.,
      4132488.,  4321352.,  4513800.,  4709832.,  4355080.,  4542920.,
      4734344.,  4929352.,  4544904.,  4731720.,  4922120.,  5116104.,
      4936456.,  5130440.,  5328008.,  5529160.,  4593488.,  4765904.,
      4941392.,  5119952.,  4136600.,  4285400.,  4436760.,  4590680.,
      3561696.,  3684832.,  3810016.,  3937248.,  3332312.,  3475480.,
      3621208.,  3769496.,  4368558.,  4541630.,  4717902.,  4897374.,
      5502660.,  5708196.,  5917572.,  6130788.,  6739738.,  6980298.,
      7225338.,  7474858.,  6857978.,  7099306.,  7345114.,  7595402.,
      6943450.,  7185546.,  7432122.,  7683178.,  7460026.,  7711082.,
      7966618.,  8226634.,  6747268.,  6966628.,  7189828.,  7416868.,
      5873166.,  6058270.,  6246574.,  6438078.,  4832600.,  4980888.,
      5131736.,  5285144.,  4971856.,  5140176.,  5311568.,  5486032.,
      6035300.,  6241092.,  6450724.,  6664196.,  7222520.,  7468856.,
      7719800.,  7975352.,  8539660.,  8829612.,  9124940.,  9425644.,
      8472652.,  8765164.,  9063052.,  9366316.,  8372876.,  8667948.,
      8968396.,  9274220.,  8933580.,  9239404.,  9550604.,  9867180.,
      7971192.,  8239032.,  8511480.,  8788536.,  6815396.,  7042180.,
      7272804.,  7507268.,  5460048.,  5642704.,  5828432.,  6017232.,
      5932104.,  6142984.,  6357448.,  6575496.,  6891322.,  7143402.,
      7399962.,  7661002.,  7984876.,  8281740.,  8583980.,  8891596.,
      9219934.,  9565166.,  9916670.,  10274446., 8914430.,  9255822.,
      9603486.,  9957422.,  8543390.,  8880942.,  9224766.,  9574862.,
      9029438.,  9371342.,  9719518.,  10073966., 7795244.,  8088524.,
      8387180.,  8691212.,  6552666.,  6801930.,  7055674.,  7313898.,
      5092808.,  5294472.,  5499720.,  5708552.,  6161224.,  6378248.,
      6598856.,  6823048.,  6521338.,  6781098.,  7045338.,  7314058.,
      7021932.,  7328012.,  7639468.,  7956300.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      9221854.,  9570158.,  9924734.,  10285582., 9478526.,  9831182.,
      10190110., 10555310., 8310956.,  8613452.,  8921324.,  9234572.,
      7358234.,  7615178.,  7876602.,  8142506.,  6182088.,  6389896.,
      6601288.,  6816264.,  6652488.,  6875656.,  7102408.,  7332744.,
      8051898.,  8319338.,  8591258.,  8867658.,  9597932.,  9913228.,
      10233900., 10559948., 11297758., 11664494., 12037502., 12416782.,
      11123326., 11486222., 11855390., 12230830., 10883358., 11242414.,
      11607742., 11979342., 10910654., 11274062., 11643742., 12019694.,
      9219884.,  9531596.,  9848684.,  10171148., 7967194.,  8231818.,
      8500922.,  8774506.,  6484936.,  6698888.,  6916424.,  7137544.,
      7223376.,  7422416.,  7624528.,  7829712.,  8036644.,  8272644.,
      8512484.,  8756164.,  8971640.,  9247672.,  9528312.,  9813560.,
      10034508., 10353644., 10678156., 11008044., 9378700.,  9692204.,
      10011084., 10335340., 8657356.,  8965228.,  9278476.,  9597100.,
      8432652.,  8743084.,  9058892.,  9380076.,  6660600.,  6925368.,
      7194744.,  7468728.,  5587044.,  5811268.,  6039332.,  6271236.,
      4315984.,  4496592.,  4680272.,  4867024.,  6255576.,  6429464.,
      6605912.,  6784920.,  6392942.,  6600318.,  6810894.,  7024670.,
      6642500.,  6885924.,  7133188.,  7384292.,  7009370.,  7291402.,
      7577914.,  7868906.,  6548026.,  6830826.,  7118106.,  7409866.,
      7102490.,  7386058.,  7674106.,  7966634.,  7624186.,  7908522.,
      8197338.,  8490634.,  6926596.,  7167460.,  7412164.,  7660708.,
      6123982.,  6327006.,  6533230.,  6742654.,  5140568.,  5303192.,
      5468376.,  5636120.,  4052192.,  4199904.,  4349664.,  4501472.,
      5116568.,  5289944.,  5465880.,  5644376.,  6266192.,  6467280.,
      6671440.,  6878672.,  7505160.,  7736008.,  7970440.,  8208456.,
      7740040.,  7969864.,  8203272.,  8440264.,  7942152.,  8170952.,
      8403336.,  8639304.,  8111496.,  8339272.,  8570632.,  8805576.,
      6902864.,  7093712.,  7287632.,  7484624.,  5851672.,  6011736.,
      6174360.,  6339544.,  4653792.,  4781024.,  4910304.,  5041632.,
      3637984.,  3765216.,  3894496.,  4025824.,  4852760.,  5016920.,
      5183640.,  5352920.,  6197840.,  6400976.,  6607184.,  6816464.,
      6984072.,  7220040.,  7459592.,  7702728.,  6649608.,  6884552.,
      7123080.,  7365192.,  6277256.,  6502984.,  6732296.,  6965192.,
      5839368.,  6055880.,  6275976.,  6499656.,  4863312.,  5048016.,
      5235792.,  5426640.,  3732376.,  3883224.,  4036632.,  4192600.,
      2442464.,  2557408.,  2674400.,  2793440.,  5797336.,  5958936.,
      6123096.,  6289816.,  6777582.,  6977790.,  7181198.,  7387806.,
      7890500.,  8131876.,  8377092.,  8626148.,  8218586.,  8495498.,
      8776890.,  9062762.,  7779770.,  8057450.,  8339610.,  8626250.,
      7073690.,  7343946.,  7618682.,  7897898.,  6302074.,  6564906.,
      6832218.,  7104010.,  5719044.,  5941476.,  6167748.,  6397860.,
      4939854.,  5119326.,  5301998.,  5487870.,  3959384.,  4093336.,
      4229848.,  4368920.,  4504400.,  4685008.,  4868688.,  5055440.,
      5926628.,  6151876.,  6380964.,  6613892.,  7501304.,  7774264.,
      8051832.,  8334008.,  9131148.,  9446700.,  9767628.,  10093932.,
      9555660.,  9873772.,  10197260., 10526124., 9483532.,  9796012.,
      10113868., 10437100., 9345868.,  9652716.,  9964940.,  10282540.,
      8073848.,  8335544.,  8601848.,  8872760.,  6579748.,  6793220.,
      7010532.,  7231684.,  4857424.,  5019600.,  5184848.,  5353168.,
      6554440.,  6771464.,  6992072.,  7216264.,  8249338.,  8521386.,
      8797914.,  9078922.,  10133868., 10464524., 10800556., 11141964.,
      11882398., 12267054., 12657982., 13055182., 12171838., 12560846.,
      12956126., 13357678., 11735262., 12120430., 12511870., 12909582.,
      11233150., 11614478., 12002078., 12395950., 9489580.,  9816652.,
      10149100., 10486924., 7480602.,  7749834.,  8023546.,  8301738.,
      5199048.,  5406856.,  5618248.,  5833224.,  5714504.,  5904904.,
      6098888.,  6296456.,  6805178.,  7043946.,  7287194.,  7534922.,
      8058860.,  8349580.,  8645676.,  8947148.,  9482718.,  9828974.,
      10181502., 10540302., 10137726., 10496526., 10861598., 11232942.,
      9870110.,  10233262., 10602686., 10978382., 9569726.,  9937230.,
      10311006., 10691054., 8127276.,  8447180.,  8772460.,  9103116.,
      6446042.,  6714762.,  6987962.,  7265642.,  5567432.,  5781384.,
      5998920.,  6220040.,  4567368.,  4763912.,  4964040.,  5167752.,
      6107514.,  6353962.,  6604890.,  6860298.,  7816812.,  8116748.,
      8422060.,  8732748.,  9702430.,  10059438., 10422718., 10792270.,
      10357438., 10726990., 11102814., 11484910., 10909022., 11282926.,
      11663102., 12049550., 11427838., 11806094., 12190622., 12581422.,
      10281388., 10610508., 10945004., 11284876., 8890010.,  9166410.,
      9447290.,  9732650.,  7246536.,  7466632.,  7690312.,  7917576.,
      5637712.,  5816272.,  5997904.,  6182608.,  7076004.,  7298692.,
      7525220.,  7755588.,  8664696.,  8934584.,  9209080.,  9488184.,
      10409932., 10730092., 11055628., 11386540., 11042316., 11373228.,
      11709516., 12051180., 11341900., 11675372., 12014220., 12358444.,
      11608716., 11944748., 12286156., 12632940., 10150648., 10442040.,
      10738040., 11038648., 8472548.,  8716228.,  8963748.,  9215108.,
      6568272.,  6761168.,  6957136.,  7156176.,  4184280.,  4327448.,
      4473176.,  4621464.,  4846254.,  5023422.,  5203790.,  5387358.,
      5622468.,  5836196.,  6053764.,  6275172.,  6518042.,  6770890.,
      7028218.,  7290026.,  7077626.,  7339434.,  7605722.,  7876490.,
      7637210.,  7907978.,  8183226.,  8462954.,  8196794.,  8476522.,
      8760730.,  9049418.,  7118980.,  7362916.,  7610692.,  7862308.,
      5863438.,  6069022.,  6277806.,  6489790.,  4425048.,  4589720.,
      4756952.,  4926744.,  2365664.,  2488800.,  2613984.,  2741216.,
      3247000.,  3397848.,  3551256.,  3707224.,  4221776.,  4402384.,
      4586064.,  4772816.,  5294088.,  5506504.,  5722504.,  5942088.,
      5730696.,  5950280.,  6173448.,  6400200.,  6167304.,  6394056.,
      6624392.,  6858312.,  6603912.,  6837832.,  7075336.,  7316424.,
      5976656.,  6179792.,  6386000.,  6595280.,  5198616.,  5368920.,
      5541784.,  5717208.,  4265696.,  4401120.,  4538592.,  4678112.,
      3534560.,  3653600.,  3774688.,  3897824.,  4454680.,  4604504.,
      4756888.,  4911832.,  5480528.,  5663184.,  5848912.,  6037712.,
      6616200.,  6833736.,  7054856.,  7279560.,  6380040.,  6596552.,
      6816648.,  7040328.,  6111112.,  6326600.,  6545672.,  6768328.,
      6502664.,  6725320.,  6951560.,  7181384.,  5985104.,  6182096.,
      6382160.,  6585296.,  5337240.,  5506520.,  5678360.,  5852760.,
      4554976.,  4694496.,  4836064.,  4979680.,  5640920.,  5820952.,
      6003544.,  6188696.,  6456622.,  6667582.,  6881742.,  7099102.,
      7374276.,  7618724.,  7867012.,  8119140.,  8399002.,  8679498.,
      8964474.,  9253930.,  7955066.,  8228138.,  8505690.,  8787722.,
      7445594.,  7711242.,  7981370.,  8255978.,  7793210.,  8059626.,
      8330522.,  8605898.,  6591364.,  6816868.,  7046212.,  7279396.,
      5425806.,  5616030.,  5809454.,  6006078.,  4089688.,  4242072.,
      4397016.,  4554520.,  5609808.,  5802704.,  5998672.,  6197712.,
      5774948.,  6003268.,  6235428.,  6471428.,  6055672.,  6322488.,
      6593912.,  6869944.,  7506700.,  7815084.,  8128844.,  8447980.,
      7696716.,  7999468.,  8307596.,  8621100.,  7821196.,  8118316.,
      8420812.,  8728684.,  7983564.,  8283244.,  8588300.,  8898732.,
      6931320.,  7186872.,  7447032.,  7711800.,  6124964.,  6341508.,
      6561892.,  6786116.,  5127248.,  5301712.,  5479248.,  5659856.,
      6652488.,  6875656.,  7102408.,  7332744.,  8051898.,  8319338.,
      8591258.,  8867658.,  9597932.,  9913228.,  10233900., 10559948.,
      11297758., 11664494., 12037502., 12416782., 11123326., 11486222.,
      11855390., 12230830., 10883358., 11242414., 11607742., 11979342.,
      10910654., 11274062., 11643742., 12019694., 9219884.,  9531596.,
      9848684.,  10171148., 7967194.,  8231818.,  8500922.,  8774506.,
      6484936.,  6698888.,  6916424.,  7137544.,  7405896.,  7635208.,
      7868104.,  8104584.,  8337274.,  8612394.,  8891994.,  9176074.,
      9421420.,  9745932.,  10075820., 10411084., 10660382., 11029678.,
      11405246., 11787086., 9989310.,  10346574., 10710110., 11079918.,
      9219934.,  9565166.,  9916670.,  10274446., 8914430.,  9255822.,
      9603486.,  9957422.,  7028140.,  7316300.,  7609836.,  7908748.,
      5803162.,  6042698.,  6286714.,  6535210.,  4342472.,  4529800.,
      4720712.,  4915208.,  7264328.,  7483400.,  7706056.,  7932296.,
      7760442.,  8026858.,  8297754.,  8573130.,  8415468.,  8732812.,
      9055532.,  9383628.,  9002078.,  9365742.,  9735678.,  10111886.,
      8368894.,  8728718.,  9094814.,  9467182.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      8002604.,  8299980.,  8602732.,  8910860.,  6838106.,  7085322.,
      7337018.,  7593194.,  5431752.,  5625224.,  5822280.,  6022920.,
      6016080.,  6223312.,  6433616.,  6646992.,  7713828.,  7964164.,
      8218340.,  8476356.,  9557880.,  9854392.,  10155512., 10461240.,
      11090508., 11428076., 11771020., 12119340., 11024524., 11356460.,
      11693772., 12036460., 10893004., 11219308., 11550988., 11888044.,
      10695948., 11016620., 11342668., 11674092., 8924152.,  9193016.,
      9466488.,  9744568.,  7236452.,  7458628.,  7684644.,  7914500.,
      5326672.,  5499088.,  5674576.,  5853136.,  6610392.,  6788376.,
      6968920.,  7152024.,  7829742.,  8042238.,  8257934.,  8476830.,
      9165380.,  9414948.,  9668356.,  9925604.,  9929178.,  10210186.,
      10495674., 10785642., 9331642.,  9605226.,  9883290.,  10165834.,
      8668570.,  8934730.,  9205370.,  9480490.,  7939962.,  8198698.,
      8461914.,  8729610.,  5980164.,  6194404.,  6412484.,  6634404.,
      4369998.,  4545374.,  4723950.,  4905726.,  2574936.,  2708888.,
      2845400.,  2984472.,  4566240.,  4697568.,  4830944.,  4966368.,
      5166232.,  5327320.,  5490968.,  5657176.,  5867856.,  6060752.,
      6256720.,  6455760.,  5752584.,  5971144.,  6193288.,  6419016.,
      5233800.,  5451336.,  5672456.,  5897160.,  4682248.,  4898760.,
      5118856.,  5342536.,  4097928.,  4313416.,  4532488.,  4755144.,
      3850320.,  4032976.,  4218704.,  4407504.,  3443736.,  3591512.,
      3741848.,  3894744.,  2874080.,  2984928.,  3097824.,  3212768.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x9x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,       174.,      446.,      846.,      380.,      1180.,
      2236.,     3548.,     2074.,     4042.,     6394.,     9130.,
      6136.,     9784.,     13944.,    18616.,    12920.,    17592.,
      22776.,    28472.,    19704.,    25400.,    31608.,    38328.,
      26488.,    33208.,    40440.,    48184.,    32122.,    37930.,
      44122.,    50698.,    30268.,    34652.,    39292.,    44188.,
      19902.,    22350.,    24926.,    27630.,    1820.,     4924.,
      8284.,     11900.,    15544.,    22776.,    30520.,    38776.,
      43220.,    55604.,    68756.,    82676.,    86896.,    105456.,
      125040.,   145648.,   116848.,   137456.,   159088.,   181744.,
      146800.,   169456.,   193136.,   217840.,   176752.,   201456.,
      227184.,   253936.,   173972.,   194036.,   214868.,   236468.,
      144952.,   159352.,   174264.,   189688.,   87644.,    95356.,
      103324.,   111548.,   34042.,    42922.,    52186.,    61834.,
      102836.,   122132.,   142196.,   163028.,   209454.,   240702.,
      273102.,   306654.,   356968.,   401704.,   447976.,   495784.,
      426472.,   474280.,   523624.,   574504.,   495976.,   546856.,
      599272.,   653224.,   565480.,   619432.,   674920.,   731944.,
      511566.,   554334.,   598254.,   643326.,   401396.,   431444.,
      462260.,   493844.,   231898.,   247690.,   263866.,   280426.,
      123418.,   137674.,   152314.,   167338.,   303092.,   333140.,
      363956.,   395540.,   542094.,   589470.,   637998.,   687678.,
      843496.,   909736.,   977512.,   1046824.,  913000.,   982312.,
      1053160.,  1125544.,  982504.,   1054888.,  1128808.,  1204264.,
      1052008.,  1127464.,  1204456.,  1282984.,  908718.,   967614.,
      1027662.,  1088862.,  687668.,   728468.,   770036.,   812372.,
      385786.,   406954.,   428506.,   450442.,   212794.,   232426.,
      252442.,   272842.,   503348.,   544148.,   585716.,   628052.,
      874734.,   938238.,   1002894.,  1068702.,  1330024.,  1417768.,
      1507048.,  1597864.,  1399528.,  1490344.,  1582696.,  1676584.,
      1469032.,  1562920.,  1658344.,  1755304.,  1538536.,  1635496.,
      1733992.,  1834024.,  1305870.,  1380894.,  1457070.,  1534398.,
      973940.,   1025492.,  1077812.,  1130900.,  539674.,   566218.,
      593146.,   620458.,   302170.,   327178.,   352570.,   378346.,
      703604.,   755156.,   807476.,   860564.,   1207374.,  1287006.,
      1367790.,  1449726.,  1816552.,  1925800.,  2036584.,  2148904.,
      1886056.,  1998376.,  2112232.,  2227624.,  1955560.,  2070952.,
      2187880.,  2306344.,  2025064.,  2143528.,  2263528.,  2385064.,
      1703022.,  1794174.,  1886478.,  1979934.,  1260212.,  1322516.,
      1385588.,  1449428.,  693562.,   725482.,   757786.,   790474.,
      391546.,   421930.,   452698.,   483850.,   903860.,   966164.,
      1029236.,  1093076.,  1540014.,  1635774.,  1732686.,  1830750.,
      2303080.,  2433832.,  2566120.,  2699944.,  2372584.,  2506408.,
      2641768.,  2778664.,  2442088.,  2578984.,  2717416.,  2857384.,
      2511592.,  2651560.,  2793064.,  2936104.,  2100174.,  2207454.,
      2315886.,  2425470.,  1546484.,  1619540.,  1693364.,  1767956.,
      847450.,   884746.,   922426.,   960490.,   473052.,   496124.,
      519452.,   543036.,   1037880.,  1085048.,  1132728.,  1180920.,
      1696532.,  1768820.,  1841876.,  1915700.,  2451056.,  2549488.,
      2648944.,  2749424.,  2513776.,  2614256.,  2715760.,  2818288.,
      2576496.,  2679024.,  2782576.,  2887152.,  2639216.,  2743792.,
      2849392.,  2956016.,  2140628.,  2220596.,  2301332.,  2382836.,
      1535928.,  1590264.,  1645112.,  1700472.,  823068.,   850748.,
      878684.,   906876.,   352094.,   365038.,   378110.,   391310.,
      755708.,   782108.,   808764.,   835676.,   1211866.,  1252234.,
      1292986.,  1334122.,  1721592.,  1776440.,  1831800.,  1887672.,
      1761144.,  1817016.,  1873400.,  1930296.,  1800696.,  1857592.,
      1915000.,  1972920.,  1840248.,  1898168.,  1956600.,  2015544.,
      1469242.,  1513450.,  1558042.,  1603018.,  1039548.,  1069532.,
      1099772.,  1130268.,  550142.,   565390.,   580766.,   596270.,
      1950.,     5166.,     8510.,     11982.,    16508.,    23452.,
      30652.,    38108.,    44698.,    55882.,    67450.,    79402.,
      87544.,    103480.,   119928.,   136888.,   143480.,   160440.,
      177912.,   195896.,   199416.,   217400.,   235896.,   254904.,
      255352.,   274360.,   293880.,   313912.,   222202.,   237226.,
      252634.,   268426.,   169276.,   179804.,   190588.,   201628.,
      95550.,    101070.,   106718.,   112494.,   91676.,    100924.,
      110428.,   120188.,   219832.,   239352.,   259384.,   279928.,
      386516.,   417332.,   448916.,   481268.,   593776.,   636912.,
      681072.,   726256.,   722032.,   767216.,   813424.,   860656.,
      850288.,   897520.,   945776.,   995056.,   978544.,   1027824.,
      1078128.,  1129456.,  812180.,   850676.,   889940.,   929972.,
      595000.,   621688.,   648888.,   676600.,   324956.,   338812.,
      352924.,   367292.,   297850.,   315946.,   334426.,   353290.,
      667316.,   705044.,   743540.,   782804.,   1111470.,  1170366.,
      1230414.,  1291614.,  1633384.,  1714984.,  1798120.,  1882792.,
      1850344.,  1935016.,  2021224.,  2108968.,  2067304.,  2155048.,
      2244328.,  2335144.,  2284264.,  2375080.,  2467432.,  2561320.,
      1855950.,  1926366.,  1997934.,  2070654.,  1334516.,  1382996.,
      1432244.,  1482260.,  716890.,   741898.,   767290.,   793066.,
      645274.,   668746.,   692602.,   716842.,   1383668.,  1432148.,
      1481396.,  1531412.,  2218254.,  2293278.,  2369454.,  2446782.,
      3152104.,  3255208.,  3359848.,  3466024.,  3369064.,  3475240.,
      3582952.,  3692200.,  3586024.,  3695272.,  3806056.,  3918376.,
      3802984.,  3915304.,  4029160.,  4144552.,  3027246.,  3113790.,
      3201486.,  3290334.,  2136884.,  2196116.,  2256116.,  2316884.,
      1128826.,  1159210.,  1189978.,  1221130.,  992698.,   1021546.,
      1050778.,  1080394.,  2100020.,  2159252.,  2219252.,  2280020.,
      3325038.,  3416190.,  3508494.,  3601950.,  4670824.,  4795432.,
      4921576.,  5049256.,  4887784.,  5015464.,  5144680.,  5275432.,
      5104744.,  5235496.,  5367784.,  5501608.,  5321704.,  5455528.,
      5590888.,  5727784.,  4198542.,  4301214.,  4405038.,  4510014.,
      2939252.,  3009236.,  3079988.,  3151508.,  1540762.,  1576522.,
      1612666.,  1649194.,  1340122.,  1374346.,  1408954.,  1443946.,
      2816372.,  2886356.,  2957108.,  3028628.,  4431822.,  4539102.,
      4647534.,  4757118.,  6189544.,  6335656.,  6483304.,  6632488.,
      6406504.,  6555688.,  6706408.,  6858664.,  6623464.,  6775720.,
      6929512.,  7084840.,  6840424.,  6995752.,  7152616.,  7311016.,
      5369838.,  5488638.,  5608590.,  5729694.,  3741620.,  3822356.,
      3903860.,  3986132.,  1952698.,  1993834.,  2035354.,  2077258.,
      1687546.,  1727146.,  1767130.,  1807498.,  3532724.,  3613460.,
      3694964.,  3777236.,  5538606.,  5662014.,  5786574.,  5912286.,
      7708264.,  7875880.,  8045032.,  8215720.,  7925224.,  8095912.,
      8268136.,  8441896.,  8142184.,  8315944.,  8491240.,  8668072.,
      8359144.,  8535976.,  8714344.,  8894248.,  6541134.,  6676062.,
      6812142.,  6949374.,  4543988.,  4635476.,  4727732.,  4820756.,
      2364634.,  2411146.,  2458042.,  2505322.,  1423068.,  1452284.,
      1481756.,  1511484.,  2962488.,  3021944.,  3081912.,  3142392.,
      4620308.,  4711028.,  4802516.,  4894772.,  6398576.,  6521584.,
      6645616.,  6770672.,  6559600.,  6684656.,  6810736.,  6937840.,
      6720624.,  6847728.,  6975856.,  7105008.,  6881648.,  7010800.,
      7140976.,  7272176.,  5359316.,  5457716.,  5556884.,  5656820.,
      3706296.,  3772920.,  3840056.,  3907704.,  1920540.,  1954364.,
      1988444.,  2022780.,  870110.,   886126.,   902270.,   918542.,
      1804028.,  1836572.,  1869372.,  1902428.,  2802778.,  2852362.,
      2902330.,  2952682.,  3867384.,  3934520.,  4002168.,  4070328.,
      3956088.,  4024248.,  4092920.,  4162104.,  4044792.,  4113976.,
      4183672.,  4253880.,  4133496.,  4203704.,  4274424.,  4345656.,
      3207610.,  3261034.,  3314842.,  3369034.,  2210748.,  2246876.,
      2283260.,  2319900.,  1141886.,  1160206.,  1178654.,  1197230.,
      3870.,     10158.,    16574.,    23118.,    32636.,    45724.,
      59068.,    72668.,    87322.,    107722.,   128506.,   149674.,
      168952.,   197176.,   225912.,   255160.,   274040.,   303288.,
      333048.,   363320.,   379128.,   409400.,   440184.,   471480.,
      484216.,   515512.,   547320.,   579640.,   412282.,   436522.,
      461146.,   486154.,   308284.,   324956.,   341884.,   359068.,
      171198.,   179790.,   188510.,   197358.,   181532.,   196924.,
      212572.,   228476.,   424120.,   455928.,   488248.,   521080.,
      729812.,   779060.,   829076.,   879860.,   1100656.,  1168368.,
      1237104.,  1306864.,  1327216.,  1396976.,  1467760.,  1539568.,
      1553776.,  1625584.,  1698416.,  1772272.,  1780336.,  1854192.,
      1929072.,  2004976.,  1450388.,  1507316.,  1565012.,  1623476.,
      1045048.,  1084024.,  1123512.,  1163512.,  562268.,   582268.,
      602524.,   623036.,   561658.,   588970.,   616666.,   644746.,
      1231796.,  1287956.,  1344884.,  1402580.,  2013486.,  2100030.,
      2187726.,  2276574.,  2909800.,  3028264.,  3148264.,  3269800.,
      3274216.,  3395752.,  3518824.,  3643432.,  3638632.,  3763240.,
      3889384.,  4017064.,  4003048.,  4130728.,  4259944.,  4390696.,
      3200334.,  3298398.,  3397614.,  3497982.,  2267636.,  2334548.,
      2402228.,  2470676.,  1201882.,  1236106.,  1270714.,  1305706.,
      1167130.,  1199818.,  1232890.,  1266346.,  2464244.,  2531156.,
      2598836.,  2667284.,  3894414.,  3997086.,  4100910.,  4205886.,
      5460712.,  5600680.,  5742184.,  5885224.,  5825128.,  5968168.,
      6112744.,  6258856.,  6189544.,  6335656.,  6483304.,  6632488.,
      6553960.,  6703144.,  6853864.,  7006120.,  5145774.,  5259966.,
      5375310.,  5491806.,  3586100.,  3663764.,  3742196.,  3821396.,
      1871866.,  1911466.,  1951450.,  1991818.,  1772602.,  1810666.,
      1849114.,  1887946.,  3696692.,  3774356.,  3852788.,  3931988.,
      5775342.,  5894142.,  6014094.,  6135198.,  8011624.,  8173096.,
      8336104.,  8500648.,  8376040.,  8540584.,  8706664.,  8874280.,
      8740456.,  8908072.,  9077224.,  9247912.,  9104872.,  9275560.,
      9447784.,  9621544.,  7091214.,  7221534.,  7353006.,  7485630.,
      4904564.,  4992980.,  5082164.,  5172116.,  2541850.,  2586826.,
      2632186.,  2677930.,  2378074.,  2421514.,  2465338.,  2509546.,
      4929140.,  5017556.,  5106740.,  5196692.,  7656270.,  7791198.,
      7927278.,  8064510.,  10562536., 10745512., 10930024., 11116072.,
      10926952., 11113000., 11300584., 11489704., 11291368., 11480488.,
      11671144., 11863336., 11655784., 11847976., 12041704., 12236968.,
      9036654.,  9183102.,  9330702.,  9479454.,  6223028.,  6322196.,
      6422132.,  6522836.,  3211834.,  3262186.,  3312922.,  3364042.,
      2983546.,  3032362.,  3081562.,  3131146.,  6161588.,  6260756.,
      6360692.,  6461396.,  9537198.,  9688254.,  9840462.,  9993822.,
      13113448., 13317928., 13523944., 13731496., 13477864., 13685416.,
      13894504., 14105128., 13842280., 14052904., 14265064., 14478760.,
      14206696., 14420392., 14635624., 14852392., 10982094., 11144670.,
      11308398., 11473278., 7541492.,  7651412.,  7762100.,  7873556.,
      3881818.,  3937546.,  3993658.,  4050154.,  2373084.,  2408444.,
      2444060.,  2479932.,  4887096.,  4958840.,  5031096.,  5103864.,
      7544084.,  7653236.,  7763156.,  7873844.,  10346096., 10493680.,
      10642288., 10791920., 10605424., 10755056., 10905712., 11057392.,
      10864752., 11016432., 11169136., 11322864., 11124080., 11277808.,
      11432560., 11588336., 8578004.,  8694836.,  8812436.,  8930804.,
      5876664.,  5955576.,  6035000.,  6114936.,  3018012.,  3057980.,
      3098204.,  3138684.,  1388126.,  1407214.,  1426430.,  1445774.,
      2852348.,  2891036.,  2929980.,  2969180.,  4393690.,  4452490.,
      4511674.,  4571242.,  6013176.,  6092600.,  6172536.,  6252984.,
      6151032.,  6231480.,  6312440.,  6393912.,  6288888.,  6370360.,
      6452344.,  6534840.,  6426744.,  6509240.,  6592248.,  6675768.,
      4945978.,  5008618.,  5071642.,  5135050.,  3381948.,  3424220.,
      3466748.,  3509532.,  1733630.,  1755022.,  1776542.,  1798190.};
  const std::array<int, 4> in_shape = {{3, 9, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1876.,   2610.,   3458.,   4424.,   4830.,   4550.,   4140.,   3596.,
      3840.,   5225.,   6790.,   8540.,   9170.,   8485.,   7600.,   6510.,
      6850.,   9185.,   11781.,  14644.,  15547.,  14211.,  12590.,  10678.,
      11130.,  14770.,  18767.,  23128.,  24353.,  22064.,  19390.,  16324.,
      16394.,  21490.,  26999.,  32928.,  34153.,  30632.,  26670.,  22260.,
      21658.,  28210.,  35231.,  42728.,  43953.,  39200.,  33950.,  28196.,
      26922.,  34930.,  43463.,  52528.,  53753.,  47768.,  41230.,  34132.,
      31366.,  40415.,  49959.,  60004.,  61201.,  54045.,  46370.,  38170.,
      33420.,  42875.,  52780.,  63140.,  64260.,  56515.,  48300.,  39610.,
      32860.,  42030.,  51590.,  61544.,  62538.,  54842.,  46740.,  38228.,
      18516.,  24210.,  30338.,  36904.,  37310.,  33350.,  28940.,  24076.,
      30240.,  39225.,  48790.,  58940.,  59570.,  52885.,  45600.,  37710.,
      45250.,  58385.,  72261.,  86884.,  87787.,  77571.,  66590.,  54838.,
      63770.,  81970.,  101087., 121128., 122353., 107744., 92190.,  75684.,
      69034.,  88690.,  109319., 130928., 132153., 116312., 99470.,  81620.,
      74298.,  95410.,  117551., 140728., 141953., 124880., 106750., 87556.,
      79562.,  102130., 125783., 150528., 151753., 133448., 114030., 93492.,
      83206.,  106415., 130599., 155764., 156961., 137565., 117170., 95770.,
      82220.,  104875., 128380., 152740., 153860., 134515., 114300., 93210.,
      76380.,  97230.,  118790., 141064., 142058., 123962., 105140., 85588.,
      35156.,  45810.,  57218.,  69384.,  69790.,  62150.,  53740.,  44556.,
      56640.,  73225.,  90790.,  109340., 109970., 97285.,  83600.,  68910.,
      83650.,  107585., 132741., 159124., 160027., 140931., 120590., 98998.,
      116410., 149170., 183407., 219128., 220353., 193424., 164990., 135044.,
      121674., 155890., 191639., 228928., 230153., 201992., 172270., 140980.,
      126938., 162610., 199871., 238728., 239953., 210560., 179550., 146916.,
      132202., 169330., 208103., 248528., 249753., 219128., 186830., 152852.,
      135046., 172415., 211239., 251524., 252721., 221085., 187970., 153370.,
      131020., 166875., 203980., 242340., 243460., 212515., 180300., 146810.,
      119900., 152430., 185990., 220584., 221578., 193082., 163540., 132948.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    7.,    10.,   13.,   16.,   19.,   14.,   11.,   35.,
      45.,   55.,   65.,   75.,   85.,   56.,   44.,   121.,  142.,  163.,
      184.,  205.,  226.,  140.,  114.,  290.,  326.,  362.,  398.,  434.,
      470.,  280.,  226.,  542.,  578.,  614.,  650.,  686.,  722.,  420.,
      338.,  794.,  830.,  866.,  902.,  938.,  974.,  560.,  450.,  1046.,
      1082., 1118., 1154., 1190., 1226., 700.,  512.,  1147., 1180., 1213.,
      1246., 1279., 1312., 728.,  467.,  1025., 1051., 1077., 1103., 1129.,
      1155., 630.,  301.,  652.,  667.,  682.,  697.,  712.,  727.,  392.,
      9.,    28.,   47.,   66.,   85.,   104.,  123.,  70.,   83.,   195.,
      237.,  279.,  321.,  363.,  405.,  224.,  236.,  529.,  598.,  667.,
      736.,  805.,  874.,  476.,  482.,  1058., 1158., 1258., 1358., 1458.,
      1558., 840.,  818.,  1758., 1858., 1958., 2058., 2158., 2258., 1204.,
      1154., 2458., 2558., 2658., 2758., 2858., 2958., 1568., 1490., 3158.,
      3258., 3358., 3458., 3558., 3658., 1932., 1376., 2899., 2980., 3061.,
      3142., 3223., 3304., 1736., 1099., 2305., 2363., 2421., 2479., 2537.,
      2595., 1358., 645.,  1348., 1379., 1410., 1441., 1472., 1503., 784.,
      17.,   52.,   87.,   122.,  157.,  192.,  227.,  126.,  155.,  355.,
      429.,  503.,  577.,  651.,  725.,  392.,  428.,  937.,  1054., 1171.,
      1288., 1405., 1522., 812.,  850.,  1826., 1990., 2154., 2318., 2482.,
      2646., 1400., 1410., 2974., 3138., 3302., 3466., 3630., 3794., 1988.,
      1970., 4122., 4286., 4450., 4614., 4778., 4942., 2576., 2530., 5270.,
      5434., 5598., 5762., 5926., 6090., 3164., 2240., 4651., 4780., 4909.,
      5038., 5167., 5296., 2744., 1731., 3585., 3675., 3765., 3855., 3945.,
      4035., 2086., 989.,  2044., 2091., 2138., 2185., 2232., 2279., 1176.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      14144.,   19760.,   26272.,   33712.,   36904.,   34864.,   31800.,
      27680.,   29340.,   40025.,   52130.,   65695.,   70665.,   65510.,
      58775.,   50420.,   52784.,   70900.,   91080.,   113372.,  120512.,
      110304.,  97840.,   83072.,   86268.,   114625.,  145810.,  179879.,
      189581.,  171934.,  151235.,  127428.,  127932.,  167825.,  210994.,
      257495.,  267197.,  239806.,  208915.,  174468.,  169596.,  221025.,
      276178.,  335111.,  344813.,  307678.,  266595.,  221508.,  211260.,
      274225.,  341362.,  412727.,  422429.,  375550.,  324275.,  268548.,
      247040.,  318400.,  393696.,  472976.,  482468.,  426168.,  365740.,
      301136.,  263820.,  338525.,  416810.,  498715.,  507605.,  446510.,
      381675.,  313060.,  259808.,  332360.,  408016.,  486808.,  494704.,
      433888.,  369840.,  302528.,  144704.,  189360.,  237472.,  289072.,
      292264.,  261424.,  227000.,  188960.,  237340.,  308025.,  383330.,
      463295.,  468265.,  415910.,  358775.,  296820.,  356144.,  459700.,
      569160.,  684572.,  691712.,  611424.,  525040.,  432512.,  502908.,
      646625.,  797650.,  956039.,  965741.,  850654.,  728035.,  597828.,
      544572.,  699825.,  862834.,  1033655., 1043357., 918526.,  785715.,
      644868.,  586236.,  753025.,  928018.,  1111271., 1120973., 986398.,
      843395.,  691908.,  627900.,  806225.,  993202.,  1188887., 1198589.,
      1054270., 901075.,  738948.,  657920.,  841600.,  1033056., 1232336.,
      1241828., 1088568., 927340.,  758096.,  651020.,  830525.,  1016810.,
      1209915., 1218805., 1065710., 905675.,  738660.,  605408.,  770760.,
      941776.,  1118488., 1126384., 983008.,  833840.,  678848.,  275264.,
      358960.,  448672.,  544432.,  547624.,  487984.,  422200.,  350240.,
      445340.,  576025.,  714530.,  860895.,  865865.,  766310.,  658775.,
      543220.,  659504.,  848500.,  1047240., 1255772., 1262912., 1112544.,
      952240.,  781952.,  919548.,  1178625., 1449490., 1732199., 1741901.,
      1529374., 1304835., 1068228., 961212.,  1231825., 1514674., 1809815.,
      1819517., 1597246., 1362515., 1115268., 1002876., 1285025., 1579858.,
      1887431., 1897133., 1665118., 1420195., 1162308., 1044540., 1338225.,
      1645042., 1965047., 1974749., 1732990., 1477875., 1209348., 1068800.,
      1364800., 1672416., 1991696., 2001188., 1750968., 1488940., 1215056.,
      1038220., 1322525., 1616810., 1921115., 1930005., 1684910., 1429675.,
      1164260., 951008.,  1209160., 1475536., 1750168., 1758064., 1532128.,
      1297840., 1055168.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    42.,    62.,    82.,    102.,   122.,   95.,    64.,
      224.,   296.,   368.,   440.,   512.,   584.,   396.,   289.,   830.,
      986.,   1142.,  1298.,  1454.,  1610.,  1015.,  792.,   2064.,  2336.,
      2608.,  2880.,  3152.,  3424.,  2064.,  1632.,  3968.,  4240.,  4512.,
      4784.,  5056.,  5328.,  3128.,  2472.,  5872.,  6144.,  6416.,  6688.,
      6960.,  7232.,  4192.,  3312.,  7776.,  8048.,  8320.,  8592.,  8864.,
      9136.,  5256.,  3853.,  8678.,  8930.,  9182.,  9434.,  9686.,  9938.,
      5539.,  3556.,  7832.,  8032.,  8232.,  8432.,  8632.,  8832.,  4832.,
      2309.,  5014.,  5130.,  5246.,  5362.,  5478.,  5594.,  3023.,  53.,
      182.,   330.,   478.,   626.,   774.,   922.,   527.,   608.,   1440.,
      1768.,  2096.,  2424.,  2752.,  3080.,  1708.,  1777.,  3998.,  4538.,
      5078.,  5618.,  6158.,  6698.,  3655.,  3672.,  8080.,  8864.,  9648.,
      10432., 11216., 12000., 6480.,  6304.,  13568., 14352., 15136., 15920.,
      16704., 17488., 9336.,  8936.,  19056., 19840., 20624., 21408., 22192.,
      22976., 12192., 11568., 24544., 25328., 26112., 26896., 27680., 28464.,
      15048., 10717., 22598., 23234., 23870., 24506., 25142., 25778., 13555.,
      8580.,  18008., 18464., 18920., 19376., 19832., 20288., 10624., 5045.,
      10550., 10794., 11038., 11282., 11526., 11770., 6143.,  101.,   342.,
      618.,   894.,   1170.,  1446.,  1722.,  959.,   1152.,  2656.,  3240.,
      3824.,  4408.,  4992.,  5576.,  3020.,  3265.,  7166.,  8090.,  9014.,
      9938.,  10862., 11786., 6295.,  6552.,  14096., 15392., 16688., 17984.,
      19280., 20576., 10896., 10976., 23168., 24464., 25760., 27056., 28352.,
      29648., 15544., 15400., 32240., 33536., 34832., 36128., 37424., 38720.,
      20192., 19824., 41312., 42608., 43904., 45200., 46496., 47792., 24840.,
      17581., 36518., 37538., 38558., 39578., 40598., 41618., 21571., 13604.,
      28184., 28896., 29608., 30320., 31032., 31744., 16416., 7781.,  16086.,
      16458., 16830., 17202., 17574., 17946., 9263.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      109728.,   153640.,   204656.,   263032.,   288344.,   272816.,
      249160.,   217120.,   229240.,   313150.,   408340.,   515130.,
      554610.,   514660.,   462150.,   396760.,   414256.,   556940.,
      716040.,   891940.,   948724.,   868968.,   771260.,   655216.,
      679112.,   902930.,   1149260.,  1418550.,  1495774.,  1357244.,
      1194410.,  1006824.,  1010632.,  1326290.,  1668044.,  2036342.,
      2113566.,  1897532.,  1653610.,  1381352.,  1342152.,  1749650.,
      2186828.,  2654134.,  2731358.,  2437820.,  2112810.,  1755880.,
      1673672.,  2173010.,  2705612.,  3271926.,  3349150.,  2978108.,
      2572010.,  2130408.,  1960816.,  2527580.,  3125736.,  3755668.,
      3831268.,  3384648.,  2905100.,  2392240.,  2096440.,  2690350.,
      3312820.,  3964170.,  4035010.,  3549700.,  3034550.,  2489240.,
      2066208.,  2643400.,  3245360.,  3872344.,  3935288.,  3451760.,
      2942440.,  2407072.,  1143968.,  1497640.,  1878896.,  2287992.,
      2313304.,  2069936.,  1797960.,  1497120.,  1880440.,  2441150.,
      3038740.,  3673530.,  3713010.,  3298660.,  2846150.,  2355160.,
      2825776.,  3648140.,  4517640.,  5434660.,  5491444.,  4854888.,
      4169660.,  3435376.,  3994312.,  5136530.,  6337100.,  7596470.,
      7673694.,  6760124.,  5786410.,  4752104.,  4325832.,  5559890.,
      6855884.,  8214262.,  8291486.,  7300412.,  6245610.,  5126632.,
      4657352.,  5983250.,  7374668.,  8832054.,  8909278.,  7840700.,
      6704810.,  5501160.,  4988872.,  6406610.,  7893452.,  9449846.,
      9527070.,  8380988.,  7164010.,  5875688.,  5232496.,  6693980.,
      8217576.,  9803668.,  9879268.,  8660808.,  7378700.,  6032560.,
      5181240.,  6610350.,  8093620.,  9631370.,  9702210.,  8484100.,
      7210550.,  5881240.,  4820768.,  6137800.,  7500080.,  8907864.,
      8970808.,  7829360.,  6641640.,  5407392.,  2178208.,  2841640.,
      3553136.,  4312952.,  4338264.,  3867056.,  3346760.,  2777120.,
      3531640.,  4569150.,  5669140.,  6831930.,  6871410.,  6082660.,
      5230150.,  4313560.,  5237296.,  6739340.,  8319240.,  9977380.,
      10034164., 8840808.,  7568060.,  6215536.,  7309512.,  9370130.,
      11524940., 13774390., 13851614., 12163004., 10378410., 8497384.,
      7641032.,  9793490.,  12043724., 14392182., 14469406., 12703292.,
      10837610., 8871912.,  7972552.,  10216850., 12562508., 15009974.,
      15087198., 13243580., 11296810., 9246440.,  8304072.,  10640210.,
      13081292., 15627766., 15704990., 13783868., 11756010., 9620968.,
      8504176.,  10860380., 13309416., 15851668., 15927268., 13936968.,
      11852300., 9672880.,  8266040.,  10530350., 12874420., 15298570.,
      15369410., 13418500., 11386550., 9273240.,  7575328.,  9632200.,
      11754800., 13943384., 14006328., 12206960., 10340840., 8407712.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    284.,    428.,    572.,    716.,    860.,    694.,
      420.,    1576.,   2120.,   2664.,   3208.,   3752.,   4296.,   2964.,
      2066.,   6100.,   7300.,   8500.,   9700.,   10900.,  12100.,  7706.,
      5864.,   15504.,  17616.,  19728.,  21840.,  23952.,  26064.,  15816.,
      12360.,  30288.,  32400.,  34512.,  36624.,  38736.,  40848.,  24104.,
      18856.,  45072.,  47184.,  49296.,  51408.,  53520.,  55632.,  32392.,
      25352.,  59856.,  61968.,  64080.,  66192.,  68304.,  70416.,  40680.,
      29858.,  67444.,  69412.,  71380.,  73348.,  75316.,  77284.,  43178.,
      27732.,  61192.,  62760.,  64328.,  65896.,  67464.,  69032.,  37828.,
      18078.,  39308.,  40220.,  41132.,  42044.,  42956.,  43868.,  23734.,
      350.,    1292.,   2460.,   3628.,   4796.,   5964.,   7132.,   4086.,
      4644.,   11048.,  13640.,  16232.,  18824.,  21416.,  24008.,  13332.,
      13778.,  31060.,  35332.,  39604.,  43876.,  48148.,  52420.,  28634.,
      28648.,  63120.,  69328.,  75536.,  81744.,  87952.,  94160.,  50888.,
      49480.,  106576., 112784., 118992., 125200., 131408., 137616., 73512.,
      70312.,  150032., 156240., 162448., 168656., 174864., 181072., 96136.,
      91144.,  193488., 199696., 205904., 212112., 218320., 224528., 118760.,
      84578.,  178420., 183460., 188500., 193540., 198580., 203620., 107114.,
      67796.,  142344., 145960., 149576., 153192., 156808., 160424., 84036.,
      39902.,  83468.,  85404.,  87340.,  89276.,  91212.,  93148.,  48630.,
      670.,    2444.,   4636.,   6828.,   9020.,   11212.,  13404.,  7478.,
      8868.,   20520.,  25160.,  29800.,  34440.,  39080.,  43720.,  23700.,
      25490.,  56020.,  63364.,  70708.,  78052.,  85396.,  92740.,  49562.,
      51432.,  110736., 121040., 131344., 141648., 151952., 162256., 85960.,
      86600.,  182864., 193168., 203472., 213776., 224080., 234384., 122920.,
      121768., 254992., 265296., 275600., 285904., 296208., 306512., 159880.,
      156936., 327120., 337424., 347728., 358032., 368336., 378640., 196840.,
      139298., 289396., 297508., 305620., 313732., 321844., 329956., 171050.,
      107860., 223496., 229160., 234824., 240488., 246152., 251816., 130244.,
      61726.,  127628., 130588., 133548., 136508., 139468., 142428., 73526.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6640.,   7504.,    9320.,   10440.,  12440.,  13832.,  16016.,  17696.,
      17584.,  19320.,   16664.,  18200.,  15240.,  16560.,  13296.,  14384.,
      13980.,  15360.,   19125.,  20900.,  24970.,  27160.,  31535.,  34160.,
      33985.,  36680.,   31570.,  33940.,  28375.,  30400.,  24380.,  26040.,
      25384.,  27400.,   34160.,  36740.,  43956.,  47124.,  54796.,  58576.,
      58324.,  62188.,   53460.,  56844.,  47480.,  50360.,  40360.,  42712.,
      41748.,  44520.,   55545.,  59080.,  70742.,  75068.,  87367.,  92512.,
      92169.,  97412.,   83678.,  88256.,  73675.,  77560.,  62132.,  65296.,
      62356.,  65576.,   81865.,  85960.,  102998., 107996., 125783., 131712.,
      130585., 136612.,  117278., 122528., 102235., 106680., 85428.,  89040.,
      82964.,  86632.,   108185., 112840., 135254., 140924., 164199., 170912.,
      169001., 175812.,  150878., 156800., 130795., 135800., 108724., 112784.,
      103572., 107688.,  134505., 139720., 167510., 173852., 202615., 210112.,
      207417., 215012.,  184478., 191072., 159355., 164920., 132020., 136528.,
      121576., 125464.,  156740., 161660., 193860., 199836., 232960., 240016.,
      237664., 244804.,  209988., 216180., 180260., 185480., 148456., 152680.,
      130140., 133680.,  167025., 171500., 205690., 211120., 246155., 252560.,
      250565., 257040.,  220450., 226060., 188475., 193200., 154620., 158440.,
      128368., 131440.,  164240., 168120., 201656., 206360., 240632., 246176.,
      244552., 250152.,  214520., 219368., 182880., 186960., 149616., 152912.,
      70640.,  74064.,   92520.,  96840.,  116120., 121352., 141456., 147616.,
      143024., 149240.,  128024., 133400., 111240., 115760., 92656.,  96304.,
      116380., 120960.,  151125., 156900., 188170., 195160., 227535., 235760.,
      229985., 238280.,  204370., 211540., 176375., 182400., 145980., 150840.,
      175144., 181000.,  226160., 233540., 280116., 289044., 337036., 347536.,
      340564., 351148.,  301140., 310284., 258680., 266360., 213160., 219352.,
      247828., 255080.,  318745., 327880., 393302., 404348., 471527., 484512.,
      476329., 489412.,  419678., 430976., 359275., 368760., 295092., 302736.,
      268436., 276136.,  345065., 354760., 425558., 437276., 509943., 523712.,
      514745., 528612.,  453278., 465248., 387835., 397880., 318388., 326480.,
      289044., 297192.,  371385., 381640., 457814., 470204., 548359., 562912.,
      553161., 567812.,  486878., 499520., 416395., 427000., 341684., 350224.,
      309652., 318248.,  397705., 408520., 490070., 503132., 586775., 602112.,
      591577., 607012.,  520478., 533792., 444955., 456120., 364980., 373968.,
      325096., 332824.,  415940., 425660., 510660., 522396., 609280., 623056.,
      613984., 627844.,  538308., 550260., 458660., 468680., 375016., 383080.,
      322140., 328880.,  411025., 419500., 503290., 513520., 598955., 610960.,
      603365., 615440.,  527650., 538060., 448475., 457200., 365820., 372840.,
      299888., 305520.,  381840., 388920., 466616., 475160., 554232., 564256.,
      558152., 568232.,  487160., 495848., 413280., 420560., 336496., 342352.,
      134640., 140624.,  175720., 183240., 219800., 228872., 266896., 277536.,
      268464., 279160.,  239384., 248600., 207240., 214960., 172016., 178224.,
      218780., 226560.,  283125., 292900., 351370., 363160., 423535., 437360.,
      425985., 439880.,  377170., 389140., 324375., 334400., 267580., 275640.,
      324904., 334600.,  418160., 430340., 516276., 530964., 619276., 636496.,
      622804., 640108.,  548820., 563724., 469880., 482360., 385960., 395992.,
      453908., 465640.,  581945., 596680., 715862., 733628., 855687., 876512.,
      860489., 881412.,  755678., 773696., 644875., 659960., 528052., 540176.,
      474516., 486696.,  608265., 623560., 748118., 766556., 894103., 915712.,
      898905., 920612.,  789278., 807968., 673435., 689080., 551348., 563920.,
      495124., 507752.,  634585., 650440., 780374., 799484., 932519., 954912.,
      937321., 959812.,  822878., 842240., 701995., 718200., 574644., 587664.,
      515732., 528808.,  660905., 677320., 812630., 832412., 970935., 994112.,
      975737., 999012.,  856478., 876512., 730555., 747320., 597940., 611408.,
      528616., 540184.,  675140., 689660., 827460., 844956., 985600., 1006096.,
      990304., 1010884., 866628., 884340., 737060., 751880., 601576., 613480.,
      514140., 524080.,  655025., 667500., 800890., 815920., 951755., 969360.,
      956165., 973840.,  834850., 850060., 708475., 721200., 577020., 587240.,
      471408., 479600.,  599440., 609720., 731576., 743960., 867832., 882336.,
      871752., 886312.,  759800., 772328., 643680., 654160., 523376., 531792.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    14.,    28.,    22.,    40.,    30.,
      52.,    38.,    64.,    46.,    76.,    39.,    56.,    20.,    44.,
      84.,    140.,   116.,   180.,   148.,   220.,   180.,   260.,   212.,
      300.,   244.,   340.,   172.,   224.,   113.,   176.,   346.,   484.,
      418.,   568.,   490.,   652.,   562.,   736.,   634.,   820.,   706.,
      904.,   455.,   560.,   336.,   456.,   904.,   1160.,  1032.,  1304.,
      1160.,  1448.,  1288.,  1592.,  1416.,  1736.,  1544.,  1880.,  944.,
      1120.,  728.,   904.,   1800.,  2168.,  1928.,  2312.,  2056.,  2456.,
      2184.,  2600.,  2312.,  2744.,  2440.,  2888.,  1448.,  1680.,  1120.,
      1352.,  2696.,  3176.,  2824.,  3320.,  2952.,  3464.,  3080.,  3608.,
      3208.,  3752.,  3336.,  3896.,  1952.,  2240.,  1512.,  1800.,  3592.,
      4184.,  3720.,  4328.,  3848.,  4472.,  3976.,  4616.,  4104.,  4760.,
      4232.,  4904.,  2456.,  2800.,  1805.,  2048.,  4090.,  4588.,  4210.,
      4720.,  4330.,  4852.,  4450.,  4984.,  4570.,  5116.,  4690.,  5248.,
      2627.,  2912.,  1688.,  1868.,  3732.,  4100.,  3828.,  4204.,  3924.,
      4308.,  4020.,  4412.,  4116.,  4516.,  4212.,  4620.,  2312.,  2520.,
      1105.,  1204.,  2406.,  2608.,  2462.,  2668.,  2518.,  2728.,  2574.,
      2788.,  2630.,  2848.,  2686.,  2908.,  1455.,  1568.,  17.,    36.,
      70.,    112.,   142.,   188.,   214.,   264.,   286.,   340.,   358.,
      416.,   430.,   492.,   247.,   280.,   276.,   332.,   660.,   780.,
      820.,   948.,   980.,   1116.,  1140.,  1284.,  1300.,  1452.,  1460.,
      1620.,  812.,   896.,   833.,   944.,   1882.,  2116.,  2146.,  2392.,
      2410.,  2668.,  2674.,  2944.,  2938.,  3220.,  3202.,  3496.,  1751.,
      1904.,  1744.,  1928.,  3848.,  4232.,  4232.,  4632.,  4616.,  5032.,
      5000.,  5432.,  5384.,  5832.,  5768.,  6232.,  3120.,  3360.,  3032.,
      3272.,  6536.,  7032.,  6920.,  7432.,  7304.,  7832.,  7688.,  8232.,
      8072.,  8632.,  8456.,  9032.,  4520.,  4816.,  4320.,  4616.,  9224.,
      9832.,  9608.,  10232., 9992.,  10632., 10376., 11032., 10760., 11432.,
      11144., 11832., 5920.,  6272.,  5608.,  5960.,  11912., 12632., 12296.,
      13032., 12680., 13432., 13064., 13832., 13448., 14232., 13832., 14632.,
      7320.,  7728.,  5213.,  5504.,  11002., 11596., 11314., 11920., 11626.,
      12244., 11938., 12568., 12250., 12892., 12562., 13216., 6611.,  6944.,
      4184.,  4396.,  8788.,  9220.,  9012.,  9452.,  9236.,  9684.,  9460.,
      9916.,  9684.,  10148., 9908.,  10380., 5192.,  5432.,  2465.,  2580.,
      5158.,  5392.,  5278.,  5516.,  5398.,  5640.,  5518.,  5764.,  5638.,
      5888.,  5758.,  6012.,  3007.,  3136.,  33.,    68.,    134.,   208.,
      270.,   348.,   406.,   488.,   542.,   628.,   678.,   768.,   814.,
      908.,   455.,   504.,   532.,   620.,   1236.,  1420.,  1524.,  1716.,
      1812.,  2012.,  2100.,  2308.,  2388.,  2604.,  2676.,  2900.,  1452.,
      1568.,  1553.,  1712.,  3418.,  3748.,  3874.,  4216.,  4330.,  4684.,
      4786.,  5152.,  5242.,  5620.,  5698.,  6088.,  3047.,  3248.,  3152.,
      3400.,  6792.,  7304.,  7432.,  7960.,  8072.,  8616.,  8712.,  9272.,
      9352.,  9928.,  9992.,  10584., 5296.,  5600.,  5336.,  5640.,  11272.,
      11896., 11912., 12552., 12552., 13208., 13192., 13864., 13832., 14520.,
      14472., 15176., 7592.,  7952.,  7520.,  7880.,  15752., 16488., 16392.,
      17144., 17032., 17800., 17672., 18456., 18312., 19112., 18952., 19768.,
      9888.,  10304., 9704.,  10120., 20232., 21080., 20872., 21736., 21512.,
      22392., 22152., 23048., 22792., 23704., 23432., 24360., 12184., 12656.,
      8621.,  8960.,  17914., 18604., 18418., 19120., 18922., 19636., 19426.,
      20152., 19930., 20668., 20434., 21184., 10595., 10976., 6680.,  6924.,
      13844., 14340., 14196., 14700., 14548., 15060., 14900., 15420., 15252.,
      15780., 15604., 16140., 8072.,  8344.,  3825.,  3956.,  7910.,  8176.,
      8094.,  8364.,  8278.,  8552.,  8462.,  8740.,  8646.,  8928.,  8830.,
      9116.,  4559.,  4704.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      51440.,   58288.,   72380.,   81260.,   96808.,   107848.,  124852.,
      138180.,  137284.,  151060.,  130312.,  142504.,  119340.,  129820.,
      104240.,  112880.,  109140.,  120100.,  149525.,  163625.,  195470.,
      212870.,  247135.,  267995.,  266595.,  288015.,  247910.,  266750.,
      223025.,  239125.,  191780.,  204980.,  199112.,  215144.,  268210.,
      288730.,  345420.,  370620.,  430934.,  461006.,  458990.,  489734.,
      421020.,  447948.,  374170.,  397090.,  318248.,  336968.,  328524.,
      350588.,  437395.,  465535.,  557410.,  591850.,  688793.,  729757.,
      727013.,  768761.,  660394.,  696850.,  581735.,  612675.,  490812.,
      516012.,  492492.,  518140.,  646835.,  679455.,  814114.,  853930.,
      994553.,  1041789., 1032773., 1080793., 927850.,  969682.,  809095.,
      844515.,  676284.,  705068.,  656460.,  685692.,  856275.,  893375.,
      1070818., 1116010., 1300313., 1353821., 1338533., 1392825., 1195306.,
      1242514., 1036455., 1076355., 861756.,  894124.,  820428.,  853244.,
      1065715., 1107295., 1327522., 1378090., 1606073., 1665853., 1644293.,
      1704857., 1462762., 1515346., 1263815., 1308195., 1047228., 1083180.,
      964904.,  995912.,  1244170., 1283410., 1539036., 1586700., 1849694.,
      1905974., 1887158., 1944110., 1667628., 1717020., 1431730., 1473370.,
      1179272., 1212968., 1034100., 1062340., 1327325., 1363025., 1634750.,
      1678070., 1956535., 2007635., 1991675., 2043335., 1752470., 1797230.,
      1498425., 1536125., 1229380., 1259860., 1020848., 1045360., 1306220.,
      1337180., 1603912., 1641448., 1914052., 1958292., 1945300., 1989988.,
      1706536., 1745224., 1454940., 1487500., 1190384., 1216688., 558320.,
      585648.,  731580.,  766060.,  918568.,  960328.,  1119412., 1168580.,
      1131844., 1181460., 1013512., 1056424., 880940.,  917020.,  734000.,
      763120.,  921940.,  958500.,  1197525., 1243625., 1491470., 1547270.,
      1803935., 1869595., 1823395., 1889615., 1620710., 1677950., 1399025.,
      1447125., 1158180., 1196980., 1389512., 1436264., 1794610., 1853530.,
      2223180., 2294460., 2675414., 2759246., 2703470., 2787974., 2390940.,
      2463948., 2054170., 2115490., 1692968., 1742408., 1968204., 2026108.,
      2531795., 2604735., 3124450., 3212650., 3746393., 3850077., 3784613.,
      3889081., 3334954., 3425170., 2855335., 2931075., 2345532., 2406572.,
      2132172., 2193660., 2741235., 2818655., 3381154., 3474730., 4052153.,
      4162109., 4090373., 4201113., 3602410., 3698002., 3082695., 3162915.,
      2531004., 2595628., 2296140., 2361212., 2950675., 3032575., 3637858.,
      3736810., 4357913., 4474141., 4396133., 4513145., 3869866., 3970834.,
      3310055., 3394755., 2716476., 2784684., 2460108., 2528764., 3160115.,
      3246495., 3894562., 3998890., 4663673., 4786173., 4701893., 4825177.,
      4137322., 4243666., 3537415., 3626595., 2901948., 2973740., 2585384.,
      2647112., 3308170., 3385810., 4061916., 4155660., 4846814., 4956854.,
      4884278., 4994990., 4282668., 4378140., 3649330., 3729370., 2984072.,
      3048488., 2563700., 2617540., 3271325., 3339025., 4005950., 4087670.,
      4767735., 4863635., 4802875., 4899335., 4200470., 4283630., 3570425.,
      3640125., 2912580., 2968660., 2387888., 2432880., 3040620., 3097180.,
      3715912., 3784168., 4413892., 4493972., 4445140., 4525668., 3879976.,
      3949384., 3291740., 3349900., 2680304., 2727088., 1065200., 1113008.,
      1390780., 1450860., 1740328., 1812808., 2113972., 2198980., 2126404.,
      2211860., 1896712., 1970344., 1642540., 1704220., 1363760., 1413360.,
      1734740., 1796900., 2245525., 2323625., 2787470., 2881670., 3360735.,
      3471195., 3380195., 3491215., 2993510., 3089150., 2575025., 2655125.,
      2124580., 2188980., 2579912., 2657384., 3321010., 3418330., 4100940.,
      4218300., 4919894., 5057486., 4947950., 5086214., 4360860., 4479948.,
      3734170., 3833890., 3067688., 3147848., 3607884., 3701628., 4626195.,
      4743935., 5691490., 5833450., 6803993., 6970397., 6842213., 7009401.,
      6009514., 6153490., 5128935., 5249475., 4200252., 4297132., 3771852.,
      3869180., 4835635., 4957855., 5948194., 6095530., 7109753., 7282429.,
      7147973., 7321433., 6276970., 6426322., 5356295., 5481315., 4385724.,
      4486188., 3935820., 4036732., 5045075., 5171775., 6204898., 6357610.,
      7415513., 7594461., 7453733., 7633465., 6544426., 6699154., 5583655.,
      5713155., 4571196., 4675244., 4099788., 4204284., 5254515., 5385695.,
      6461602., 6619690., 7721273., 7906493., 7759493., 7945497., 6811882.,
      6971986., 5811015., 5944995., 4756668., 4864300., 4205864., 4298312.,
      5372170., 5488210., 6584796., 6724620., 7843934., 8007734., 7881398.,
      8045870., 6897708., 7039260., 5866930., 5985370., 4788872., 4884008.,
      4093300., 4172740., 5215325., 5315025., 6377150., 6497270., 7578935.,
      7719635., 7614075., 7755335., 6648470., 6770030., 5642425., 5744125.,
      4595780., 4677460., 3754928., 3820400., 4775020., 4857180., 5827912.,
      5926888., 6913732., 7029652., 6944980., 7061348., 6053416., 6153544.,
      5128540., 5212300., 4170224., 4237488.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    90.,     194.,    146.,    282.,
      202.,    370.,    258.,    458.,    314.,    546.,    281.,    413.,
      118.,    302.,    572.,    1004.,   812.,    1308.,   1052.,   1612.,
      1292.,   1916.,   1532.,   2220.,   1772.,   2524.,   1278.,   1686.,
      787.,    1279.,   2510.,   3590.,   3062.,   4238.,   3614.,   4886.,
      4166.,   5534.,   4718.,   6182.,   5270.,   6830.,   3439.,   4267.,
      2460.,   3404.,   6744.,   8760.,   7736.,   9880.,   8728.,   11000.,
      9720.,   12120.,  10712.,  13240.,  11704.,  14360.,  7212.,   8604.,
      5484.,   6876.,   13688.,  16600.,  14680.,  17720.,  15672.,  18840.,
      16664.,  19960.,  17656.,  21080.,  18648.,  22200.,  11132.,  12972.,
      8508.,   10348.,  20632.,  24440.,  21624.,  25560.,  22616.,  26680.,
      23608.,  27800.,  24600.,  28920.,  25592.,  30040.,  15052.,  17340.,
      11532.,  13820.,  27576.,  32280.,  28568.,  33400.,  29560.,  34520.,
      30552.,  35640.,  31544.,  36760.,  32536.,  37880.,  18972.,  21708.,
      13963.,  15895.,  31742.,  35702.,  32678.,  36734.,  33614.,  37766.,
      34550.,  38798.,  35486.,  39830.,  36422.,  40862.,  20455.,  22723.,
      13150.,  14582.,  29132.,  32060.,  29884.,  32876.,  30636.,  33692.,
      31388.,  34508.,  32140.,  35324.,  32892.,  36140.,  18086.,  19742.,
      8645.,   9433.,   18850.,  20458.,  19290.,  20930.,  19730.,  21402.,
      20170.,  21874.,  20610.,  22346.,  21050.,  22818.,  11417.,  12317.,
      101.,    249.,    482.,    810.,    1050.,   1410.,   1618.,   2010.,
      2186.,   2610.,   2754.,   3210.,   3322.,   3810.,   1913.,   2173.,
      2102.,   2542.,   5052.,   5996.,   6316.,   7324.,   7580.,   8652.,
      8844.,   9980.,   10108.,  11308.,  11372.,  12636.,  6334.,   6998.,
      6451.,   7327.,   14606.,  16454.,  16694.,  18638.,  18782.,  20822.,
      20870.,  23006.,  22958.,  25190.,  25046.,  27374.,  13711.,  14923.,
      13596.,  15052.,  30040.,  33080.,  33080.,  36248.,  36120.,  39416.,
      39160.,  42584.,  42200.,  45752.,  45240.,  48920.,  24492.,  26396.,
      23788.,  25692.,  51320.,  55256.,  54360.,  58424.,  57400.,  61592.,
      60440.,  64760.,  63480.,  67928.,  66520.,  71096.,  35580.,  37932.,
      33980.,  36332.,  72600.,  77432.,  75640.,  80600.,  78680.,  83768.,
      81720.,  86936.,  84760.,  90104.,  87800.,  93272.,  46668.,  49468.,
      44172.,  46972.,  93880.,  99608.,  96920.,  102776., 99960.,  105944.,
      103000., 109112., 106040., 112280., 109080., 115448., 57756.,  61004.,
      41131.,  43447.,  86846.,  91574.,  89318.,  94142.,  91790.,  96710.,
      94262.,  99278.,  96734.,  101846., 99206.,  104414., 52231.,  54883.,
      33054.,  34742.,  69452.,  72892.,  71228.,  74732.,  73004.,  76572.,
      74780.,  78412.,  76556.,  80252.,  78332.,  82092.,  41062.,  42974.,
      19493.,  20409.,  40802.,  42666.,  41754.,  43650.,  42706.,  44634.,
      43658.,  45618.,  44610.,  46602.,  45562.,  47586.,  23801.,  24829.,
      197.,    473.,    930.,    1514.,   2010.,   2626.,   3090.,   3738.,
      4170.,   4850.,   5250.,   5962.,   6330.,   7074.,   3545.,   3933.,
      4086.,   4782.,   9532.,   10988.,  11820.,  13340.,  14108.,  15692.,
      16396.,  18044.,  18684.,  20396.,  20972.,  22748.,  11390.,  12310.,
      12115.,  13375.,  26702.,  29318.,  30326.,  33038.,  33950.,  36758.,
      37574.,  40478.,  41198.,  44198.,  44822.,  47918.,  23983.,  25579.,
      24732.,  26700.,  53336.,  57400.,  58424.,  62616.,  63512.,  67832.,
      68600.,  73048.,  73688.,  78264.,  78776.,  83480.,  41772.,  44188.,
      42092.,  44508.,  88952.,  93912.,  94040.,  99128.,  99128.,  104344.,
      104216., 109560., 109304., 114776., 114392., 119992., 60028.,  62892.,
      59452.,  62316.,  124568., 130424., 129656., 135640., 134744., 140856.,
      139832., 146072., 144920., 151288., 150008., 156504., 78284.,  81596.,
      76812.,  80124.,  160184., 166936., 165272., 172152., 170360., 177368.,
      175448., 182584., 180536., 187800., 185624., 193016., 96540.,  100300.,
      68299.,  70999.,  141950., 147446., 145958., 151550., 149966., 155654.,
      153974., 159758., 157982., 163862., 161990., 167966., 84007.,  87043.,
      52958.,  54902.,  109772., 113724., 112572., 116588., 115372., 119452.,
      118172., 122316., 120972., 125180., 123772., 128044., 64038.,  66206.,
      30341.,  31385.,  62754.,  64874.,  64218.,  66370.,  65682.,  67866.,
      67146.,  69362.,  68610.,  70858.,  70074.,  72354.,  36185.,  37341.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      404832.,   459360.,   570360.,   641080.,   763664.,   851600.,
      985768.,   1091944.,  1084776.,  1194536.,  1030544.,  1127696.,
      944440.,   1027960.,  825440.,   894304.,   862360.,   949720.,
      1182350.,  1294750.,  1546660.,  1685380.,  1956570.,  2122890.,
      2111690.,  2282490.,  1964740.,  2114980.,  1768350.,  1896750.,
      1521240.,  1626520.,  1577104.,  1704976.,  2125460.,  2289140.,
      2738520.,  2939544.,  3417820.,  3657724.,  3641596.,  3886876.,
      3341592.,  3556440.,  2970740.,  3153620.,  2527504.,  2676880.,
      2606408.,  2782472.,  3471370.,  3695930.,  4425260.,  4700108.,
      5469870.,  5796798.,  5774846.,  6108046.,  5247116.,  5538092.,
      4623290.,  4870250.,  3901576.,  4102728.,  3914568.,  4119304.,
      5142410.,  5402810.,  6473516.,  6791372.,  7909678.,  8286782.,
      8214654.,  8598030.,  7381388.,  7715372.,  6437690.,  6720490.,
      5381768.,  5611592.,  5103944.,  5304584.,  6624010.,  6879290.,
      8245292.,  8557004.,  9969582.,  10339518., 10274558., 10650766.,
      9140876.,  9468716.,  7898810.,  8176490.,  6546568.,  6772296.,
      5834568.,  6031112.,  7532170.,  7782330.,  9328940.,  9634508.,
      11226670., 11589438., 11531646., 11900686., 10212236., 10533932.,
      8786490.,  9059050.,  7252616.,  7474248.,  6074640.,  6256784.,
      7815220.,  8046740.,  9647640.,  9930072.,  11573436., 11908316.,
      11872476., 12212732., 10478040., 10774296., 8985620.,  9236340.,
      7393680.,  7597328.,  5713432.,  5873496.,  7337070.,  7540350.,
      9041380.,  9289156.,  10827642., 11121194., 11108202., 11406234.,
      9785092.,  10044388., 8376190.,  8595470.,  6880216.,  7058200.,
      4693600.,  4823904.,  6026040.,  6191480.,  7424144.,  7625744.,
      8888936.,  9127720.,  9138472.,  9380840.,  8047376.,  8258192.,
      6886520.,  7064760.,  5654880.,  5799520.,  1211744.,  1299040.,
      1619960.,  1731640.,  2072336.,  2209424.,  2569896.,  2733416.,
      2668904.,  2836008.,  2437520.,  2583824.,  2157880.,  2282360.,
      1828960.,  1930592.,  2157720.,  2286040.,  2852750.,  3016350.,
      3612580.,  3812740.,  4438490.,  4676490.,  4593610.,  4836090.,
      4153540.,  4365220.,  3643550.,  3823150.,  3062360.,  3208600.,
      3475600.,  3652624.,  4560020.,  4785140.,  5733720.,  6008472.,
      6998236.,  7324156.,  7222012.,  7553308.,  6484248.,  6772824.,
      5651060.,  5895380.,  4720912.,  4919440.,  5103944.,  5304584.,
      6624010.,  6879290.,  8245292.,  8557004.,  9969582.,  10339518.,
      10274558., 10650766., 9140876.,  9468716.,  7898810.,  8176490.,
      6546568.,  6772296.,  5834568.,  6031112.,  7532170.,  7782330.,
      9328940.,  9634508.,  11226670., 11589438., 11531646., 11900686.,
      10212236., 10533932., 8786490.,  9059050.,  7252616.,  7474248.,
      6106440.,  6298888.,  7866890.,  8111930.,  9724460.,  10023884.,
      11680942., 12036542., 11985918., 12347790., 10595468., 10911020.,
      9100730.,  9368170.,  7499912.,  7717448.,  5919560.,  6107912.,
      7628170.,  7868090.,  9431852.,  9725132.,  11332398., 11680830.,
      11637374., 11992078., 10290572., 10599980., 8841530.,  9103850.,
      7288456.,  7501896.,  5212432.,  5378192.,  6716980.,  6928020.,
      8305176.,  8563032.,  9978556.,  10284764., 10277596., 10589180.,
      9086424.,  9358104.,  7805460.,  8035700.,  6433168.,  6620432.,
      3789336.,  3924824.,  4901230.,  5073790.,  6081508.,  6292420.,
      7331450.,  7581994.,  7612010.,  7867034.,  6751492.,  6973924.,
      5817470.,  6006030.,  4808664.,  4962072.,  1592928.,  1690464.,
      2109240.,  2233720.,  2674832.,  2827280.,  3290728.,  3472168.,
      3540264.,  3725288.,  3199760.,  3361424.,  2805880.,  2943160.,
      2357600.,  2469472.,  2018656.,  2138720.,  2669560.,  2822200.,
      3381008.,  3567248.,  4154024.,  4374888.,  4253032.,  4477480.,
      3844496.,  4039952.,  3371320.,  3536760.,  2832480.,  2966880.,
      3334296.,  3470808.,  4333710.,  4507550.,  5402020.,  5614468.,
      6540506.,  6792842.,  6695626.,  6952442.,  5967556.,  6191524.,
      5165470.,  5355310.,  4288088.,  4442520.,  4677776.,  4838416.,
      6042260.,  6246900.,  7487832.,  7738008.,  9016028.,  9313276.,
      9239804.,  9542428.,  8189208.,  8453208.,  7051380.,  7275220.,
      5824784.,  6006928.,  6106440.,  6298888.,  7866890.,  8111930.,
      9724460.,  10023884., 11680942., 12036542., 11985918., 12347790.,
      10595468., 10911020., 9100730.,  9368170.,  7499912.,  7717448.,
      5919560.,  6107912.,  7628170.,  7868090.,  9431852.,  9725132.,
      11332398., 11680830., 11637374., 11992078., 10290572., 10599980.,
      8841530.,  9103850.,  7288456.,  7501896.,  5273928.,  5458184.,
      6816010.,  7050810.,  8451116.,  8738252.,  10181038., 10522302.,
      10486014., 10833550., 9297548.,  9600812.,  8008890.,  8266090.,
      6618248.,  6827592.,  4169544.,  4349704.,  5430410.,  5660090.,
      6782252.,  7063244.,  8226862.,  8560958.,  8531838.,  8872206.,
      7616396.,  7913516.,  6602810.,  6854890.,  5489288.,  5694536.,
      2515216.,  2664592.,  3324980.,  3515540.,  4210200.,  4443480.,
      5172412.,  5449948.,  5471452.,  5754364.,  4942296.,  5189400.,
      4331540.,  4541300.,  3637648.,  3808528.,  3360280.,  3503960.,
      4375150.,  4557950.,  5462500.,  5685700.,  6623610.,  6888490.,
      6904170.,  7173530.,  6157060.,  6391780.,  5332350.,  5531150.,
      4428760.,  4590360.,  3776096.,  3906400.,  4879160.,  5044600.,
      6047888.,  6249488.,  7283304.,  7522088.,  7532840.,  7775208.,
      6671120.,  6881936.,  5739640.,  5917880.,  4737376.,  4882016.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     220.,     764.,     636.,     1436.,    1052.,
      2108.,    1468.,    2780.,    1884.,    3452.,    2300.,    4124.,
      2126.,    3166.,    780.,     2220.,    4184.,    7576.,    6040.,
      9944.,    7896.,    12312.,   9752.,    14680.,   11608.,   17048.,
      13464.,   19416.,   9836.,    13068.,   5834.,    9722.,    19060.,
      27604.,   23380.,   32692.,   27700.,   37780.,   32020.,   42868.,
      36340.,   47956.,   40660.,   53044.,   26714.,   33290.,   18776.,
      26264.,   52016.,   68016.,   59824.,   76848.,   67632.,   85680.,
      75440.,   94512.,   83248.,   103344.,  91056.,   112176.,  56344.,
      67416.,   42520.,   53592.,   106672.,  129840.,  114480.,  138672.,
      122288.,  147504.,  130096.,  156336.,  137904.,  165168.,  145712.,
      174000.,  87256.,   101912.,  66264.,   80920.,   161328.,  191664.,
      169136.,  200496.,  176944.,  209328.,  184752.,  218160.,  192560.,
      226992.,  200368.,  235824.,  118168.,  136408.,  90008.,   108248.,
      215984.,  253488.,  223792.,  262320.,  231600.,  271152.,  239408.,
      279984.,  247216.,  288816.,  255024.,  297648.,  149080.,  170904.,
      109802.,  125210.,  250036.,  281620.,  257428.,  289780.,  264820.,
      297940.,  272212.,  306100.,  279604.,  314260.,  286996.,  322420.,
      161402.,  179498.,  103788.,  115212.,  230168.,  253528.,  236120.,
      259992.,  242072.,  266456.,  248024.,  272920.,  253976.,  279384.,
      259928.,  285848.,  143052.,  156268.,  68382.,   74670.,   149212.,
      162044.,  152700.,  165788.,  156188.,  169532.,  159676.,  173276.,
      163164.,  177020.,  166652.,  180764.,  90446.,   97630.,   670.,
      1838.,    3548.,    6140.,    8060.,    10908.,   12572.,   15676.,
      17084.,   20444.,   21596.,   25212.,   26108.,   29980.,   15054.,
      17118.,   16396.,   19884.,   39512.,   47000.,   49560.,   57560.,
      59608.,   68120.,   69656.,   78680.,   79704.,   89240.,   89752.,
      99800.,   50028.,   55308.,   50762.,   57722.,   115060.,  129748.,
      131668.,  147124.,  148276.,  164500.,  164884.,  181876.,  181492.,
      199252.,  198100.,  216628.,  108506.,  118154.,  107352.,  118936.,
      237360.,  261552.,  261552.,  286768.,  285744.,  311984.,  309936.,
      337200.,  334128.,  362416.,  358320.,  387632.,  194072.,  209240.,
      188440.,  203608.,  406704.,  438064.,  430896.,  463280.,  455088.,
      488496.,  479280.,  513712.,  503472.,  538928.,  527664.,  564144.,
      282328.,  301080.,  269528.,  288280.,  576048.,  614576.,  600240.,
      639792.,  624432.,  665008.,  648624.,  690224.,  672816.,  715440.,
      697008.,  740656.,  370584.,  392920.,  350616.,  372952.,  745392.,
      791088.,  769584.,  816304.,  793776.,  841520.,  817968.,  866736.,
      842160.,  891952.,  866352.,  917168.,  458840.,  484760.,  326762.,
      345242.,  690100.,  727828.,  709780.,  748276.,  729460.,  768724.,
      749140.,  789172.,  768820.,  809620.,  788500.,  830068.,  415226.,
      436394.,  262764.,  276236.,  552216.,  579672.,  566360.,  594328.,
      580504.,  608984.,  594648.,  623640.,  608792.,  638296.,  622936.,
      652952.,  326604.,  341868.,  155038.,  162350.,  324572.,  339452.,
      332156.,  347292.,  339740.,  355132.,  347324.,  362972.,  354908.,
      370812.,  362492.,  378652.,  189390.,  197598.,  1310.,    3502.,
      6876.,    11516.,   15484.,   20380.,   24092.,   29244.,   32700.,
      38108.,   41308.,   46972.,   49916.,   55836.,   27982.,   31070.,
      32012.,   37548.,   74840.,   86424.,   93080.,   105176.,  111320.,
      123928.,  129560.,  142680.,  147800.,  161432.,  166040.,  180184.,
      90220.,   97548.,   95690.,   105722.,  211060.,  231892.,  239956.,
      261556.,  268852.,  291220.,  297748.,  320884.,  326644.,  350548.,
      355540.,  380212.,  190298.,  203018.,  195928.,  211608.,  422704.,
      455088.,  463280.,  496688.,  503856.,  538288.,  544432.,  579888.,
      585008.,  621488.,  625584.,  663088.,  331800.,  351064.,  334360.,
      353624.,  706736.,  746288.,  747312.,  787888.,  787888.,  829488.,
      828464.,  871088.,  869040.,  912688.,  909616.,  954288.,  477400.,
      500248.,  472792.,  495640.,  990768.,  1037488., 1031344., 1079088.,
      1071920., 1120688., 1112496., 1162288., 1153072., 1203888., 1193648.,
      1245488., 623000.,  649432.,  611224.,  637656.,  1274800., 1328688.,
      1315376., 1370288., 1355952., 1411888., 1396528., 1453488., 1437104.,
      1495088., 1477680., 1536688., 768600.,  798616.,  543722.,  565274.,
      1130164., 1174036., 1162132., 1206772., 1194100., 1239508., 1226068.,
      1272244., 1258036., 1304980., 1290004., 1337716., 669050.,  693290.,
      421740.,  437260.,  874264.,  905816.,  896600.,  928664.,  918936.,
      951512.,  941272.,  974360.,  963608.,  997208.,  985944.,  1020056.,
      510156.,  527468.,  241694.,  250030.,  499932.,  516860.,  511612.,
      528796.,  523292.,  540732.,  534972.,  552668.,  546652.,  564604.,
      558332.,  576540.,  288334.,  297566.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      24880.,   26560.,   28272.,   30016.,   35100.,   37280.,   39500.,
      41760.,   47048.,   49760.,   52520.,   55328.,   60788.,   64064.,
      67396.,   70784.,   66948.,   70336.,   73780.,   77280.,   63656.,
      66656.,   69704.,   72800.,   58380.,   60960.,   63580.,   66240.,
      51056.,   53184.,   55344.,   57536.,   53220.,   55920.,   58660.,
      61440.,   73025.,   76500.,   80025.,   83600.,   95590.,   99880.,
      104230.,  108640.,  120995.,  126140.,  131355.,  136640.,  130655.,
      135940.,  141295.,  146720.,  121630.,  126280.,  130990.,  135760.,
      109525.,  113500.,  117525.,  121600.,  94260.,   97520.,   100820.,
      104160.,  97576.,   101536.,  105544.,  109600.,  131570.,  136640.,
      141770.,  146960.,  169596.,  175824.,  182124.,  188496.,  211750.,
      219184.,  226702.,  234304.,  225694.,  233296.,  240982.,  248752.,
      207180.,  213840.,  220572.,  227376.,  184250.,  189920.,  195650.,
      201440.,  156808.,  161440.,  166120.,  170848.,  161532.,  166992.,
      172508.,  178080.,  215215.,  222180.,  229215.,  236320.,  274442.,
      282968.,  291578.,  300272.,  339325.,  349468.,  359709.,  370048.,
      358337.,  368676.,  379113.,  389648.,  325682.,  334712.,  343826.,
      353024.,  287035.,  294700.,  302435.,  310240.,  242284.,  248528.,
      254828.,  261184.,  243068.,  249424.,  255836.,  262304.,  319375.,
      327460.,  335615.,  343840.,  402122.,  411992.,  421946.,  431984.,
      491421.,  503132.,  514941.,  526848.,  510433.,  522340.,  534345.,
      546448.,  458738.,  469112.,  479570.,  490112.,  400155.,  408940.,
      417795.,  426720.,  334572.,  341712.,  348908.,  356160.,  324604.,
      331856.,  339164.,  346528.,  423535.,  432740.,  442015.,  451360.,
      529802.,  541016.,  552314.,  563696.,  643517.,  656796.,  670173.,
      683648.,  662529.,  676004.,  689577.,  703248.,  591794.,  603512.,
      615314.,  627200.,  513275.,  523180.,  533155.,  543200.,  426860.,
      434896.,  442988.,  451136.,  406140.,  414288.,  422492.,  430752.,
      527695.,  538020.,  548415.,  558880.,  657482.,  670040.,  682682.,
      695408.,  795613.,  810460.,  825405.,  840448.,  814625.,  829668.,
      844809.,  860048.,  724850.,  737912.,  751058.,  764288.,  626395.,
      637420.,  648515.,  659680.,  519148.,  528080.,  537068.,  546112.,
      478600.,  486304.,  494056.,  501856.,  617210.,  626960.,  636770.,
      646640.,  763596.,  775440.,  787356.,  799344.,  917854.,  931840.,
      945910.,  960064.,  936502.,  950656.,  964894.,  979216.,  827676.,
      839952.,  852300.,  864720.,  710690.,  721040.,  731450.,  741920.,
      585448.,  593824.,  602248.,  610720.,  513540.,  520560.,  527620.,
      534720.,  659225.,  668100.,  677025.,  686000.,  811990.,  822760.,
      833590.,  844480.,  971915.,  984620.,  997395.,  1010240., 989415.,
      1002260., 1015175., 1028160., 870670.,  881800.,  892990.,  904240.,
      744525.,  753900.,  763325.,  772800.,  610900.,  618480.,  626100.,
      633760.,  507376.,  513472.,  519600.,  525760.,  649260.,  656960.,
      664700.,  672480.,  797288.,  806624.,  816008.,  825440.,  951524.,
      962528.,  973588.,  984704.,  967092.,  978208.,  989380.,  1000608.,
      848456.,  858080.,  867752.,  877472.,  723420.,  731520.,  739660.,
      747840.,  591920.,  598464.,  605040.,  611648.,  275760.,  282560.,
      289392.,  296256.,  361500.,  370080.,  378700.,  387360.,  454088.,
      464480.,  474920.,  485408.,  553588.,  565824.,  578116.,  590464.,
      559748.,  572096.,  584500.,  596960.,  501416.,  512096.,  522824.,
      533600.,  435980.,  444960.,  453980.,  463040.,  363376.,  370624.,
      377904.,  385216.,  456420.,  465520.,  474660.,  483840.,  593025.,
      604500.,  616025.,  627600.,  738790.,  752680.,  766630.,  780640.,
      893795.,  910140.,  926555.,  943040.,  903455.,  919940.,  936495.,
      953120.,  803230.,  817480.,  831790.,  846160.,  693525.,  705500.,
      717525.,  729600.,  574260.,  583920.,  593620.,  603360.,  688936.,
      700576.,  712264.,  724000.,  889970.,  904640.,  919370.,  934160.,
      1102716., 1120464., 1138284., 1156176., 1327270., 1348144., 1369102.,
      1390144., 1341214., 1362256., 1383382., 1404592., 1186380., 1204560.,
      1222812., 1241136., 1019450., 1034720., 1050050., 1065440., 840328.,
      852640.,  865000.,  877408.,  976892.,  991312.,  1005788., 1020320.,
      1256815., 1274980., 1293215., 1311520., 1551242., 1573208., 1595258.,
      1617392., 1860285., 1886108., 1912029., 1938048., 1879297., 1905316.,
      1931433., 1957648., 1656242., 1678712., 1701266., 1723904., 1418235.,
      1437100., 1456035., 1475040., 1165164., 1180368., 1195628., 1210944.,
      1058428., 1073744., 1089116., 1104544., 1360975., 1380260., 1399615.,
      1419040., 1678922., 1702232., 1725626., 1749104., 2012381., 2039772.,
      2067261., 2094848., 2031393., 2058980., 2086665., 2114448., 1789298.,
      1813112., 1837010., 1860992., 1531355., 1551340., 1571395., 1591520.,
      1257452., 1273552., 1289708., 1305920., 1139964., 1156176., 1172444.,
      1188768., 1465135., 1485540., 1506015., 1526560., 1806602., 1831256.,
      1855994., 1880816., 2164477., 2193436., 2222493., 2251648., 2183489.,
      2212644., 2241897., 2271248., 1922354., 1947512., 1972754., 1998080.,
      1644475., 1665580., 1686755., 1708000., 1349740., 1366736., 1383788.,
      1400896., 1221500., 1238608., 1255772., 1272992., 1569295., 1590820.,
      1612415., 1634080., 1934282., 1960280., 1986362., 2012528., 2316573.,
      2347100., 2377725., 2408448., 2335585., 2366308., 2397129., 2428048.,
      2055410., 2081912., 2108498., 2135168., 1757595., 1779820., 1802115.,
      1824480., 1442028., 1459920., 1477868., 1495872., 1285000., 1300384.,
      1315816., 1331296., 1644410., 1663760., 1683170., 1702640., 2019276.,
      2042640., 2066076., 2089584., 2409694., 2437120., 2464630., 2492224.,
      2428342., 2455936., 2483614., 2511376., 2129436., 2153232., 2177100.,
      2201040., 1814690., 1834640., 1854650., 1874720., 1484008., 1500064.,
      1516168., 1532320., 1275140., 1288560., 1302020., 1315520., 1627225.,
      1644100., 1661025., 1678000., 1992790., 2013160., 2033590., 2054080.,
      2371915., 2395820., 2419795., 2443840., 2389415., 2413460., 2437575.,
      2461760., 2089870., 2110600., 2131390., 2152240., 1776525., 1793900.,
      1811325., 1828800., 1449300., 1463280., 1477300., 1491360., 1188336.,
      1199552., 1210800., 1222080., 1513260., 1527360., 1541500., 1555680.,
      1849448., 1866464., 1883528., 1900640., 2196964., 2216928., 2236948.,
      2257024., 2212532., 2232608., 2252740., 2272928., 1931336., 1948640.,
      1965992., 1983392., 1638620., 1653120., 1667660., 1682240., 1334320.,
      1345984., 1357680., 1369408., 526640.,  538560.,  550512.,  562496.,
      687900.,  702880.,  717900.,  732960.,  861128.,  879200.,  897320.,
      915488.,  1046388., 1067584., 1088836., 1110144., 1052548., 1073856.,
      1095220., 1116640., 939176.,  957536.,  975944.,  994400.,  813580.,
      828960.,  844380.,  859840.,  675696.,  688064.,  700464.,  712896.,
      859620.,  875120.,  890660.,  906240.,  1113025., 1132500., 1152025.,
      1171600., 1381990., 1405480., 1429030., 1452640., 1666595., 1694140.,
      1721755., 1749440., 1676255., 1703940., 1731695., 1759520., 1484830.,
      1508680., 1532590., 1556560., 1277525., 1297500., 1317525., 1337600.,
      1054260., 1070320., 1086420., 1102560., 1280296., 1299616., 1318984.,
      1338400., 1648370., 1672640., 1696970., 1721360., 2035836., 2065104.,
      2094444., 2123856., 2442790., 2477104., 2511502., 2545984., 2456734.,
      2491216., 2525782., 2560432., 2165580., 2195280., 2225052., 2254896.,
      1854650., 1879520., 1904450., 1929440., 1523848., 1543840., 1563880.,
      1583968., 1792252., 1815632., 1839068., 1862560., 2298415., 2327780.,
      2357215., 2386720., 2828042., 2863448., 2898938., 2934512., 3381245.,
      3422748., 3464349., 3506048., 3400257., 3441956., 3483753., 3525648.,
      2986802., 3022712., 3058706., 3094784., 2549435., 2579500., 2609635.,
      2639840., 2088044., 2112208., 2136428., 2160704., 1873788., 1898064.,
      1922396., 1946784., 2402575., 2433060., 2463615., 2494240., 2955722.,
      2992472., 3029306., 3066224., 3533341., 3576412., 3619581., 3662848.,
      3552353., 3595620., 3638985., 3682448., 3119858., 3157112., 3194450.,
      3231872., 2662555., 2693740., 2724995., 2756320., 2180332., 2205392.,
      2230508., 2255680., 1955324., 1980496., 2005724., 2031008., 2506735.,
      2538340., 2570015., 2601760., 3083402., 3121496., 3159674., 3197936.,
      3685437., 3730076., 3774813., 3819648., 3704449., 3749284., 3794217.,
      3839248., 3252914., 3291512., 3330194., 3368960., 2775675., 2807980.,
      2840355., 2872800., 2272620., 2298576., 2324588., 2350656., 2036860.,
      2062928., 2089052., 2115232., 2610895., 2643620., 2676415., 2709280.,
      3211082., 3250520., 3290042., 3329648., 3837533., 3883740., 3930045.,
      3976448., 3856545., 3902948., 3949449., 3996048., 3385970., 3425912.,
      3465938., 3506048., 2888795., 2922220., 2955715., 2989280., 2364908.,
      2391760., 2418668., 2445632., 2091400., 2114464., 2137576., 2160736.,
      2671610., 2700560., 2729570., 2758640., 3274956., 3309840., 3344796.,
      3379824., 3901534., 3942400., 3983350., 4024384., 3920182., 3961216.,
      4002334., 4043536., 3431196., 3466512., 3501900., 3537360., 2918690.,
      2948240., 2977850., 3007520., 2382568., 2406304., 2430088., 2453920.,
      2036740., 2056560., 2076420., 2096320., 2595225., 2620100., 2645025.,
      2670000., 3173590., 3203560., 3233590., 3263680., 3771915., 3807020.,
      3842195., 3877440., 3789415., 3824660., 3859975., 3895360., 3309070.,
      3339400., 3369790., 3400240., 2808525., 2833900., 2859325., 2884800.,
      2287700., 2308080., 2328500., 2348960., 1869296., 1885632., 1902000.,
      1918400., 2377260., 2397760., 2418300., 2438880., 2901608., 2926304.,
      2951048., 2975840., 3442404., 3471328., 3500308., 3529344., 3457972.,
      3487008., 3516100., 3545248., 3014216., 3039200., 3064232., 3089312.,
      2553820., 2574720., 2595660., 2616640., 2076720., 2093504., 2110320.,
      2127168.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     9.,     16.,    10.,    24.,    42.,    64.,    34.,
      56.,    82.,    112.,   58.,    88.,    122.,   160.,   82.,    120.,
      162.,   208.,   106.,   152.,   202.,   256.,   130.,   184.,   242.,
      304.,   125.,   156.,   189.,   224.,   38.,    80.,    126.,   176.,
      236.,   336.,   444.,   560.,   348.,   464.,   588.,   720.,   460.,
      592.,   732.,   880.,   572.,   720.,   876.,   1040.,  684.,   848.,
      1020.,  1200.,  796.,   976.,   1164.,  1360.,  590.,   688.,   790.,
      896.,   335.,   452.,   575.,   704.,   1126.,  1384.,  1654.,  1936.,
      1390.,  1672.,  1966.,  2272.,  1654.,  1960.,  2278.,  2608.,  1918.,
      2248.,  2590.,  2944.,  2182.,  2536.,  2902.,  3280.,  2446.,  2824.,
      3214.,  3616.,  1619.,  1820.,  2027.,  2240.,  1116.,  1344.,  1580.,
      1824.,  3128.,  3616.,  4120.,  4640.,  3608.,  4128.,  4664.,  5216.,
      4088.,  4640.,  5208.,  5792.,  4568.,  5152.,  5752.,  6368.,  5048.,
      5664.,  6296.,  6944.,  5528.,  6176.,  6840.,  7520.,  3436.,  3776.,
      4124.,  4480.,  2572.,  2912.,  3260.,  3616.,  6488.,  7200.,  7928.,
      8672.,  6968.,  7712.,  8472.,  9248.,  7448.,  8224.,  9016.,  9824.,
      7928.,  8736.,  9560.,  10400., 8408.,  9248.,  10104., 10976., 8888.,
      9760.,  10648., 11552., 5340.,  5792.,  6252.,  6720.,  4028.,  4480.,
      4940.,  5408.,  9848.,  10784., 11736., 12704., 10328., 11296., 12280.,
      13280., 10808., 11808., 12824., 13856., 11288., 12320., 13368., 14432.,
      11768., 12832., 13912., 15008., 12248., 13344., 14456., 15584., 7244.,
      7808.,  8380.,  8960.,  5484.,  6048.,  6620.,  7200.,  13208., 14368.,
      15544., 16736., 13688., 14880., 16088., 17312., 14168., 15392., 16632.,
      17888., 14648., 15904., 17176., 18464., 15128., 16416., 17720., 19040.,
      15608., 16928., 18264., 19616., 9148.,  9824.,  10508., 11200., 6743.,
      7220.,  7703.,  8192.,  15382., 16360., 17350., 18352., 15838., 16840.,
      17854., 18880., 16294., 17320., 18358., 19408., 16750., 17800., 18862.,
      19936., 17206., 18280., 19366., 20464., 17662., 18760., 19870., 20992.,
      9947.,  10508., 11075., 11648., 6398.,  6752.,  7110.,  7472.,  14204.,
      14928., 15660., 16400., 14572., 15312., 16060., 16816., 14940., 15696.,
      16460., 17232., 15308., 16080., 16860., 17648., 15676., 16464., 17260.,
      18064., 16044., 16848., 17660., 18480., 8838.,  9248.,  9662.,  10080.,
      4225.,  4420.,  4617.,  4816.,  9226.,  9624.,  10026., 10432., 9442.,
      9848.,  10258., 10672., 9658.,  10072., 10490., 10912., 9874.,  10296.,
      10722., 11152., 10090., 10520., 10954., 11392., 10306., 10744., 11186.,
      11632., 5597.,  5820.,  6045.,  6272.,  33.,    68.,    105.,   144.,
      202.,   280.,   362.,   448.,   482.,   568.,   658.,   752.,   762.,
      856.,   954.,   1056.,  1042.,  1144.,  1250.,  1360.,  1322.,  1432.,
      1546.,  1664.,  1602.,  1720.,  1842.,  1968.,  925.,   988.,   1053.,
      1120.,  998.,   1104.,  1214.,  1328.,  2412.,  2640.,  2876.,  3120.,
      3036.,  3280.,  3532.,  3792.,  3660.,  3920.,  4188.,  4464.,  4284.,
      4560.,  4844.,  5136.,  4908.,  5200.,  5500.,  5808.,  5532.,  5840.,
      6156.,  6480.,  3086.,  3248.,  3414.,  3584.,  3119.,  3332.,  3551.,
      3776.,  7078.,  7528.,  7990.,  8464.,  8110.,  8584.,  9070.,  9568.,
      9142.,  9640.,  10150., 10672., 10174., 10696., 11230., 11776., 11206.,
      11752., 12310., 12880., 12238., 12808., 13390., 13984., 6707.,  7004.,
      7307.,  7616.,  6620.,  6976.,  7340.,  7712.,  14648., 15392., 16152.,
      16928., 16152., 16928., 17720., 18528., 17656., 18464., 19288., 20128.,
      19160., 20000., 20856., 21728., 20664., 21536., 22424., 23328., 22168.,
      23072., 23992., 24928., 12012., 12480., 12956., 13440., 11660., 12128.,
      12604., 13088., 25176., 26144., 27128., 28128., 26680., 27680., 28696.,
      29728., 28184., 29216., 30264., 31328., 29688., 30752., 31832., 32928.,
      31192., 32288., 33400., 34528., 32696., 33824., 34968., 36128., 17500.,
      18080., 18668., 19264., 16700., 17280., 17868., 18464., 35704., 36896.,
      38104., 39328., 37208., 38432., 39672., 40928., 38712., 39968., 41240.,
      42528., 40216., 41504., 42808., 44128., 41720., 43040., 44376., 45728.,
      43224., 44576., 45944., 47328., 22988., 23680., 24380., 25088., 21740.,
      22432., 23132., 23840., 46232., 47648., 49080., 50528., 47736., 49184.,
      50648., 52128., 49240., 50720., 52216., 53728., 50744., 52256., 53784.,
      55328., 52248., 53792., 55352., 56928., 53752., 55328., 56920., 58528.,
      28476., 29280., 30092., 30912., 20279., 20852., 21431., 22016., 42838.,
      44008., 45190., 46384., 44062., 45256., 46462., 47680., 45286., 46504.,
      47734., 48976., 46510., 47752., 49006., 50272., 47734., 49000., 50278.,
      51568., 48958., 50248., 51550., 52864., 25787., 26444., 27107., 27776.,
      16318., 16736., 17158., 17584., 34300., 35152., 36012., 36880., 35180.,
      36048., 36924., 37808., 36060., 36944., 37836., 38736., 36940., 37840.,
      38748., 39664., 37820., 38736., 39660., 40592., 38700., 39632., 40572.,
      41520., 20294., 20768., 21246., 21728., 9633.,  9860.,  10089., 10320.,
      20170., 20632., 21098., 21568., 20642., 21112., 21586., 22064., 21114.,
      21592., 22074., 22560., 21586., 22072., 22562., 23056., 22058., 22552.,
      23050., 23552., 22530., 23032., 23538., 24048., 11773., 12028., 12285.,
      12544., 65.,    132.,   201.,   272.,   394.,   536.,   682.,   832.,
      930.,   1080.,  1234.,  1392.,  1466.,  1624.,  1786.,  1952.,  2002.,
      2168.,  2338.,  2512.,  2538.,  2712.,  2890.,  3072.,  3074.,  3256.,
      3442.,  3632.,  1725.,  1820.,  1917.,  2016.,  1958.,  2128.,  2302.,
      2480.,  4588.,  4944.,  5308.,  5680.,  5724.,  6096.,  6476.,  6864.,
      6860.,  7248.,  7644.,  8048.,  7996.,  8400.,  8812.,  9232.,  9132.,
      9552.,  9980.,  10416., 10268., 10704., 11148., 11600., 5582.,  5808.,
      6038.,  6272.,  5903.,  6212.,  6527.,  6848.,  13030., 13672., 14326.,
      14992., 14830., 15496., 16174., 16864., 16630., 17320., 18022., 18736.,
      18430., 19144., 19870., 20608., 20230., 20968., 21718., 22480., 22030.,
      22792., 23566., 24352., 11795., 12188., 12587., 12992., 12124., 12608.,
      13100., 13600., 26168., 27168., 28184., 29216., 28696., 29728., 30776.,
      31840., 31224., 32288., 33368., 34464., 33752., 34848., 35960., 37088.,
      36280., 37408., 38552., 39712., 38808., 39968., 41144., 42336., 20588.,
      21184., 21788., 22400., 20748., 21344., 21948., 22560., 43864., 45088.,
      46328., 47584., 46392., 47648., 48920., 50208., 48920., 50208., 51512.,
      52832., 51448., 52768., 54104., 55456., 53976., 55328., 56696., 58080.,
      56504., 57888., 59288., 60704., 29660., 30368., 31084., 31808., 29372.,
      30080., 30796., 31520., 61560., 63008., 64472., 65952., 64088., 65568.,
      67064., 68576., 66616., 68128., 69656., 71200., 69144., 70688., 72248.,
      73824., 71672., 73248., 74840., 76448., 74200., 75808., 77432., 79072.,
      38732., 39552., 40380., 41216., 37996., 38816., 39644., 40480., 79256.,
      80928., 82616., 84320., 81784., 83488., 85208., 86944., 84312., 86048.,
      87800., 89568., 86840., 88608., 90392., 92192., 89368., 91168., 92984.,
      94816., 91896., 93728., 95576., 97440., 47804., 48736., 49676., 50624.,
      33815., 34484., 35159., 35840., 70294., 71656., 73030., 74416., 72286.,
      73672., 75070., 76480., 74278., 75688., 77110., 78544., 76270., 77704.,
      79150., 80608., 78262., 79720., 81190., 82672., 80254., 81736., 83230.,
      84736., 41627., 42380., 43139., 43904., 26238., 26720., 27206., 27696.,
      54396., 55376., 56364., 57360., 55788., 56784., 57788., 58800., 57180.,
      58192., 59212., 60240., 58572., 59600., 60636., 61680., 59964., 61008.,
      62060., 63120., 61356., 62416., 63484., 64560., 31750., 32288., 32830.,
      33376., 15041., 15300., 15561., 15824., 31114., 31640., 32170., 32704.,
      31842., 32376., 32914., 33456., 32570., 33112., 33658., 34208., 33298.,
      33848., 34402., 34960., 34026., 34584., 35146., 35712., 34754., 35320.,
      35890., 36464., 17949., 18236., 18525., 18816.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      195728.,   209104.,   222736.,   236624.,   276500.,   293860.,
      311540.,   329540.,   371032.,   392632.,   414616.,   436984.,
      479836.,   505932.,   532476.,   559468.,   528892.,   555884.,
      583324.,   611212.,   503320.,   527224.,   551512.,   576184.,
      461940.,   482500.,   503380.,   524580.,   404240.,   421200.,
      438416.,   455888.,   420420.,   441940.,   463780.,   485940.,
      577325.,   605025.,   633125.,   661625.,   756230.,   790430.,
      825110.,   860270.,   957775.,   998795.,   1040375.,  1082515.,
      1034775.,  1076915.,  1119615.,  1162875.,  963830.,   1000910.,
      1038470.,  1076510.,  868325.,   900025.,   932125.,   964625.,
      747620.,   773620.,   799940.,   826580.,   772760.,   804344.,
      836312.,   868664.,   1042510.,  1082950.,  1123870.,  1165270.,
      1344420.,  1394100.,  1444356.,  1495188.,  1679258.,  1738562.,
      1798538.,  1859186.,  1790474.,  1851122.,  1912442.,  1974434.,
      1644228.,  1697364.,  1751076.,  1805364.,  1462750.,  1507990.,
      1553710.,  1599910.,  1245272.,  1282232.,  1319576.,  1357304.,
      1281420.,  1324988.,  1369004.,  1413468.,  1707895.,  1763475.,
      1819615.,  1876315.,  2178610.,  2246650.,  2315362.,  2384746.,
      2694461.,  2775409.,  2857141.,  2939657.,  2846165.,  2928681.,
      3011981.,  3096065.,  2587522.,  2659594.,  2732338.,  2805754.,
      2281055.,  2342235.,  2403975.,  2466275.,  1925868.,  1975708.,
      2025996.,  2076732.,  1931916.,  1982652.,  2033836.,  2085468.,
      2538935.,  2603475.,  2668575.,  2734235.,  3197362.,  3276154.,
      3355618.,  3435754.,  3908093.,  4001585.,  4095861.,  4190921.,
      4059797.,  4154857.,  4250701.,  4347329.,  3649282.,  3732106.,
      3815602.,  3899770.,  3183775.,  3253915.,  3324615.,  3395875.,
      2662380.,  2719388.,  2776844.,  2834748.,  2582412.,  2640316.,
      2698668.,  2757468.,  3369975.,  3443475.,  3517535.,  3592155.,
      4216114.,  4305658.,  4395874.,  4486762.,  5121725.,  5227761.,
      5334581.,  5442185.,  5273429.,  5381033.,  5489421.,  5598593.,
      4711042.,  4804618.,  4898866.,  4993786.,  4086495.,  4165595.,
      4245255.,  4325475.,  3398892.,  3463068.,  3527692.,  3592764.,
      3232908.,  3297980.,  3363500.,  3429468.,  4201015.,  4283475.,
      4366495.,  4450075.,  5234866.,  5335162.,  5436130.,  5537770.,
      6335357.,  6453937.,  6573301.,  6693449.,  6487061.,  6607209.,
      6728141.,  6849857.,  5772802.,  5877130.,  5982130.,  6087802.,
      4989215.,  5077275.,  5165895.,  5255075.,  4135404.,  4206748.,
      4278540.,  4350780.,  3813464.,  3875000.,  3936920.,  3999224.,
      4918270.,  4996150.,  5074510.,  5153350.,  6085188.,  6179796.,
      6274980.,  6370740.,  7314986.,  7426706.,  7539098.,  7652162.,
      7463834.,  7576898.,  7690634.,  7805042.,  6596964.,  6695028.,
      6793668.,  6892884.,  5664910.,  5747590.,  5830750.,  5914390.,
      4666904.,  4733816.,  4801112.,  4868792.,  4094340.,  4150420.,
      4206820.,  4263540.,  5256125.,  5327025.,  5398325.,  5470025.,
      6474470.,  6560510.,  6647030.,  6734030.,  7750015.,  7851515.,
      7953575.,  8056195.,  7889735.,  7992355.,  8095535.,  8199275.,
      6943190.,  7032110.,  7121510.,  7211390.,  5937525.,  6012425.,
      6087725.,  6163425.,  4872100.,  4932660.,  4993540.,  5054740.,
      4046864.,  4095568.,  4144528.,  4193744.,  5178740.,  5240260.,
      5302100.,  5364260.,  6359704.,  6434296.,  6509272.,  6584632.,
      7590268.,  7678188.,  7766556.,  7855372.,  7714588.,  7803404.,
      7892668.,  7982380.,  6768472.,  6845368.,  6922648.,  7000312.,
      5771220.,  5835940.,  5900980.,  5966340.,  4722320.,  4774608.,
      4827152.,  4879952.,  2192528.,  2246864.,  2301456.,  2356304.,
      2874900.,  2943460.,  3012340.,  3081540.,  3611992.,  3695032.,
      3778456.,  3862264.,  4404316.,  4502092.,  4600316.,  4698988.,
      4453372.,  4552044.,  4651164.,  4750732.,  3990040.,  4075384.,
      4161112.,  4247224.,  3469940.,  3541700.,  3613780.,  3686180.,
      2892560.,  2950480.,  3008656.,  3067088.,  3633220.,  3705940.,
      3778980.,  3852340.,  4721325.,  4813025.,  4905125.,  4997625.,
      5882630.,  5993630.,  6105110.,  6217070.,  7117775.,  7248395.,
      7379575.,  7511315.,  7194775.,  7326515.,  7458815.,  7591675.,
      6397430.,  6511310.,  6625670.,  6740510.,  5524325.,  5620025.,
      5716125.,  5812625.,  4574820.,  4652020.,  4729540.,  4807380.,
      5488280.,  5581304.,  5674712.,  5768504.,  7090510.,  7207750.,
      7325470.,  7443670.,  8786340.,  8928180.,  9070596.,  9213588.,
      10576538., 10743362., 10910858., 11079026., 10687754., 10855922.,
      11024762., 11194274., 9454788.,  9600084.,  9745956.,  9892404.,
      8125150.,  8247190.,  8369710.,  8492710.,  6698072.,  6796472.,
      6895256.,  6994424.,  7675788.,  7774652.,  7873964.,  7973724.,
      9839095.,  9963795.,  10089055., 10214875., 12101938., 12252922.,
      12404578., 12556906., 14465213., 14642929., 14821429., 15000713.,
      14616917., 14796201., 14976269., 15157121., 12842626., 12997642.,
      13153330., 13309690., 10965215., 11095515., 11226375., 11357795.,
      8983788.,  9088924.,  9194508.,  9300540.,  7756940.,  7846588.,
      7936684.,  8027228.,  9917495.,  10030675., 10144415., 10258715.,
      12168370., 12305530., 12443362., 12581866., 14510461., 14672049.,
      14834421., 14997577., 14662165., 14825321., 14989261., 15153985.,
      12853762., 12994954., 13136818., 13279354., 10951455., 11070235.,
      11189575., 11309475., 8954348.,  9050268.,  9146636.,  9243452.,
      7379340.,  7459772.,  7540652.,  7621980.,  9422455.,  9524115.,
      9626335.,  9729115.,  11546674., 11670010., 11794018., 11918698.,
      13752893., 13898353., 14044597., 14191625., 13904597., 14051625.,
      14199437., 14348033., 12176770., 12304138., 12432178., 12560890.,
      10364255., 10471515., 10579335., 10687715., 8466156.,  8552860.,
      8640012.,  8727612.,  6542988.,  6614204.,  6685868.,  6757980.,
      8353975.,  8444115.,  8534815.,  8626075.,  10236850., 10346362.,
      10456546., 10567402., 12192509., 12321841., 12451957., 12582857.,
      12344213., 12475113., 12606797., 12739265., 10811650., 10925194.,
      11039410., 11154298., 9203615.,  9299355.,  9395655.,  9492515.,
      7519212.,  7596700.,  7674636.,  7753020.,  5219416.,  5276856.,
      5334680.,  5392888.,  6665470.,  6738230.,  6811470.,  6885190.,
      8169540.,  8258004.,  8347044.,  8436660.,  9732394.,  9836946.,
      9942170.,  10048066., 9881242.,  9987138.,  10093706., 10200946.,
      8656740.,  8748660.,  8841156.,  8934228.,  7371150.,  7448710.,
      7526750.,  7605270.,  6023704.,  6086520.,  6149720.,  6213304.,
      3309444.,  3351188.,  3393252.,  3435636.,  4239165.,  4292145.,
      4345525.,  4399305.,  5211110.,  5275646.,  5340662.,  5406158.,
      6225919.,  6302331.,  6379303.,  6456835.,  6365639.,  6443171.,
      6521263.,  6599915.,  5593814.,  5661230.,  5729126.,  5797502.,
      4777205.,  4834185.,  4891565.,  4949345.,  3915172.,  3961396.,
      4007940.,  4054804.,  784400.,   808528.,   832912.,   857552.,
      1039220.,  1070020.,  1101140.,  1132580.,  1318552.,  1356280.,
      1394392.,  1432888.,  1622908.,  1667820.,  1713180.,  1758988.,
      1747228.,  1793036.,  1839292.,  1885996.,  1579864.,  1619896.,
      1660312.,  1701112.,  1385940.,  1419940.,  1454260.,  1488900.,
      1164944.,  1192656.,  1220624.,  1248848.,  994448.,   1024208.,
      1054224.,  1084496.,  1315860.,  1353700.,  1391860.,  1430340.,
      1667416.,  1713592.,  1760152.,  1807096.,  2049628.,  2104396.,
      2159612.,  2215276.,  2098684.,  2154348.,  2210460.,  2267020.,
      1898008.,  1946488.,  1995352.,  2044600.,  1665140.,  1706180.,
      1747540.,  1789220.,  1399568.,  1432912.,  1466512.,  1500368.,
      1705540.,  1747540.,  1789860.,  1832500.,  2234925.,  2288225.,
      2341925.,  2396025.,  2806790.,  2871710.,  2937110.,  3002990.,
      3421775.,  3498635.,  3576055.,  3654035.,  3498775.,  3576755.,
      3655295.,  3734395.,  3137270.,  3205070.,  3273350.,  3342110.,
      2730725.,  2788025.,  2845725.,  2903825.,  2278500.,  2324980.,
      2371780.,  2418900.,  2658968.,  2715128.,  2771672.,  2828600.,
      3461710.,  3532870.,  3604510.,  3676630.,  4321188.,  4407732.,
      4494852.,  4582548.,  5238170.,  5340482.,  5443466.,  5547122.,
      5349386.,  5453042.,  5557370.,  5662370.,  4768452.,  4858452.,
      4949028.,  5040180.,  4127710.,  4203670.,  4280110.,  4357030.,
      3426392.,  3487928.,  3549848.,  3612152.,  3883404.,  3955644.,
      4028332.,  4101468.,  5032055.,  5123475.,  5215455.,  5307995.,
      6253618.,  6364666.,  6476386.,  6588778.,  7548989.,  7680113.,
      7812021.,  7944713.,  7700693.,  7833385.,  7966861.,  8101121.,
      6834562.,  6949642.,  7065394.,  7181818.,  5891935.,  5988955.,
      6086535.,  6184675.,  4871916.,  4950428.,  5029388.,  5108796.,
      4533900.,  4613308.,  4693164.,  4773468.,  5863095.,  5963475.,
      6064415.,  6165915.,  7272370.,  7394170.,  7516642.,  7639786.,
      8762621.,  8906289.,  9050741.,  9195977.,  8914325.,  9059561.,
      9205581.,  9352385.,  7896322.,  8022154.,  8148658.,  8275834.,
      6794655.,  6900635.,  7007175.,  7114275.,  5608428.,  5694108.,
      5780236.,  5866812.,  5184396.,  5270972.,  5357996.,  5445468.,
      6694135.,  6803475.,  6913375.,  7023835.,  8291122.,  8423674.,
      8556898.,  8690794.,  9976253.,  10132465., 10289461., 10447241.,
      10127957., 10285737., 10444301., 10603649., 8958082.,  9094666.,
      9231922.,  9369850.,  7697375.,  7812315.,  7927815.,  8043875.,
      6344940.,  6437788.,  6531084.,  6624828.,  5834892.,  5928636.,
      6022828.,  6117468.,  7525175.,  7643475.,  7762335.,  7881755.,
      9309874.,  9453178.,  9597154.,  9741802.,  11189885., 11358641.,
      11528181., 11698505., 11341589., 11511913., 11683021., 11854913.,
      10019842., 10167178., 10315186., 10463866., 8600095.,  8723995.,
      8848455.,  8973475.,  7081452.,  7181468.,  7281932.,  7382844.,
      6387800.,  6473912.,  6560408.,  6647288.,  8197630.,  8306230.,
      8415310.,  8524870.,  10094148., 10225620., 10357668., 10490292.,
      12078122., 12232850., 12388250., 12544322., 12226970., 12383042.,
      12539786., 12697202., 10753380., 10888308., 11023812., 11159892.,
      9190030.,  9303430.,  9417310.,  9531670.,  7536152.,  7627640.,
      7719512.,  7811768.,  6526340.,  6602900.,  6679780.,  6756980.,
      8347325.,  8443825.,  8540725.,  8638025.,  10245350., 10362110.,
      10479350., 10597070., 12221055., 12358395., 12496295., 12634755.,
      12360775., 12499235., 12638255., 12777835., 10836950., 10956590.,
      11076710., 11197310., 9233525.,  9334025.,  9434925.,  9536225.,
      7549860.,  7630900.,  7712260.,  7793940.,  6221840.,  6286928.,
      6352272.,  6417872.,  7938420.,  8020420.,  8102740.,  8185380.,
      9720472.,  9819640.,  9919192.,  10019128., 11568508., 11685100.,
      11802140., 11919628., 11692828., 11810316., 11928252., 12046636.,
      10227544., 10329016., 10430872., 10533112., 8694740.,  8779940.,
      8865460.,  8951300.,  7093904.,  7162576.,  7231504.,  7300688.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     61.,     113.,    58.,     162.,    298.,    466.,
      234.,    402.,    602.,    834.,    410.,    642.,    906.,    1202.,
      586.,    882.,    1210.,   1570.,   762.,    1122.,   1514.,   1938.,
      938.,    1362.,   1818.,   2306.,   941.,    1185.,   1445.,   1721.,
      226.,    554.,    914.,    1306.,   1700.,   2484.,   3332.,   4244.,
      2564.,   3476.,   4452.,   5492.,   3428.,   4468.,   5572.,   6740.,
      4292.,   5460.,   6692.,   7988.,   5156.,   6452.,   7812.,   9236.,
      6020.,   7444.,   8932.,   10484.,  4530.,   5306.,   6114.,   6954.,
      2455.,   3379.,   4351.,   5371.,   8510.,   10550.,  12686.,  14918.,
      10574.,  12806.,  15134.,  17558.,  12638.,  15062.,  17582.,  20198.,
      14702.,  17318.,  20030.,  22838.,  16766.,  19574.,  22478.,  25478.,
      18830.,  21830.,  24926.,  28118.,  12559.,  14155.,  15799.,  17491.,
      8484.,   10292.,  12164.,  14100.,  24072.,  27944.,  31944.,  36072.,
      27848.,  31976.,  36232.,  40616.,  31624.,  36008.,  40520.,  45160.,
      35400.,  40040.,  44808.,  49704.,  39176.,  44072.,  49096.,  54248.,
      42952.,  48104.,  53384.,  58792.,  26820.,  29524.,  32292.,  35124.,
      19908.,  22612.,  25380.,  28212.,  50504.,  56168.,  61960.,  67880.,
      54280.,  60200.,  66248.,  72424.,  58056.,  64232.,  70536.,  76968.,
      61832.,  68264.,  74824.,  81512.,  65608.,  72296.,  79112.,  86056.,
      69384.,  76328.,  83400.,  90600.,  41828.,  45428.,  49092.,  52820.,
      31332.,  34932.,  38596.,  42324.,  76936.,  84392.,  91976.,  99688.,
      80712.,  88424.,  96264.,  104232., 84488.,  92456.,  100552., 108776.,
      88264.,  96488.,  104840., 113320., 92040.,  100520., 109128., 117864.,
      95816.,  104552., 113416., 122408., 56836.,  61332.,  65892.,  70516.,
      42756.,  47252.,  51812.,  56436.,  103368., 112616., 121992., 131496.,
      107144., 116648., 126280., 136040., 110920., 120680., 130568., 140584.,
      114696., 124712., 134856., 145128., 118472., 128744., 139144., 149672.,
      122248., 132776., 143432., 154216., 71844.,  77236.,  82692.,  88212.,
      52999.,  56803.,  60655.,  64555.,  121118., 128918., 136814., 144806.,
      124718., 132710., 140798., 148982., 128318., 136502., 144782., 153158.,
      131918., 140294., 148766., 157334., 135518., 144086., 152750., 161510.,
      139118., 147878., 156734., 165686., 78463.,  82939.,  87463.,  92035.,
      50482.,  53306.,  56162.,  59050.,  112196., 117972., 123812., 129716.,
      115108., 121012., 126980., 133012., 118020., 124052., 130148., 136308.,
      120932., 127092., 133316., 139604., 123844., 130132., 136484., 142900.,
      126756., 133172., 139652., 146196., 69890.,  73162.,  76466.,  79802.,
      33413.,  34969.,  36541.,  38129.,  73018.,  76194.,  79402.,  82642.,
      74730.,  77970.,  81242.,  84546.,  76442.,  79746.,  83082.,  86450.,
      78154.,  81522.,  84922.,  88354.,  79866.,  83298.,  86762.,  90258.,
      81578.,  85074.,  88602.,  92162.,  44333.,  46113.,  47909.,  49721.,
      197.,    473.,    765.,    1073.,   1466.,   2082.,   2730.,   3410.,
      3690.,   4370.,   5082.,   5826.,   5914.,   6658.,   7434.,   8242.,
      8138.,   8946.,   9786.,   10658.,  10362.,  11234.,  12138.,  13074.,
      12586.,  13522.,  14490.,  15490.,  7277.,   7777.,   8293.,   8825.,
      7778.,   8618.,   9490.,   10394.,  18852.,  20660.,  22532.,  24468.,
      23812.,  25748.,  27748.,  29812.,  28772.,  30836.,  32964.,  35156.,
      33732.,  35924.,  38180.,  40500.,  38692.,  41012.,  43396.,  45844.,
      43652.,  46100.,  48612.,  51188.,  24370.,  25658.,  26978.,  28330.,
      24535.,  26227.,  27967.,  29755.,  55742.,  59318.,  62990.,  66758.,
      63950.,  67718.,  71582.,  75542.,  72158.,  76118.,  80174.,  84326.,
      80366.,  84518.,  88766.,  93110.,  88574.,  92918.,  97358.,  101894.,
      96782.,  101318., 105950., 110678., 53071.,  55435.,  57847.,  60307.,
      52260.,  55092.,  57988.,  60948.,  115720., 121640., 127688., 133864.,
      127688., 133864., 140168., 146600., 139656., 146088., 152648., 159336.,
      151624., 158312., 165128., 172072., 163592., 170536., 177608., 184808.,
      175560., 182760., 190088., 197544., 95172.,  98900.,  102692., 106548.,
      92356.,  96084.,  99876.,  103732., 199496., 207208., 215048., 223016.,
      211464., 219432., 227528., 235752., 223432., 231656., 240008., 248488.,
      235400., 243880., 252488., 261224., 247368., 256104., 264968., 273960.,
      259336., 268328., 277448., 286696., 138852., 143476., 148164., 152916.,
      132452., 137076., 141764., 146516., 283272., 292776., 302408., 312168.,
      295240., 305000., 314888., 324904., 307208., 317224., 327368., 337640.,
      319176., 329448., 339848., 350376., 331144., 341672., 352328., 363112.,
      343112., 353896., 364808., 375848., 182532., 188052., 193636., 199284.,
      172548., 178068., 183652., 189300., 367048., 378344., 389768., 401320.,
      379016., 390568., 402248., 414056., 390984., 402792., 414728., 426792.,
      402952., 415016., 427208., 439528., 414920., 427240., 439688., 452264.,
      426888., 439464., 452168., 465000., 226212., 232628., 239108., 245652.,
      161095., 165667., 170287., 174955., 340382., 349718., 359150., 368678.,
      350126., 359654., 369278., 378998., 359870., 369590., 379406., 389318.,
      369614., 379526., 389534., 399638., 379358., 389462., 399662., 409958.,
      389102., 399398., 409790., 420278., 204991., 210235., 215527., 220867.,
      129714., 133050., 136418., 139818., 272708., 279508., 286372., 293300.,
      279716., 286644., 293636., 300692., 286724., 293780., 300900., 308084.,
      293732., 300916., 308164., 315476., 300740., 308052., 315428., 322868.,
      307748., 315188., 322692., 330260., 161410., 165194., 169010., 172858.,
      76613.,  78425.,  80253.,  82097.,  160442., 164130., 167850., 171602.,
      164202., 167954., 171738., 175554., 167962., 171778., 175626., 179506.,
      171722., 175602., 179514., 183458., 175482., 179426., 183402., 187410.,
      179242., 183250., 187290., 191362., 93677.,  95713.,  97765.,  99833.,
      389.,    921.,    1469.,   2033.,   2874.,   4002.,   5162.,   6354.,
      7146.,   8338.,   9562.,   10818.,  11418.,  12674.,  13962.,  15282.,
      15690.,  17010.,  18362.,  19746.,  19962.,  21346.,  22762.,  24210.,
      24234.,  25682.,  27162.,  28674.,  13613.,  14369.,  15141.,  15929.,
      15330.,  16682.,  18066.,  19482.,  36004.,  38836.,  41732.,  44692.,
      45060.,  48020.,  51044.,  54132.,  54116.,  57204.,  60356.,  63572.,
      63172.,  66388.,  69668.,  73012.,  72228.,  75572.,  78980.,  82452.,
      81284.,  84756.,  88292.,  91892.,  44210.,  46010.,  47842.,  49706.,
      46615.,  49075.,  51583.,  54139.,  102974., 108086., 113294., 118598.,
      117326., 122630., 128030., 133526., 131678., 137174., 142766., 148454.,
      146030., 151718., 157502., 163382., 160382., 166262., 172238., 178310.,
      174734., 180806., 186974., 193238., 93583.,  96715.,  99895.,  103123.,
      96036.,  99892.,  103812., 107796., 207368., 215336., 223432., 231656.,
      227528., 235752., 244104., 252584., 247688., 256168., 264776., 273512.,
      267848., 276584., 285448., 294440., 288008., 297000., 306120., 315368.,
      308168., 317416., 326792., 336296., 163524., 168276., 173092., 177972.,
      164804., 169556., 174372., 179252., 348488., 358248., 368136., 378152.,
      368648., 378664., 388808., 399080., 388808., 399080., 409480., 420008.,
      408968., 419496., 430152., 440936., 429128., 439912., 450824., 461864.,
      449288., 460328., 471496., 482792., 235876., 241524., 247236., 253012.,
      233572., 239220., 244932., 250708., 489608., 501160., 512840., 524648.,
      509768., 521576., 533512., 545576., 529928., 541992., 554184., 566504.,
      550088., 562408., 574856., 587432., 570248., 582824., 595528., 608360.,
      590408., 603240., 616200., 629288., 308228., 314772., 321380., 328052.,
      302340., 308884., 315492., 322164., 630728., 644072., 657544., 671144.,
      650888., 664488., 678216., 692072., 671048., 684904., 698888., 713000.,
      691208., 705320., 719560., 733928., 711368., 725736., 740232., 754856.,
      731528., 746152., 760904., 775784., 380580., 388020., 395524., 403092.,
      269191., 274531., 279919., 285355., 559646., 570518., 581486., 592550.,
      575534., 586598., 597758., 609014., 591422., 602678., 614030., 625478.,
      607310., 618758., 630302., 641942., 623198., 634838., 646574., 658406.,
      639086., 650918., 662846., 674870., 331519., 337531., 343591., 349699.,
      208946., 212794., 216674., 220586., 433220., 441044., 448932., 456884.,
      444324., 452276., 460292., 468372., 455428., 463508., 471652., 479860.,
      466532., 474740., 483012., 491348., 477636., 485972., 494372., 502836.,
      488740., 497204., 505732., 514324., 252930., 257226., 261554., 265914.,
      119813., 121881., 123965., 126065., 247866., 252066., 256298., 260562.,
      253674., 257938., 262234., 266562., 259482., 263810., 268170., 272562.,
      265290., 269682., 274106., 278562., 271098., 275554., 280042., 284562.,
      276906., 281426., 285978., 290562., 143021., 145313., 147621., 149945.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1552608.,  1659360.,  1768160.,  1879008.,  2194840.,  2333400.,
      2474520.,  2618200.,  2946896.,  3119312.,  3294800.,  3473360.,
      3812872.,  4021192.,  4233096.,  4448584.,  4204424.,  4419912.,
      4638984.,  4861640.,  4002896.,  4193744.,  4387664.,  4584656.,
      3675160.,  3839320.,  4006040.,  4175320.,  3217120.,  3352544.,
      3490016.,  3629536.,  3124952.,  3264024.,  3405656.,  3549848.,
      4232750.,  4404798.,  4580046.,  4758494.,  5450692.,  5658276.,
      5869700.,  6084964.,  6783898.,  7029578.,  7279738.,  7534378.,
      7300474.,  7555114.,  7814234.,  8077834.,  6644740.,  6867172.,
      7093444.,  7323556.,  5825614.,  6013278.,  6204142.,  6398206.,
      4837976.,  4988312.,  5141208.,  5296664.,  4581968.,  4735952.,
      4893008.,  5053136.,  5825956.,  6017924.,  6213732.,  6413380.,
      7195768.,  7428792.,  7666424.,  7908664.,  8697548.,  8974700.,
      9257228.,  9545132.,  9258252.,  9546156.,  9839436.,  10138092.,
      8274936.,  8527416.,  8784504.,  9046200.,  7108452.,  7322436.,
      7540260.,  7761924.,  5752656.,  5925072.,  6100560.,  6279120.,
      5321544.,  5505800.,  5693640.,  5885064.,  6560762.,  6791850.,
      7027418.,  7267466.,  7956844.,  8238348.,  8525228.,  8817484.,
      9516958.,  9852462.,  10194238., 10542286., 10171966., 10520014.,
      10874334., 11234926., 9056300.,  9361868.,  9672812.,  9989132.,
      7722330.,  7981834.,  8245818.,  8514282.,  6162888.,  6372744.,
      6586184.,  6803208.,  5451592.,  5660424.,  5872840.,  6088840.,
      6522618.,  6784426.,  7050714.,  7321482.,  7775084.,  8093452.,
      8417196.,  8746316.,  9216158.,  9594670.,  9979454.,  10370510.,
      9871166.,  10262222., 10659550., 11063150., 8759852.,  9102284.,
      9450092.,  9803276.,  7405658.,  7695882.,  7990586.,  8289770.,
      5801416.,  6035848.,  6273864.,  6515464.,  4447048.,  4647688.,
      4851912.,  5059720.,  6032890.,  6284458.,  6540506.,  6801034.,
      7791980.,  8098060.,  8409516.,  8726348.,  9731486.,  10095662.,
      10466110., 10842830., 10386494., 10763214., 11146206., 11535470.,
      9514028.,  9844172.,  10179692., 10520588., 8406874.,  8686858.,
      8971322.,  9260266.,  7057864.,  7284104.,  7513928.,  7747336.,
      5801800.,  5994248.,  6190280.,  6389896.,  7443706.,  7685034.,
      7930842.,  8181130.,  9250668.,  9544460.,  9843628.,  10148172.,
      11229854., 11579694., 11935806., 12298190., 11884862., 12247246.,
      12615902., 12990830., 10661420., 10979276., 11302508., 11631116.,
      9211482.,  9481226.,  9755450.,  10034154., 7527880.,  7745928.,
      7967560.,  8192776.,  5206864.,  5371088.,  5538384.,  5708752.,
      6370532.,  6575300.,  6783908.,  6996356.,  7670264.,  7918648.,
      8171640.,  8429240.,  9112204.,  9407276.,  9707724.,  10013548.,
      9744588.,  10050412., 10361612., 10678188., 8610168.,  8878008.,
      9150456.,  9427512.,  7282340.,  7509124.,  7739748.,  7974212.,
      5754960.,  5937616.,  6123344.,  6312144.,  4661720.,  4815128.,
      4971096.,  5129624.,  5403118.,  5593086.,  5786254.,  5982622.,
      6268996.,  6498084.,  6731012.,  6967780.,  7264474.,  7535242.,
      7810490.,  8090218.,  7824058.,  8103786.,  8387994.,  8676682.,
      6799492.,  7043428.,  7291204.,  7542820.,  5597198.,  5802782.,
      6011566.,  6223550.,  4212056.,  4376728.,  4543960.,  4713752.,
      2409184.,  2536416.,  2665696.,  2797024.,  3311640.,  3467608.,
      3626136.,  3787224.,  4311632.,  4498384.,  4688208.,  4881104.,
      5413256.,  5632840.,  5856008.,  6082760.,  5849864.,  6076616.,
      6306952.,  6540872.,  5346128.,  5543120.,  5743184.,  5946320.,
      4695704.,  4860888.,  5028632.,  5198936.,  3894496.,  4025824.,
      4159200.,  4294624.,  3387616.,  3494368.,  3603168.,  3714016.,
      4488600.,  4627160.,  4768280.,  4911960.,  5699408.,  5871824.,
      6047312.,  6225872.,  7024136.,  7232456.,  7444360.,  7659848.,
      7415688.,  7631176.,  7850248.,  8072904.,  6755408.,  6946256.,
      7140176.,  7337168.,  5968920.,  6133080.,  6299800.,  6469080.,
      5052128.,  5187552.,  5325024.,  5464544.,  5068504.,  5223960.,
      5381976.,  5542552.,  6178862.,  6371390.,  6567118.,  6766046.,
      7415748.,  7647908.,  7883908.,  8123748.,  8784282.,  9058634.,
      9337466.,  9620778.,  9300858.,  9584170.,  9871962.,  10164234.,
      8183812.,  8430820.,  8681668.,  8936356.,  6886990.,  7095134.,
      7306478.,  7521022.,  5405272.,  5571992.,  5741272.,  5913112.,
      4995664.,  5182416.,  5372240.,  5565136.,  5900708.,  6133636.,
      6370404.,  6611012.,  6964344.,  7246520.,  7533304.,  7824696.,
      8192716.,  8527212.,  8867084.,  9212332.,  8753420.,  9098668.,
      9449292.,  9805292.,  7715832.,  8017464.,  8323704.,  8634552.,
      6462308.,  6717252.,  6976036.,  7238660.,  4986704.,  5191888.,
      5400144.,  5611472.,  4447048.,  4647688.,  4851912.,  5059720.,
      6032890.,  6284458.,  6540506.,  6801034.,  7791980.,  8098060.,
      8409516.,  8726348.,  9731486.,  10095662., 10466110., 10842830.,
      10386494., 10763214., 11146206., 11535470., 9514028.,  9844172.,
      10179692., 10520588., 8406874.,  8686858.,  8971322.,  9260266.,
      7057864.,  7284104.,  7513928.,  7747336.,  5801800.,  5994248.,
      6190280.,  6389896.,  7443706.,  7685034.,  7930842.,  8181130.,
      9250668.,  9544460.,  9843628.,  10148172., 11229854., 11579694.,
      11935806., 12298190., 11884862., 12247246., 12615902., 12990830.,
      10661420., 10979276., 11302508., 11631116., 9211482.,  9481226.,
      9755450.,  10034154., 7527880.,  7745928.,  7967560.,  8192776.,
      5321544.,  5505800.,  5693640.,  5885064.,  6560762.,  6791850.,
      7027418.,  7267466.,  7956844.,  8238348.,  8525228.,  8817484.,
      9516958.,  9852462.,  10194238., 10542286., 10171966., 10520014.,
      10874334., 11234926., 9056300.,  9361868.,  9672812.,  9989132.,
      7722330.,  7981834.,  8245818.,  8514282.,  6162888.,  6372744.,
      6586184.,  6803208.,  5451592.,  5660424.,  5872840.,  6088840.,
      6522618.,  6784426.,  7050714.,  7321482.,  7775084.,  8093452.,
      8417196.,  8746316.,  9216158.,  9594670.,  9979454.,  10370510.,
      9871166.,  10262222., 10659550., 11063150., 8759852.,  9102284.,
      9450092.,  9803276.,  7405658.,  7695882.,  7990586.,  8289770.,
      5801416.,  6035848.,  6273864.,  6515464.,  4440912.,  4637904.,
      4837968.,  5041104.,  6019300.,  6265028.,  6514596.,  6768004.,
      7766520.,  8064056.,  8366200.,  8672952.,  9688716.,  10041132.,
      10398924., 10762092., 10321100., 10684268., 11052812., 11426732.,
      9427320.,  9744312.,  10065912., 10392120., 8307364.,  8575108.,
      8846692.,  9122116.,  6955088.,  7170512.,  7389008.,  7610576.,
      5687768.,  5857560.,  6029912.,  6204824.,  7250926.,  7461374.,
      7675022.,  7891870.,  8954948.,  9208612.,  9466116.,  9727460.,
      10804954., 11104394., 11408314., 11716714., 11364538., 11672938.,
      11985818., 12303178., 10108036., 10376548., 10648900., 10925092.,
      8657422.,  8883486.,  9112750.,  9345214.,  7007576.,  7188632.,
      7372248.,  7558424.,  4768480.,  4895712.,  5024992.,  5156320.,
      5736472.,  5892440.,  6050968.,  6212056.,  6802000.,  6988752.,
      7178576.,  7371472.,  7969160.,  8188744.,  8411912.,  8638664.,
      8405768.,  8632520.,  8862856.,  9096776.,  7312208.,  7509200.,
      7709264.,  7912400.,  6071960.,  6237144.,  6404888.,  6575192.,
      4680928.,  4812256.,  4945632.,  5081056.,  1552608.,  1659360.,
      1768160.,  1879008.,  2194840.,  2333400.,  2474520.,  2618200.,
      2946896.,  3119312.,  3294800.,  3473360.,  3812872.,  4021192.,
      4233096.,  4448584.,  4204424.,  4419912.,  4638984.,  4861640.,
      4002896.,  4193744.,  4387664.,  4584656.,  3675160.,  3839320.,
      4006040.,  4175320.,  3217120.,  3352544.,  3490016.,  3629536.,
      3124952.,  3264024.,  3405656.,  3549848.,  4232750.,  4404798.,
      4580046.,  4758494.,  5450692.,  5658276.,  5869700.,  6084964.,
      6783898.,  7029578.,  7279738.,  7534378.,  7300474.,  7555114.,
      7814234.,  8077834.,  6644740.,  6867172.,  7093444.,  7323556.,
      5825614.,  6013278.,  6204142.,  6398206.,  4837976.,  4988312.,
      5141208.,  5296664.,  4581968.,  4735952.,  4893008.,  5053136.,
      5825956.,  6017924.,  6213732.,  6413380.,  7195768.,  7428792.,
      7666424.,  7908664.,  8697548.,  8974700.,  9257228.,  9545132.,
      9258252.,  9546156.,  9839436.,  10138092., 8274936.,  8527416.,
      8784504.,  9046200.,  7108452.,  7322436.,  7540260.,  7761924.,
      5752656.,  5925072.,  6100560.,  6279120.,  5321544.,  5505800.,
      5693640.,  5885064.,  6560762.,  6791850.,  7027418.,  7267466.,
      7956844.,  8238348.,  8525228.,  8817484.,  9516958.,  9852462.,
      10194238., 10542286., 10171966., 10520014., 10874334., 11234926.,
      9056300.,  9361868.,  9672812.,  9989132.,  7722330.,  7981834.,
      8245818.,  8514282.,  6162888.,  6372744.,  6586184.,  6803208.,
      5451592.,  5660424.,  5872840.,  6088840.,  6522618.,  6784426.,
      7050714.,  7321482.,  7775084.,  8093452.,  8417196.,  8746316.,
      9216158.,  9594670.,  9979454.,  10370510., 9871166.,  10262222.,
      10659550., 11063150., 8759852.,  9102284.,  9450092.,  9803276.,
      7405658.,  7695882.,  7990586.,  8289770.,  5801416.,  6035848.,
      6273864.,  6515464.,  4447048.,  4647688.,  4851912.,  5059720.,
      6032890.,  6284458.,  6540506.,  6801034.,  7791980.,  8098060.,
      8409516.,  8726348.,  9731486.,  10095662., 10466110., 10842830.,
      10386494., 10763214., 11146206., 11535470., 9514028.,  9844172.,
      10179692., 10520588., 8406874.,  8686858.,  8971322.,  9260266.,
      7057864.,  7284104.,  7513928.,  7747336.,  5801800.,  5994248.,
      6190280.,  6389896.,  7443706.,  7685034.,  7930842.,  8181130.,
      9250668.,  9544460.,  9843628.,  10148172., 11229854., 11579694.,
      11935806., 12298190., 11884862., 12247246., 12615902., 12990830.,
      10661420., 10979276., 11302508., 11631116., 9211482.,  9481226.,
      9755450.,  10034154., 7527880.,  7745928.,  7967560.,  8192776.,
      5206864.,  5371088.,  5538384.,  5708752.,  6370532.,  6575300.,
      6783908.,  6996356.,  7670264.,  7918648.,  8171640.,  8429240.,
      9112204.,  9407276.,  9707724.,  10013548., 9744588.,  10050412.,
      10361612., 10678188., 8610168.,  8878008.,  9150456.,  9427512.,
      7282340.,  7509124.,  7739748.,  7974212.,  5754960.,  5937616.,
      6123344.,  6312144.,  4661720.,  4815128.,  4971096.,  5129624.,
      5403118.,  5593086.,  5786254.,  5982622.,  6268996.,  6498084.,
      6731012.,  6967780.,  7264474.,  7535242.,  7810490.,  8090218.,
      7824058.,  8103786.,  8387994.,  8676682.,  6799492.,  7043428.,
      7291204.,  7542820.,  5597198.,  5802782.,  6011566.,  6223550.,
      4212056.,  4376728.,  4543960.,  4713752.,  2409184.,  2536416.,
      2665696.,  2797024.,  3311640.,  3467608.,  3626136.,  3787224.,
      4311632.,  4498384.,  4688208.,  4881104.,  5413256.,  5632840.,
      5856008.,  6082760.,  5849864.,  6076616.,  6306952.,  6540872.,
      5346128.,  5543120.,  5743184.,  5946320.,  4695704.,  4860888.,
      5028632.,  5198936.,  3894496.,  4025824.,  4159200.,  4294624.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x8x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    1724.,    3036.,    4604.,    6428.,    3068.,    4892.,
      6972.,    9308.,    4412.,    6748.,    9340.,    12188.,   5756.,
      8604.,    11708.,   15068.,   7100.,    10460.,   14076.,   17948.,
      7294.,    9230.,    11294.,   13486.,   1500.,    4092.,    6940.,
      10044.,   12856.,   19064.,   25784.,   33016.,   19640.,   26872.,
      34616.,   42872.,   26424.,   34680.,   43448.,   52728.,   33208.,
      42488.,   52280.,   62584.,   39992.,   50296.,   61112.,   72440.,
      46776.,   58104.,   69944.,   82296.,   35484.,   41660.,   48092.,
      54780.,   18746.,   26090.,   33818.,   41930.,   66100.,   82324.,
      99316.,   117076.,  82420.,   100180.,  118708.,  138004.,  98740.,
      118036.,  138100.,  158932.,  115060.,  135892.,  157492.,  179860.,
      131380.,  153748.,  176884.,  200788.,  147700.,  171604.,  196276.,
      221716.,  98906.,   111626.,  124730.,  138218.,  66104.,   80504.,
      95416.,   110840.,  188784.,  219632.,  251504.,  284400.,  218736.,
      251632.,  285552.,  320496.,  248688.,  283632.,  319600.,  356592.,
      278640.,  315632.,  353648.,  392688.,  308592.,  347632.,  387696.,
      428784.,  338544.,  379632.,  421744.,  464880.,  211896.,  233464.,
      255544.,  278136.,  156600.,  178168.,  200248.,  222840.,  398448.,
      443632.,  489840.,  537072.,  428400.,  475632.,  523888.,  573168.,
      458352.,  507632.,  557936.,  609264.,  488304.,  539632.,  591984.,
      645360.,  518256.,  571632.,  626032.,  681456.,  548208.,  603632.,
      660080.,  717552.,  331064.,  359800.,  389048.,  418808.,  247096.,
      275832.,  305080.,  334840.,  608112.,  667632.,  728176.,  789744.,
      638064.,  699632.,  762224.,  825840.,  668016.,  731632.,  796272.,
      861936.,  697968.,  763632.,  830320.,  898032.,  727920.,  795632.,
      864368.,  934128.,  757872.,  827632.,  898416.,  970224.,  450232.,
      486136.,  522552.,  559480.,  337592.,  373496.,  409912.,  446840.,
      817776.,  891632.,  966512.,  1042416., 847728.,  923632.,  1000560.,
      1078512., 877680.,  955632.,  1034608., 1114608., 907632.,  987632.,
      1068656., 1150704., 937584.,  1019632., 1102704., 1186800., 967536.,
      1051632., 1136752., 1222896., 569400.,  612472.,  656056.,  700152.,
      420218.,  450602.,  481370.,  512522.,  961204.,  1023508., 1086580.,
      1150420., 989812.,  1053652., 1118260., 1183636., 1018420., 1083796.,
      1149940., 1216852., 1047028., 1113940., 1181620., 1250068., 1075636.,
      1144084., 1213300., 1283284., 1104244., 1174228., 1244980., 1316500.,
      623258.,  659018.,  695162.,  731690.,  401052.,  423612.,  446428.,
      469500.,  891832.,  937976.,  984632.,  1031800., 915000.,  962168.,
      1009848., 1058040., 938168.,  986360.,  1035064., 1084280., 961336.,
      1010552., 1060280., 1110520., 984504.,  1034744., 1085496., 1136760.,
      1007672., 1058936., 1110712., 1163000., 555868.,  582012.,  608412.,
      635068.,  265758.,  278190.,  290750.,  303438.,  580988.,  606364.,
      631996.,  657884.,  594620.,  620508.,  646652.,  673052.,  608252.,
      634652.,  661308.,  688220.,  621884.,  648796.,  675964.,  703388.,
      635516.,  662940.,  690620.,  718556.,  649148.,  677084.,  705276.,
      733724.,  352894.,  367118.,  381470.,  395950.,  1310.,    3502.,
      5822.,    8270.,    11132.,   16028.,   21180.,   26588.,   28860.,
      34268.,   39932.,   45852.,   46588.,   52508.,   58684.,   65116.,
      64316.,   70748.,   77436.,   84380.,   82044.,   88988.,   96188.,
      103644.,  99772.,   107228.,  114940.,  122908.,  57726.,   61710.,
      65822.,   70062.,   61404.,   68092.,   75036.,   82236.,   149048.,
      163448.,  178360.,  193784.,  188600.,  204024.,  219960.,  236408.,
      228152.,  244600.,  261560.,  279032.,  267704.,  285176.,  303160.,
      321656.,  307256.,  325752.,  344760.,  364280.,  346808.,  366328.,
      386360.,  406904.,  193692.,  203964.,  214492.,  225276.,  194618.,
      208106.,  221978.,  236234.,  442420.,  470932.,  500212.,  530260.,
      507892.,  537940.,  568756.,  600340.,  573364.,  604948.,  637300.,
      670420.,  638836.,  671956.,  705844.,  740500.,  704308.,  738964.,
      774388.,  810580.,  769780.,  805972.,  842932.,  880660.,  422234.,
      441098.,  460346.,  479978.,  415288.,  437880.,  460984.,  484600.,
      919920.,  967152.,  1015408., 1064688., 1015408., 1064688., 1114992.,
      1166320., 1110896., 1162224., 1214576., 1267952., 1206384., 1259760.,
      1314160., 1369584., 1301872., 1357296., 1413744., 1471216., 1397360.,
      1454832., 1513328., 1572848., 757688.,  787448.,  817720.,  848504.,
      735160.,  764920.,  795192.,  825976.,  1588336., 1649904., 1712496.,
      1776112., 1683824., 1747440., 1812080., 1877744., 1779312., 1844976.,
      1911664., 1979376., 1874800., 1942512., 2011248., 2081008., 1970288.,
      2040048., 2110832., 2182640., 2065776., 2137584., 2210416., 2284272.,
      1106232., 1143160., 1180600., 1218552., 1055032., 1091960., 1129400.,
      1167352., 2256752., 2332656., 2409584., 2487536., 2352240., 2430192.,
      2509168., 2589168., 2447728., 2527728., 2608752., 2690800., 2543216.,
      2625264., 2708336., 2792432., 2638704., 2722800., 2807920., 2894064.,
      2734192., 2820336., 2907504., 2995696., 1454776., 1498872., 1543480.,
      1588600., 1374904., 1419000., 1463608., 1508728., 2925168., 3015408.,
      3106672., 3198960., 3020656., 3112944., 3206256., 3300592., 3116144.,
      3210480., 3305840., 3402224., 3211632., 3308016., 3405424., 3503856.,
      3307120., 3405552., 3505008., 3605488., 3402608., 3503088., 3604592.,
      3707120., 1803320., 1854584., 1906360., 1958648., 1284218., 1320746.,
      1357658., 1394954., 2713780., 2788372., 2863732., 2939860., 2791540.,
      2867668., 2944564., 3022228., 2869300., 2946964., 3025396., 3104596.,
      2947060., 3026260., 3106228., 3186964., 3024820., 3105556., 3187060.,
      3269332., 3102580., 3184852., 3267892., 3351700., 1634714., 1676618.,
      1718906., 1761578., 1034396., 1061052., 1087964., 1115132., 2174904.,
      2229240., 2284088., 2339448., 2230840., 2286200., 2342072., 2398456.,
      2286776., 2343160., 2400056., 2457464., 2342712., 2400120., 2458040.,
      2516472., 2398648., 2457080., 2516024., 2575480., 2454584., 2514040.,
      2574008., 2634488., 1287516., 1317756., 1348252., 1379004., 611102.,
      625582.,  640190.,  654926.,  1279868., 1309340., 1339068., 1369052.,
      1309884., 1339868., 1370108., 1400604., 1339900., 1370396., 1401148.,
      1432156., 1369916., 1400924., 1432188., 1463708., 1399932., 1431452.,
      1463228., 1495260., 1429948., 1461980., 1494268., 1526812., 747390.,
      763662.,  780062.,  796590.,  2590.,    6830.,    11198.,   15694.,
      21884.,   30876.,   40124.,   49628.,   55996.,   65500.,   75260.,
      85276.,   90108.,   100124.,  110396.,  120924.,  124220.,  134748.,
      145532.,  156572.,  158332.,  169372.,  180668.,  192220.,  192444.,
      203996.,  215804.,  227868.,  108158.,  114190.,  120350.,  126638.,
      121308.,  132092.,  143132.,  154428.,  285240.,  307832.,  330936.,
      354552.,  357560.,  381176.,  405304.,  429944.,  429880.,  454520.,
      479672.,  505336.,  502200.,  527864.,  554040.,  580728.,  574520.,
      601208.,  628408.,  656120.,  646840.,  674552.,  702776.,  731512.,
      351900.,  366268.,  380892.,  395772.,  370490.,  390122.,  410138.,
      430538.,  818740.,  859540.,  901108.,  943444.,  933364.,  975700.,
      1018804., 1062676., 1047988., 1091860., 1136500., 1181908., 1162612.,
      1208020., 1254196., 1301140., 1277236., 1324180., 1371892., 1420372.,
      1391860., 1440340., 1489588., 1539604., 745562.,  770570.,  795962.,
      821738.,  764472.,  795256.,  826552.,  858360.,  1651056., 1714672.,
      1779312., 1844976., 1812080., 1877744., 1944432., 2012144., 1973104.,
      2040816., 2109552., 2179312., 2134128., 2203888., 2274672., 2346480.,
      2295152., 2366960., 2439792., 2513648., 2456176., 2530032., 2604912.,
      2680816., 1303480., 1341432., 1379896., 1418872., 1313720., 1351672.,
      1390136., 1429112., 2778224., 2856176., 2935152., 3015152., 2939248.,
      3019248., 3100272., 3182320., 3100272., 3182320., 3265392., 3349488.,
      3261296., 3345392., 3430512., 3516656., 3422320., 3508464., 3595632.,
      3683824., 3583344., 3671536., 3760752., 3850992., 1881400., 1926520.,
      1972152., 2018296., 1862968., 1908088., 1953720., 1999864., 3905392.,
      3997680., 4090992., 4185328., 4066416., 4160752., 4256112., 4352496.,
      4227440., 4323824., 4421232., 4519664., 4388464., 4486896., 4586352.,
      4686832., 4549488., 4649968., 4751472., 4854000., 4710512., 4813040.,
      4916592., 5021168., 2459320., 2511608., 2564408., 2617720., 2412216.,
      2464504., 2517304., 2570616., 5032560., 5139184., 5246832., 5355504.,
      5193584., 5302256., 5411952., 5522672., 5354608., 5465328., 5577072.,
      5689840., 5515632., 5628400., 5742192., 5857008., 5676656., 5791472.,
      5907312., 6024176., 5837680., 5954544., 6072432., 6191344., 3037240.,
      3096696., 3156664., 3217144., 2148218., 2190890., 2233946., 2277386.,
      4466356., 4553236., 4640884., 4729300., 4593268., 4681684., 4770868.,
      4860820., 4720180., 4810132., 4900852., 4992340., 4847092., 4938580.,
      5030836., 5123860., 4974004., 5067028., 5160820., 5255380., 5100916.,
      5195476., 5290804., 5386900., 2646170., 2694218., 2742650., 2791466.,
      1667740., 1698492., 1729500., 1760764., 3457976., 3520504., 3583544.,
      3647096., 3546680., 3610232., 3674296., 3738872., 3635384., 3699960.,
      3765048., 3830648., 3724088., 3789688., 3855800., 3922424., 3812792.,
      3879416., 3946552., 4014200., 3901496., 3969144., 4037304., 4105976.,
      2019164., 2053500., 2088092., 2122940., 956446.,  972974.,  989630.,
      1006414., 1978748., 2012316., 2046140., 2080220., 2025148., 2059228.,
      2093564., 2128156., 2071548., 2106140., 2140988., 2176092., 2117948.,
      2153052., 2188412., 2224028., 2164348., 2199964., 2235836., 2271964.,
      2210748., 2246876., 2283260., 2319900., 1141886., 1160206., 1178654.,
      1197230.};
  const std::array<int, 4> in_shape = {{3, 10, 8, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2048.,   2840.,   3752.,   4788.,   5194.,   5600.,   5240.,   4740.,
      4096.,   4220.,   5725.,   7420.,   9310.,   9940.,   10570.,  9730.,
      8675.,   7400.,   7560.,   10110.,  12936.,  16044.,  16947.,  17850.,
      16248.,  14340.,  12120.,  12320.,  16310.,  20678.,  25431.,  26656.,
      27881.,  25172.,  22050.,  18508.,  18242.,  23870.,  29939.,  36456.,
      37681.,  38906.,  34811.,  30240.,  25186.,  24164.,  31430.,  39200.,
      47481.,  48706.,  49931.,  44450.,  38430.,  31864.,  30086.,  38990.,
      48461.,  58506.,  59731.,  60956.,  54089.,  46620.,  38542.,  35088.,
      45165.,  55776.,  66927.,  68124.,  69321.,  61140.,  52395.,  43080.,
      37410.,  47950.,  58975.,  70490.,  71610.,  72730.,  63895.,  54550.,
      44690.,  36800.,  47030.,  57680.,  68754.,  69748.,  70742.,  61976.,
      52770.,  43120.,  20768.,  27140.,  33992.,  41328.,  41734.,  42140.,
      37640.,  32640.,  27136.,  33920.,  43975.,  54670.,  66010.,  66640.,
      67270.,  59680.,  51425.,  42500.,  50760.,  65460.,  80976.,  97314.,
      98217.,  99120.,  87528.,  75090.,  61800.,  71540.,  91910.,  113288.,
      135681., 136906., 138131., 121562., 103950., 85288.,  77462.,  99470.,
      122549., 146706., 147931., 149156., 131201., 112140., 91966.,  83384.,
      107030., 131810., 157731., 158956., 160181., 140840., 120330., 98644.,
      89306.,  114590., 141071., 168756., 169981., 171206., 150479., 128520.,
      105322., 93408.,  119415., 146496., 174657., 175854., 177051., 155100.,
      132045., 107880., 92310.,  117700., 144025., 171290., 172410., 173530.,
      151645., 128800., 104990., 85760.,  109130., 133280., 158214., 159208.,
      160202., 139736., 118470., 96400.,  39488.,  51440.,  64232.,  77868.,
      78274.,  78680.,  70040.,  60540.,  50176.,  63620.,  82225.,  101920.,
      122710., 123340., 123970., 109630., 94175.,  77600.,  93960.,  120810.,
      149016., 178584., 179487., 180390., 158808., 135840., 111480., 130760.,
      167510., 205898., 245931., 247156., 248381., 217952., 185850., 152068.,
      136682., 175070., 215159., 256956., 258181., 259406., 227591., 194040.,
      158746., 142604., 182630., 224420., 267981., 269206., 270431., 237230.,
      202230., 165424., 148526., 190190., 233681., 279006., 280231., 281456.,
      246869., 210420., 172102., 151728., 193665., 237216., 282387., 283584.,
      284781., 249060., 211695., 172680., 147210., 187450., 229075., 272090.,
      273210., 274330., 239395., 203050., 165290., 134720., 171230., 208880.,
      247674., 248668., 249662., 217496., 184170., 149680.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,    4.,    10.,    16.,    22.,    28.,    34.,    32.,   21.,
      12.,   38.,   80.,    101.,   122.,   143.,   164.,   138.,  84.,
      54.,   144.,  273.,   318.,   363.,   408.,   453.,   360.,  210.,
      148.,  364.,  652.,   730.,   808.,   886.,   964.,   740.,  420.,
      302.,  700.,  1198.,  1276.,  1354.,  1432.,  1510.,  1132., 630.,
      456.,  1036., 1744.,  1822.,  1900.,  1978.,  2056.,  1524., 840.,
      610.,  1372., 2290.,  2368.,  2446.,  2524.,  2602.,  1916., 1050.,
      714.,  1557., 2532.,  2604.,  2676.,  2748.,  2820.,  2031., 1092.,
      661.,  1418., 2273.,  2330.,  2387.,  2444.,  2501.,  1778., 945.,
      430.,  913.,  1450.,  1483.,  1516.,  1549.,  1582.,  1115., 588.,
      13.,   40.,   82.,    124.,   166.,   208.,   250.,   188.,  105.,
      120.,  278.,  476.,   569.,   662.,   755.,   848.,   618.,  336.,
      342.,  756.,  1245.,  1398.,  1551.,  1704.,  1857.,  1332., 714.,
      700.,  1516., 2452.,  2674.,  2896.,  3118.,  3340.,  2372., 1260.,
      1190., 2524., 4006.,  4228.,  4450.,  4672.,  4894.,  3436., 1806.,
      1680., 3532., 5560.,  5782.,  6004.,  6226.,  6448.,  4500., 2352.,
      2170., 4540., 7114.,  7336.,  7558.,  7780.,  8002.,  5564., 2898.,
      2010., 4185., 6528.,  6708.,  6888.,  7068.,  7248.,  5019., 2604.,
      1609., 3338., 5189.,  5318.,  5447.,  5576.,  5705.,  3938., 2037.,
      946.,  1957., 3034.,  3103.,  3172.,  3241.,  3310.,  2279., 1176.,
      25.,   76.,   154.,   232.,   310.,   388.,   466.,   344.,  189.,
      228.,  518.,  872.,   1037.,  1202.,  1367.,  1532.,  1098., 588.,
      630.,  1368., 2217.,  2478.,  2739.,  3000.,  3261.,  2304., 1218.,
      1252., 2668., 4252.,  4618.,  4984.,  5350.,  5716.,  4004., 2100.,
      2078., 4348., 6814.,  7180.,  7546.,  7912.,  8278.,  5740., 2982.,
      2904., 6028., 9376.,  9742.,  10108., 10474., 10840., 7476., 3864.,
      3730., 7708., 11938., 12304., 12670., 13036., 13402., 9212., 4746.,
      3306., 6813., 10524., 10812., 11100., 11388., 11676., 8007., 4116.,
      2557., 5258., 8105.,  8306.,  8507.,  8708.,  8909.,  6098., 3129.,
      1462., 3001., 4618.,  4723.,  4828.,  4933.,  5038.,  3443., 1764.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      15472.,   21540.,   28552.,   36540.,   39732.,   42924.,   40264.,
      36500.,   31600.,   32300.,   43925.,   57050.,   71715.,   76685.,
      81655.,   75290.,   67225.,   57420.,   58344.,   78150.,   100140.,
      124362.,  131502.,  138642.,  126348.,  111630.,  94440.,   95620.,
      126735.,  160846.,  198009.,  207711.,  217413.,  196462.,  172235.,
      144676.,  142492.,  186585.,  234178.,  285327.,  295029.,  304731.,
      272818.,  237125.,  197596.,  189364.,  246435.,  307510.,  372645.,
      382347.,  392049.,  349174.,  302015.,  250516.,  236236.,  306285.,
      380842.,  459963.,  469665.,  479367.,  425530.,  366905.,  303436.,
      276504.,  356010.,  439764.,  527814.,  537306.,  546798.,  482388.,
      413490.,  340056.,  295460.,  378775.,  465950.,  557025.,  565915.,
      574805.,  505070.,  431275.,  353380.,  291088.,  372060.,  456376.,
      544068.,  551964.,  559860.,  490552.,  417740.,  341392.,  162352.,
      212340.,  266152.,  323820.,  327012.,  330204.,  295144.,  256100.,
      213040.,  266300.,  345425.,  429650.,  519015.,  523985.,  528955.,
      469490.,  404725.,  334620.,  399624.,  515550.,  637980.,  766962.,
      774102.,  781242.,  690108.,  592230.,  487560.,  564340.,  725235.,
      894166.,  1071189., 1080891., 1090593., 960022.,  821135.,  673876.,
      611212.,  785085.,  967498.,  1158507., 1168209., 1177911., 1036378.,
      886025.,  726796.,  658084.,  844935.,  1040830., 1245825., 1255527.,
      1265229., 1112734., 950915.,  779716.,  704956.,  904785.,  1114162.,
      1333143., 1342845., 1352547., 1189090., 1015805., 832636.,  738744.,
      944610.,  1159044., 1382094., 1391586., 1401078., 1227588., 1045290.,
      854136.,  731060.,  932275.,  1140950., 1357125., 1366015., 1374905.,
      1201670., 1020775., 832180.,  679888.,  865260.,  1056856., 1254708.,
      1262604., 1270500., 1108312., 939740.,  764752.,  309232.,  403140.,
      503752.,  611100.,  614292.,  617484.,  550024.,  475700.,  394480.,
      500300.,  646925.,  802250.,  966315.,  971285.,  976255.,  863690.,
      742225.,  611820.,  740904.,  952950.,  1175820., 1409562., 1416702.,
      1423842., 1253868., 1072830., 880680.,  1033060., 1323735., 1627486.,
      1944369., 1954071., 1963773., 1723582., 1470035., 1203076., 1079932.,
      1383585., 1700818., 2031687., 2041389., 2051091., 1799938., 1534925.,
      1255996., 1126804., 1443435., 1774150., 2119005., 2128707., 2138409.,
      1876294., 1599815., 1308916., 1173676., 1503285., 1847482., 2206323.,
      2216025., 2225727., 1952650., 1664705., 1361836., 1200984., 1533210.,
      1878324., 2236374., 2245866., 2255358., 1972788., 1677090., 1368216.,
      1166660., 1485775., 1815950., 2157225., 2166115., 2175005., 1898270.,
      1610275., 1310980., 1068688., 1358460., 1657336., 1965348., 1973244.,
      1981140., 1726072., 1461740., 1188112.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,     22.,    59.,    101.,   143.,   185.,    227.,    222.,   149.,
      70.,    244.,   538.,   694.,   850.,   1006.,   1162.,   996.,   614.,
      363.,   1002.,  1941.,  2283.,  2625.,  2967.,   3309.,   2658.,  1563.,
      1052.,  2632.,  4772.,  5372.,  5972.,  6572.,   7172.,   5544.,  3164.,
      2228.,  5208.,  8972.,  9572.,  10172., 10772.,  11372.,  8568.,  4788.,
      3404.,  7784.,  13172., 13772., 14372., 14972.,  15572.,  11592., 6412.,
      4580.,  10360., 17372., 17972., 18572., 19172.,  19772.,  14616., 8036.,
      5457.,  11934., 19455., 20013., 20571., 21129.,  21687.,  15654., 8433.,
      5098.,  10956., 17590., 18034., 18478., 18922.,  19366.,  13788., 7338.,
      3335.,  7090.,  11273., 11531., 11789., 12047.,  12305.,  8682.,  4583.,
      77.,    262.,   563.,   893.,   1223.,  1553.,   1883.,   1422.,  797.,
      886.,   2068.,  3562.,  4294.,  5026.,  5758.,   6490.,   4740.,  2582.,
      2595.,  5754.,  9501.,  10707., 11913., 13119.,  14325.,  10290., 5523.,
      5372.,  11656., 18884., 20636., 22388., 24140.,  25892.,  18408., 9788.,
      9236.,  19608., 31148., 32900., 34652., 36404.,  38156.,  26808., 14100.,
      13100., 27560., 43412., 45164., 46916., 48668.,  50420.,  35208., 18412.,
      16964., 35512., 55676., 57428., 59180., 60932.,  62684.,  43608., 22724.,
      15753., 32814., 51207., 52629., 54051., 55473.,  56895.,  39414., 20457.,
      12634., 26220., 40774., 41794., 42814., 43834.,  44854.,  30972., 16026.,
      7439.,  15394., 23873., 24419., 24965., 25511.,  26057.,  17946., 9263.,
      149.,   502.,   1067.,  1685.,  2303.,  2921.,   3539.,   2622.,  1445.,
      1702.,  3892.,  6586.,  7894.,  9202.,  10510.,  11818.,  8484.,  4550.,
      4827.,  10506., 17061., 19131., 21201., 23271.,  25341.,  17922., 9483.,
      9692.,  20680., 32996., 35900., 38804., 41708.,  44612.,  31272., 16412.,
      16244., 34008., 53324., 56228., 59132., 62036.,  64940.,  45048., 23412.,
      22796., 47336., 73652., 76556., 79460., 82364.,  85268.,  58824., 30412.,
      29348., 60664., 93980., 96884., 99788., 102692., 105596., 72600., 37412.,
      26049., 53694., 82959., 85245., 87531., 89817.,  92103.,  63174., 32481.,
      20170., 41484., 63958., 65554., 67150., 68746.,  70342.,  48156., 24714.,
      11543., 23698., 36473., 37307., 38141., 38975.,  39809.,  27210., 13943.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      120160.,  167640.,  222608.,  285320.,  310632.,  335944.,  315536.,
      286360.,  248160.,  252600.,  343950.,  447220.,  562730.,  602210.,
      641690.,  592180.,  529150.,  452280.,  458256.,  614340.,  787800.,
      979020.,  1035804., 1092588., 996312.,  880740.,  745488.,  753256.,
      998970.,  1268540., 1562414., 1639638., 1716862., 1552124., 1361290.,
      1143912., 1126216., 1475250., 1852172., 2257430., 2334654., 2411878.,
      2159948., 1877890., 1565256., 1499176., 1951530., 2435804., 2952446.,
      3029670., 3106894., 2767772., 2394490., 1986600., 1872136., 2427810.,
      3019436., 3647462., 3724686., 3801910., 3375596., 2911090., 2407944.,
      2195280., 2826900., 3492408., 4192188., 4267788., 4343388., 3832248.,
      3285300., 2702160., 2348440., 3010950., 3704260., 4428690., 4499530.,
      4570370., 4016260., 3429750., 2810520., 2315488., 2959800., 3630800.,
      4328744., 4391688., 4454632., 3903440., 3324280., 2716896., 1283680.,
      1679640., 2106128., 2563400., 2588712., 2614024., 2337296., 2028760.,
      1688160., 2091768., 2698014., 3336788., 4008410., 4001810., 3987018.,
      3521428., 3021710., 2487544., 2968464., 3772452., 4611992., 5487468.,
      5440828., 5385996., 4730904., 4038340., 3307920., 3866408., 4876010.,
      5925212., 7014462., 6930918., 6839182., 5989916., 5098810., 4165416.,
      3596296., 4499298., 5437740., 6412070., 6271182., 6122102., 5362796.,
      4565810., 3730696., 3096808., 3835866., 4606204., 5408270., 5210038.,
      5003614., 4391612., 3746090., 3066600., 2367944., 2885714., 3430604.,
      4003062., 3747486., 3483718., 3076364., 2639650., 2173128., 1380560.,
      1603572., 1845880., 2107868., 1793324., 1470588., 1326072., 1160340.,
      973008.,  883160.,  1148950., 1433380., 1736770., 1807610., 1878450.,
      1672420., 1446150., 1199320., 1007072., 1299960., 1609808., 1936872.,
      1999816., 2062760., 1824080., 1567160., 1291744., 792416.,  1041240.,
      1310864., 1601544., 1626856., 1652168., 1483664., 1293080., 1080160.,
      1325880., 1727150., 2156980., 2615690., 2655170., 2694650., 2401780.,
      2078750., 1725240., 2025744., 2623620., 3258840., 3931788., 3988572.,
      4045356., 3587160., 3089700., 2552592., 2908136., 3750810., 4640636.,
      5578062., 5655286., 5732510., 5063996., 4346090., 3578344., 3281096.,
      4227090., 5224268., 6273078., 6350302., 6427526., 5671820., 4862690.,
      3999688., 3654056., 4698250., 5789468., 6928158., 6975686., 7015022.,
      6131164., 5189850., 4253096., 3957384., 5009666., 6104812., 7243270.,
      7233454., 7215446., 6249516., 5230290., 4277128., 4022864., 5021012.,
      6056632., 7130108., 7061324., 6984348., 5993016., 4954100., 4044368.,
      3825176., 4700838., 5607556., 6545650., 6414762., 6275682., 5324100.,
      4331670., 3532568., 3348192., 4028984., 4733392., 5461672., 5265544.,
      5061224., 4218576., 3342840., 2725600.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,     140.,    394.,    706.,    1018.,   1330.,   1642.,   1644.,
      1118.,   460.,    1720.,   3908.,   5108.,   6308.,   7508.,   8708.,
      7544.,   4684.,   2634.,   7428.,   14574.,  17238.,  19902.,  22566.,
      25230.,  20388.,  12042.,  7896.,   19952.,  36424.,  41128.,  45832.,
      50536.,  55240.,  42864.,  24536.,  17080.,  40112.,  69352.,  74056.,
      78760.,  83464.,  88168.,  66608.,  37304.,  26264.,  60272.,  102280.,
      106984., 111688., 116392., 121096., 90352.,  50072.,  35448.,  80432.,
      135208., 139912., 144616., 149320., 154024., 114096., 62840.,  42642.,
      93396.,  152454., 156846., 161238., 165630., 170022., 122868., 66258.,
      40028.,  86104.,  138356., 141860., 145364., 148868., 152372., 108568.,
      57820.,  26262.,  55868.,  88882.,  90922.,  92962.,  95002.,  97042.,
      68508.,  36182.,  510.,    1868.,   4138.,   6754.,   9370.,   11986.,
      14602.,  11052.,  6206.,   6796.,   15928.,  27524.,  33332.,  39140.,
      44948.,  50756.,  37112.,  20236.,  20202.,  44868.,  74190.,  83766.,
      93342.,  102918., 112494., 80868.,  43434.,  42072.,  91376.,  148168.,
      162088., 176008., 189928., 203848., 145008., 77144.,  72760.,  154544.,
      245608., 259528., 273448., 287368., 301288., 211760., 111416., 103448.,
      217712., 343048., 356968., 370888., 384808., 398728., 278512., 145688.,
      134136., 280880., 440488., 454408., 468328., 482248., 496168., 345264.,
      179960., 124722., 259860., 405606., 416910., 428214., 439518., 450822.,
      312372., 162162., 100124., 207832., 323252., 331364., 339476., 347588.,
      355700., 245656., 127132., 58998.,  122108., 189394., 193738., 198082.,
      202426., 206770., 142428., 73526.,  990.,    3596.,   7882.,   12802.,
      17722.,  22642.,  27562.,  20460.,  11294.,  13132.,  30136.,  51140.,
      61556.,  71972.,  82388.,  92804.,  66680.,  35788.,  37770.,  82308.,
      133806., 150294., 166782., 183270., 199758., 141348., 74826.,  76248.,
      162800., 259912., 283048., 306184., 329320., 352456., 247152., 129752.,
      128440., 268976., 421864., 445000., 468136., 491272., 514408., 356912.,
      185528., 180632., 375152., 583816., 606952., 630088., 653224., 676360.,
      466672., 241304., 232824., 481328., 745768., 768904., 792040., 815176.,
      838312., 576432., 297080., 206802., 426324., 658758., 676974., 695190.,
      713406., 731622., 501876., 258066., 160220., 329560., 508148., 520868.,
      533588., 546308., 559028., 382744., 196444., 91734.,  188348., 289906.,
      296554., 303202., 309850., 316498., 216348., 110870.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7280.,    8192.,    10180.,   11360.,   13544.,   15008.,   17388.,
      19152.,   18956.,   20776.,   20524.,   22400.,   19304.,   20960.,
      17540.,   18960.,   15216.,   16384.,   15420.,   16880.,   21025.,
      22900.,   27370.,   29680.,   34475.,   37240.,   36925.,   39760.,
      39375.,   42280.,   36370.,   38920.,   32525.,   34700.,   27820.,
      29600.,   28104.,   30240.,   37710.,   40440.,   48396.,   51744.,
      60186.,   64176.,   63714.,   67788.,   67242.,   71400.,   61356.,
      64992.,   54270.,   57360.,   45960.,   48480.,   46340.,   49280.,
      61495.,   65240.,   78134.,   82712.,   96285.,   101724.,  101087.,
      106624.,  105889.,  111524.,  95774.,   100688.,  84035.,   88200.,
      70644.,   74032.,   69524.,   72968.,   91105.,   95480.,   114422.,
      119756.,  139503.,  145824.,  144305.,  150724.,  149107.,  155624.,
      133574.,  139244.,  116165.,  120960.,  96852.,   100744.,  92708.,
      96656.,   120715.,  125720.,  150710.,  156800.,  182721.,  189924.,
      187523.,  194824.,  192325.,  199724.,  171374.,  177800.,  148295.,
      153720.,  123060.,  127456.,  115892.,  120344.,  150325.,  155960.,
      186998.,  193844.,  225939.,  234024.,  230741.,  238924.,  235543.,
      243824.,  209174.,  216356.,  180425.,  186480.,  149268.,  154168.,
      136152.,  140352.,  175350.,  180660.,  216660.,  223104.,  260106.,
      267708.,  264810.,  272496.,  269514.,  277284.,  237828.,  244560.,
      203910.,  209580.,  167736.,  172320.,  145820.,  149640.,  186975.,
      191800.,  230050.,  235900.,  275065.,  281960.,  279475.,  286440.,
      283885.,  290920.,  249490.,  255580.,  213075.,  218200.,  174620.,
      178760.,  143888.,  147200.,  183940.,  188120.,  225656.,  230720.,
      269052.,  275016.,  272972.,  278992.,  276892.,  282968.,  242648.,
      247904.,  206660.,  211080.,  168912.,  172480.,  79280.,   83072.,
      103780.,  108560.,  130184.,  135968.,  158508.,  165312.,  160076.,
      166936.,  161644.,  168560.,  144584.,  150560.,  125540.,  130560.,
      104496.,  108544.,  130620.,  135680.,  169525.,  175900.,  210970.,
      218680.,  254975.,  264040.,  257425.,  266560.,  259875.,  269080.,
      230770.,  238720.,  199025.,  205700.,  164620.,  170000.,  196584.,
      203040.,  253710.,  261840.,  314076.,  323904.,  377706.,  389256.,
      381234.,  392868.,  384762.,  396480.,  339996.,  350112.,  291870.,
      300360.,  240360.,  247200.,  278180.,  286160.,  357595.,  367640.,
      441014.,  453152.,  528465.,  542724.,  533267.,  547624.,  538069.,
      552524.,  473774.,  486248.,  405335.,  415800.,  332724.,  341152.,
      301364.,  309848.,  387205.,  397880.,  477302.,  490196.,  571683.,
      586824.,  576485.,  591724.,  581287.,  596624.,  511574.,  524804.,
      437465.,  448560.,  358932.,  367864.,  324548.,  333536.,  416815.,
      428120.,  513590.,  527240.,  614901.,  630924.,  619703.,  635824.,
      624505.,  640724.,  549374.,  563360.,  469595.,  481320.,  385140.,
      394576.,  347732.,  357224.,  446425.,  458360.,  549878.,  564284.,
      658119.,  675024.,  662921.,  679924.,  667723.,  684824.,  587174.,
      601916.,  501725.,  514080.,  411348.,  421288.,  365112.,  373632.,
      466950.,  477660.,  573060.,  585984.,  683466.,  698628.,  688170.,
      703416.,  692874.,  708204.,  607188.,  620400.,  517110.,  528180.,
      422616.,  431520.,  361820.,  369240.,  461475.,  470800.,  564850.,
      576100.,  671965.,  685160.,  676375.,  689640.,  680785.,  694120.,
      595090.,  606580.,  505575.,  515200.,  412220.,  419960.,  336848.,
      343040.,  428740.,  436520.,  523736.,  533120.,  621852.,  632856.,
      625772.,  636832.,  629692.,  640808.,  549368.,  558944.,  465860.,
      473880.,  379152.,  385600.,  151280.,  157952.,  197380.,  205760.,
      246824.,  256928.,  299628.,  311472.,  301196.,  313096.,  302764.,
      314720.,  269864.,  280160.,  233540.,  242160.,  193776.,  200704.,
      245820.,  254480.,  318025.,  328900.,  394570.,  407680.,  475475.,
      490840.,  477925.,  493360.,  480375.,  495880.,  425170.,  438520.,
      365525.,  376700.,  301420.,  310400.,  365064.,  375840.,  469710.,
      483240.,  579756.,  596064.,  695226.,  714336.,  698754.,  717948.,
      702282.,  721560.,  618636.,  635232.,  529470.,  543360.,  434760.,
      445920.,  510020.,  523040.,  653695.,  670040.,  803894.,  823592.,
      960645.,  983724.,  965447.,  988624.,  970249.,  993524.,  851774.,
      871808.,  726635.,  743400.,  594804.,  608272.,  533204.,  546728.,
      683305.,  700280.,  840182.,  860636.,  1003863., 1027824., 1008665.,
      1032724., 1013467., 1037624., 889574.,  910364.,  758765.,  776160.,
      621012.,  634984.,  556388.,  570416.,  712915.,  730520.,  876470.,
      897680.,  1047081., 1071924., 1051883., 1076824., 1056685., 1081724.,
      927374.,  948920.,  790895.,  808920.,  647220.,  661696.,  579572.,
      594104.,  742525.,  760760.,  912758.,  934724.,  1090299., 1116024.,
      1095101., 1120924., 1099903., 1125824., 965174.,  987476.,  823025.,
      841680.,  673428.,  688408.,  594072.,  606912.,  758550.,  774660.,
      929460.,  948864.,  1106826., 1129548., 1111530., 1134336., 1116234.,
      1139124., 976548.,  996240.,  830310.,  846780.,  677496.,  690720.,
      577820.,  588840.,  735975.,  749800.,  899650.,  916300.,  1068865.,
      1088360., 1073275., 1092840., 1077685., 1097320., 940690.,  957580.,
      798075.,  812200.,  649820.,  661160.,  529808.,  538880.,  673540.,
      684920.,  821816.,  835520.,  974652.,  990696.,  978572.,  994672.,
      982492.,  998648.,  856088.,  869984.,  725060.,  736680.,  589392.,
      598720.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    37.,    64.,    55.,
      88.,    73.,    112.,   91.,    136.,   94.,    128.,   65.,    84.,
      22.,    48.,    92.,    152.,   218.,   320.,   290.,   404.,   362.,
      488.,   434.,   572.,   506.,   656.,   444.,   552.,   278.,   336.,
      147.,   216.,   426.,   576.,   849.,   1092.,  1011.,  1272.,  1173.,
      1452.,  1335.,  1632.,  1497.,  1812.,  1218.,  1440.,  723.,   840.,
      460.,   592.,   1176.,  1456.,  2164.,  2608.,  2452.,  2920.,  2740.,
      3232.,  3028.,  3544.,  3316.,  3856.,  2584.,  2960.,  1484.,  1680.,
      1020.,  1208.,  2408.,  2800.,  4180.,  4792.,  4468.,  5104.,  4756.,
      5416.,  5044.,  5728.,  5332.,  6040.,  4040.,  4528.,  2268.,  2520.,
      1580.,  1824.,  3640.,  4144.,  6196.,  6976.,  6484.,  7288.,  6772.,
      7600.,  7060.,  7912.,  7348.,  8224.,  5496.,  6096.,  3052.,  3360.,
      2140.,  2440.,  4872.,  5488.,  8212.,  9160.,  8500.,  9472.,  8788.,
      9784.,  9076.,  10096., 9364.,  10408., 6952.,  7664.,  3836.,  4200.,
      2601.,  2856.,  5706.,  6228.,  9327.,  10128., 9597.,  10416., 9867.,
      10704., 10137., 10992., 10407., 11280., 7530.,  8124.,  4065.,  4368.,
      2454.,  2644.,  5284.,  5672.,  8498.,  9092.,  8714.,  9320.,  8930.,
      9548.,  9146.,  9776.,  9362.,  10004., 6676.,  7112.,  3558.,  3780.,
      1615.,  1720.,  3438.,  3652.,  5473.,  5800.,  5599.,  5932.,  5725.,
      6064.,  5851.,  6196.,  5977.,  6328.,  4222.,  4460.,  2231.,  2352.,
      25.,    52.,    102.,   160.,   235.,   328.,   397.,   496.,   559.,
      664.,   721.,   832.,   883.,   1000.,  670.,   752.,   377.,   420.,
      406.,   480.,   956.,   1112.,  1658.,  1904.,  2018.,  2276.,  2378.,
      2648.,  2738.,  3020.,  3098.,  3392.,  2268.,  2472.,  1238.,  1344.,
      1227.,  1368.,  2730.,  3024.,  4521.,  4980.,  5115.,  5592.,  5709.,
      6204.,  6303.,  6816.,  6897.,  7428.,  4962.,  5328.,  2667.,  2856.,
      2572.,  2800.,  5592.,  6064.,  9076.,  9808.,  9940.,  10696., 10804.,
      11584., 11668., 12472., 12532., 13360., 8920.,  9488.,  4748.,  5040.,
      4476.,  4760.,  9512.,  10096., 15124., 16024., 15988., 16912., 16852.,
      17800., 17716., 18688., 18580., 19576., 13064., 13744., 6876.,  7224.,
      6380.,  6720.,  13432., 14128., 21172., 22240., 22036., 23128., 22900.,
      24016., 23764., 24904., 24628., 25792., 17208., 18000., 9004.,  9408.,
      8284.,  8680.,  17352., 18160., 27220., 28456., 28084., 29344., 28948.,
      30232., 29812., 31120., 30676., 32008., 21352., 22256., 11132., 11592.,
      7713.,  8040.,  16074., 16740., 25095., 26112., 25797., 26832., 26499.,
      27552., 27201., 28272., 27903., 28992., 19338., 20076., 10041., 10416.,
      6198.,  6436.,  12868., 13352., 20018., 20756., 20522., 21272., 21026.,
      21788., 21530., 22304., 22034., 22820., 15220., 15752., 7878.,  8148.,
      3655.,  3784.,  7566.,  7828.,  11737., 12136., 12007., 12412., 12277.,
      12688., 12547., 12964., 12817., 13240., 8830.,  9116.,  4559.,  4704.,
      49.,    100.,   198.,   304.,   451.,   616.,   757.,   928.,   1063.,
      1240.,  1369.,  1552.,  1675.,  1864.,  1246.,  1376.,  689.,   756.,
      790.,   912.,   1820.,  2072.,  3098.,  3488.,  3746.,  4148.,  4394.,
      4808.,  5042.,  5468.,  5690.,  6128.,  4092.,  4392.,  2198.,  2352.,
      2307.,  2520.,  5034.,  5472.,  8193.,  8868.,  9219.,  9912.,  10245.,
      10956., 11271., 12000., 12297., 13044., 8706.,  9216.,  4611.,  4872.,
      4684.,  5008.,  10008., 10672., 15988., 17008., 17428., 18472., 18868.,
      19936., 20308., 21400., 21748., 22864., 15256., 16016., 8012.,  8400.,
      7932.,  8312.,  16616., 17392., 26068., 27256., 27508., 28720., 28948.,
      30184., 30388., 31648., 31828., 33112., 22088., 22960., 11484., 11928.,
      11180., 11616., 23224., 24112., 36148., 37504., 37588., 38968., 39028.,
      40432., 40468., 41896., 41908., 43360., 28920., 29904., 14956., 15456.,
      14428., 14920., 29832., 30832., 46228., 47752., 47668., 49216., 49108.,
      50680., 50548., 52144., 51988., 53608., 35752., 36848., 18428., 18984.,
      12825., 13224., 26442., 27252., 40863., 42096., 41997., 43248., 43131.,
      44400., 44265., 45552., 45399., 46704., 31146., 32028., 16017., 16464.,
      9942.,  10228., 20452., 21032., 31538., 32420., 32330., 33224., 33122.,
      34028., 33914., 34832., 34706., 35636., 23764., 24392., 12198., 12516.,
      5695.,  5848.,  11694., 12004., 18001., 18472., 18415., 18892., 18829.,
      19312., 19243., 19732., 19657., 20152., 13438., 13772., 6887.,  7056.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      56464.,   63696.,   79140.,   88500.,   105496.,  117112.,  135660.,
      149660.,  148092.,  162540.,  160524.,  175420.,  151192.,  164344.,
      137540.,  148820.,  119440.,  128720.,  120500.,  132100.,  164525.,
      179425.,  214430.,  232790.,  270375.,  292355.,  289835.,  312375.,
      309295.,  332395.,  285950.,  306230.,  255925.,  273225.,  219060.,
      233220.,  220632.,  237624.,  296310.,  318030.,  380580.,  407220.,
      473634.,  505386.,  501690.,  534114.,  529746.,  562842.,  483684.,
      512628.,  428070.,  452670.,  362712.,  382776.,  364924.,  388332.,
      484575.,  514395.,  616042.,  652498.,  759549.,  802865.,  797769.,
      841869.,  835989.,  880873.,  756490.,  795634.,  664055.,  697235.,
      558460.,  585452.,  549388.,  576828.,  720195.,  755055.,  904834.,
      947338.,  1103529., 1153901., 1141749., 1192905., 1179969., 1231909.,
      1057378., 1102570., 919835.,  958055.,  767116.,  798140.,  733852.,
      765324.,  955815.,  995715.,  1193626., 1242178., 1447509., 1504937.,
      1485729., 1543941., 1523949., 1582945., 1358266., 1409506., 1175615.,
      1218875., 975772.,  1010828., 918316.,  953820.,  1191435., 1236375.,
      1482418., 1537018., 1791489., 1855973., 1829709., 1894977., 1867929.,
      1933981., 1659154., 1716442., 1431395., 1479695., 1184428., 1223516.,
      1080888., 1114392., 1392270., 1434630., 1720500., 1771908., 2065770.,
      2126418., 2103234., 2164554., 2140698., 2202690., 1889268., 1942980.,
      1620030., 1665270., 1332792., 1369368., 1158980., 1189460., 1486225.,
      1524725., 1828790., 1875470., 2186835., 2241855., 2221975., 2277555.,
      2257115., 2313255., 1983830., 2032430., 1694425., 1735325., 1388740.,
      1421780., 1144528., 1170960., 1463220., 1496580., 1795192., 1835608.,
      2140572., 2188172., 2171820., 2219868., 2203068., 2251564., 1930744.,
      1972696., 1644500., 1679780., 1344208., 1372688., 626704.,  656976.,
      820740.,  858900.,  1029976., 1076152., 1254540., 1308860., 1266972.,
      1321740., 1279404., 1334620., 1144792., 1192504., 994340.,  1034420.,
      827920.,  860240.,  1034900., 1075300., 1343525., 1394425., 1672430.,
      1733990., 2021775., 2094155., 2041235., 2114175., 2060695., 2134195.,
      1830350., 1893830., 1578925., 1632225., 1306260., 1349220., 1559832.,
      1611384., 2013510., 2078430., 2493060., 2571540., 2998674., 3090906.,
      3026730., 3119634., 3054786., 3148362., 2699844., 2780628., 2318070.,
      2385870., 1909272., 1963896., 2209564., 2273292., 2840775., 2920995.,
      3503962., 3600898., 4199349., 4313225., 4237569., 4352229., 4275789.,
      4391233., 3765370., 3864994., 3221855., 3305435., 2645020., 2712332.,
      2394028., 2461788., 3076395., 3161655., 3792754., 3895738., 4543329.,
      4664261., 4581549., 4703265., 4619769., 4742269., 4066258., 4171930.,
      3477635., 3566255., 2853676., 2925020., 2578492., 2650284., 3312015.,
      3402315., 4081546., 4190578., 4887309., 5015297., 4925529., 5054301.,
      4963749., 5093305., 4367146., 4478866., 3733415., 3827075., 3062332.,
      3137708., 2762956., 2838780., 3547635., 3642975., 4370338., 4485418.,
      5231289., 5366333., 5269509., 5405337., 5307729., 5444341., 4668034.,
      4785802., 3989195., 4087895., 3270988., 3350396., 2903928., 2971992.,
      3714270., 3799830., 4558740., 4661988., 5437530., 5558658., 5474994.,
      5596794., 5512458., 5634930., 4831188., 4936740., 4114830., 4203270.,
      3363192., 3434328., 2879780., 2939060., 3673225., 3747725., 4496390.,
      4586270., 5349435., 5454855., 5384575., 5490555., 5419715., 5526255.,
      4737830., 4829630., 4025425., 4102325., 3282340., 3344180., 2682448.,
      2731920., 3414420., 3476580., 4171192., 4246168., 4952892., 5040812.,
      4984140., 5072508., 5015388., 5104204., 4375864., 4452376., 3710900.,
      3774980., 3020368., 3071888., 1196944., 1250256., 1562340., 1629300.,
      1954456., 2035192., 2373420., 2468060., 2385852., 2480940., 2398284.,
      2493820., 2138392., 2220664., 1851140., 1920020., 1536400., 1591760.,
      1949300., 2018500., 2522525., 2609425., 3130430., 3235190., 3773175.,
      3895955., 3792635., 3915975., 3812095., 3935995., 3374750., 3481430.,
      2901925., 2991225., 2393460., 2465220., 2899032., 2985144., 3730710.,
      3838830., 4605540., 4735860., 5523714., 5676426., 5551770., 5705154.,
      5579826., 5733882., 4916004., 5048628., 4208070., 4319070., 3455832.,
      3545016., 4054204., 4158252., 5196975., 5327595., 6391882., 6549298.,
      7639149., 7823585., 7677369., 7862589., 7715589., 7901593., 6774250.,
      6934354., 5779655., 5913635., 4731580., 4839212., 4238668., 4346748.,
      5432595., 5568255., 6680674., 6844138., 7983129., 8174621., 8021349.,
      8213625., 8059569., 8252629., 7075138., 7241290., 6035435., 6174455.,
      4940236., 5051900., 4423132., 4535244., 5668215., 5808915., 6969466.,
      7138978., 8327109., 8525657., 8365329., 8564661., 8403549., 8603665.,
      7376026., 7548226., 6291215., 6435275., 5148892., 5264588., 4607596.,
      4723740., 5903835., 6049575., 7258258., 7433818., 8671089., 8876693.,
      8709309., 8915697., 8747529., 8954701., 7676914., 7855162., 6546995.,
      6696095., 5357548., 5477276., 4726968., 4829592., 6036270., 6165030.,
      7396980., 7552068., 8809290., 8990898., 8846754., 9029034., 8884218.,
      9067170., 7773108., 7930500., 6609630., 6741270., 5393592., 5499288.,
      4600580., 4688660., 5860225., 5970725., 7163990., 7297070., 8512035.,
      8667855., 8547175., 8703555., 8582315., 8739255., 7491830., 7626830.,
      6356425., 6469325., 5175940., 5266580., 4220368., 4292880., 5365620.,
      5456580., 6547192., 6656728., 7765212., 7893452., 7796460., 7925148.,
      7827708., 7956844., 6820984., 6932056., 5777300., 5870180., 4696528.,
      4771088.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    119.,    275.,    251.,    455.,
      383.,    635.,    515.,    815.,    647.,    995.,    690.,    954.,
      485.,    633.,    130.,    330.,    628.,    1092.,   1558.,   2350.,
      2110.,   2998.,   2662.,   3646.,   3214.,   4294.,   3766.,   4942.,
      3348.,   4196.,   2114.,   2570.,   1047.,   1587.,   3126.,   4302.,
      6333.,   8241.,   7593.,   9645.,   8853.,   11049.,  10113.,  12453.,
      11373.,  13857.,  9318.,   11070.,  5559.,   6483.,   3428.,   4468.,
      8872.,   11080.,  16460.,  19964.,  18716.,  22412.,  20972.,  24860.,
      23228.,  27308.,  25484.,  29756.,  19944.,  22920.,  11492.,  13044.,
      7796.,   9284.,   18504.,  21608.,  32252.,  37100.,  34508.,  39548.,
      36764.,  41996.,  39020.,  44444.,  41276.,  46892.,  31368.,  35240.,
      17652.,  19652.,  12164.,  14100.,  28136.,  32136.,  48044.,  54236.,
      50300.,  56684.,  52556.,  59132.,  54812.,  61580.,  57068.,  64028.,
      42792.,  47560.,  23812.,  26260.,  16532.,  18916.,  37768.,  42664.,
      63836.,  71372.,  66092.,  73820.,  68348.,  76268.,  70604.,  78716.,
      72860.,  81164.,  54216.,  59880.,  29972.,  32868.,  20307.,  22335.,
      44622.,  48774.,  73041.,  79413.,  75165.,  81681.,  77289.,  83949.,
      79413.,  86217.,  81537.,  88485.,  59070.,  63798.,  31923.,  34335.,
      19258.,  20770.,  41508.,  44596.,  66814.,  71542.,  68518.,  73342.,
      70222.,  75142.,  71926.,  76942.,  73630.,  78742.,  52548.,  56020.,
      28026.,  29794.,  12713.,  13549.,  27082.,  28786.,  43139.,  45743.,
      44135.,  46787.,  45131.,  47831.,  46127.,  48875.,  47123.,  49919.,
      33306.,  35202.,  17609.,  18573.,  149.,    361.,    706.,    1162.,
      1703.,   2435.,   2987.,   3767.,   4271.,   5099.,   5555.,   6431.,
      6839.,   7763.,   5202.,   5850.,   2933.,   3273.,   3106.,   3690.,
      7348.,   8580.,   12790.,  14734.,  15646.,  17686.,  18502.,  20638.,
      21358.,  23590.,  24214.,  26542.,  17748.,  19364.,  9698.,   10538.,
      9543.,   10659.,  21270.,  23598.,  35277.,  38913.,  39993.,  43773.,
      44709.,  48633.,  49425.,  53493.,  54141.,  58353.,  38982.,  41886.,
      20967.,  22467.,  20132.,  21940.,  43816.,  47560.,  71180.,  76988.,
      78044.,  84044.,  84908.,  91100.,  91772.,  98156.,  98636.,  105212.,
      70248.,  74760.,  37412.,  39732.,  35252.,  37508.,  74952.,  79592.,
      119228., 126380., 126092., 133436., 132956., 140492., 139820., 147548.,
      146684., 154604., 103176., 108584., 54324.,  57092.,  50372.,  53076.,
      106088., 111624., 167276., 175772., 174140., 182828., 181004., 189884.,
      187868., 196940., 194732., 203996., 136104., 142408., 71236.,  74452.,
      65492.,  68644.,  137224., 143656., 215324., 225164., 222188., 232220.,
      229052., 239276., 235916., 246332., 242780., 253388., 169032., 176232.,
      88148.,  91812.,  61059.,  63663.,  127278., 132582., 198753., 206853.,
      204333., 212577., 209913., 218301., 215493., 224025., 221073., 229749.,
      153246., 159126., 79587.,  82575.,  49114.,  51010.,  101988., 105844.,
      158686., 164566., 162694., 168670., 166702., 172774., 170710., 176878.,
      174718., 180982., 120708., 124948., 62490.,  64642.,  28985.,  30013.,
      60010.,  62098.,  93107.,  96287.,  95255.,  98483.,  97403.,  100679.,
      99551.,  102875., 101699., 105071., 70074.,  72354.,  36185.,  37341.,
      293.,    697.,    1378.,   2218.,   3287.,   4595.,   5723.,   7079.,
      8159.,   9563.,   10595.,  12047.,  13031.,  14531.,  9714.,   10746.,
      5381.,   5913.,   6082.,   7050.,   14068.,  16068.,  24022.,  27118.,
      29182.,  32374.,  34342.,  37630.,  39502.,  42886.,  44662.,  48142.,
      32148.,  34532.,  17282.,  18506.,  18039.,  19731.,  39414.,  42894.,
      64221.,  69585.,  72393.,  77901.,  80565.,  86217.,  88737.,  94533.,
      96909.,  102849., 68646.,  72702.,  36375.,  38451.,  36836.,  39412.,
      78760.,  84040.,  125900., 134012., 137372., 145676., 148844., 157340.,
      160316., 169004., 171788., 180668., 120552., 126600., 63332.,  66420.,
      62708.,  65732.,  131400., 137576., 206204., 215660., 217676., 227324.,
      229148., 238988., 240620., 250652., 252092., 262316., 174984., 181928.,
      90996.,  94532.,  88580.,  92052.,  184040., 191112., 286508., 297308.,
      297980., 308972., 309452., 320636., 320924., 332300., 332396., 343964.,
      229416., 237256., 118660., 122644., 114452., 118372., 236680., 244648.,
      366812., 378956., 378284., 390620., 389756., 402284., 401228., 413948.,
      412700., 425612., 283848., 292584., 146324., 150756., 101811., 104991.,
      209934., 216390., 324465., 334293., 333501., 343473., 342537., 352653.,
      351573., 361833., 360609., 371013., 247422., 254454., 127251., 130815.,
      78970.,  81250.,  162468., 167092., 250558., 257590., 256870., 263998.,
      263182., 270406., 269494., 276814., 275806., 283222., 188868., 193876.,
      96954.,  99490.,  45257.,  46477.,  92938.,  95410.,  143075., 146831.,
      146375., 150179., 149675., 153527., 152975., 156875., 156275., 160223.,
      106842., 109506., 54761.,  56109.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      444640.,   502240.,   623960.,   698520.,   832592.,   925136.,
      1071560.,  1183112.,  1170568.,  1285704.,  1269576.,  1388296.,
      1196624.,  1301456.,  1089240.,  1179160.,  946400.,   1020384.,
      952600.,   1045080.,  1301550.,  1420350.,  1697380.,  1843780.,
      2141370.,  2316650.,  2296490.,  2476250.,  2451610.,  2635850.,
      2267620.,  2429380.,  2030350.,  2168350.,  1738520.,  1851480.,
      1748304.,  1883856.,  2349060.,  2522340.,  3018360.,  3230904.,
      3757740.,  4011084.,  3981516.,  4240236.,  4205292.,  4469388.,
      3840888.,  4071864.,  3400260.,  3596580.,  2881872.,  3042000.,
      2896264.,  3083080.,  3847130.,  4085130.,  4892300.,  5183276.,
      6033566.,  6379310.,  6338542.,  6690558.,  6643518.,  7001806.,
      6013196.,  6325676.,  5279610.,  5544490.,  4440968.,  4656456.,
      4303432.,  4497928.,  5608266.,  5853818.,  7007148.,  7305548.,
      8501870.,  8854910.,  8703422.,  9054542.,  9008398.,  9365790.,
      8039468.,  8351180.,  6967530.,  7231770.,  5790792.,  6005768.,
      5312264.,  5506248.,  6839994.,  7084906.,  8461516.,  8759148.,
      10178622., 10530766., 10265486., 10615710., 10570462., 10926958.,
      9377612.,  9688556.,  8082010.,  8345610.,  6681864.,  6896328.,
      5862344.,  6055816.,  7498282.,  7742554.,  9227756.,  9524620.,
      11052558., 11403806., 11024734., 11374062., 11329710., 11685310.,
      10027628., 10337804., 8623050.,  8886010.,  7114184.,  7328136.,
      5903312.,  6080848.,  7501860.,  7725572.,  9185848.,  9457272.,
      10956812., 11277484., 10808364., 11126220., 11107404., 11430636.,
      9807672.,  10089336., 8414820.,  8653380.,  6927312.,  7121232.,
      5269464.,  5422872.,  6651678.,  6844590.,  8107140.,  8340836.,
      9637130.,  9912890.,  9355514.,  9627562.,  9636074.,  9912602.,
      8504836.,  8745700.,  7293950.,  7497870.,  6002136.,  6167832.,
      3896288.,  4017376.,  4867096.,  5018968.,  5894864.,  6078544.,
      6980616.,  7197128.,  6553288.,  6765192.,  6802824.,  7018312.,
      6022352.,  6210128.,  5179800.,  5338840.,  4274144.,  4403424.,
      1755872.,  1866720.,  2329560.,  2470680.,  2959184.,  3131600.,
      3645768.,  3850504.,  3744776.,  3953096.,  3843784.,  4055688.,
      3482960.,  3667664.,  3061080.,  3217560.,  2577120.,  2704352.,
      3030936.,  3173592.,  3951438.,  4128862.,  4935716.,  5149188.,
      5985050.,  6235850.,  6053130.,  6300218.,  6104826.,  6348202.,
      5449636.,  5662084.,  4724270.,  4904510.,  3927448.,  4074200.,
      4458576.,  4624848.,  5707204.,  5914788.,  7031544.,  7281976.,
      8433132.,  8727948.,  8455180.,  8747180.,  8460844.,  8750028.,
      7510008.,  7762488.,  6475780.,  6690020.,  5356624.,  5531088.,
      5966088.,  6164168.,  7573050.,  7821034.,  9271756.,  9571436.,
      11063998., 11417166., 11052558., 11403806., 11024734., 11374062.,
      9760844.,  10065644., 8396250.,  8654730.,  6929160.,  7139528.,
      6172104.,  6369672.,  7772586.,  8019930.,  9464556.,  9763468.,
      11249806., 11602078., 11123678., 11474030., 10981166., 11329598.,
      9722732.,  10026764., 8363850.,  8621690.,  6902728.,  7112584.,
      5919368.,  6116424.,  7398682.,  7645386.,  8969228.,  9267372.,
      10632798., 10984174., 10391982., 10741438., 10134782., 10482318.,
      8996492.,  9299756.,  7758010.,  8015210.,  6417544.,  6626888.,
      5207880.,  5404424.,  6451338.,  6697402.,  7785772.,  8083148.,
      9212974.,  9563454.,  8857470.,  9206030.,  8485582.,  8832222.,
      7582124.,  7884620.,  6578730.,  6835290.,  5473608.,  5682440.,
      3939024.,  4106320.,  4772324.,  4981188.,  5681848.,  5933816.,
      6669132.,  6965740.,  6193004.,  6486796.,  5700492.,  5991468.,
      5145528.,  5399544.,  4506660.,  4722180.,  3782352.,  3957840.,
      3441240.,  3587480.,  4479550.,  4665550.,  5591620.,  5818660.,
      6778730.,  7048090.,  7059290.,  7333130.,  7339850.,  7618170.,
      6538180.,  6780580.,  5656350.,  5861550.,  4693080.,  4859800.,
      3944928.,  4078304.,  5094040.,  5263320.,  6310352.,  6516560.,
      7594888.,  7839048.,  7844424.,  8092168.,  8093960.,  8345288.,
      7159760.,  7378256.,  6153240.,  6337880.,  5073376.,  5223136.,
      2136288.,  2226656.,  2597464.,  2706840.,  3092048.,  3221456.,
      3621064.,  3771528.,  3420040.,  3565896.,  3202632.,  3343880.,
      2580560.,  2697680.,  2252760.,  2352920.,  1885408.,  1967584.,
      3080728.,  3199832.,  3726958.,  3872894.,  4421092.,  4595140.,
      5164410.,  5367850.,  4904810.,  5104538.,  4628826.,  4824842.,
      3753316.,  3918148.,  3270990.,  3411550.,  2733080.,  2848088.,
      4226896.,  4382928.,  5118852.,  5311588.,  6077304.,  6308280.,
      7103788.,  7374540.,  6798156.,  7066092.,  6476140.,  6741260.,
      5299320.,  5524152.,  4610500.,  4801700.,  3845968.,  4002000.,
      5639304.,  5840456.,  6853786.,  7103562.,  8157452.,  8457644.,
      9552094.,  9904494.,  9212974.,  9563454.,  8857470.,  9206030.,
      7315340.,  7612460.,  6351930.,  6604010.,  5288584.,  5493832.,
      4583752.,  4784392.,  5447690.,  5696826.,  6400556.,  6699980.,
      7444142.,  7795646.,  6990334.,  7339918.,  6520142.,  6867806.,
      5212844.,  5509196.,  4599210.,  4850650.,  3885896.,  4090632.,
      3877384.,  4085704.,  5095290.,  5351978.,  6401868.,  6708716.,
      7798910.,  8157710.,  8049614.,  8406494.,  8283934.,  8638894.,
      7342540.,  7646316.,  6287130.,  6537930.,  5235720.,  5439944.,
      5230280.,  5438088.,  6671082.,  6927130.,  8200300.,  8506380.,
      9819726.,  10177630., 9955742.,  10311726., 10075374., 10429438.,
      8795372.,  9098380.,  7401610.,  7651770.,  6126792.,  6330504.,
      6096336.,  6294352.,  7627684.,  7870852.,  9242424.,  9532280.,
      10942092., 11280172., 10957484., 11292748., 10956492., 11288940.,
      9448504.,  9732216.,  7833060.,  8066500.,  6457808.,  6647632.,
      6373592.,  6553624.,  7838046.,  8058094.,  9376772.,  9638116.,
      10991050., 11294970., 10873274., 11173482., 10739114., 11035610.,
      9147780.,  9399908.,  7459390.,  7665870.,  6136536.,  6304280.,
      5997536.,  6151392.,  7221528.,  7408216.,  8506576.,  8727120.,
      9853704.,  10109128., 9590216.,  9841032.,  9310344.,  9556552.,
      7796432.,  8004688.,  6199960.,  6369240.,  5098464.,  5235936.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     220.,     764.,     826.,     2026.,    1834.,
      3418.,    2842.,    4810.,    3850.,    6202.,    4858.,    7594.,
      5276.,    7356.,    3742.,    4910.,    860.,     2428.,    4600.,
      8248.,    11732.,   17972.,   16052.,   23060.,   20372.,   28148.,
      24692.,   33236.,   29012.,   38324.,   25976.,   32696.,   16476.,
      20092.,   7866.,    12138.,   23892.,   33204.,   48846.,   63966.,
      58782.,   75054.,   68718.,   86142.,   78654.,   97230.,   88590.,
      108318.,  72852.,   86772.,   43578.,   50922.,   26424.,   34680.,
      68848.,   86384.,   128296.,  156136.,  146152.,  175528.,  164008.,
      194920.,  181864.,  214312.,  199720.,  233704.,  156656.,  180336.,
      90424.,   102776.,  60920.,   72760.,   145008.,  169712.,  253288.,
      291880.,  271144.,  311272.,  289000.,  330664.,  306856.,  350056.,
      324712.,  369448.,  247152.,  278000.,  139256.,  155192.,  95416.,
      110840.,  221168.,  253040.,  378280.,  427624.,  396136.,  447016.,
      413992.,  466408.,  431848.,  485800.,  449704.,  505192.,  337648.,
      375664.,  188088.,  207608.,  129912.,  148920.,  297328.,  336368.,
      503272.,  563368.,  521128.,  582760.,  538984.,  602152.,  556840.,
      621544.,  574696.,  640936.,  428144.,  473328.,  236920.,  260024.,
      160458.,  176634.,  352884.,  386004.,  578046.,  628878.,  594894.,
      646878.,  611742.,  664878.,  628590.,  682878.,  645438.,  700878.,
      467892.,  505620.,  253002.,  272250.,  152572.,  164636.,  329016.,
      353656.,  529844.,  567572.,  543380.,  581876.,  556916.,  596180.,
      570452.,  610484.,  583988.,  624788.,  416952.,  444664.,  222460.,
      236572.,  100878.,  107550.,  214972.,  228572.,  342538.,  363322.,
      350458.,  371626.,  358378.,  379930.,  366298.,  388234.,  374218.,
      396538.,  264572.,  279708.,  139918.,  147614.,  990.,     2670.,
      5212.,    8828.,    12922.,   18730.,   23146.,   29338.,   33370.,
      39946.,   43594.,   50554.,   53818.,   61162.,   40988.,   46140.,
      23134.,   25838.,   24284.,   28924.,   57592.,   67384.,   100436.,
      115892.,  123188.,  139412.,  145940.,  162932.,  168692.,  186452.,
      191444.,  209972.,  140408.,  153272.,  76764.,   83452.,   75258.,
      84138.,   167892.,  186420.,  278670.,  307614.,  316254.,  346350.,
      353838.,  385086.,  391422.,  423822.,  429006.,  462558.,  309012.,
      332148.,  166266.,  178218.,  159288.,  173688.,  346864.,  376688.,
      563752.,  610024.,  618472.,  666280.,  673192.,  722536.,  727912.,
      778792.,  782632.,  835048.,  557552.,  593520.,  297016.,  315512.,
      279800.,  297784.,  595056.,  632048.,  946792.,  1003816., 1001512.,
      1060072., 1056232., 1116328., 1110952., 1172584., 1165672., 1228840.,
      820080.,  863216.,  431864.,  453944.,  400312.,  421880.,  843248.,
      887408.,  1329832., 1397608., 1384552., 1453864., 1439272., 1510120.,
      1493992., 1566376., 1548712., 1622632., 1082608., 1132912., 566712.,
      592376.,  520824.,  545976.,  1091440., 1142768., 1712872., 1791400.,
      1767592., 1847656., 1822312., 1903912., 1877032., 1960168., 1931752.,
      2016424., 1345136., 1402608., 701560.,  730808.,  485898.,  506682.,
      1012980., 1055316., 1582014., 1646670., 1626510., 1692318., 1671006.,
      1737966., 1715502., 1783614., 1759998., 1829262., 1220148., 1267092.,
      633738.,  657594.,  391036.,  406172.,  812088.,  842872.,  1263668.,
      1310612., 1295636., 1343348., 1327604., 1376084., 1359572., 1408820.,
      1391540., 1441556., 961464.,  995320.,  497788.,  514972.,  230862.,
      239070.,  478012.,  494684.,  741706.,  767098.,  758842.,  784618.,
      775978.,  802138.,  793114.,  819658.,  810250.,  837178.,  558332.,
      576540.,  288334.,  297566.,  1950.,    5166.,    10204.,   16892.,
      25018.,   35434.,   44458.,   55258.,   63898.,   75082.,   83338.,
      94906.,   102778.,  114730.,  76700.,   84924.,   42526.,   46766.,
      47708.,   55420.,   110584.,  126520.,  189140.,  213812.,  230324.,
      255764.,  271508.,  297716.,  312692.,  339668.,  353876.,  381620.,
      254840.,  273848.,  137052.,  146812.,  142650.,  156138.,  311892.,
      339636.,  508494.,  551262.,  573726.,  617646.,  638958.,  684030.,
      704190.,  750414.,  769422.,  816798.,  545172.,  577524.,  288954.,
      305514.,  292152.,  312696.,  624880.,  666992.,  999208.,  1063912.,
      1090792., 1157032., 1182376., 1250152., 1273960., 1343272., 1365544.,
      1436392., 958448.,  1006704., 503608.,  528248.,  498680.,  522808.,
      1045104., 1094384., 1640296., 1715752., 1731880., 1808872., 1823464.,
      1901992., 1915048., 1995112., 2006632., 2088232., 1393008., 1448432.,
      724472.,  752696.,  705208.,  732920.,  1465328., 1521776., 2281384.,
      2367592., 2372968., 2460712., 2464552., 2553832., 2556136., 2646952.,
      2647720., 2740072., 1827568., 1890160., 945336.,  977144.,  911736.,
      943032.,  1885552., 1949168., 2922472., 3019432., 3014056., 3112552.,
      3105640., 3205672., 3197224., 3298792., 3288808., 3391912., 2262128.,
      2331888., 1166200., 1201592., 811338.,  836730.,  1673076., 1724628.,
      2585982., 2664462., 2658126., 2737758., 2730270., 2811054., 2802414.,
      2884350., 2874558., 2957646., 1972404., 2028564., 1014474., 1042938.,
      629500.,  647708.,  1295160., 1332088., 1997492., 2053652., 2047892.,
      2104820., 2098292., 2155988., 2148692., 2207156., 2199092., 2258324.,
      1505976., 1545976., 773116.,  793372.,  360846.,  370590.,  741052.,
      760796.,  1140874., 1170874., 1167226., 1197610., 1193578., 1224346.,
      1219930., 1251082., 1246282., 1277818., 852092.,  873372.,  436750.,
      447518.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      27344.,   29120.,   30928.,   32768.,   38420.,   40720.,   43060.,
      45440.,   51320.,   54176.,   57080.,   60032.,   66108.,   69552.,
      73052.,   76608.,   72268.,   75824.,   79436.,   83104.,   78428.,
      82096.,   85820.,   89600.,   73976.,   77216.,   80504.,   83840.,
      67380.,   70160.,   72980.,   75840.,   58576.,   60864.,   63184.,
      65536.,   58820.,   61680.,   64580.,   67520.,   80425.,   84100.,
      87825.,   91600.,   104950.,  109480.,  114070.,  118720.,  132475.,
      137900.,  143395.,  148960.,  142135.,  147700.,  153335.,  159040.,
      151795.,  157500.,  163275.,  169120.,  140470.,  145480.,  150550.,
      155680.,  125825.,  130100.,  134425.,  138800.,  107780.,  111280.,
      114820.,  118400.,  108216.,  112416.,  116664.,  120960.,  145470.,
      150840.,  156270.,  161760.,  186996.,  193584.,  200244.,  206976.,
      232890.,  240744.,  248682.,  256704.,  246834.,  254856.,  262962.,
      271152.,  260778.,  268968.,  277242.,  285600.,  238260.,  245424.,
      252660.,  259968.,  210990.,  217080.,  223230.,  229440.,  178872.,
      183840.,  188856.,  193920.,  179564.,  185360.,  191212.,  197120.,
      238595.,  245980.,  253435.,  260960.,  303506.,  312536.,  321650.,
      330848.,  374409.,  385140.,  395969.,  406896.,  393421.,  404348.,
      415373.,  426496.,  412433.,  423556.,  434777.,  446096.,  373394.,
      383096.,  392882.,  402752.,  327915.,  336140.,  344435.,  352800.,
      275884.,  282576.,  289324.,  296128.,  271292.,  278096.,  284956.,
      291872.,  355775.,  364420.,  373135.,  381920.,  447146.,  457688.,
      468314.,  479024.,  545517.,  558012.,  570605.,  583296.,  564529.,
      577220.,  590009.,  602896.,  583541.,  596428.,  609413.,  622496.,
      523082.,  534296.,  545594.,  556976.,  455175.,  464660.,  474215.,
      483840.,  379708.,  387408.,  395164.,  402976.,  363020.,  370832.,
      378700.,  386624.,  472955.,  482860.,  492835.,  502880.,  590786.,
      602840.,  614978.,  627200.,  716625.,  730884.,  745241.,  759696.,
      735637.,  750092.,  764645.,  779296.,  754649.,  769300.,  784049.,
      798896.,  672770.,  685496.,  698306.,  711200.,  582435.,  593180.,
      603995.,  614880.,  483532.,  492240.,  501004.,  509824.,  454748.,
      463568.,  472444.,  481376.,  590135.,  601300.,  612535.,  623840.,
      734426.,  747992.,  761642.,  775376.,  887733.,  903756.,  919877.,
      936096.,  906745.,  922964.,  939281.,  955696.,  925757.,  942172.,
      958685.,  975296.,  822458.,  836696.,  851018.,  865424.,  709695.,
      721700.,  733775.,  745920.,  587356.,  597072.,  606844.,  616672.,
      536280.,  544608.,  552984.,  561408.,  690870.,  701400.,  711990.,
      722640.,  853860.,  866640.,  879492.,  892416.,  1025346., 1040424.,
      1055586., 1070832., 1043994., 1059240., 1074570., 1089984., 1062642.,
      1078056., 1093554., 1109136., 937956.,  951312.,  964740.,  978240.,
      804390.,  815640.,  826950.,  838320.,  661848.,  670944.,  680088.,
      689280.,  575700.,  583280.,  590900.,  598560.,  738325.,  747900.,
      757525.,  767200.,  908590.,  920200.,  931870.,  943600.,  1086575.,
      1100260., 1114015., 1127840., 1104075., 1117900., 1131795., 1145760.,
      1121575., 1135540., 1149575., 1163680., 985870.,  997960.,  1010110.,
      1022320., 842125.,  852300.,  862525.,  872800.,  690260.,  698480.,
      706740.,  715040.,  568976.,  575552.,  582160.,  588800.,  727460.,
      735760.,  744100.,  752480.,  892568.,  902624.,  912728.,  922880.,
      1064364., 1076208., 1088108., 1100064., 1079932., 1091888., 1103900.,
      1115968., 1095500., 1107568., 1119692., 1131872., 960152.,  970592.,
      981080.,  991616.,  817860.,  826640.,  835460.,  844320.,  668560.,
      675648.,  682768.,  689920.,  309584.,  317120.,  324688.,  332288.,
      405620.,  415120.,  424660.,  434240.,  509240.,  520736.,  532280.,
      543872.,  620508.,  634032.,  647612.,  661248.,  626668.,  640304.,
      653996.,  667744.,  632828.,  646576.,  660380.,  674240.,  566456.,
      578336.,  590264.,  602240.,  492180.,  502160.,  512180.,  522240.,
      409936.,  417984.,  426064.,  434176.,  512420.,  522480.,  532580.,
      542720.,  665425.,  678100.,  690825.,  703600.,  828550.,  843880.,
      859270.,  874720.,  1001875., 1019900., 1037995., 1056160., 1011535.,
      1029700., 1047935., 1066240., 1021195., 1039500., 1057875., 1076320.,
      907270.,  923080.,  938950.,  954880.,  782825.,  796100.,  809425.,
      822800.,  647780.,  658480.,  669220.,  680000.,  773496.,  786336.,
      799224.,  812160.,  998670.,  1014840., 1031070., 1047360., 1236756.,
      1256304., 1275924., 1295616., 1487850., 1510824., 1533882., 1557024.,
      1501794., 1524936., 1548162., 1571472., 1515738., 1539048., 1562442.,
      1585920., 1339860., 1359984., 1380180., 1400448., 1150590., 1167480.,
      1184430., 1201440., 947832.,  961440.,  975096.,  988800.,  1096844.,
      1112720., 1128652., 1144640., 1410395., 1430380., 1450435., 1470560.,
      1739906., 1764056., 1788290., 1812608., 2085489., 2113860., 2142329.,
      2170896., 2104501., 2133068., 2161733., 2190496., 2123513., 2152276.,
      2181137., 2210096., 1870274., 1895096., 1920002., 1944992., 1600515.,
      1621340., 1642235., 1663200., 1314124., 1330896., 1347724., 1364608.,
      1188572., 1205456., 1222396., 1239392., 1527575., 1548820., 1570135.,
      1591520., 1883546., 1909208., 1934954., 1960784., 2256597., 2286732.,
      2316965., 2347296., 2275609., 2305940., 2336369., 2366896., 2294621.,
      2325148., 2355773., 2386496., 2019962., 2046296., 2072714., 2099216.,
      1727775., 1749860., 1772015., 1794240., 1417948., 1435728., 1453564.,
      1471456., 1280300., 1298192., 1316140., 1334144., 1644755., 1667260.,
      1689835., 1712480., 2027186., 2054360., 2081618., 2108960., 2427705.,
      2459604., 2491601., 2523696., 2446717., 2478812., 2511005., 2543296.,
      2465729., 2498020., 2530409., 2562896., 2169650., 2197496., 2225426.,
      2253440., 1855035., 1878380., 1901795., 1925280., 1521772., 1540560.,
      1559404., 1578304., 1372028., 1390928., 1409884., 1428896., 1761935.,
      1785700., 1809535., 1833440., 2170826., 2199512., 2228282., 2257136.,
      2598813., 2632476., 2666237., 2700096., 2617825., 2651684., 2685641.,
      2719696., 2636837., 2670892., 2705045., 2739296., 2319338., 2348696.,
      2378138., 2407664., 1982295., 2006900., 2031575., 2056320., 1625596.,
      1645392., 1665244., 1685152., 1443480., 1460448., 1477464., 1494528.,
      1846470., 1867800., 1889190., 1910640., 2266500., 2292240., 2318052.,
      2343936., 2703666., 2733864., 2764146., 2794512., 2722314., 2752680.,
      2783130., 2813664., 2740962., 2771496., 2802114., 2832816., 2402436.,
      2428752., 2455140., 2481600., 2046390., 2068440., 2090550., 2112720.,
      1672728., 1690464., 1708248., 1726080., 1432500., 1447280., 1462100.,
      1476960., 1827325., 1845900., 1864525., 1883200., 2236990., 2259400.,
      2281870., 2304400., 2661575., 2687860., 2714215., 2740640., 2679075.,
      2705500., 2731995., 2758560., 2696575., 2723140., 2749775., 2776480.,
      2357470., 2380360., 2403310., 2426320., 2003125., 2022300., 2041525.,
      2060800., 1633460., 1648880., 1664340., 1679840., 1335056., 1347392.,
      1359760., 1372160., 1699460., 1714960., 1730500., 1746080., 2076248.,
      2094944., 2113688., 2132480., 2465484., 2487408., 2509388., 2531424.,
      2481052., 2503088., 2525180., 2547328., 2496620., 2518768., 2540972.,
      2563232., 2178392., 2197472., 2216600., 2235776., 1847460., 1863440.,
      1879460., 1895520., 1503760., 1516608., 1529488., 1542400., 591824.,
      605120.,  618448.,  631808.,  772820.,  789520.,  806260.,  823040.,
      967160.,  987296.,  1007480., 1027712., 1174908., 1198512., 1222172.,
      1245888., 1181068., 1204784., 1228556., 1252384., 1187228., 1211056.,
      1234940., 1258880., 1058936., 1079456., 1100024., 1120640., 916980.,
      934160.,  951380.,  968640.,  761296.,  775104.,  788944.,  802816.,
      966020.,  983280.,  1000580., 1017920., 1250425., 1272100., 1293825.,
      1315600., 1552150., 1578280., 1604470., 1630720., 1871275., 1901900.,
      1932595., 1963360., 1880935., 1911700., 1942535., 1973440., 1890595.,
      1921500., 1952475., 1983520., 1674070., 1700680., 1727350., 1754080.,
      1439825., 1462100., 1484425., 1506800., 1187780., 1205680., 1223620.,
      1241600., 1438776., 1460256., 1481784., 1503360., 1851870., 1878840.,
      1905870., 1932960., 2286516., 2319024., 2351604., 2384256., 2742810.,
      2780904., 2819082., 2857344., 2756754., 2795016., 2833362., 2871792.,
      2770698., 2809128., 2847642., 2886240., 2441460., 2474544., 2507700.,
      2540928., 2090190., 2117880., 2145630., 2173440., 1716792., 1739040.,
      1761336., 1783680., 2014124., 2040080., 2066092., 2092160., 2582195.,
      2614780., 2647435., 2680160., 3176306., 3215576., 3254930., 3294368.,
      3796569., 3842580., 3888689., 3934896., 3815581., 3861788., 3908093.,
      3954496., 3834593., 3880996., 3927497., 3974096., 3367154., 3407096.,
      3447122., 3487232., 2873115., 2906540., 2940035., 2973600., 2352364.,
      2379216., 2406124., 2433088., 2105852., 2132816., 2159836., 2186912.,
      2699375., 2733220., 2767135., 2801120., 3319946., 3360728., 3401594.,
      3442544., 3967677., 4015452., 4063325., 4111296., 3986689., 4034660.,
      4082729., 4130896., 4005701., 4053868., 4102133., 4150496., 3516842.,
      3558296., 3599834., 3641456., 3000375., 3035060., 3069815., 3104640.,
      2456188., 2484048., 2511964., 2539936., 2197580., 2225552., 2253580.,
      2281664., 2816555., 2851660., 2886835., 2922080., 3463586., 3505880.,
      3548258., 3590720., 4138785., 4188324., 4237961., 4287696., 4157797.,
      4207532., 4257365., 4307296., 4176809., 4226740., 4276769., 4326896.,
      3666530., 3709496., 3752546., 3795680., 3127635., 3163580., 3199595.,
      3235680., 2560012., 2588880., 2617804., 2646784., 2289308., 2318288.,
      2347324., 2376416., 2933735., 2970100., 3006535., 3043040., 3607226.,
      3651032., 3694922., 3738896., 4309893., 4361196., 4412597., 4464096.,
      4328905., 4380404., 4432001., 4483696., 4347917., 4399612., 4451405.,
      4503296., 3816218., 3860696., 3905258., 3949904., 3254895., 3292100.,
      3329375., 3366720., 2663836., 2693712., 2723644., 2753632., 2350680.,
      2376288., 2401944., 2427648., 3002070., 3034200., 3066390., 3098640.,
      3679140., 3717840., 3756612., 3795456., 4381986., 4427304., 4472706.,
      4518192., 4400634., 4446120., 4491690., 4537344., 4419282., 4464936.,
      4510674., 4556496., 3866916., 3906192., 3945540., 3984960., 3288390.,
      3321240., 3354150., 3387120., 2683608., 2709984., 2736408., 2762880.,
      2289300., 2311280., 2333300., 2355360., 2916325., 2943900., 2971525.,
      2999200., 3565390., 3598600., 3631870., 3665200., 4236575., 4275460.,
      4314415., 4353440., 4254075., 4293100., 4332195., 4371360., 4271575.,
      4310740., 4349975., 4389280., 3729070., 3762760., 3796510., 3830320.,
      3164125., 3192300., 3220525., 3248800., 2576660., 2599280., 2621940.,
      2644640., 2101136., 2119232., 2137360., 2155520., 2671460., 2694160.,
      2716900., 2739680., 3259928., 3287264., 3314648., 3342080., 3866604.,
      3898608., 3930668., 3962784., 3882172., 3914288., 3946460., 3978688.,
      3897740., 3929968., 3962252., 3994592., 3396632., 3424352., 3452120.,
      3479936., 2877060., 2900240., 2923460., 2946720., 2338960., 2357568.,
      2376208., 2394880.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,      4.,      9.,      16.,     10.,     24.,     42.,     64.,
      43.,     76.,     115.,    160.,    103.,    148.,    199.,    256.,
      163.,    220.,    283.,    352.,    223.,    292.,    367.,    448.,
      283.,    364.,    451.,    544.,    314.,    376.,    442.,    512.,
      225.,    260.,    297.,    336.,    42.,     88.,     138.,    192.,
      260.,    368.,    484.,    608.,    686.,    872.,    1070.,   1280.,
      950.,    1160.,   1382.,   1616.,   1214.,   1448.,   1694.,   1952.,
      1478.,   1736.,   2006.,   2288.,   1742.,   2024.,   2318.,   2624.,
      1572.,   1776.,   1988.,   2208.,   1002.,   1112.,   1226.,   1344.,
      459.,    588.,    723.,    864.,    1422.,   1704.,   1998.,   2304.,
      2937.,   3396.,   3873.,   4368.,   3549.,   4044.,   4557.,   5088.,
      4161.,   4692.,   5241.,   5808.,   4773.,   5340.,   5925.,   6528.,
      5385.,   5988.,   6609.,   7248.,   4446.,   4872.,   5310.,   5760.,
      2667.,   2892.,   3123.,   3360.,   1588.,   1840.,   2100.,   2368.,
      4168.,   4704.,   5256.,   5824.,   7804.,   8656.,   9532.,   10432.,
      8908.,   9808.,   10732.,  11680.,  10012.,  10960.,  11932.,  12928.,
      11116.,  12112.,  13132.,  14176.,  12220.,  13264.,  14332.,  15424.,
      9608.,   10336.,  11080.,  11840.,  5556.,   5936.,   6324.,   6720.,
      3716.,   4080.,   4452.,   4832.,   8872.,   9632.,   10408.,  11200.,
      15532.,  16720.,  17932.,  19168.,  16636.,  17872.,  19132.,  20416.,
      17740.,  19024.,  20332.,  21664.,  18844.,  20176.,  21532.,  22912.,
      19948.,  21328.,  22732.,  24160.,  15208.,  16160.,  17128.,  18112.,
      8580.,   9072.,   9572.,   10080.,  5844.,   6320.,   6804.,   7296.,
      13576.,  14560.,  15560.,  16576.,  23260.,  24784.,  26332.,  27904.,
      24364.,  25936.,  27532.,  29152.,  25468.,  27088.,  28732.,  30400.,
      26572.,  28240.,  29932.,  31648.,  27676.,  29392.,  31132.,  32896.,
      20808.,  21984.,  23176.,  24384.,  11604.,  12208.,  12820.,  13440.,
      7972.,   8560.,   9156.,   9760.,   18280.,  19488.,  20712.,  21952.,
      30988.,  32848.,  34732.,  36640.,  32092.,  34000.,  35932.,  37888.,
      33196.,  35152.,  37132.,  39136.,  34300.,  36304.,  38332.,  40384.,
      35404.,  37456.,  39532.,  41632.,  26408.,  27808.,  29224.,  30656.,
      14628.,  15344.,  16068.,  16800.,  9903.,   10404.,  10911.,  11424.,
      21798.,  22824.,  23862.,  24912.,  35733.,  37308.,  38901.,  40512.,
      36777.,  38388.,  40017.,  41664.,  37821.,  39468.,  41133.,  42816.,
      38865.,  40548.,  42249.,  43968.,  39909.,  41628.,  43365.,  45120.,
      28950.,  30120.,  31302.,  32496.,  15663.,  16260.,  16863.,  17472.,
      9442.,   9816.,   10194.,  10576.,  20372.,  21136.,  21908.,  22688.,
      32822.,  33992.,  35174.,  36368.,  33662.,  34856.,  36062.,  37280.,
      34502.,  35720.,  36950.,  38192.,  35342.,  36584.,  37838.,  39104.,
      36182.,  37448.,  38726.,  40016.,  25844.,  26704.,  27572.,  28448.,
      13794.,  14232.,  14674.,  15120.,  6253.,   6460.,   6669.,   6880.,
      13330.,  13752.,  14178.,  14608.,  21247.,  21892.,  22543.,  23200.,
      21739.,  22396.,  23059.,  23728.,  22231.,  22900.,  23575.,  24256.,
      22723.,  23404.,  24091.,  24784.,  23215.,  23908.,  24607.,  25312.,
      16418.,  16888.,  17362.,  17840.,  8685.,   8924.,   9165.,   9408.,
      49.,     100.,    153.,    208.,    298.,    408.,    522.,    640.,
      763.,    940.,    1123.,   1312.,   1399.,   1588.,   1783.,   1984.,
      2035.,   2236.,   2443.,   2656.,   2671.,   2884.,   3103.,   3328.,
      3307.,   3532.,   3763.,   4000.,   2522.,   2680.,   2842.,   3008.,
      1425.,   1508.,   1593.,   1680.,   1482.,   1624.,   1770.,   1920.,
      3524.,   3824.,   4132.,   4448.,   6158.,   6632.,   7118.,   7616.,
      7574.,   8072.,   8582.,   9104.,   8990.,   9512.,   10046.,  10592.,
      10406.,  10952.,  11510.,  12080.,  11822.,  12392.,  12974.,  13568.,
      8676.,   9072.,   9476.,   9888.,   4746.,   4952.,   5162.,   5376.,
      4635.,   4908.,   5187.,   5472.,   10350.,  10920.,  11502.,  12096.,
      17193.,  18084.,  18993.,  19920.,  19533.,  20460.,  21405.,  22368.,
      21873.,  22836.,  23817.,  24816.,  24213.,  25212.,  26229.,  27264.,
      26553.,  27588.,  28641.,  29712.,  19134.,  19848.,  20574.,  21312.,
      10299.,  10668.,  11043.,  11424.,  9844.,   10288.,  10740.,  11200.,
      21448.,  22368.,  23304.,  24256.,  34876.,  36304.,  37756.,  39232.,
      38284.,  39760.,  41260.,  42784.,  41692.,  43216.,  44764.,  46336.,
      45100.,  46672.,  48268.,  49888.,  48508.,  50128.,  51772.,  53440.,
      34568.,  35680.,  36808.,  37952.,  18420.,  18992.,  19572.,  20160.,
      17348.,  17904.,  18468.,  19040.,  36904.,  38048.,  39208.,  40384.,
      58732.,  60496.,  62284.,  64096.,  62140.,  63952.,  65788.,  67648.,
      65548.,  67408.,  69292.,  71200.,  68956.,  70864.,  72796.,  74752.,
      72364.,  74320.,  76300.,  78304.,  50920.,  52256.,  53608.,  54976.,
      26820.,  27504.,  28196.,  28896.,  24852.,  25520.,  26196.,  26880.,
      52360.,  53728.,  55112.,  56512.,  82588.,  84688.,  86812.,  88960.,
      85996.,  88144.,  90316.,  92512.,  89404.,  91600.,  93820.,  96064.,
      92812.,  95056.,  97324.,  99616.,  96220.,  98512.,  100828., 103168.,
      67272.,  68832.,  70408.,  72000.,  35220.,  36016.,  36820.,  37632.,
      32356.,  33136.,  33924.,  34720.,  67816.,  69408.,  71016.,  72640.,
      106444., 108880., 111340., 113824., 109852., 112336., 114844., 117376.,
      113260., 115792., 118348., 120928., 116668., 119248., 121852., 124480.,
      120076., 122704., 125356., 128032., 83624.,  85408.,  87208.,  89024.,
      43620.,  44528.,  45444.,  46368.,  30207.,  30852.,  31503.,  32160.,
      62982.,  64296.,  65622.,  66960.,  98373.,  100380., 102405., 104448.,
      101145., 103188., 105249., 107328., 103917., 105996., 108093., 110208.,
      106689., 108804., 110937., 113088., 109461., 111612., 113781., 115968.,
      75894.,  77352.,  78822.,  80304.,  39423.,  40164.,  40911.,  41664.,
      24322.,  24792.,  25266.,  25744.,  50516.,  51472.,  52436.,  53408.,
      78614.,  80072.,  81542.,  83024.,  80606.,  82088.,  83582.,  85088.,
      82598.,  84104.,  85622.,  87152.,  84590.,  86120.,  87662.,  89216.,
      86582.,  88136.,  89702.,  91280.,  59828.,  60880.,  61940.,  63008.,
      30978.,  31512.,  32050.,  32592.,  14365.,  14620.,  14877.,  15136.,
      29746.,  30264.,  30786.,  31312.,  46159.,  46948.,  47743.,  48544.,
      47227.,  48028.,  48835.,  49648.,  48295.,  49108.,  49927.,  50752.,
      49363.,  50188.,  51019.,  51856.,  50431.,  51268.,  52111.,  52960.,
      34754.,  35320.,  35890.,  36464.,  17949.,  18236.,  18525.,  18816.,
      97.,     196.,    297.,    400.,    586.,    792.,    1002.,   1216.,
      1483.,   1804.,   2131.,   2464.,   2695.,   3028.,   3367.,   3712.,
      3907.,   4252.,   4603.,   4960.,   5119.,   5476.,   5839.,   6208.,
      6331.,   6700.,   7075.,   7456.,   4730.,   4984.,   5242.,   5504.,
      2625.,   2756.,   2889.,   3024.,   2922.,   3160.,   3402.,   3648.,
      6788.,   7280.,   7780.,   8288.,   11630.,  12392.,  13166.,  13952.,
      14198.,  14984.,  15782.,  16592.,  16766.,  17576.,  18398.,  19232.,
      19334.,  20168.,  21014.,  21872.,  21902.,  22760.,  23630.,  24512.,
      15780.,  16368.,  16964.,  17568.,  8490.,   8792.,   9098.,   9408.,
      8811.,   9228.,   9651.,   10080.,  19278.,  20136.,  21006.,  21888.,
      31449.,  32772.,  34113.,  35472.,  35517.,  36876.,  38253.,  39648.,
      39585.,  40980.,  42393.,  43824.,  43653.,  45084.,  46533.,  48000.,
      47721.,  49188.,  50673.,  52176.,  33822.,  34824.,  35838.,  36864.,
      17931.,  18444.,  18963.,  19488.,  18100.,  18736.,  19380.,  20032.,
      38728.,  40032.,  41352.,  42688.,  61948.,  63952.,  65980.,  68032.,
      67660.,  69712.,  71788.,  73888.,  73372.,  75472.,  77596.,  79744.,
      79084.,  81232.,  83404.,  85600.,  84796.,  86992.,  89212.,  91456.,
      59528.,  61024.,  62536.,  64064.,  31284.,  32048.,  32820.,  33600.,
      30980.,  31728.,  32484.,  33248.,  64936.,  66464.,  68008.,  69568.,
      101932., 104272., 106636., 109024., 107644., 110032., 112444., 114880.,
      113356., 115792., 118252., 120736., 119068., 121552., 124060., 126592.,
      124780., 127312., 129868., 132448., 86632.,  88352.,  90088.,  91840.,
      45060.,  45936.,  46820.,  47712.,  43860.,  44720.,  45588.,  46464.,
      91144.,  92896.,  94664.,  96448.,  141916., 144592., 147292., 150016.,
      147628., 150352., 153100., 155872., 153340., 156112., 158908., 161728.,
      159052., 161872., 164716., 167584., 164764., 167632., 170524., 173440.,
      113736., 115680., 117640., 119616., 58836.,  59824.,  60820.,  61824.,
      56740.,  57712.,  58692.,  59680.,  117352., 119328., 121320., 123328.,
      181900., 184912., 187948., 191008., 187612., 190672., 193756., 196864.,
      193324., 196432., 199564., 202720., 199036., 202192., 205372., 208576.,
      204748., 207952., 211180., 214432., 140840., 143008., 145192., 147392.,
      72612.,  73712.,  74820.,  75936.,  50511.,  51300.,  52095.,  52896.,
      104166., 105768., 107382., 109008., 161013., 163452., 165909., 168384.,
      165513., 167988., 170481., 172992., 170013., 172524., 175053., 177600.,
      174513., 177060., 179625., 182208., 179013., 181596., 184197., 186816.,
      122838., 124584., 126342., 128112., 63183.,  64068.,  64959.,  65856.,
      39202.,  39768.,  40338.,  40912.,  80660.,  81808.,  82964.,  84128.,
      124406., 126152., 127910., 129680., 127550., 129320., 131102., 132896.,
      130694., 132488., 134294., 136112., 133838., 135656., 137486., 139328.,
      136982., 138824., 140678., 142544., 93812.,  95056.,  96308.,  97568.,
      48162.,  48792.,  49426.,  50064.,  22477.,  22780.,  23085.,  23392.,
      46162.,  46776.,  47394.,  48016.,  71071.,  72004.,  72943.,  73888.,
      72715.,  73660.,  74611.,  75568.,  74359.,  75316.,  76279.,  77248.,
      76003.,  76972.,  77947.,  78928.,  77647.,  78628.,  79615.,  80608.,
      53090.,  53752.,  54418.,  55088.,  27213.,  27548.,  27885.,  28224.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      215248.,   229392.,   243792.,   258448.,   302820.,   321140.,
      339780.,   358740.,   404920.,   427672.,   450808.,   474328.,
      522060.,   549500.,   577388.,   605724.,   571116.,   599452.,
      628236.,   657468.,   620172.,   649404.,   679084.,   709212.,
      585400.,   611224.,   637432.,   664024.,   533540.,   555700.,
      578180.,   600980.,   464080.,   482320.,   500816.,   519568.,
      464900.,   487700.,   510820.,   534260.,   636125.,   665425.,
      695125.,   725225.,   830630.,   866750.,   903350.,   940430.,
      1049055.,  1092315.,  1136135.,  1180515.,  1126055.,  1170435.,
      1215375.,  1260875.,  1203055.,  1248555.,  1294615.,  1341235.,
      1113830.,  1153790.,  1194230.,  1235150.,  998125.,   1032225.,
      1066725.,  1101625.,  855300.,   883220.,   911460.,   940020.,
      857400.,   890904.,   924792.,   959064.,   1153110.,  1195950.,
      1239270.,  1283070.,  1482900.,  1535460.,  1588596.,  1642308.,
      1847538.,  1910202.,  1973538.,  2037546.,  1958754.,  2022762.,
      2087442.,  2152794.,  2069970.,  2135322.,  2201346.,  2268042.,
      1891860.,  1949028.,  2006772.,  2065092.,  1675830.,  1724430.,
      1773510.,  1823070.,  1421112.,  1460760.,  1500792.,  1541208.,
      1425004.,  1471260.,  1517964.,  1565116.,  1894095.,  1953035.,
      2012535.,  2072595.,  2410114.,  2482186.,  2554930.,  2628346.,
      2973957.,  3059609.,  3146045.,  3233265.,  3125661.,  3212881.,
      3300885.,  3389673.,  3277365.,  3366153.,  3455725.,  3546081.,
      2967874.,  3045322.,  3123442.,  3202234.,  2606975.,  2672635.,
      2738855.,  2805635.,  2193772.,  2247196.,  2301068.,  2355388.,
      2156812.,  2211132.,  2265900.,  2321116.,  2829015.,  2898035.,
      2967615.,  3037755.,  3556210.,  3640378.,  3725218.,  3810730.,
      4339293.,  4439057.,  4539605.,  4640937.,  4490997.,  4592329.,
      4694445.,  4797345.,  4642701.,  4745601.,  4849285.,  4953753.,
      4162354.,  4251898.,  4342114.,  4433002.,  3622535.,  3698275.,
      3774575.,  3851435.,  3022348.,  3083836.,  3145772.,  3208156.,
      2888620.,  2951004.,  3013836.,  3077116.,  3763935.,  3843035.,
      3922695.,  4002915.,  4702306.,  4798570.,  4895506.,  4993114.,
      5704629.,  5818505.,  5933165.,  6048609.,  5856333.,  5971777.,
      6088005.,  6205017.,  6008037.,  6125049.,  6242845.,  6361425.,
      5356834.,  5458474.,  5560786.,  5663770.,  4638095.,  4723915.,
      4810295.,  4897235.,  3850924.,  3920476.,  3990476.,  4060924.,
      3620428.,  3690876.,  3761772.,  3833116.,  4698855.,  4788035.,
      4877775.,  4968075.,  5848402.,  5956762.,  6065794.,  6175498.,
      7069965.,  7197953.,  7326725.,  7456281.,  7221669.,  7351225.,
      7481565.,  7612689.,  7373373.,  7504497.,  7636405.,  7769097.,
      6551314.,  6665050.,  6779458.,  6894538.,  5653655.,  5749555.,
      5846015.,  5943035.,  4679500.,  4757116.,  4835180.,  4913692.,
      4273656.,  4340184.,  4407096.,  4474392.,  5505990.,  5590110.,
      5674710.,  5759790.,  6805428.,  6907524.,  7010196.,  7113444.,
      8172738.,  8293194.,  8414322.,  8536122.,  8321586.,  8443386.,
      8565858.,  8689002.,  8470434.,  8593578.,  8717394.,  8841882.,
      7477044.,  7583748.,  7691028.,  7798884.,  6412710.,  6502590.,
      6592950.,  6683790.,  5276664.,  5349336.,  5422392.,  5495832.,
      4590500.,  4651060.,  4711940.,  4773140.,  5887525.,  5964025.,
      6040925.,  6118225.,  7245590.,  7338350.,  7431590.,  7525310.,
      8665335.,  8774675.,  8884575.,  8995035.,  8805055.,  8915515.,
      9026535.,  9138115.,  8944775.,  9056355.,  9168495.,  9281195.,
      7862870.,  7959470.,  8056550.,  8154110.,  6716725.,  6798025.,
      6879725.,  6961825.,  5505700.,  5571380.,  5637380.,  5703700.,
      4538704.,  4591248.,  4644048.,  4697104.,  5803140.,  5869460.,
      5936100.,  6003060.,  7120504.,  7200856.,  7281592.,  7362712.,
      8491308.,  8585948.,  8681036.,  8776572.,  8615628.,  8711164.,
      8807148.,  8903580.,  8739948.,  8836380.,  8933260.,  9030588.,
      7660408.,  7743832.,  7827640.,  7911832.,  6525380.,  6595540.,
      6666020.,  6736820.,  5334352.,  5390992.,  5447888.,  5505040.,
      2461648.,  2521872.,  2582352.,  2643088.,  3226020.,  3301940.,
      3378180.,  3454740.,  4051000.,  4142872.,  4235128.,  4327768.,
      4937100.,  5045180.,  5153708.,  5262684.,  4986156.,  5095132.,
      5204556.,  5314428.,  5035212.,  5145084.,  5255404.,  5366172.,
      4507960.,  4602904.,  4698232.,  4793944.,  3917540.,  3997300.,
      4077380.,  4157780.,  3263440.,  3327760.,  3392336.,  3457168.,
      4056772.,  4128980.,  4201508.,  4274356.,  5239757.,  5328769.,
      5418181.,  5507993.,  6487238.,  6593374.,  6699990.,  6807086.,
      7799855.,  7923435.,  8047575.,  8172275.,  7791863.,  7912467.,
      8033631.,  8155355.,  7767487.,  7885115.,  8003303.,  8122051.,
      6864134.,  6965918.,  7068182.,  7170926.,  5893085.,  5978705.,
      6064725.,  6151145.,  4853700.,  4922836.,  4992292.,  5062068.,
      5799864.,  5877912.,  5956344.,  6035160.,  7375478.,  7471950.,
      7568902.,  7666334.,  9021524.,  9136804.,  9252660.,  9369092.,
      10738770., 10873242., 11008386., 11144202., 10650306., 10782026.,
      10914418., 11047482., 10545458., 10674426., 10804066., 10934378.,
      9265620.,  9377316.,  9489588.,  9602436.,  7911510.,  8005550.,
      8100070.,  8195070.,  6482360.,  6558360.,  6634744.,  6711512.,
      7581868.,  7667804.,  7754188.,  7841020.,  9564959.,  9671451.,
      9778503.,  9886115.,  11626466., 11753962., 11882130., 12010970.,
      13767285., 13916233., 14065965., 14216481., 13604621., 13751041.,
      13898245., 14046233., 13425573., 13569465., 13714141., 13859601.,
      11760802., 11885482., 12010834., 12136858., 10013135., 10118155.,
      10223735., 10329875., 8181676.,  8266588.,  8351948.,  8437756.,
      7056204.,  7133820.,  7211884.,  7290396.,  8829735.,  8925827.,
      9022479.,  9119691.,  10673362., 10788378., 10904066., 11020426.,
      12587981., 12722369., 12857541., 12993497., 12310629., 12442489.,
      12575133., 12708561., 12016893., 12146225., 12276341., 12407241.,
      10528402., 10640602., 10753474., 10867018., 8965335.,  9059955.,
      9155135.,  9250875.,  7326796.,  7403388.,  7480428.,  7557916.,
      6071788.,  6141084.,  6210828.,  6281020.,  7521071.,  7606763.,
      7693015.,  7779827.,  9032130.,  9134666.,  9237874.,  9341754.,
      10605861., 10725689., 10846301., 10967697., 10213821., 10331121.,
      10449205., 10568073., 9805397.,  9920169.,  10035725., 10152065.,
      8607874.,  8707594.,  8807986.,  8909050.,  7344095.,  7428315.,
      7513095.,  7598435.,  6013164.,  6081436.,  6150156.,  6219324.,
      4628620.,  4689596.,  4751020.,  4812892.,  5638967.,  5714259.,
      5790111.,  5866523.,  6702770.,  6792826.,  6883554.,  6974954.,
      7820925.,  7926193.,  8032245.,  8139081.,  7314197.,  7416937.,
      7520461.,  7624769.,  6791085.,  6891297.,  6992293.,  7094073.,
      5999218.,  6086458.,  6174370.,  6262954.,  5149415.,  5223235.,
      5297615.,  5372555.,  4240780.,  4300732.,  4361132.,  4421980.,
      2680952.,  2726488.,  2772408.,  2818712.,  3108838.,  3164670.,
      3220982.,  3277774.,  3574644.,  3641156.,  3708244.,  3775908.,
      4079138.,  4156714.,  4234962.,  4313882.,  3454866.,  3529690.,
      3605186.,  3681354.,  2814210.,  2886282.,  2959026.,  3032442.,
      2541300.,  2604228.,  2667732.,  2731812.,  2226630.,  2280030.,
      2333910.,  2388270.,  1869432.,  1912920.,  1956792.,  2001048.,
      1702500.,  1738740.,  1775300.,  1812180.,  2216725.,  2262825.,
      2309325.,  2356225.,  2767670.,  2823950.,  2880710.,  2937950.,
      3355975.,  3422755.,  3490095.,  3557995.,  3495695.,  3563595.,
      3632055.,  3701075.,  3635415.,  3704435.,  3774015.,  3844155.,
      3239030.,  3299150.,  3359750.,  3420830.,  2802725.,  2853625.,
      2904925.,  2956625.,  2325860.,  2367220.,  2408900.,  2450900.,
      1955920.,  1989008.,  2022352.,  2055952.,  2526020.,  2568020.,
      2610340.,  2652980.,  3129592.,  3180760.,  3232312.,  3284248.,
      3767148.,  3827740.,  3888780.,  3950268.,  3891468.,  3952956.,
      4014892.,  4077276.,  4015788.,  4078172.,  4141004.,  4204284.,
      3552760.,  3607000.,  3661624.,  3716632.,  3053700.,  3099540.,
      3145700.,  3192180.,  2518096.,  2555280.,  2592720.,  2630416.,
      1513168.,  1553936.,  1594960.,  1636240.,  1991780.,  2043380.,
      2095300.,  2147540.,  2511544.,  2574232.,  2637304.,  2700760.,
      3072972.,  3147004.,  3221484.,  3296412.,  3122028.,  3196956.,
      3272332.,  3348156.,  3171084.,  3246908.,  3323180.,  3399900.,
      2851768.,  2917528.,  2983672.,  3050200.,  2488740.,  2544180.,
      2599940.,  2656020.,  2081488.,  2126352.,  2171472.,  2216848.,
      2553220.,  2609300.,  2665700.,  2722420.,  3329725.,  3400625.,
      3471925.,  3543625.,  4162790.,  4248830.,  4335350.,  4422350.,
      5053055.,  5154555.,  5256615.,  5359235.,  5130055.,  5232675.,
      5335855.,  5439595.,  5207055.,  5310795.,  5415095.,  5519955.,
      4645670.,  4735550.,  4825910.,  4916750.,  4024525.,  4100225.,
      4176325.,  4252825.,  3342980.,  3404180.,  3465700.,  3527540.,
      3922488.,  3995928.,  4069752.,  4143960.,  5084310.,  5177070.,
      5270310.,  5364030.,  6320148.,  6432612.,  6545652.,  6659268.,
      7630770.,  7763322.,  7896546.,  8030442.,  7741986.,  7875882.,
      8010450.,  8145690.,  7853202.,  7988442.,  8124354.,  8260938.,
      6968724.,  7085796.,  7203444.,  7321668.,  6006390.,  6104910.,
      6203910.,  6303390.,  4965432.,  5045016.,  5124984.,  5205336.,
      5653228.,  5746076.,  5839372.,  5933116.,  7295855.,  7413035.,
      7530775.,  7649075.,  9032002.,  9173962.,  9316594.,  9459898.,
      10862565., 11029753., 11197725., 11366481., 11014269., 11183025.,
      11352565., 11522889., 11165973., 11336297., 11507405., 11679297.,
      9869314.,  10016650., 10164658., 10313338., 8474655.,  8598555.,
      8723015.,  8848035.,  6981100.,  7081116.,  7181580.,  7282492.,
      6385036.,  6485948.,  6587308.,  6689116.,  8230775.,  8358035.,
      8485855.,  8614235.,  10178098., 10332154., 10486882., 10642282.,
      12227901., 12409201., 12591285., 12774153., 12379605., 12562473.,
      12746125., 12930561., 12531309., 12715745., 12900965., 13086969.,
      11063794., 11223226., 11383330., 11544106., 9490215.,  9624195.,
      9758735.,  9893835.,  7809676.,  7917756.,  8026284.,  8135260.,
      7116844.,  7225820.,  7335244.,  7445116.,  9162623.,  9295867.,
      9429671.,  9564035.,  11301666., 11459626., 11618258., 11777562.,
      13534869., 13717993., 13901901., 14086593., 13634349., 13814945.,
      13996325., 14178489., 13717445., 13895513., 14074365., 14254001.,
      11997154., 12148202., 12299922., 12452314., 10162735., 10286315.,
      10410455., 10535155., 8331052.,  8430812.,  8531020.,  8631676.,
      7738060.,  7838716.,  7939820.,  8041372.,  9803655.,  9926499.,
      10049903., 10173867., 11954194., 12099674., 12245826., 12392650.,
      14190573., 14359137., 14528485., 14698617., 14175365., 14341401.,
      14508221., 14675825., 14143773., 14307281., 14471573., 14636649.,
      12255698., 12394266., 12533506., 12673418., 10261815., 10374995.,
      10488735., 10603035., 8393676.,  8485116.,  8577004.,  8669340.,
      7887608.,  7977688.,  8068152.,  8159000.,  9849862.,  9959326.,
      10069270., 10179694., 11886388., 12015620., 12145428., 12275812.,
      13997954., 14147338., 14297394., 14448122., 13865202., 14011834.,
      14159138., 14307114., 13716066., 13859946., 14004498., 14149722.,
      11772596., 11894148., 12016276., 12138980., 9734630.,  9833470.,
      9932790.,  10032590., 7948536.,  8028376.,  8108600.,  8189208.,
      7514404.,  7591860.,  7669636.,  7747732.,  9237509.,  9331033.,
      9424957.,  9519281.,  11022166., 11132078., 11242470., 11353342.,
      12869015., 12995635., 13122815., 13250555., 12612447., 12736091.,
      12860295., 12985059., 12339495., 12460163., 12581391., 12703179.,
      10470038., 10571502., 10673446., 10775870., 8519445.,  8601385.,
      8683725.,  8766465.,  6948900.,  7015092.,  7081604.,  7148436.,
      6586192.,  6648976.,  6712016.,  6775312.,  7926276.,  8001300.,
      8076644.,  8152308.,  9313144.,  9400664.,  9488568.,  9576856.,
      10747308., 10847580., 10948300., 11049468., 10360652., 10457724.,
      10555244., 10653212., 9957612.,  10051484., 10145804., 10240572.,
      8299640.,  8377944.,  8456632.,  8535704.,  6575940.,  6638420.,
      6701220.,  6764340.,  5362512.,  5413008.,  5463760.,  5514768.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,       25.,      61.,      113.,     58.,      162.,     298.,
      466.,     287.,     539.,     839.,     1187.,    743.,     1091.,
      1487.,    1931.,    1199.,    1643.,    2135.,    2675.,    1655.,
      2195.,    2783.,    3419.,    2111.,    2747.,    3431.,    4163.,
      2394.,    2882.,    3402.,    3954.,    1733.,    2009.,    2301.,
      2609.,    250.,     610.,     1002.,    1426.,    1876.,    2724.,
      3636.,    4612.,    5134.,    6598.,    8158.,    9814.,    7198.,
      8854.,    10606.,   12454.,   9262.,    11110.,   13054.,   15094.,
      11326.,   13366.,   15502.,   17734.,   13390.,   15622.,   17950.,
      20374.,   12180.,   13796.,   15476.,   17220.,   7802.,    8674.,
      9578.,    10514.,   3423.,    4443.,    5511.,    6627.,    10830.,
      13062.,   15390.,   17814.,   22605.,   26241.,   30021.,   33945.,
      27429.,   31353.,   35421.,   39633.,   32253.,   36465.,   40821.,
      45321.,   37077.,   41577.,   46221.,   51009.,   41901.,   46689.,
      51621.,   56697.,   34734.,   38118.,   41598.,   45174.,   20895.,
      22683.,   24519.,   26403.,   12212.,   14212.,   16276.,   18404.,
      32296.,   36552.,   40936.,   45448.,   60764.,   67532.,   74492.,
      81644.,   69500.,   76652.,   83996.,   91532.,   78236.,   85772.,
      93500.,   101420.,  86972.,   94892.,   103004.,  111308.,  95708.,
      104012.,  112508.,  121196.,  75432.,   81224.,   87144.,   93192.,
      43700.,   46724.,   49812.,   52964.,   29012.,   31908.,   34868.,
      37892.,   69480.,   75528.,   81704.,   88008.,   121916.,  131372.,
      141020.,  150860.,  130652.,  140492.,  150524.,  160748.,  139388.,
      149612.,  160028.,  170636.,  148124.,  158732.,  169532.,  180524.,
      156860.,  167852.,  179036.,  190412.,  119784.,  127368.,  135080.,
      142920.,  67668.,   71588.,   75572.,   79620.,   45812.,   49604.,
      53460.,   57380.,   106664.,  114504.,  122472.,  130568.,  183068.,
      195212.,  207548.,  220076.,  191804.,  204332.,  217052.,  229964.,
      200540.,  213452.,  226556.,  239852.,  209276.,  222572.,  236060.,
      249740.,  218012.,  231692.,  245564.,  259628.,  164136.,  173512.,
      183016.,  192648.,  91636.,   96452.,   101332.,  106276.,  62612.,
      67300.,   72052.,   76868.,   143848.,  153480.,  163240.,  173128.,
      244220.,  259052.,  274076.,  289292.,  252956.,  268172.,  283580.,
      299180.,  261692.,  277292.,  293084.,  309068.,  270428.,  286412.,
      302588.,  318956.,  279164.,  295532.,  312092.,  328844.,  208488.,
      219656.,  230952.,  242376.,  115604.,  121316.,  127092.,  132932.,
      78231.,   82227.,   86271.,   90363.,   172350.,  180534.,  188814.,
      197190.,  282741.,  295305.,  308013.,  320865.,  291021.,  303873.,
      316869.,  330009.,  299301.,  312441.,  325725.,  339153.,  307581.,
      321009.,  334581.,  348297.,  315861.,  329577.,  343437.,  357441.,
      229278.,  238614.,  248046.,  257574.,  124119.,  128883.,  133695.,
      138555.,  74794.,   77778.,   80794.,   83842.,   161460.,  167556.,
      173716.,  179940.,  260254.,  269590.,  279022.,  288550.,  266926.,
      276454.,  286078.,  295798.,  273598.,  283318.,  293134.,  303046.,
      280270.,  290182.,  300190.,  310294.,  286942.,  297046.,  307246.,
      317542.,  205044.,  211908.,  218836.,  225828.,  109482.,  112978.,
      116506.,  120066.,  49613.,   51265.,   52933.,   54617.,   105802.,
      109170.,  112570.,  116002.,  168695.,  173843.,  179039.,  184283.,
      172607.,  177851.,  183143.,  188483.,  176519.,  181859.,  187247.,
      192683.,  180431.,  185867.,  191351.,  196883.,  184343.,  189875.,
      195455.,  201083.,  130410.,  134162.,  137946.,  141762.,  69005.,
      70913.,   72837.,   74777.,   293.,     697.,     1117.,    1553.,
      2170.,    3042.,    3946.,    4882.,    5759.,    7163.,    8615.,
      10115.,   10823.,   12323.,   13871.,   15467.,   15887.,   17483.,
      19127.,   20819.,   20951.,   22643.,   24383.,   26171.,   26015.,
      27803.,   29639.,   31523.,   19866.,   21122.,   22410.,   23730.,
      11237.,   11897.,   12573.,   13265.,   11578.,   12706.,   13866.,
      15058.,   27604.,   29988.,   32436.,   34948.,   48334.,   52102.,
      55966.,   59926.,   59614.,   63574.,   67630.,   71782.,   70894.,
      75046.,   79294.,   83638.,   82174.,   86518.,   90958.,   95494.,
      93454.,   97990.,   102622.,  107350.,  68628.,   71780.,   74996.,
      78276.,   37562.,   39202.,   40874.,   42578.,   36543.,   38715.,
      40935.,   43203.,   81678.,   86214.,   90846.,   95574.,   135789.,
      142881.,  150117.,  157497.,  154437.,  161817.,  169341.,  177009.,
      173085.,  180753.,  188565.,  196521.,  191733.,  199689.,  207789.,
      216033.,  210381.,  218625.,  227013.,  235545.,  151662.,  157350.,
      163134.,  169014.,  81663.,   84603.,   87591.,   90627.,   77876.,
      81412.,   85012.,   88676.,   169768.,  177096.,  184552.,  192136.,
      276188.,  287564.,  299132.,  310892.,  303356.,  315116.,  327068.,
      339212.,  330524.,  342668.,  355004.,  367532.,  357692.,  370220.,
      382940.,  395852.,  384860.,  397772.,  410876.,  424172.,  274344.,
      283208.,  292200.,  301320.,  146228.,  150788.,  155412.,  160100.,
      137684.,  142116.,  146612.,  151172.,  292968.,  302088.,  311336.,
      320712.,  466364.,  480428.,  494684.,  509132.,  493532.,  507980.,
      522620.,  537452.,  520700.,  535532.,  550556.,  565772.,  547868.,
      563084.,  578492.,  594092.,  575036.,  590636.,  606428.,  622412.,
      404712.,  415368.,  426152.,  437064.,  213204.,  218660.,  224180.,
      229764.,  197492.,  202820.,  208212.,  213668.,  416168.,  427080.,
      438120.,  449288.,  656540.,  673292.,  690236.,  707372.,  683708.,
      700844.,  718172.,  735692.,  710876.,  728396.,  746108.,  764012.,
      738044.,  755948.,  774044.,  792332.,  765212.,  783500.,  801980.,
      820652.,  535080.,  547528.,  560104.,  572808.,  280180.,  286532.,
      292948.,  299428.,  257300.,  263524.,  269812.,  276164.,  539368.,
      552072.,  564904.,  577864.,  846716.,  866156.,  885788.,  905612.,
      873884.,  893708.,  913724.,  933932.,  901052.,  921260.,  941660.,
      962252.,  928220.,  948812.,  969596.,  990572.,  955388.,  976364.,
      997532.,  1018892., 665448.,  679688.,  694056.,  708552.,  347156.,
      354404.,  361716.,  369092.,  240375.,  245523.,  250719.,  255963.,
      501246.,  511734.,  522318.,  532998.,  782997.,  799017.,  815181.,
      831489.,  805101.,  821409.,  837861.,  854457.,  827205.,  843801.,
      860541.,  877425.,  849309.,  866193.,  883221.,  900393.,  871413.,
      888585.,  905901.,  923361.,  604254.,  615894.,  627630.,  639462.,
      313911.,  319827.,  325791.,  331803.,  193642.,  197394.,  201178.,
      204994.,  402228.,  409860.,  417556.,  425316.,  626014.,  637654.,
      649390.,  661222.,  641902.,  653734.,  665662.,  677686.,  657790.,
      669814.,  681934.,  694150.,  673678.,  685894.,  698206.,  710614.,
      689566.,  701974.,  714478.,  727078.,  476532.,  484932.,  493396.,
      501924.,  246762.,  251026.,  255322.,  259650.,  114413.,  116449.,
      118501.,  120569.,  236938.,  241074.,  245242.,  249442.,  367703.,
      374003.,  380351.,  386747.,  376223.,  382619.,  389063.,  395555.,
      384743.,  391235.,  397775.,  404363.,  393263.,  399851.,  406487.,
      413171.,  401783.,  408467.,  415199.,  421979.,  276906.,  281426.,
      285978.,  290562.,  143021.,  145313.,  147621.,  149945.,  581.,
      1369.,    2173.,    2993.,    4282.,    5922.,    7594.,    9298.,
      11231.,   13787.,   16391.,   19043.,   20903.,   23555.,   26255.,
      29003.,   30575.,   33323.,   36119.,   38963.,   40247.,   43091.,
      45983.,   48923.,   49919.,   52859.,   55847.,   58883.,   37338.,
      39362.,   41418.,   43506.,   20741.,   21785.,   22845.,   23921.,
      22906.,   24802.,   26730.,   28690.,   53332.,   57252.,   61236.,
      65284.,   91534.,   97606.,   103774.,  110038.,  112030.,  118294.,
      124654.,  131110.,  132526.,  138982.,  145534.,  152182.,  153022.,
      159670.,  166414.,  173254.,  173518.,  180358.,  187294.,  194326.,
      125076.,  129764.,  134516.,  139332.,  67322.,   69730.,   72170.,
      74642.,   69663.,   72987.,   76359.,   79779.,   152526.,  159366.,
      166302.,  173334.,  248973.,  259521.,  270213.,  281049.,  281445.,
      292281.,  303261.,  314385.,  313917.,  325041.,  336309.,  347721.,
      346389.,  357801.,  369357.,  381057.,  378861.,  390561.,  402405.,
      414393.,  268590.,  276582.,  284670.,  292854.,  142431.,  146523.,
      150663.,  154851.,  143540.,  148612.,  153748.,  158948.,  307240.,
      317640.,  328168.,  338824.,  491612.,  507596.,  523772.,  540140.,
      537212.,  553580.,  570140.,  586892.,  582812.,  599564.,  616508.,
      633644.,  628412.,  645548.,  662876.,  680396.,  674012.,  691532.,
      709244.,  727148.,  473256.,  485192.,  497256.,  509448.,  248756.,
      254852.,  261012.,  267236.,  246356.,  252324.,  258356.,  264452.,
      516456.,  528648.,  540968.,  553416.,  810812.,  829484.,  848348.,
      867404.,  856412.,  875468.,  894716.,  914156.,  902012.,  921452.,
      941084.,  960908.,  947612.,  967436.,  987452.,  1007660., 993212.,
      1013420., 1033820., 1054412., 689640.,  703368.,  717224.,  731208.,
      358740.,  365732.,  372788.,  379908.,  349172.,  356036.,  362964.,
      369956.,  725672.,  739656.,  753768.,  768008.,  1130012., 1151372.,
      1172924., 1194668., 1175612., 1197356., 1219292., 1241420., 1221212.,
      1243340., 1265660., 1288172., 1266812., 1289324., 1312028., 1334924.,
      1312412., 1335308., 1358396., 1381676., 906024.,  921544.,  937192.,
      952968.,  468724.,  476612.,  484564.,  492580.,  451988.,  459748.,
      467572.,  475460.,  934888.,  950664.,  966568.,  982600.,  1449212.,
      1473260., 1497500., 1521932., 1494812., 1519244., 1543868., 1568684.,
      1540412., 1565228., 1590236., 1615436., 1586012., 1611212., 1636604.,
      1662188., 1631612., 1657196., 1682972., 1708940., 1122408., 1139720.,
      1157160., 1174728., 578708.,  587492.,  596340.,  605252.,  402519.,
      408819.,  415167.,  421563.,  830142.,  842934.,  855822.,  868806.,
      1283253., 1302729., 1322349., 1342113., 1319181., 1338945., 1358853.,
      1378905., 1355109., 1375161., 1395357., 1415697., 1391037., 1411377.,
      1431861., 1452489., 1426965., 1447593., 1468365., 1489281., 979230.,
      993174.,  1007214., 1021350., 503703.,  510771.,  517887.,  525051.,
      312490.,  317010.,  321562.,  326146.,  642996.,  652164.,  661396.,
      670692.,  991774.,  1005718., 1019758., 1033894., 1016878., 1031014.,
      1045246., 1059574., 1041982., 1056310., 1070734., 1085254., 1067086.,
      1081606., 1096222., 1110934., 1092190., 1106902., 1121710., 1136614.,
      748020.,  757956.,  767956.,  778020.,  384042.,  389074.,  394138.,
      399234.,  179213.,  181633.,  184069.,  186521.,  368074.,  372978.,
      377914.,  382882.,  566711.,  574163.,  581663.,  589211.,  579839.,
      587387.,  594983.,  602627.,  592967.,  600611.,  608303.,  616043.,
      606095.,  613835.,  621623.,  629459.,  619223.,  627059.,  634943.,
      642875.,  423402.,  428690.,  434010.,  439362.,  217037.,  219713.,
      222405.,  225113.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1708000.,  1820896.,  1935840.,  2052832.,  2404440.,  2550680.,
      2699480.,  2850840.,  3211728.,  3385168.,  3561680.,  3741264.,
      4106312.,  4309000.,  4515272.,  4725128.,  4427208.,  4628872.,
      4834120.,  5042952.,  4715336.,  4915976.,  5120200.,  5328008.,
      4309456.,  4482896.,  4659408.,  4838992.,  3767128.,  3911320.,
      4058072.,  4207384.,  3084256.,  3197152.,  3312096.,  3429088.,
      3479512.,  3628824.,  3780696.,  3935128.,  4701550.,  4886398.,
      5074446.,  5265694.,  5809476.,  6024228.,  6242820.,  6465252.,
      7010138.,  7257354.,  7509050.,  7765226.,  7226682.,  7474666.,
      7727130.,  7984074.,  7410458.,  7659210.,  7912442.,  8170154.,
      6477892.,  6690596.,  6907140.,  7127524.,  5366574.,  5540670.,
      5717966.,  5898462.,  4071384.,  4204312.,  4339800.,  4477848.,
      5257168.,  5426512.,  5598928.,  5774416.,  6675588.,  6886756.,
      7101764.,  7320612.,  7771320.,  8019192.,  8271672.,  8528760.,
      8981612.,  9269260.,  9562284.,  9860684.,  9012908.,  9303116.,
      9598700.,  9899660.,  9011436.,  9304204.,  9602348.,  9905868.,
      7675576.,  7927544.,  8184120.,  8445304.,  6135044.,  6343140.,
      6555076.,  6770852.,  4383696.,  4544848.,  4709072.,  4876368.,
      6336456.,  6542216.,  6751560.,  6964488.,  7817626.,  8075594.,
      8338042.,  8604970.,  8783916.,  9089484.,  9400428.,  9716748.,
      9902974.,  10259726., 10622750., 10992046., 9799198.,  10160302.,
      10527678., 10901326., 9662654.,  10028110., 10399838., 10777838.,
      8108332.,  8424140.,  8745324.,  9071884.,  6307034.,  6569610.,
      6836666.,  7108202.,  4251592.,  4457352.,  4666696.,  4879624.,
      6740296.,  6953224.,  7169736.,  7389832.,  8031866.,  8296746.,
      8566106.,  8839946.,  8578156.,  8890380.,  9207980.,  9530956.,
      9276190.,  9639342.,  10008766., 10384462., 8741310.,  9100622.,
      9466206.,  9838062.,  8375390.,  8739054.,  9108990.,  9485198.,
      7793004.,  8107276.,  8426924.,  8751948.,  6964666.,  7225962.,
      7491738.,  7761994.,  5883208.,  6087944.,  6296264.,  6508168.,
      5435080.,  5646984.,  5862472.,  6081544.,  7094106.,  7357706.,
      7625786.,  7898346.,  8826028.,  9136716.,  9452780.,  9774220.,
      10708670., 11070030., 11437662., 11811566., 10763614., 11121134.,
      11484926., 11854990., 11216894., 11578766., 11946910., 12321326.,
      9968044.,  10280780., 10598892., 10922380., 8474266.,  8734282.,
      8998778.,  9267754.,  6728392.,  6932104.,  7139400.,  7350280.,
      6489160.,  6700040.,  6914504.,  7132552.,  8056890.,  8319210.,
      8586010.,  8857290.,  9467116.,  9776268.,  10090796., 10410700.,
      11027038., 11386606., 11752446., 12124558., 10623230., 10978958.,
      11340958., 11709230., 10847134., 11207214., 11573566., 11946190.,
      9390572.,  9701772.,  10018348., 10340300., 7690106.,  7948842.,
      8212058.,  8479754.,  5738568.,  5941256.,  6147528.,  6357384.,
      5525712.,  5705296.,  5887952.,  6073680.,  6425284.,  6647204.,
      6872964.,  7102564.,  7468088.,  7735416.,  8007352.,  8283896.,
      8660268.,  8976076.,  9297260.,  9623820.,  8402796.,  8721164.,
      9044908.,  9374028.,  9035180.,  9364300.,  9698796.,  10038668.,
      7943736.,  8231544.,  8523960.,  8820984.,  6645572.,  6888996.,
      7136260.,  7387364.,  5134544.,  5330512.,  5529552.,  5731664.,
      4318552.,  4483224.,  4650456.,  4820248.,  4529998.,  4731998.,
      4937198.,  5145598.,  5917572.,  6159460.,  6405188.,  6654756.,
      7437818.,  7722154.,  8010970.,  8304266.,  7926746.,  8211850.,
      8501434.,  8795498.,  8486330.,  8780394.,  9078938.,  9381962.,
      7728772.,  7984996.,  8245060.,  8508964.,  6785294.,  7001118.,
      7220142.,  7442366.,  5650776.,  5823640.,  5999064.,  6177048.,
      4227552.,  4360928.,  4496352.,  4633824.,  5299672.,  5461272.,
      5625432.,  5792152.,  6467280.,  6659152.,  6854096.,  7052112.,
      7734472.,  7958664.,  8186440.,  8417800.,  7871048.,  8094216.,
      8320968.,  8551304.,  8307656.,  8537992.,  8771912.,  9009416.,
      7332560.,  7532624.,  7735760.,  7941968.,  6208728.,  6376472.,
      6546776.,  6719640.,  4932064.,  5065440.,  5200864.,  5338336.,
      3482592.,  3603680.,  3726816.,  3852000.,  4643160.,  4799640.,
      4958680.,  5120280.,  5927888.,  6121808.,  6318800.,  6518864.,
      6647624.,  6872840.,  7101640.,  7334024.,  6313160.,  6537352.,
      6765128.,  6996488.,  5945928.,  6169096.,  6395848.,  6626184.,
      5141456.,  5335376.,  5532368.,  5732432.,  4192344.,  4354968.,
      4520152.,  4687896.,  3094496.,  3223776.,  3355104.,  3488480.,
      5616856.,  5784600.,  5954904.,  6127768.,  6548398.,  6752190.,
      6959182.,  7169374.,  7602372.,  7844772.,  8091012.,  8341092.,
      7861274.,  8136650.,  8416506.,  8700842.,  7253498.,  7521450.,
      7793882.,  8070794.,  6580186.,  6840714.,  7105722.,  7375210.,
      5192644.,  5416612.,  5644420.,  5876068.,  4672878.,  4857726.,
      5045774.,  5237022.,  3967192.,  4110360.,  4256088.,  4404376.,
      4462032.,  4643664.,  4828368.,  5016144.,  5775364.,  5997796.,
      6224068.,  6454180.,  7225784.,  7492088.,  7763000.,  8038520.,
      8716012.,  9021068.,  9331500.,  9647308.,  8742188.,  9041612.,
      9346412.,  9656588.,  8702828.,  8996620.,  9295788.,  9600332.,
      7750584.,  8004600.,  8263224.,  8526456.,  6597764.,  6808932.,
      7023940.,  7242788.,  5238224.,  5403472.,  5571792.,  5743184.,
      6631112.,  6843016.,  7058504.,  7277576.,  8149594.,  8411146.,
      8677178.,  8947690.,  9836204.,  10150988., 10471148., 10796684.,
      11365310., 11728718., 12098398., 12474350., 11027038., 11386606.,
      11752446., 12124558., 10623230., 10978958., 11340958., 11709230.,
      9285548.,  9594188.,  9908204.,  10227596., 7711130.,  7969098.,
      8231546.,  8498474.,  5892808.,  6096520.,  6303816.,  6514696.,
      6079560.,  6290440.,  6504904.,  6722952.,  7047994.,  7308266.,
      7573018.,  7842250.,  8183532.,  8496780.,  8815404.,  9139404.,
      9493342.,  9863150.,  10239230., 10621582., 9286142.,  9652110.,
      10024350., 10402862., 9013406.,  9375534.,  9743934.,  10118606.,
      7959532.,  8274828.,  8595500.,  8921548.,  6669946.,  6934826.,
      7204186.,  7478026.,  5137480.,  5348360.,  5562824.,  5780872.,
      5921224.,  6131080.,  6344520.,  6561544.,  6437914.,  6696906.,
      6960378.,  7228330.,  7120684.,  7432396.,  7749484.,  8071948.,
      9025278.,  9393294.,  9767582.,  10148142., 9407902.,  9772078.,
      10142526., 10519246., 9724990.,  10085326., 10451934., 10824814.,
      8823852.,  9137612.,  9456748.,  9781260.,  7688026.,  7951626.,
      8219706.,  8492266.,  6310344.,  6520200.,  6733640.,  6950664.,
      6025032.,  6233864.,  6446280.,  6662280.,  7728378.,  7986090.,
      8248282.,  8514954.,  9596780.,  9906956.,  10222508., 10543436.,
      11637406., 12003630., 12376126., 12754894., 11561278., 11923662.,
      12292318., 12667246., 11419614., 11778158., 12142974., 12514062.,
      10081388., 10393612., 10711212., 11034188., 8509498.,  8771818.,
      9038618.,  9309898.,  6696776.,  6905608.,  7118024.,  7334024.,
      6249168.,  6432848.,  6619600.,  6809424.,  7539268.,  7764260.,
      7993092.,  8225764.,  8968504.,  9237880.,  9511864.,  9790456.,
      10543020., 10859852., 11182060., 11509644., 9985516.,  10296716.,
      10613292., 10935244., 9362476.,  9668044.,  9978988.,  10295308.,
      8027960.,  8293240.,  8563128.,  8837624.,  6490820.,  6712740.,
      6938500.,  7168100.,  4744912.,  4920400.,  5098960.,  5280592.,
      5113432.,  5271960.,  5433048.,  5596696.,  5947790.,  6144158.,
      6343726.,  6546494.,  6911748.,  7148516.,  7389124.,  7633572.,
      8010426.,  8290154.,  8574362.,  8863050.,  7647386.,  7927882.,
      8212858.,  8502314.,  7251578.,  7532842.,  7818586.,  8108810.,
      5977604.,  6220516.,  6467268.,  6717860.,  4515662.,  4717662.,
      4922862.,  5131262.,  3909208.,  4067736.,  4228824.,  4392472.,
      2949600.,  3082976.,  3218400.,  3355872.,  3936984.,  4100632.,
      4266840.,  4435608.,  5028048.,  5224016.,  5423056.,  5625168.,
      6226888.,  6457224.,  6691144.,  6928648.,  6560072.,  6789384.,
      7022280.,  7258760.,  6860488.,  7088776.,  7320648.,  7556104.,
      6101200.,  6297168.,  6496208.,  6698320.,  5184984.,  5346584.,
      5510744.,  5677464.,  4107744.,  4232928.,  4360160.,  4489440.,
      3875808.,  3996896.,  4120032.,  4245216.,  4774488.,  4924824.,
      5077720.,  5233176.,  5772752.,  5954384.,  6139088.,  6326864.,
      6874696.,  7089672.,  7308232.,  7530376.,  6671304.,  6885256.,
      7102792.,  7323912.,  6435144.,  6648072.,  6864584.,  7084680.,
      5330384.,  5512016.,  5696720.,  5884496.,  4766040.,  4922520.,
      5081560.,  5243160.,  4077536.,  4206816.,  4338144.,  4471520.,
      6012376.,  6190360.,  6370904.,  6554008.,  6751726.,  6966270.,
      7184014.,  7404958.,  7615556.,  7869220.,  8126724.,  8388068.,
      8608986.,  8904330.,  9204154.,  9508458.,  8301242.,  8597354.,
      8897946.,  9203018.,  7955610.,  8244298.,  8537466.,  8835114.,
      6173508.,  6416932.,  6664196.,  6915300.,  5098414.,  5302206.,
      5509198.,  5719390.,  3835352.,  3996952.,  4161112.,  4327832.,
      5890000.,  6075728.,  6264528.,  6456400.,  6147972.,  6373476.,
      6602820.,  6836004.,  6538936.,  6807288.,  7080248.,  7357816.,
      7069036.,  7383308.,  7702956.,  8027980.,  7624620.,  7941452.,
      8263660.,  8591244.,  7912940.,  8224140.,  8540716.,  8862668.,
      7175352.,  7439608.,  7708472.,  7981944.,  6311940.,  6534372.,
      6760644.,  6990756.,  5245904.,  5423440.,  5604048.,  5787728.,
      5773768.,  5983624.,  6197064.,  6414088.,  7427866.,  7684810.,
      7946234.,  8212138.,  9239852.,  9547468.,  9860460.,  10178828.,
      11216894., 11578766., 11946910., 12321326., 11637406., 12003630.,
      12376126., 12754894., 11561278., 11923662., 12292318., 12667246.,
      10041900., 10351564., 10666604., 10987020., 8596058.,  8857610.,
      9123642.,  9394154.,  6916552.,  7126408.,  7339848.,  7556872.,
      6369096.,  6577928.,  6790344.,  7006344.,  7702522.,  7958186.,
      8218330.,  8482954.,  9192812.,  9498892.,  9810348.,  10127180.,
      10847134., 11207214., 11573566., 11946190., 11038270., 11402702.,
      11773406., 12150382., 10503390., 10863982., 11230846., 11603982.,
      8776300.,  9084428.,  9397932.,  9716812.,  7353146.,  7613418.,
      7878170.,  8147402.,  5697352.,  5906184.,  6118600.,  6334600.,
      5691592.,  5907592.,  6127176.,  6350344.,  6835418.,  7097994.,
      7365050.,  7636586.,  8135084.,  8447820.,  8765932.,  9089420.,
      9597758.,  9964238.,  10336990., 10716014., 10149342., 10520174.,
      10897278., 11280654., 9745534.,  10112526., 10485790., 10865326.,
      8302252.,  8617036.,  8937196.,  9262732.,  6601754.,  6860746.,
      7124218.,  7392170.,  4871368.,  5079176.,  5290568.,  5505544.,
      5074504.,  5289480.,  5508040.,  5730184.,  6585786.,  6847082.,
      7112858.,  7383114.,  8251884.,  8563084.,  8879660.,  9201612.,
      10079966., 10444654., 10815614., 11192846., 10402174., 10771214.,
      11146526., 11528110., 10588190., 10953390., 11324862., 11702606.,
      9297644.,  9610892.,  9929516.,  10253516., 7750906.,  8008618.,
      8270810.,  8537482.,  6404680.,  6611464.,  6821832.,  7035784.,
      6715600.,  6911568.,  7110608.,  7312720.,  8068548.,  8304804.,
      8544900.,  8788836.,  9556536.,  9836152.,  10120376., 10409208.,
      11185708., 11511756., 11843180., 12179980., 11255916., 11584524.,
      11918508., 12257868., 10960556., 11283532., 11611884., 11945612.,
      9214008.,  9489528.,  9769656.,  10054392., 7236164.,  7461156.,
      7689988.,  7922660.,  5714128.,  5893712.,  6076368.,  6262096.,
      6011736.,  6172312.,  6335448.,  6501144.,  6579150.,  6769886.,
      6963822.,  7160958.,  7245444.,  7468900.,  7696196.,  7927332.,
      8015738.,  8274474.,  8537690.,  8805386.,  7783770.,  8043274.,
      8307258.,  8575722.,  7519034.,  7779306.,  8044058.,  8313290.,
      5925252.,  6146660.,  6371908.,  6600996.,  4141454.,  4321438.,
      4504622.,  4691006.,  3085144.,  3229336.,  3376088.,  3525400.,
      5150176.,  5291744.,  5435360.,  5581024.,  4933592.,  5099288.,
      5267544.,  5438360.,  4796112.,  4987984.,  5182928.,  5380944.,
      4741832.,  4961928.,  5185608.,  5412872.,  4157512.,  4376584.,
      4599240.,  4825480.,  4589000.,  4807048.,  5028680.,  5253896.,
      4242128.,  4425808.,  4612560.,  4802384.,  3730136.,  3877400.,
      4027224.,  4179608.,  3152352.,  3269344.,  3388384.,  3509472.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x9x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,       174.,      446.,      846.,      380.,      1180.,
      2236.,     3548.,     2074.,     4042.,     6394.,     9130.,
      5626.,     8362.,     11482.,    14986.,    9178.,     12682.,
      16570.,    20842.,    12730.,    17002.,    21658.,    26698.,
      16282.,    21322.,    26746.,    32554.,    18684.,    22556.,
      26684.,    31068.,    13598.,    15790.,    18110.,    20558.,
      1660.,     4508.,     7612.,     10972.,    14200.,    20920.,
      28152.,    35896.,    39668.,    51284.,    63668.,    76820.,
      55988.,    69140.,    83060.,    97748.,    72308.,    86996.,
      102452.,   118676.,   88628.,    104852.,   121844.,   139604.,
      104948.,   122708.,   141236.,   160532.,   95864.,    108728.,
      122104.,   135992.,   61564.,    68508.,    75708.,    83164.,
      26394.,    34506.,    43002.,    51882.,    84468.,    102228.,
      120756.,   140052.,   177294.,   206238.,   236334.,   267582.,
      215598.,   246846.,   279246.,   312798.,   253902.,   287454.,
      322158.,   358014.,   292206.,   328062.,   365070.,   403230.,
      330510.,   368670.,   407982.,   448446.,   274548.,   301524.,
      329268.,   357780.,   165402.,   179658.,   194298.,   209322.,
      95736.,    111672.,   128120.,   145080.,   254192.,   288112.,
      323056.,   359024.,   479464.,   533416.,   588904.,   645928.,
      548968.,   605992.,   664552.,   724648.,   618472.,   678568.,
      740200.,   803368.,   687976.,   751144.,   815848.,   882088.,
      757480.,   823720.,   891496.,   960808.,   597744.,   643952.,
      691184.,   739440.,   346616.,   370744.,   395384.,   420536.,
      229240.,   252344.,   275960.,   300088.,   549872.,   598128.,
      647408.,   697712.,   965992.,   1041448.,  1118440.,  1196968.,
      1035496.,  1114024.,  1194088.,  1275688.,  1105000.,  1186600.,
      1269736.,  1354408.,  1174504.,  1259176.,  1345384.,  1433128.,
      1244008.,  1331752.,  1421032.,  1511848.,  950768.,   1011312.,
      1072880.,  1135472.,  537464.,   568760.,   600568.,   632888.,
      362744.,   393016.,   423800.,   455096.,   845552.,   908144.,
      971760.,   1036400.,  1452520.,  1549480.,  1647976.,  1748008.,
      1522024.,  1622056.,  1723624.,  1826728.,  1591528.,  1694632.,
      1799272.,  1905448.,  1661032.,  1767208.,  1874920.,  1984168.,
      1730536.,  1839784.,  1950568.,  2062888.,  1303792.,  1378672.,
      1454576.,  1531504.,  728312.,   766776.,   805752.,   845240.,
      496248.,   533688.,   571640.,   610104.,   1141232.,  1218160.,
      1296112.,  1375088.,  1939048.,  2057512.,  2177512.,  2299048.,
      2008552.,  2130088.,  2253160.,  2377768.,  2078056.,  2202664.,
      2328808.,  2456488.,  2147560.,  2275240.,  2404456.,  2535208.,
      2217064.,  2347816.,  2480104.,  2613928.,  1656816.,  1746032.,
      1836272.,  1927536.,  919160.,   964792.,   1010936.,  1057592.,
      621882.,   653802.,   686106.,   718794.,   1370676.,  1436052.,
      1502196.,  1569108.,  2249454.,  2349822.,  2451342.,  2554014.,
      2315406.,  2418078.,  2521902.,  2626878.,  2381358.,  2486334.,
      2592462.,  2699742.,  2447310.,  2554590.,  2663022.,  2772606.,
      2513262.,  2622846.,  2733582.,  2845470.,  1824948.,  1899540.,
      1974900.,  2051028.,  988218.,   1026282.,  1064730.,  1103562.,
      595388.,   619228.,   643324.,   667676.,   1285624.,  1334328.,
      1383544.,  1433272.,  2072756.,  2147348.,  2222708.,  2298836.,
      2125940.,  2202068.,  2278964.,  2356628.,  2179124.,  2256788.,
      2335220.,  2414420.,  2232308.,  2311508.,  2391476.,  2472212.,
      2285492.,  2366228.,  2447732.,  2530004.,  1633528.,  1688376.,
      1743736.,  1799608.,  872380.,   900316.,   928508.,   956956.,
      395262.,   408462.,   421790.,   435246.,   843068.,   869980.,
      897148.,   924572.,   1344442.,  1385578.,  1427098.,  1469002.,
      1375642.,  1417546.,  1459834.,  1502506.,  1406842.,  1449514.,
      1492570.,  1536010.,  1438042.,  1481482.,  1525306.,  1569514.,
      1469242.,  1513450.,  1558042.,  1603018.,  1039548.,  1069532.,
      1099772.,  1130268.,  550142.,   565390.,   580766.,   596270.,
      1950.,     5166.,     8510.,     11982.,    16508.,    23452.,
      30652.,    38108.,    44698.,    55882.,    67450.,    79402.,
      85114.,    97066.,    109402.,   122122.,   125530.,   138250.,
      151354.,   164842.,   165946.,   179434.,   193306.,   207562.,
      206362.,   220618.,   235258.,   250282.,   157692.,   167708.,
      177980.,   188508.,   89246.,    94510.,    99902.,    105422.,
      91516.,    100508.,   109756.,   119260.,   218488.,   237496.,
      257016.,   277048.,   382964.,   413012.,   443828.,   475412.,
      473012.,   504596.,   536948.,   570068.,   563060.,   596180.,
      630068.,   664724.,   653108.,   687764.,   723188.,   759380.,
      743156.,   779348.,   816308.,   854036.,   545912.,   571064.,
      596728.,   622904.,   298876.,   311964.,   325308.,   338908.,
      290202.,   307530.,   325242.,   343338.,   648948.,   685140.,
      722100.,   759828.,   1079310.,  1135902.,  1193646.,  1252542.,
      1228206.,  1287102.,  1347150.,  1408350.,  1377102.,  1438302.,
      1500654.,  1564158.,  1525998.,  1589502.,  1654158.,  1719966.,
      1674894.,  1740702.,  1807662.,  1875774.,  1207668.,  1253076.,
      1299252.,  1346196.,  650394.,   673866.,   697722.,   721962.,
      619512.,   647736.,   676472.,   705720.,   1350896.,  1409392.,
      1468912.,  1529456.,  2198248.,  2289064.,  2381416.,  2475304.,
      2415208.,  2509096.,  2604520.,  2701480.,  2632168.,  2729128.,
      2827624.,  2927656.,  2849128.,  2949160.,  3050728.,  3153832.,
      3066088.,  3169192.,  3273832.,  3380008.,  2185968.,  2256752.,
      2328560.,  2401392.,  1165304.,  1201720.,  1238648.,  1276088.,
      1097080.,  1132472.,  1168376.,  1204792.,  2334704.,  2407536.,
      2481392.,  2556272.,  3716968.,  3829288.,  3943144.,  4058536.,
      3933928.,  4049320.,  4166248.,  4284712.,  4150888.,  4269352.,
      4389352.,  4510888.,  4367848.,  4489384.,  4612456.,  4737064.,
      4584808.,  4709416.,  4835560.,  4963240.,  3227120.,  3312240.,
      3398384.,  3485552.,  1700216.,  1743800.,  1787896.,  1832504.,
      1574648.,  1617208.,  1660280.,  1703864.,  3318512.,  3405680.,
      3493872.,  3583088.,  5235688.,  5369512.,  5504872.,  5641768.,
      5452648.,  5589544.,  5727976.,  5867944.,  5669608.,  5809576.,
      5951080.,  6094120.,  5886568.,  6029608.,  6174184.,  6320296.,
      6103528.,  6249640.,  6397288.,  6546472.,  4268272.,  4367728.,
      4468208.,  4569712.,  2235128.,  2285880.,  2337144.,  2388920.,
      2052216.,  2101944.,  2152184.,  2202936.,  4302320.,  4403824.,
      4506352.,  4609904.,  6754408.,  6909736.,  7066600.,  7225000.,
      6971368.,  7129768.,  7289704.,  7451176.,  7188328.,  7349800.,
      7512808.,  7677352.,  7405288.,  7569832.,  7735912.,  7903528.,
      7622248.,  7789864.,  7959016.,  8129704.,  5309424.,  5423216.,
      5538032.,  5653872.,  2770040.,  2827960.,  2886392.,  2945336.,
      1917882.,  1959018.,  2000538.,  2042442.,  3999540.,  4083348.,
      4167924.,  4253268.,  6248046.,  6376062.,  6505230.,  6635550.,
      6424590.,  6554910.,  6686382.,  6819006.,  6601134.,  6733758.,
      6867534.,  7002462.,  6777678.,  6912606.,  7048686.,  7185918.,
      6954222.,  7091454.,  7229838.,  7369374.,  4822452.,  4915476.,
      5009268.,  5103828.,  2505402.,  2552682.,  2600346.,  2648394.,
      1545404.,  1575388.,  1605628.,  1636124.,  3210232.,  3271224.,
      3332728.,  3394744.,  4996532.,  5089556.,  5183348.,  5277908.,
      5123444.,  5218004.,  5313332.,  5409428.,  5250356.,  5346452.,
      5443316.,  5540948.,  5377268.,  5474900.,  5573300.,  5672468.,
      5504180.,  5603348.,  5703284.,  5803988.,  3803896.,  3871032.,
      3938680.,  4006840.,  1969852.,  2003932.,  2038268.,  2072860.,
      913278.,   929550.,   945950.,   962478.,   1891388.,  1924444.,
      1957756.,  1991324.,  2935354.,  2985706.,  3036442.,  3087562.,
      3003418.,  3054538.,  3106042.,  3157930.,  3071482.,  3123370.,
      3175642.,  3228298.,  3139546.,  3192202.,  3245242.,  3298666.,
      3207610.,  3261034.,  3314842.,  3369034.,  2210748.,  2246876.,
      2283260.,  2319900.,  1141886.,  1160206.,  1178654.,  1197230.,
      3870.,     10158.,    16574.,    23118.,    32636.,    45724.,
      59068.,    72668.,    87322.,    107722.,   128506.,   149674.,
      164602.,   185770.,   207322.,   229258.,   241882.,   263818.,
      286138.,   308842.,   319162.,   341866.,   364954.,   388426.,
      396442.,   419914.,   443770.,   468010.,   296700.,   312860.,
      329276.,   345948.,   164894.,   173230.,   181694.,   190286.,
      181372.,   196508.,   211900.,   227548.,   422776.,   454072.,
      485880.,   518200.,   726260.,   774740.,   823988.,   874004.,
      890036.,   940052.,   990836.,   1042388.,  1053812.,  1105364.,
      1157684.,  1210772.,  1217588.,  1270676.,  1324532.,  1379156.,
      1381364.,  1435988.,  1491380.,  1547540.,  995960.,   1033400.,
      1071352.,  1109816.,  536188.,   555420.,   574908.,   594652.,
      554010.,   580554.,   607482.,   634794.,   1213428.,  1268052.,
      1323444.,  1379604.,  1981326.,  2065566.,  2150958.,  2237502.,
      2240814.,  2327358.,  2415054.,  2503902.,  2500302.,  2589150.,
      2679150.,  2770302.,  2759790.,  2850942.,  2943246.,  3036702.,
      3019278.,  3112734.,  3207342.,  3303102.,  2140788.,  2204628.,
      2269236.,  2334612.,  1135386.,  1168074.,  1201146.,  1234602.,
      1143288.,  1183800.,  1224824.,  1266360.,  2447600.,  2530672.,
      2614768.,  2699888.,  3917032.,  4044712.,  4173928.,  4304680.,
      4281448.,  4412200.,  4544488.,  4678312.,  4645864.,  4779688.,
      4915048.,  5051944.,  5010280.,  5147176.,  5285608.,  5425576.,
      5374696.,  5514664.,  5656168.,  5799208.,  3774192.,  3869552.,
      3965936.,  4063344.,  1983992.,  2032696.,  2081912.,  2131640.,
      1964920.,  2012600.,  2060792.,  2109496.,  4119536.,  4216944.,
      4315376.,  4414832.,  6467944.,  6617128.,  6767848.,  6920104.,
      6832360.,  6984616.,  7138408.,  7293736.,  7196776.,  7352104.,
      7508968.,  7667368.,  7561192.,  7719592.,  7879528.,  8041000.,
      7925608.,  8087080.,  8250088.,  8414632.,  5503472.,  5613168.,
      5723888.,  5835632.,  2862968.,  2918840.,  2975224.,  3032120.,
      2786552.,  2841400.,  2896760.,  2952632.,  5791472.,  5903216.,
      6015984.,  6129776.,  9018856.,  9189544.,  9361768.,  9535528.,
      9383272.,  9557032.,  9732328.,  9909160.,  9747688.,  9924520.,
      10102888., 10282792., 10112104., 10292008., 10473448., 10656424.,
      10476520., 10659496., 10844008., 11030056., 7232752.,  7356784.,
      7481840.,  7607920.,  3741944.,  3804984.,  3868536.,  3932600.,
      3608184.,  3670200.,  3732728.,  3795768.,  7463408.,  7589488.,
      7716592.,  7844720.,  11569768., 11761960., 11955688., 12150952.,
      11934184., 12129448., 12326248., 12524584., 12298600., 12496936.,
      12696808., 12898216., 12663016., 12864424., 13067368., 13271848.,
      13027432., 13231912., 13437928., 13645480., 8962032.,  9100400.,
      9239792.,  9380208.,  4620920.,  4691128.,  4761848.,  4833080.,
      3213882.,  3264234.,  3314970.,  3366090.,  6628404.,  6730644.,
      6833652.,  6937428.,  10246638., 10402302., 10559118., 10717086.,
      10533774., 10691742., 10850862., 11011134., 10820910., 10981182.,
      11142606., 11305182., 11108046., 11270622., 11434350., 11599230.,
      11395182., 11560062., 11726094., 11893278., 7819956.,  7931412.,
      8043636.,  8156628.,  4022586.,  4079082.,  4135962.,  4193226.,
      2495420.,  2531548.,  2567932.,  2604572.,  5134840.,  5208120.,
      5281912.,  5356216.,  7920308.,  8031764.,  8143988.,  8256980.,
      8120948.,  8233940.,  8347700.,  8462228.,  8321588.,  8436116.,
      8551412.,  8667476.,  8522228.,  8638292.,  8755124.,  8872724.,
      8722868.,  8840468.,  8958836.,  9077972.,  5974264.,  6053688.,
      6133624.,  6214072.,  3067324.,  3107548.,  3148028.,  3188764.,
      1431294.,  1450638.,  1470110.,  1489710.,  2939708.,  2978908.,
      3018364.,  3058076.,  4526266.,  4585834.,  4645786.,  4706122.,
      4631194.,  4691530.,  4752250.,  4813354.,  4736122.,  4797226.,
      4858714.,  4920586.,  4841050.,  4902922.,  4965178.,  5027818.,
      4945978.,  5008618.,  5071642.,  5135050.,  3381948.,  3424220.,
      3466748.,  3509532.,  1733630.,  1755022.,  1776542.,  1798190.};
  const std::array<int, 4> in_shape = {{3, 10, 9, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2220.,   3070.,   4046.,   5152.,   5558.,   5964.,   6370.,   5930.,
      5340.,   4596.,   4600.,   6225.,   8050.,   10080.,  10710.,  11340.,
      11970.,  10975.,  9750.,   8290.,   8270.,   11035.,  14091.,  17444.,
      18347.,  19250.,  20153.,  18285.,  16090.,  13562.,  13510.,  17850.,
      22589.,  27734.,  28959.,  30184.,  31409.,  28280.,  24710.,  20692.,
      20090.,  26250.,  32879.,  39984.,  41209.,  42434.,  43659.,  38990.,
      33810.,  28112.,  26670.,  34650.,  43169.,  52234.,  53459.,  54684.,
      55909.,  49700.,  42910.,  35532.,  33250.,  43050.,  53459.,  64484.,
      65709.,  66934.,  68159.,  60410.,  52010.,  42952.,  38810.,  49915.,
      61593.,  73850.,  75047.,  76244.,  77441.,  68235.,  58420.,  47990.,
      41400.,  53025.,  65170.,  77840.,  78960.,  80080.,  81200.,  71275.,
      60800.,  49770.,  40740.,  52030.,  63770.,  75964.,  76958.,  77952.,
      78946.,  69110.,  58800.,  48012.,  23020.,  30070.,  37646.,  45752.,
      46158.,  46564.,  46970.,  41930.,  36340.,  30196.,  37600.,  48725.,
      60550.,  73080.,  73710.,  74340.,  74970.,  66475.,  57250.,  47290.,
      56270.,  72535.,  89691.,  107744., 108647., 109550., 110453., 97485.,
      83590.,  68762.,  79310.,  101850., 125489., 150234., 151459., 152684.,
      153909., 135380., 115710., 94892.,  85890.,  110250., 135779., 162484.,
      163709., 164934., 166159., 146090., 124810., 102312., 92470.,  118650.,
      146069., 174734., 175959., 177184., 178409., 156800., 133910., 109732.,
      99050.,  127050., 156359., 186984., 188209., 189434., 190659., 167510.,
      143010., 117152., 103610., 132415., 162393., 193550., 194747., 195944.,
      197141., 172635., 146920., 119990., 102400., 130525., 159670., 189840.,
      190960., 192080., 193200., 168775., 143300., 116770., 95140.,  121030.,
      147770., 175364., 176358., 177352., 178346., 155510., 131800., 107212.,
      43820.,  57070.,  71246.,  86352.,  86758.,  87164.,  87570.,  77930.,
      67340.,  55796.,  70600.,  91225.,  113050., 136080., 136710., 137340.,
      137970., 121975., 104750., 86290.,  104270., 134035., 165291., 198044.,
      198947., 199850., 200753., 176685., 151090., 123962., 145110., 185850.,
      228389., 272734., 273959., 275184., 276409., 242480., 206710., 169092.,
      151690., 194250., 238679., 284984., 286209., 287434., 288659., 253190.,
      215810., 176512., 158270., 202650., 248969., 297234., 298459., 299684.,
      300909., 263900., 224910., 183932., 164850., 211050., 259259., 309484.,
      310709., 311934., 313159., 274610., 234010., 191352., 168410., 214915.,
      263193., 313250., 314447., 315644., 316841., 277035., 235420., 191990.,
      163400., 208025., 254170., 301840., 302960., 304080., 305200., 266275.,
      225800., 183770., 149540., 190030., 231770., 274764., 275758., 276752.,
      277746., 241910., 204800., 166412.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x1x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     10.,    20.,    30.,    40.,    50.,    52.,    45.,
      28.,    13.,    41.,    86.,    150.,   186.,   222.,   258.,   239.,
      191.,   112.,   64.,    167.,   312.,   502.,   580.,   658.,   736.,
      645.,   494.,   280.,   182.,   438.,   772.,   1188.,  1324.,  1460.,
      1596.,  1354.,  1010.,  560.,   378.,   858.,   1444.,  2140.,  2276.,
      2412.,  2548.,  2110.,  1542.,  840.,   574.,   1278.,  2116.,  3092.,
      3228.,  3364.,  3500.,  2866.,  2074.,  1120.,  770.,   1698.,  2788.,
      4044.,  4180.,  4316.,  4452.,  3622.,  2606.,  1400.,  916.,   1967.,
      3156.,  4486.,  4612.,  4738.,  4864.,  3885.,  2750.,  1456.,  855.,
      1811.,  2870.,  4034.,  4134.,  4234.,  4334.,  3425.,  2401.,  1260.,
      559.,   1174.,  1846.,  2576.,  2634.,  2692.,  2750.,  2158.,  1503.,
      784.,   17.,    52.,    106.,   180.,   254.,   328.,   402.,   340.,
      253.,   140.,   157.,   361.,   614.,   918.,   1082.,  1246.,  1410.,
      1151.,  831.,   448.,   448.,   983.,   1608.,  2326.,  2596.,  2866.,
      3136.,  2517.,  1790.,  952.,   918.,   1974.,  3172.,  4516.,  4908.,
      5300.,  5692.,  4522.,  3186.,  1680.,  1562.,  3290.,  5188.,  7260.,
      7652.,  8044.,  8436.,  6622.,  4614.,  2408.,  2206.,  4606.,  7204.,
      10004., 10396., 10788., 11180., 8722.,  6042.,  3136.,  2850.,  5922.,
      9220.,  12748., 13140., 13532., 13924., 10822., 7470.,  3864.,  2644.,
      5471.,  8484.,  11686., 12004., 12322., 12640., 9789.,  6734.,  3472.,
      2119.,  4371.,  6758.,  9282.,  9510.,  9738.,  9966.,  7697.,  5281.,
      2716.,  1247.,  2566.,  3958.,  5424.,  5546.,  5668.,  5790.,  4462.,
      3055.,  1568.,  33.,    100.,   202.,   340.,   478.,   616.,   754.,
      628.,   461.,   252.,   301.,   681.,   1142.,  1686.,  1978.,  2270.,
      2562.,  2063.,  1471.,  784.,   832.,   1799.,  2904.,  4150.,  4612.,
      5074.,  5536.,  4389.,  3086.,  1624.,  1654.,  3510.,  5572.,  7844.,
      8492.,  9140.,  9788.,  7690.,  5362.,  2800.,  2746.,  5722.,  8932.,
      12380., 13028., 13676., 14324., 11134., 7686.,  3976.,  3838.,  7934.,
      12292., 16916., 17564., 18212., 18860., 14578., 10010., 5152.,  4930.,
      10146., 15652., 21452., 22100., 22748., 23396., 18022., 12334., 6328.,
      4372.,  8975.,  13812., 18886., 19396., 19906., 20416., 15693., 10718.,
      5488.,  3383.,  6931.,  10646., 14530., 14886., 15242., 15598., 11969.,
      8161.,  4172.,  1935.,  3958.,  6070.,  8272.,  8458.,  8644.,  8830.,
      6766.,  4607.,  2352.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 1}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      16800.,   23320.,   30832.,   39368.,   42560.,   45752.,   48944.,
      45664.,   41200.,   35520.,   35260.,   47825.,   61970.,   77735.,
      82705.,   87675.,   92645.,   85070.,   75675.,   64420.,   63904.,
      85400.,   109200.,  135352.,  142492.,  149632.,  156772.,  142392.,
      125420.,  105808.,  104972.,  138845.,  175882.,  216139.,  225841.,
      235543.,  245245.,  220990.,  193235.,  161924.,  157052.,  205345.,
      257362.,  313159.,  322861.,  332563.,  342265.,  305830.,  265335.,
      220724.,  209132.,  271845.,  338842.,  410179.,  419881.,  429583.,
      439285.,  390670.,  337435.,  279524.,  261212.,  338345.,  420322.,
      507199.,  516901.,  526603.,  536305.,  475510.,  409535.,  338324.,
      305968.,  393620.,  485832.,  582652.,  592144.,  601636.,  611128.,
      538608.,  461240.,  378976.,  327100.,  419025.,  515090.,  615335.,
      624225.,  633115.,  642005.,  563630.,  480875.,  393700.,  322368.,
      411760.,  504736.,  601328.,  609224.,  617120.,  625016.,  547216.,
      465640.,  380256.,  180000.,  235320.,  294832.,  358568.,  361760.,
      364952.,  368144.,  328864.,  285200.,  237120.,  295260.,  382825.,
      475970.,  574735.,  579705.,  584675.,  589645.,  523070.,  450675.,
      372420.,  443104.,  571400.,  706800.,  849352.,  856492.,  863632.,
      870772.,  768792.,  659420.,  542608.,  625772.,  803845.,  990682.,
      1186339., 1196041., 1205743., 1215445., 1069390., 914235.,  749924.,
      677852.,  870345.,  1072162., 1283359., 1293061., 1302763., 1312465.,
      1154230., 986335.,  808724.,  729932.,  936845.,  1153642., 1380379.,
      1390081., 1399783., 1409485., 1239070., 1058435., 867524.,  782012.,
      1003345., 1235122., 1477399., 1487101., 1496803., 1506505., 1323910.,
      1130535., 926324.,  819568.,  1047620., 1285032., 1531852., 1541344.,
      1550836., 1560328., 1366608., 1163240., 950176.,  811100.,  1034025.,
      1265090., 1504335., 1513225., 1522115., 1531005., 1337630., 1135875.,
      925700.,  754368.,  959760.,  1171936., 1390928., 1398824., 1406720.,
      1414616., 1233616., 1045640., 850656.,  343200.,  447320.,  558832.,
      677768.,  680960.,  684152.,  687344.,  612064.,  529200.,  438720.,
      555260.,  717825.,  889970.,  1071735., 1076705., 1081675., 1086645.,
      961070.,  825675.,  680420.,  822304.,  1057400., 1304400., 1563352.,
      1570492., 1577632., 1584772., 1395192., 1193420., 979408.,  1146572.,
      1468845., 1805482., 2156539., 2166241., 2175943., 2185645., 1917790.,
      1635235., 1337924., 1198652., 1535345., 1886962., 2253559., 2263261.,
      2272963., 2282665., 2002630., 1707335., 1396724., 1250732., 1601845.,
      1968442., 2350579., 2360281., 2369983., 2379685., 2087470., 1779435.,
      1455524., 1302812., 1668345., 2049922., 2447599., 2457301., 2467003.,
      2476705., 2172310., 1851535., 1514324., 1333168., 1701620., 2084232.,
      2481052., 2490544., 2500036., 2509528., 2194608., 1865240., 1521376.,
      1295100., 1649025., 2015090., 2393335., 2402225., 2411115., 2420005.,
      2111630., 1790875., 1457700., 1186368., 1507760., 1839136., 2180528.,
      2188424., 2196320., 2204216., 1920016., 1625640., 1321056.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x1x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      22.,     59.,     124.,    196.,    268.,    340.,    365.,
      322.,    203.,    76.,     264.,    580.,    1040.,   1312.,   1584.,
      1856.,   1744.,   1408.,   832.,    437.,    1174.,   2235.,   3644.,
      4244.,   4844.,   5444.,   4809.,   3706.,   2111.,   1312.,   3200.,
      5696.,   8832.,   9888.,   10944.,  12000.,  10232.,  7664.,   4264.,
      2824.,   6448.,   10904.,  16224.,  17280.,  18336.,  19392.,  16112.,
      11808.,  6448.,   4336.,   9696.,   16112.,  23616.,  24672.,  25728.,
      26784.,  21992.,  15952.,  8632.,   5848.,   12944.,  21320.,  31008.,
      32064.,  33120.,  34176.,  27872.,  20096.,  10816.,  7061.,   15190.,
      24411.,  34748.,  35732.,  36716.,  37700.,  30153.,  21370.,  11327.,
      6640.,   14080.,  22336.,  31424.,  32208.,  32992.,  33776.,  26716.,
      18744.,  9844.,   4361.,   9166.,   14423.,  20140.,  20596.,  21052.,
      21508.,  16889.,  11770.,  6143.,   101.,    342.,    731.,    1276.,
      1860.,   2444.,   3028.,   2573.,   1922.,   1067.,   1164.,   2696.,
      4612.,   6928.,   8224.,   9520.,   10816.,  8848.,   6400.,   3456.,
      3413.,   7510.,   12315.,  17852.,  19988.,  22124.,  24260.,  19497.,
      13882.,  7391.,   7072.,   15232.,  24512.,  34944.,  38048.,  41152.,
      44256.,  35192.,  24816.,  13096.,  12168.,  25648.,  40472.,  56672.,
      59776.,  62880.,  65984.,  51824.,  36128.,  18864.,  17264.,  36064.,
      56432.,  78400.,  81504.,  84608.,  87712.,  68456.,  47440.,  24632.,
      22360.,  46480.,  72392.,  100128., 103232., 106336., 109440., 85088.,
      58752.,  30400.,  20789.,  43030.,  66747.,  91964.,  94484.,  97004.,
      99524.,  77097.,  53050.,  27359.,  16688.,  34432.,  53248.,  73152.,
      74960.,  76768.,  78576.,  60700.,  41656.,  21428.,  9833.,   20238.,
      31223.,  42796.,  43764.,  44732.,  45700.,  35225.,  24122.,  12383.,
      197.,    662.,    1403.,   2428.,   3524.,   4620.,   5716.,   4781.,
      3522.,   1931.,   2252.,   5128.,   8644.,   12816.,  15136.,  17456.,
      19776.,  15952.,  11392.,  6080.,   6389.,   13846.,  22395.,  32060.,
      35732.,  39404.,  43076.,  34185.,  24058.,  12671.,  12832.,  27264.,
      43328.,  61056.,  66208.,  71360.,  76512.,  60152.,  41968.,  21928.,
      21512.,  44848.,  70040.,  97120.,  102272., 107424., 112576., 87536.,
      60448.,  31280.,  30192.,  62432.,  96752.,  133184., 138336., 143488.,
      148640., 114920., 78928.,  40632.,  38872.,  80016.,  123464., 169248.,
      174400., 179552., 184704., 142304., 97408.,  49984.,  34517.,  70870.,
      109083., 149180., 153236., 157292., 161348., 124041., 84730.,  43391.,
      26736.,  54784.,  84160.,  114880., 117712., 120544., 123376., 94684.,
      64568.,  33012.,  15305.,  31310.,  48023.,  65452.,  66932.,  68412.,
      69892.,  53561.,  36474.,  18623.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 1}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      130592.,   181640.,   240560.,   307608.,   332920.,   358232.,
      383544.,   358256.,   323560.,   279200.,   275960.,   374750.,
      486100.,   610330.,   649810.,   689290.,   728770.,   669700.,
      596150.,   507800.,   502256.,   671740.,   859560.,   1066100.,
      1122884.,  1179668.,  1236452.,  1123656.,  990220.,   835760.,
      827400.,   1095010.,  1387820.,  1706278.,  1783502.,  1860726.,
      1937950.,  1747004.,  1528170.,  1281000.,  1241800.,  1624210.,
      2036300.,  2478518.,  2555742.,  2632966.,  2710190.,  2422364.,
      2102170.,  1749160.,  1656200.,  2153410.,  2684780.,  3250758.,
      3327982.,  3405206.,  3482430.,  3097724.,  2676170.,  2217320.,
      2070600.,  2682610.,  3333260.,  4022998.,  4100222.,  4177446.,
      4254670.,  3773084.,  3250170.,  2685480.,  2429744.,  3126220.,
      3859080.,  4628708.,  4704308.,  4779908.,  4855508.,  4279848.,
      3665500.,  3012080.,  2600440.,  3331550.,  4095700.,  4893210.,
      4964050.,  5034890.,  5105730.,  4482820.,  3824950.,  3131800.,
      2564768.,  3276200.,  4016240.,  4785144.,  4848088.,  4911032.,
      4973976.,  4355120.,  3706120.,  3026720.,  1423392.,  1861640.,
      2333360.,  2838808.,  2864120.,  2889432.,  2914744.,  2604656.,
      2259560.,  1879200.,  2339960.,  3034750.,  3774100.,  4558330.,
      4597810.,  4637290.,  4676770.,  4149700.,  3576150.,  2955800.,
      3516656.,  4535740.,  5611560.,  6744500.,  6801284.,  6858068.,
      6914852.,  6106056.,  5238220.,  4310960.,  4971400.,  6387010.,
      7872620.,  9428678.,  9505902.,  9583126.,  9660350.,  8500604.,
      7268170.,  5962600.,  5385800.,  6916210.,  8521100.,  10200918.,
      10278142., 10355366., 10432590., 9175964.,  7842170.,  6430760.,
      5800200.,  7445410.,  9169580.,  10973158., 11050382., 11127606.,
      11204830., 9851324.,  8416170.,  6898920.,  6214600.,  7974610.,
      9818060.,  11745398., 11822622., 11899846., 11977070., 10526684.,
      8990170.,  7367080.,  6519344.,  8334220.,  10223880., 12188708.,
      12264308., 12339908., 12415508., 10875048., 9257500.,  7562480.,
      6456440.,  8231550.,  10071700., 11977210., 12048050., 12118890.,
      12189730., 10650820., 9044950.,  7371800.,  6007968.,  7644200.,
      9334640.,  11079544., 11142488., 11205432., 11268376., 9827120.,
      8330120.,  6777120.,  2716192.,  3541640.,  4426160.,  5370008.,
      5395320.,  5420632.,  5445944.,  4851056.,  4195560.,  3479200.,
      4403960.,  5694750.,  7062100.,  8506330.,  8545810.,  8585290.,
      8624770.,  7629700.,  6556150.,  5403800.,  6531056.,  8399740.,
      10363560., 12412660., 12442820., 12456596., 12453988., 10883656.,
      9215884.,  7450288.,  8976136.,  11463970., 14050220., 16610406.,
      16546318., 16465846., 16368990., 14185148., 11900202., 9513704.,
      8792520.,  11204690., 13703372., 16049398., 15870622., 15675462.,
      15463918., 13308124., 11063130., 8728488.,  8150152.,  10371970.,
      12668396., 14685574., 14392110., 14082262., 13756030., 11742972.,
      9652618.,  7484520.,  7049032.,  8965810.,  10945292., 12518934.,
      12110782., 11686246., 11245326., 9489692.,  7668666.,  5781800.,
      5464368.,  6947660.,  8478600.,  9473892.,  8949428.,  8408580.,
      7851348.,  6468392.,  5035484.,  3552240.,  3332856.,  4243230.,
      5185108.,  5460442.,  4816530.,  4156234.,  3479554.,  2605700.,
      1698422.,  757400.,   636576.,   830120.,   1037936.,  1260280.,
      1323224.,  1386168.,  1449112.,  1290800.,  1116680.,  926496.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x1x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      140.,     394.,     856.,     1400.,    1944.,    2488.,
      2722.,    2428.,    1542.,    500.,     1864.,    4220.,    7696.,
      9808.,    11920.,   14032.,   13292.,   10792.,   6404.,    3202.,
      8756.,    16854.,   27688.,   32392.,   37096.,   41800.,   37086.,
      28676.,   16378.,   9928.,    24400.,   43672.,   68000.,   76320.,
      84640.,   92960.,   79480.,   59664.,   33256.,   21800.,   49936.,
      84664.,   126240.,  134560.,  142880.,  151200.,  125848.,  92368.,
      50504.,   33672.,   75472.,   125656.,  184480.,  192800.,  201120.,
      209440.,  172216.,  125072.,  67752.,   45544.,   101008.,  166648.,
      242720.,  251040.,  259360.,  267680.,  218584.,  157776.,  85000.,
      55426.,   119348.,  191958.,  273448.,  281224.,  289000.,  296776.,
      237534.,  168452.,  89338.,   52324.,   111016.,  176204.,  248016.,
      254224.,  260432.,  266640.,  211004.,  148104.,  77812.,   34446.,
      72428.,   114010.,  159256.,  162872.,  166488.,  170104.,  133618.,
      93148.,   48630.,   670.,     2444.,    5386.,    9560.,    14200.,
      18840.,   23480.,   20002.,   14972.,   8326.,    8948.,    20808.,
      35708.,   53776.,   64080.,   74384.,   84688.,   69356.,   50216.,
      27140.,   26626.,   58676.,   96342.,   139816.,  156808.,  173800.,
      190792.,  153438.,  109316.,  58234.,   55496.,   119632.,  192664.,
      274848.,  299552.,  324256.,  348960.,  277624.,  195856.,  103400.,
      96040.,   202512.,  319672.,  447776.,  472480.,  497184.,  521888.,
      410008.,  285904.,  149320.,  136584.,  285392.,  446680.,  620704.,
      645408.,  670112.,  694816.,  542392.,  375952.,  195240.,  177128.,
      368272.,  573688.,  793632.,  818336.,  843040.,  867744.,  674776.,
      466000.,  241160.,  164866.,  341300.,  529494.,  729640.,  749704.,
      769768.,  789832.,  611934.,  421124.,  217210.,  132452.,  273320.,
      422732.,  580816.,  595216.,  609616.,  624016.,  482108.,  330888.,
      170228.,  78094.,   160748.,  248026.,  339992.,  347704.,  355416.,
      363128.,  279922.,  191708.,  98422.,   1310.,    4748.,    10378.,
      18264.,   27000.,   35736.,   44472.,   37282.,   27516.,   15110.,
      17396.,   39752.,   67196.,   99856.,   118352.,  136848.,  155344.,
      125420.,  89640.,   47876.,   50050.,   108596.,  175830.,  251944.,
      281224.,  310504.,  339784.,  269790.,  189956.,  100090.,  101064.,
      214864.,  341656.,  481696.,  522784.,  563872.,  604960.,  475768.,
      332048.,  173544.,  170280.,  355088.,  554680.,  769312.,  810400.,
      851488.,  892576.,  694168.,  479440.,  248136.,  239496.,  495312.,
      767704.,  1056928., 1098016., 1139104., 1180192., 912568.,  626832.,
      322728.,  308712.,  635536.,  980728.,  1344544., 1385632., 1426720.,
      1467808., 1130968., 774224.,  397320.,  274306.,  563252.,  867030.,
      1185832., 1218184., 1250536., 1282888., 986334.,  673796.,  345082.,
      212580.,  435624.,  669260.,  913616.,  936208.,  958800.,  981392.,
      753212.,  513672.,  262644.,  121742.,  249068.,  382042.,  520728.,
      532536.,  544344.,  556152.,  426226.,  290268.,  148214.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 1}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7920.,    8880.,    11040.,   12280.,   14648.,   16184.,   18760.,
      20608.,   20328.,   22232.,   21896.,   23856.,   23464.,   25480.,
      21944.,   23720.,   19840.,   21360.,   17136.,   18384.,   16860.,
      18400.,   22925.,   24900.,   29770.,   32200.,   37415.,   40320.,
      39865.,   42840.,   42315.,   45360.,   44765.,   47880.,   41170.,
      43900.,   36675.,   39000.,   31260.,   33160.,   30824.,   33080.,
      41260.,   44140.,   52836.,   56364.,   65576.,   69776.,   69104.,
      73388.,   72632.,   77000.,   76160.,   80612.,   69252.,   73140.,
      61060.,   64360.,   51560.,   54248.,   50932.,   54040.,   67445.,
      71400.,   85526.,   90356.,   105203.,  110936.,  110005.,  115836.,
      114807.,  120736.,  119609.,  125636.,  107870.,  113120.,  94395.,
      98840.,   79156.,   82768.,   76692.,   80360.,   100345.,  105000.,
      125846.,  131516.,  153223.,  159936.,  158025.,  164836.,  162827.,
      169736.,  167629.,  174636.,  149870.,  155960.,  130095.,  135240.,
      108276.,  112448.,  102452.,  106680.,  133245.,  138600.,  166166.,
      172676.,  201243.,  208936.,  206045.,  213836.,  210847.,  218736.,
      215649.,  223636.,  191870.,  198800.,  165795.,  171640.,  137396.,
      142128.,  128212.,  133000.,  166145.,  172200.,  206486.,  213836.,
      249263.,  257936.,  254065.,  262836.,  258867.,  267736.,  263669.,
      272636.,  233870.,  241640.,  201495.,  208040.,  166516.,  171808.,
      150728.,  155240.,  193960.,  199660.,  239460.,  246372.,  287252.,
      295400.,  291956.,  300188.,  296660.,  304976.,  301364.,  309764.,
      265668.,  272940.,  227560.,  233680.,  187016.,  191960.,  161500.,
      165600.,  206925.,  212100.,  254410.,  260680.,  303975.,  311360.,
      308385.,  315840.,  312795.,  320320.,  317205.,  324800.,  278530.,
      285100.,  237675.,  243200.,  194620.,  199080.,  159408.,  162960.,
      203640.,  208120.,  249656.,  255080.,  297472.,  303856.,  301392.,
      307832.,  305312.,  311808.,  309232.,  315784.,  270776.,  276440.,
      230440.,  235200.,  188208.,  192048.,  87920.,   92080.,   115040.,
      120280.,  144248.,  150584.,  175560.,  183008.,  177128.,  184632.,
      178696.,  186256.,  180264.,  187880.,  161144.,  167720.,  139840.,
      145360.,  116336.,  120784.,  144860.,  150400.,  187925.,  194900.,
      233770.,  242200.,  282415.,  292320.,  284865.,  294840.,  287315.,
      297360.,  289765.,  299880.,  257170.,  265900.,  221675.,  229000.,
      183260.,  189160.,  218024.,  225080.,  281260.,  290140.,  348036.,
      358764.,  418376.,  430976.,  421904.,  434588.,  425432.,  438200.,
      428960.,  441812.,  378852.,  389940.,  325060.,  334360.,  267560.,
      275048.,  308532.,  317240.,  396445.,  407400.,  488726.,  501956.,
      585403.,  600936.,  590205.,  605836.,  595007.,  610736.,  599809.,
      615636.,  527870.,  541520.,  451395.,  462840.,  370356.,  379568.,
      334292.,  343560.,  429345.,  441000.,  529046.,  543116.,  633423.,
      649936.,  638225.,  654836.,  643027.,  659736.,  647829.,  664636.,
      569870.,  584360.,  487095.,  499240.,  399476.,  409248.,  360052.,
      369880.,  462245.,  474600.,  569366.,  584276.,  681443.,  698936.,
      686245.,  703836.,  691047.,  708736.,  695849.,  713636.,  611870.,
      627200.,  522795.,  535640.,  428596.,  438928.,  385812.,  396200.,
      495145.,  508200.,  609686.,  625436.,  729463.,  747936.,  734265.,
      752836.,  739067.,  757736.,  743869.,  762636.,  653870.,  670040.,
      558495.,  572040.,  457716.,  468608.,  405128.,  414440.,  517960.,
      529660.,  635460.,  649572.,  757652.,  774200.,  762356.,  778988.,
      767060.,  783776.,  771764.,  788564.,  676068.,  690540.,  575560.,
      587680.,  470216.,  479960.,  401500.,  409600.,  511925.,  522100.,
      626410.,  638680.,  744975.,  759360.,  749385.,  763840.,  753795.,
      768320.,  758205.,  772800.,  662530.,  675100.,  562675.,  573200.,
      458620.,  467080.,  373808.,  380560.,  475640.,  484120.,  580856.,
      591080.,  689472.,  701456.,  693392.,  705432.,  697312.,  709408.,
      701232.,  713384.,  611576.,  622040.,  518440.,  527200.,  421808.,
      428848.,  167920.,  175280.,  219040.,  228280.,  273848.,  284984.,
      332360.,  345408.,  333928.,  347032.,  335496.,  348656.,  337064.,
      350280.,  300344.,  311720.,  259840.,  269360.,  215536.,  223184.,
      272860.,  282400.,  352925.,  364900.,  437770.,  452200.,  527415.,
      544320.,  529865.,  546840.,  532315.,  549360.,  534765.,  551880.,
      473170.,  487900.,  406675.,  419000.,  335260.,  345160.,  405224.,
      417080.,  521260.,  536140.,  643236.,  661164.,  771176.,  792176.,
      774704.,  795788.,  778232.,  799400.,  781760.,  803012.,  688452.,
      706740.,  589060.,  604360.,  483560.,  495848.,  566132.,  580440.,
      725445.,  743400.,  891926.,  913556.,  1065603., 1090936., 1070405.,
      1095836., 1075207., 1100736., 1080009., 1105636., 947870.,  969920.,
      808395.,  826840.,  661556.,  676368.,  591892.,  606760.,  758345.,
      777000.,  932246.,  954716.,  1113623., 1139936., 1118425., 1144836.,
      1123227., 1149736., 1128029., 1154636., 989870.,  1012760., 844095.,
      863240.,  690676.,  706048.,  617652.,  633080.,  791245.,  810600.,
      972566.,  995876.,  1161643., 1188936., 1166445., 1193836., 1171247.,
      1198736., 1176049., 1203636., 1031870., 1055600., 879795.,  899640.,
      719796.,  735728.,  643412.,  659400.,  824145.,  844200.,  1012886.,
      1037036., 1209663., 1237936., 1214465., 1242836., 1219267., 1247736.,
      1224069., 1252636., 1073870., 1098440., 915495.,  936040.,  748916.,
      765408.,  659528.,  673640.,  841960.,  859660.,  1031460., 1052772.,
      1228052., 1253000., 1232756., 1257788., 1237460., 1262576., 1242164.,
      1267364., 1086468., 1108140., 923560.,  941680.,  753416.,  767960.,
      641500.,  653600.,  816925.,  832100.,  998410.,  1016680., 1185975.,
      1207360., 1190385., 1211840., 1194795., 1216320., 1199205., 1220800.,
      1046530., 1065100., 887675.,  903200.,  722620.,  735080.,  588208.,
      598160.,  747640.,  760120.,  912056.,  927080.,  1081472., 1099056.,
      1085392., 1103032., 1089312., 1107008., 1093232., 1110984., 952376.,
      967640.,  806440.,  819200.,  655408.,  665648.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x2x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,     4.,     6.,     16.,    19.,    40.,    44.,    80.,    76.,
      120.,   108.,   160.,   140.,   200.,   157.,   208.,   142.,   180.,
      91.,    112.,   24.,    52.,    100.,   164.,   236.,   344.,   440.,
      600.,   568.,   744.,   696.,   888.,   824.,   1032.,  788.,   956.,
      644.,   764.,   384.,   448.,   181.,   256.,   506.,   668.,   987.,
      1248.,  1636.,  2008.,  1924.,  2320.,  2212.,  2632.,  2500.,  2944.,
      2229.,  2580.,  1730.,  1976.,  991.,   1120.,  584.,   728.,   1448.,
      1752.,  2608.,  3088.,  4080.,  4752.,  4592.,  5296.,  5104.,  5840.,
      5616.,  6384.,  4816.,  5416.,  3624.,  4040.,  2024.,  2240.,  1312.,
      1512.,  3016.,  3432.,  5128.,  5776.,  7664.,  8560.,  8176.,  9104.,
      8688.,  9648.,  9200.,  10192., 7672.,  8440.,  5640.,  6168.,  3088.,
      3360.,  2040.,  2296.,  4584.,  5112.,  7648.,  8464.,  11248., 12368.,
      11760., 12912., 12272., 13456., 12784., 14000., 10528., 11464., 7656.,
      8296.,  4152.,  4480.,  2768.,  3080.,  6152.,  6792.,  10168., 11152.,
      14832., 16176., 15344., 16720., 15856., 17264., 16368., 17808., 13384.,
      14488., 9672.,  10424., 5216.,  5600.,  3397.,  3664.,  7322.,  7868.,
      11787., 12624., 16804., 17944., 17284., 18448., 17764., 18952., 18244.,
      19456., 14613., 15540., 10370., 11000., 5503.,  5824.,  3220.,  3420.,
      6836.,  7244.,  10856., 11480., 15288., 16136., 15672., 16536., 16056.,
      16936., 16440., 17336., 13016., 13700., 9140.,  9604.,  4804.,  5040.,
      2125.,  2236.,  4470.,  4696.,  7039.,  7384.,  9836.,  10304., 10060.,
      10536., 10284., 10768., 10508., 11000., 8257.,  8632.,  5758.,  6012.,
      3007.,  3136.,  33.,    68.,    134.,   208.,   307.,   424.,   556.,
      720.,   844.,   1016.,  1132.,  1312.,  1420.,  1608.,  1213.,  1360.,
      910.,   1012.,  507.,   560.,   536.,   628.,   1252.,  1444.,  2156.,
      2456.,  3256.,  3672.,  3896.,  4328.,  4536.,  4984.,  5176.,  5640.,
      4244.,  4604.,  3076.,  3324.,  1664.,  1792.,  1621.,  1792.,  3578.,
      3932.,  5883.,  6432.,  8548.,  9304.,  9604.,  10384., 10660., 11464.,
      11716., 12544., 9429.,  10068., 6722.,  7160.,  3583.,  3808.,  3400.,
      3672.,  7336.,  7896.,  11824., 12688., 16880., 18064., 18416., 19632.,
      19952., 21200., 21488., 22768., 17104., 18088., 12072., 12744., 6376.,
      6720.,  5920.,  6248.,  12488., 13160., 19720., 20752., 27632., 29040.,
      29168., 30608., 30704., 32176., 32240., 33744., 25336., 26488., 17672.,
      18456., 9232.,  9632.,  8440.,  8824.,  17640., 18424., 27616., 28816.,
      38384., 40016., 39920., 41584., 41456., 43152., 42992., 44720., 33568.,
      34888., 23272., 24168., 12088., 12544., 10960., 11400., 22792., 23688.,
      35512., 36880., 49136., 50992., 50672., 52560., 52208., 54128., 53744.,
      55696., 41800., 43288., 28872., 29880., 14944., 15456., 10213., 10576.,
      21146., 21884., 32811., 33936., 45220., 46744., 46468., 48016., 47716.,
      49288., 48964., 50560., 37941., 39156., 26114., 26936., 13471., 13888.,
      8212.,  8476.,  16948., 17484., 26216., 27032., 36024., 37128., 36920.,
      38040., 37816., 38952., 38712., 39864., 29912., 30788., 20532., 21124.,
      10564., 10864., 4845.,  4988.,  9974.,  10264., 15391., 15832., 21100.,
      21696., 21580., 22184., 22060., 22672., 22540., 23160., 17377., 17848.,
      11902., 12220., 6111.,  6272.,  65.,    132.,   262.,   400.,   595.,
      808.,   1068.,  1360.,  1612.,  1912.,  2156.,  2464.,  2700.,  3016.,
      2269.,  2512.,  1678.,  1844.,  923.,   1008.,  1048.,  1204.,  2404.,
      2724.,  4076.,  4568.,  6072.,  6744.,  7224.,  7912.,  8376.,  9080.,
      9528.,  10248., 7700.,  8252.,  5508.,  5884.,  2944.,  3136.,  3061.,
      3328.,  6650.,  7196.,  10779., 11616., 15460., 16600., 17284., 18448.,
      19108., 20296., 20932., 22144., 16629., 17556., 11714., 12344., 6175.,
      6496.,  6216.,  6616.,  13224., 14040., 21040., 22288., 29680., 31376.,
      32240., 33968., 34800., 36560., 37360., 39152., 29392., 30760., 20520.,
      21448., 10728., 11200., 10528., 10984., 21960., 22888., 34312., 35728.,
      47600., 49520., 50160., 52112., 52720., 54704., 55280., 57296., 43000.,
      44536., 29704., 30744., 15376., 15904., 14840., 15352., 30696., 31736.,
      47584., 49168., 65520., 67664., 68080., 70256., 70640., 72848., 73200.,
      75440., 56608., 58312., 38888., 40040., 20024., 20608., 19152., 19720.,
      39432., 40584., 60856., 62608., 83440., 85808., 86000., 88400., 88560.,
      90992., 91120., 93584., 70216., 72088., 48072., 49336., 24672., 25312.,
      17029., 17488., 34970., 35900., 53835., 55248., 73636., 75544., 75652.,
      77584., 77668., 79624., 79684., 81664., 61269., 62772., 41858., 42872.,
      21439., 21952., 13204., 13532., 27060., 27724., 41576., 42584., 56760.,
      58120., 58168., 59544., 59576., 60968., 60984., 62392., 46808., 47876.,
      31924., 32644., 16324., 16688., 7565.,  7740.,  15478., 15832., 23743.,
      24280., 32364., 33088., 33100., 33832., 33836., 34576., 34572., 35320.,
      26497., 27064., 18046., 18428., 9215.,  9408.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 2}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      61488.,    69104.,   85900.,   95740.,    114184.,  126376.,   146468.,
      161140.,   158900.,  174020.,  171332.,   186900.,  183764.,   199780.,
      172072.,   186184.,  155740.,  167820.,   134640.,  144560.,   131860.,
      144100.,   179525.,  195225.,  233390.,   252710.,  293615.,   316715.,
      313075.,   336735.,  332535.,  356755.,   351995.,  376775.,   323990.,
      345710.,   288825.,  307325.,  246340.,   261460.,  242152.,   260104.,
      324410.,   347330.,  415740.,  443820.,   516334.,  549766.,   544390.,
      578494.,   572446.,  607222.,  600502.,   635950.,  546348.,   577308.,
      481970.,   508250.,  407176.,  428584.,   401324.,  426076.,   531755.,
      563255.,   674674.,  713146.,  830305.,   875973.,  868525.,   914977.,
      906745.,   953981.,  944965.,  992985.,   852586.,  894418.,   746375.,
      781795.,   626108.,  654892.,  606284.,   635516.,  793555.,   830655.,
      995554.,   1040746., 1212505., 1266013.,  1250725., 1305017.,  1288945.,
      1344021.,  1327165., 1383025., 1186906.,  1235458., 1030575.,  1071595.,
      857948.,   891212.,  811244.,  844956.,   1055355., 1098055.,  1316434.,
      1368346.,  1594705., 1656053., 1632925.,  1695057., 1671145.,  1734061.,
      1709365.,  1773065., 1521226., 1576498.,  1314775., 1361395.,  1089788.,
      1127532.,  1016204., 1054396., 1317155.,  1365455., 1637314.,  1695946.,
      1976905.,  2046093., 2015125., 2085097.,  2053345., 2124101.,  2091565.,
      2163105.,  1855546., 1917538., 1598975.,  1651195., 1321628.,  1363852.,
      1196872.,  1232872., 1540370., 1585850.,  1901964., 1957116.,  2281846.,
      2346862.,  2319310., 2384998., 2356774.,  2423134., 2394238.,  2461270.,
      2110908.,  2168940., 1808330., 1857170.,  1486312., 1525768.,  1283860.,
      1316580.,  1645125., 1686425., 2022830.,  2072870., 2417135.,  2476075.,
      2452275.,  2511775., 2487415., 2547475.,  2522555., 2583175.,  2215190.,
      2267630.,  1890425., 1934525., 1548100.,  1583700., 1268208.,  1296560.,
      1620220.,  1655980., 1986472., 2029768.,  2367092., 2418052.,  2398340.,
      2449748.,  2429588., 2481444., 2460836.,  2513140., 2154952.,  2200168.,
      1834060.,  1872060., 1498032., 1528688.,  695088.,  728304.,   909900.,
      951740.,   1141384., 1191976., 1389668.,  1449140., 1402100.,  1462020.,
      1414532.,  1474900., 1426964., 1487780.,  1276072., 1328584.,  1107740.,
      1151820.,  921840.,  957360.,  1147860.,  1192100., 1489525.,  1545225.,
      1853390.,  1920710., 2239615., 2318715.,  2259075., 2338735.,  2278535.,
      2358755.,  2297995., 2378775., 2039990.,  2109710., 1758825.,  1817325.,
      1454340.,  1501460., 1730152., 1786504.,  2232410., 2303330.,  2762940.,
      2848620.,  3321934., 3422566., 3349990.,  3451294., 3378046.,  3480022.,
      3406102.,  3508750., 3008748., 3097308.,  2581970., 2656250.,  2125576.,
      2185384.,  2450924., 2520476., 3149755.,  3237255., 3883474.,  3989146.,
      4652305.,  4776373., 4690525., 4815377.,  4728745., 4854381.,  4766965.,
      4893385.,  4195786., 4304818., 3588375.,  3679795., 2944508.,  3018092.,
      2655884.,  2729916., 3411555., 3504655.,  4204354., 4316746.,  5034505.,
      5166413.,  5072725., 5205417., 5110945.,  5244421., 5149165.,  5283425.,
      4530106.,  4645858., 3872575., 3969595.,  3176348., 3254412.,  2860844.,
      2939356.,  3673355., 3772055., 4525234.,  4644346., 5416705.,  5556453.,
      5454925.,  5595457., 5493145., 5634461.,  5531365., 5673465.,  4864426.,
      4986898.,  4156775., 4259395., 3408188.,  3490732., 3065804.,  3148796.,
      3935155.,  4039455., 4846114., 4971946.,  5798905., 5946493.,  5837125.,
      5985497.,  5875345., 6024501., 5913565.,  6063505., 5198746.,  5327938.,
      4440975.,  4549195., 3640028., 3727052.,  3222472., 3296872.,  4120370.,
      4213850.,  5055564., 5168316., 6028246.,  6160462., 6065710.,  6198598.,
      6103174.,  6236734., 6140638., 6274870.,  5379708., 5495340.,  4580330.,
      4677170.,  3742312., 3820168., 3195860.,  3260580., 4075125.,  4156425.,
      4986830.,  5084870., 5931135., 6046075.,  5966275., 6081775.,  6001415.,
      6117475.,  6036555., 6153175., 5275190.,  5375630., 4480425.,  4564525.,
      3652100.,  3719700., 2977008., 3030960.,  3788220., 3855980.,  4626472.,
      4708168.,  5491892., 5587652., 5523140.,  5619348., 5554388.,  5651044.,
      5585636.,  5682740., 4871752., 4955368.,  4130060., 4200060.,  3360432.,
      3416688.,  1328688., 1387504., 1733900.,  1807740., 2168584.,  2257576.,
      2632868.,  2737140., 2645300., 2750020.,  2657732., 2762900.,  2670164.,
      2775780.,  2380072., 2470984., 2059740.,  2135820., 1709040.,  1770160.,
      2163860.,  2240100., 2799525., 2895225.,  3473390., 3588710.,  4185615.,
      4320715.,  4205075., 4340735., 4224535.,  4360755., 4243995.,  4380775.,
      3755990.,  3873710., 3228825., 3327325.,  2662340., 2741460.,  3218152.,
      3312904.,  4140410., 4259330., 5110140.,  5253420., 6127534.,  6295366.,
      6155590.,  6324094., 6183646., 6352822.,  6211702., 6381550.,  5471148.,
      5617308.,  4681970., 4804250., 3843976.,  3942184., 4500524.,  4614876.,
      5767755.,  5911255., 7092274., 7265146.,  8474305., 8676773.,  8512525.,
      8715777.,  8550745., 8754781., 8588965.,  8793785., 7538986.,  7715218.,
      6430375.,  6577795., 5262908., 5381292.,  4705484., 4824316.,  6029555.,
      6178655.,  7413154., 7592746., 8856505.,  9066813., 8894725.,  9105817.,
      8932945.,  9144821., 8971165., 9183825.,  7873306., 8056258.,  6714575.,
      6867595.,  5494748., 5617612., 4910444.,  5033756., 6291355.,  6446055.,
      7734034.,  7920346., 9238705., 9456853.,  9276925., 9495857.,  9315145.,
      9534861.,  9353365., 9573865., 8207626.,  8397298., 6998775.,  7157395.,
      5726588.,  5853932., 5115404., 5243196.,  6553155., 6713455.,  8054914.,
      8247946.,  9620905., 9846893., 9659125.,  9885897., 9697345.,  9924901.,
      9735565.,  9963905., 8541946., 8738338.,  7282975., 7447195.,  5958428.,
      6090252.,  5248072., 5360872., 6700370.,  6841850., 8209164.,  8379516.,
      9774646.,  9974062., 9812110., 10012198., 9849574., 10050334., 9887038.,
      10088470., 8648508., 8821740., 7352330.,  7497170., 5998312.,  6114568.,
      5107860.,  5204580., 6505125., 6626425.,  7950830., 8096870.,  9445135.,
      9616075.,  9480275., 9651775., 9515415.,  9687475., 9550555.,  9723175.,
      8335190.,  8483630., 7070425., 7194525.,  5756100., 5855700.,  4685808.,
      4765360.,  5956220., 6055980., 7266472.,  7386568., 8616692.,  8757252.,
      8647940.,  8788948., 8679188., 8820644.,  8710436., 8852340.,  7588552.,
      7710568.,  6426060., 6528060., 5222832.,  5304688.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x2x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,      25.,     34.,     106.,    119.,    275.,    292.,    564.,
      532.,    868.,    772.,    1172.,   1012.,   1476.,   1163.,   1559.,
      1066.,   1362.,   689.,    853.,    142.,    358.,    684.,    1180.,
      1690.,   2530.,   3224.,   4472.,   4216.,   5592.,   5208.,   6712.,
      6200.,   7832.,   5986.,   7306.,   4924.,   5868.,   2950.,   3454.,
      1307.,   1895.,   3742.,   5014.,   7401.,   9453.,   12380.,  15308.,
      14636.,  17756.,  16892.,  20204.,  19148.,  22652.,  17157.,  19929.,
      13366.,  15310.,  7679.,   8699.,   4396.,   5532.,   11000.,  13400.,
      19940.,  23732.,  31344.,  36656.,  35376.,  40944.,  39408.,  45232.,
      43440.,  49520.,  37364.,  42116.,  28184.,  31480.,  15772.,  17484.,
      10108.,  11692.,  23320.,  26616.,  39764.,  44900.,  59568.,  66672.,
      63600.,  70960.,  67632.,  75248.,  71664.,  79536.,  59876.,  65972.,
      44088.,  48280.,  24172.,  26332.,  15820.,  17852.,  35640.,  39832.,
      59588.,  66068.,  87792.,  96688.,  91824.,  100976., 95856.,  105264.,
      99888.,  109552., 82388.,  89828.,  59992.,  65080.,  32572.,  35180.,
      21532.,  24012.,  47960.,  53048.,  79412.,  87236.,  116016., 126704.,
      120048., 130992., 124080., 135280., 128112., 139568., 104900., 113684.,
      75896.,  81880.,  40972.,  44028.,  26651.,  28775.,  57502.,  61846.,
      92649.,  99309.,  132188., 141260., 135980., 145244., 139772., 149228.,
      143564., 153212., 115077., 122457., 81718.,  86734.,  43391.,  45947.,
      25366.,  26958.,  53884.,  57132.,  85618.,  90586.,  120632., 127384.,
      123672., 130552., 126712., 133720., 129752., 136888., 102778., 108226.,
      72204.,  75900.,  37966.,  39846.,  16781.,  17665.,  35314.,  37114.,
      55631.,  58379.,  77764.,  81492.,  79540.,  83332.,  81316.,  85172.,
      83092.,  87012.,  65315.,  68303.,  45562.,  47586.,  23801.,  24829.,
      197.,    473.,    930.,    1514.,   2231.,   3155.,   4132.,   5428.,
      6420.,   7780.,   8708.,   10132.,  10996.,  12484.,  9419.,   10583.,
      7082.,   7890.,   3953.,   4373.,   4110.,   4838.,   9644.,   11164.,
      16666.,  19042.,  25240.,  28536.,  30328.,  33752.,  35416.,  38968.,
      40504.,  44184.,  33250.,  36106.,  24124.,  26092.,  13062.,  14078.,
      12635.,  13991.,  27934.,  30742.,  45993.,  50349.,  66908.,  72908.,
      75308.,  81500.,  83708.,  90092.,  92108.,  98684.,  74181.,  79257.,
      52918.,  56398.,  28223.,  30011.,  26668.,  28828.,  57592.,  62040.,
      92900.,  99764.,  132720., 142128., 144944., 154608., 157168., 167088.,
      169392., 179568., 134900., 142724., 95256.,  100600., 50332.,  53068.,
      46716.,  49324.,  98584.,  103928., 155732., 163940., 218288., 229488.,
      230512., 241968., 242736., 254448., 254960., 266928., 200420., 209588.,
      139832., 146072., 73068.,  76252.,  66764.,  69820.,  139576., 145816.,
      218564., 228116., 303856., 316848., 316080., 329328., 328304., 341808.,
      340528., 354288., 265940., 276452., 184408., 191544., 95804.,  99436.,
      86812.,  90316.,  180568., 187704., 281396., 292292., 389424., 404208.,
      401648., 416688., 413872., 429168., 426096., 441648., 331460., 343316.,
      228984., 237016., 118540., 122620., 80987.,  83879.,  167710., 173590.,
      260265., 269229., 358748., 370892., 368684., 381020., 378620., 391148.,
      388556., 401276., 301125., 310809., 207286., 213838., 106943., 110267.,
      65174.,  67278.,  134524., 138796., 208114., 214618., 286008., 294808.,
      293144., 302072., 300280., 309336., 307416., 316600., 237562., 244546.,
      163084., 167804., 83918.,  86310.,  38477.,  39617.,  79218.,  81530.,
      122255., 125771., 167620., 172372., 171444., 176260., 175268., 180148.,
      179092., 184036., 138083., 141839., 94586.,  97122.,  48569.,  49853.,
      389.,    921.,    1826.,   2922.,   4343.,   6035.,   7972.,   10292.,
      12308.,  14692.,  16644.,  19092.,  20980.,  23492.,  17675.,  19607.,
      13098.,  14418.,  7217.,   7893.,   8078.,   9318.,   18604.,  21148.,
      31642.,  35554.,  47256.,  52600.,  56440.,  61912.,  65624.,  71224.,
      74808.,  80536.,  60514.,  64906.,  43324.,  46316.,  23174.,  24702.,
      23963.,  26087.,  52126.,  56470.,  84585.,  91245.,  121436., 130508.,
      135980., 145244., 150524., 159980., 165068., 174716., 131205., 138585.,
      92470.,  97486.,  48767.,  51323.,  48940.,  52124.,  104184., 110680.,
      165860., 175796., 234096., 247600., 254512., 268272., 274928., 288944.,
      295344., 309616., 232436., 243332., 162328., 169720., 84892.,  88652.,
      83324.,  86956.,  173848., 181240., 271700., 282980., 377008., 392304.,
      397424., 412976., 417840., 433648., 438256., 454320., 340964., 353204.,
      235576., 243864., 121964., 126172., 117708., 121788., 243512., 251800.,
      377540., 390164., 519920., 537008., 540336., 557680., 560752., 578352.,
      581168., 599024., 449492., 463076., 308824., 318008., 159036., 163692.,
      152092., 156620., 313176., 322360., 483380., 497348., 662832., 681712.,
      683248., 702384., 703664., 723056., 724080., 743728., 558020., 572948.,
      382072., 392152., 196108., 201212., 135323., 138983., 277918., 285334.,
      427881., 439149., 585308., 600524., 601388., 616796., 617468., 633068.,
      633548., 649340., 487173., 499161., 332854., 340942., 170495., 174587.,
      104982., 107598., 215164., 220460., 330610., 338650., 451384., 462232.,
      462616., 473592., 473848., 484952., 485080., 496312., 372346., 380866.,
      253964., 259708., 129870., 132774., 60173.,  61569.,  123122., 125946.,
      188879., 193163., 257476., 263252., 263348., 269188., 269220., 275124.,
      275092., 281060., 210851., 215375., 143610., 146658., 73337.,  74877.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 2}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      484448.,   545120.,   677560.,   755960.,   901520.,   998672.,
      1157352.,  1274280.,  1256360.,  1376872.,  1355368.,  1479464.,
      1454376.,  1582056.,  1362704.,  1475216.,  1234040.,  1330360.,
      1067360.,  1146464.,  1042840.,  1140440.,  1420750.,  1545950.,
      1848100.,  2002180.,  2326170.,  2510410.,  2481290.,  2670010.,
      2636410.,  2829610.,  2791530.,  2989210.,  2570500.,  2743780.,
      2292350.,  2439950.,  1955800.,  2076440.,  1919504.,  2062736.,
      2572660.,  2755540.,  3298200.,  3522264.,  4097660.,  4364444.,
      4321436.,  4593596.,  4545212.,  4822748.,  4768988.,  5051900.,
      4340184.,  4587288.,  3829780.,  4039540.,  3236240.,  3407120.,
      3186120.,  3383688.,  4217770.,  4461018.,  5332716.,  5623436.,
      6532750.,  6872734.,  6783454.,  7121518.,  7017774.,  7353918.,
      7235710.,  7569934.,  6404492.,  6689324.,  5582650.,  5824490.,
      4664968.,  4862024.,  4702536.,  4903176.,  6002442.,  6249530.,
      7387180.,  7682508.,  8858542.,  9203902.,  8994558.,  9337998.,
      9114190.,  9455710.,  9217438.,  9557038.,  8009420.,  8298860.,
      6923930.,  7169610.,  5741064.,  5941192.,  5760200.,  5963912.,
      7213674.,  7464602.,  8753516.,  9053452.,  10381518., 10732254.,
      10402846., 10751662., 10407790., 10754686., 10396350., 10741326.,
      8926220.,  9220268.,  7691770.,  7941290.,  6358408.,  6561608.,
      6359112.,  6565896.,  7851466.,  8106234.,  9431724.,  9736268.,
      11101678., 11457790., 11008318., 11362510., 10898574., 11250846.,
      10772446., 11122798., 9154892.,  9453548.,  7886170.,  8139530.,
      6517000.,  6723272.,  6430352.,  6619664.,  7804948.,  8037236.,
      9258584.,  9535384.,  10792796., 11115644., 10578812., 10898844.,
      10348444., 10665660., 10101692., 10416092., 8449176.,  8716248.,
      7270580.,  7496980.,  6002192.,  6186384.,  5753240.,  5916376.,
      6812110.,  7011038.,  7936804.,  8172804.,  9128602.,  9402954.,
      8781450.,  9052090.,  8417914.,  8684842.,  8037994.,  8301210.,
      6536452.,  6758884.,  5638270.,  5826830.,  4665304.,  4818712.,
      4256096.,  4384352.,  4783352.,  4938040.,  5358864.,  5541008.,
      5983656.,  6194280.,  5490792.,  5696808.,  4981544.,  5182952.,
      4455912.,  4652712.,  3309200.,  3473936.,  2899640.,  3039480.,
      2434656.,  2548576.,  2181216.,  2282848.,  2849720.,  2979320.,
      3569552.,  3728144.,  4341736.,  4530344.,  4440744.,  4632936.,
      4419944.,  4607528.,  4382760.,  4565736.,  3864848.,  4022416.,
      3289464.,  3420600.,  2655584.,  2759264.,  3261080.,  3385304.,
      4226830.,  4385310.,  5255332.,  5449348.,  6347866.,  6578698.,
      6502986.,  6738298.,  6423610.,  6655210.,  6327850.,  6555738.,
      5539460.,  5736292.,  4680638.,  4845134.,  3750104.,  3880984.,
      4458512.,  4614032.,  5761780.,  5960020.,  7143576.,  7386072.,
      8605436.,  8893724.,  8829212.,  9122876.,  8703804.,  8994652.,
      8562012.,  8850044.,  7474904.,  7724056.,  6300052.,  6508788.,
      5035920.,  5202704.,  5845192.,  6040712.,  7544170.,  7793050.,
      9341804.,  9645836.,  11239886., 11600862., 11544862., 11912110.,
      11385966., 11751294., 11210686., 11574094., 9778700.,  10093228.,
      8237306.,  8501162.,  6584712.,  6796104.,  5526600.,  5725192.,
      7149770.,  7402490.,  8873132.,  9181772.,  10698478., 11064830.,
      11003454., 11376078., 10729870., 11100574., 10439902., 10808686.,
      9089868.,  9409004.,  7628890.,  7896586.,  6055176.,  6269640.,
      4749256.,  4950920.,  6181930.,  6438490.,  7716332.,  8029580.,
      9354254.,  9725982.,  9659230.,  10037230., 9270958.,  9647038.,
      8866302.,  9240462.,  7712908.,  8036652.,  6447034.,  6718570.,
      5066888.,  5284424.,  3486536.,  3674888.,  4576138.,  4811962.,
      5752620.,  6037708.,  7017774.,  7353918.,  7235710.,  7569934.,
      7437262.,  7769566.,  7742238.,  8080814.,  6938060.,  7233644.,
      6036250.,  6287050.,  5035016.,  5239240.,  4756624.,  4941840.,
      6103444.,  6334708.,  7535448.,  7814296.,  9054172.,  9382140.,
      9151484.,  9476636.,  9232412.,  9554748.,  9531452.,  9859164.,
      8460696.,  8746200.,  7295540.,  7537300.,  6034448.,  6230928.,
      5479064.,  5652440.,  6935310.,  7151134.,  8470692.,  8730244.,
      10086490., 10391050., 10050634., 10351482., 9998394.,  10295530.,
      10278954., 10580570., 9077380.,  9339748.,  7788990.,  8010830.,
      6412504.,  6592536.,  5582176.,  5735008.,  6982136.,  7171640.,
      8450832.,  8678032.,  9989288.,  10255208., 9807720.,  10069032.,
      9609768.,  9866472.,  9859304.,  10119592., 8680592.,  8906768.,
      7427000.,  7618040.,  6097504.,  6252384.,  887904.,   964960.,
      1202360.,  1301240.,  1555856.,  1677584.,  1949416.,  2095016.,
      2048424.,  2197608.,  2147432.,  2300200.,  2246440.,  2402792.,
      2066192.,  2203280.,  1840760.,  1957560.,  1569120.,  1664608.,
      1690520.,  1808600.,  2255950.,  2406750.,  2881060.,  3065860.,
      3567130.,  3787210.,  3722250.,  3946810.,  3877370.,  4106410.,
      4032490.,  4266010.,  3664900.,  3868900.,  3229950.,  3403150.,
      2726360.,  2867480.,  2868752.,  3036560.,  3789940.,  4003540.,
      4795800.,  5056728.,  5882748.,  6184348.,  6085020.,  6383804.,
      6270908.,  6566876.,  6440412.,  6733564.,  5727192.,  5978392.,
      4920084.,  5127796.,  4017552.,  4180240.,  4375496.,  4568968.,
      5704490.,  5950810.,  7131116.,  7432076.,  8537358.,  8886558.,
      8706142.,  9053422.,  8858542.,  9203902.,  8994558.,  9337998.,
      7895692.,  8190764.,  6688442.,  6933354.,  5371016.,  5563976.,
      5433160.,  5629704.,  7030410.,  7280570.,  8726828.,  9032396.,
      10289710., 10644286., 10343806., 10696462., 10381518., 10732254.,
      10402846., 10751662., 9041868.,  9341548.,  7570970.,  7819722.,
      5988360.,  6184392.,  6032072.,  6231688.,  7782890.,  8036890.,
      9634412.,  9944588.,  11239246., 11599198., 11178654., 11536686.,
      11101678., 11457790., 11008318., 11362510., 9499916.,  9804204.,
      7880058.,  8132650.,  6146952.,  6346056.,  6172232.,  6374920.,
      7961930.,  8219770.,  9853868.,  10168652., 11385966., 11751294.,
      11210686., 11574094., 11019022., 11380510., 10810974., 11170542.,
      9269836.,  9578732.,  7615706.,  7872138.,  5846792.,  6048968.,
      5769872.,  5950992.,  7432980.,  7663220.,  9187416.,  9468312.,
      10456156., 10781052., 10160252., 10482332., 9847964.,  10167228.,
      9519292.,  9835740.,  8058520.,  8329688.,  6497204.,  6721556.,
      4833808.,  5009808.,  4561816.,  4712664.,  5886030.,  6077790.,
      7286308.,  7520260.,  8070682.,  8339914.,  7641610.,  7907130.,
      7196154.,  7457962.,  6734314.,  6992410.,  5554180.,  5774564.,
      4290302.,  4471694.,  2941400.,  3082520.,  2476384.,  2588256.,
      3231480.,  3373880.,  4043024.,  4216976.,  4912040.,  5118568.,
      5161576.,  5371688.,  5411112.,  5624808.,  5660648.,  5877928.,
      5044880.,  5234192.,  4366520.,  4526840.,  3624544.,  3754848.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x2x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     220.,     764.,     826.,     2026.,    2104.,
      4216.,    3960.,    6584.,    5816.,    8952.,    7672.,    11320.,
      8938.,    12058.,   8252.,    10588.,   5358.,    6654.,    940.,
      2636.,    5016.,    8920.,    12740.,   19364.,   24624.,   34480.,
      32432.,   43312.,   40240.,   52144.,   48048.,   60976.,   46628.,
      57092.,   38488.,   45976.,   23116.,   27116.,   9898.,    14554.,
      28724.,   38804.,   57246.,   73518.,   96232.,   119464.,  114088.,
      138856.,  131944.,  158248.,  149800.,  177640.,  134574.,  156606.,
      105044.,  120500.,  60442.,   68554.,   34072.,   43096.,   85680.,
      104752.,  155848.,  185992.,  245600.,  287840.,  277600.,  321888.,
      309600.,  355936.,  341600.,  389984.,  294280.,  332104.,  222256.,
      248496.,  124504.,  138136.,  79320.,   91928.,   183344.,  209584.,
      313096.,  353992.,  469600.,  526176.,  501600.,  560224.,  533600.,
      594272.,  565600.,  628320.,  473032.,  521608.,  348592.,  382000.,
      191256.,  208472.,  124568.,  140760.,  281008.,  314416.,  470344.,
      521992.,  693600.,  764512.,  725600.,  798560.,  757600.,  832608.,
      789600.,  866656.,  651784.,  711112.,  474928.,  515504.,  258008.,
      278808.,  169816.,  189592.,  378672.,  419248.,  627592.,  689992.,
      917600.,  1002848., 949600.,  1036896., 981600.,  1070944., 1013600.,
      1104992., 830536.,  900616.,  601264.,  649008.,  324760.,  349144.,
      211114.,  228058.,  455732.,  490388.,  734622.,  787758.,  1048552.,
      1120936., 1078696., 1152616., 1108840., 1184296., 1138984., 1215976.,
      913326.,  972222.,  648788.,  688820.,  344602.,  365002.,  201356.,
      214060.,  427864.,  453784.,  680036.,  719684.,  958384.,  1012272.,
      982576.,  1037488., 1006768., 1062704., 1030960., 1087920., 816836.,
      860324.,  573976.,  603480.,  301868.,  316876.,  133374.,  140430.,
      280732.,  295100.,  442330.,  464266.,  618424.,  648184.,  632568.,
      662840.,  646712.,  677496.,  660856.,  692152.,  519562.,  543418.,
      362492.,  378652.,  189390.,  197598.,  1310.,    3502.,    6876.,
      11516.,   16954.,   24298.,   31800.,   42104.,   50040.,   60856.,
      68280.,   79608.,   86520.,   98360.,   74218.,   83482.,   55868.,
      62300.,   31214.,   34558.,   32172.,   37964.,   75672.,   87768.,
      131012.,  149924.,  198704.,  224944.,  239280.,  266544.,  279856.,
      308144.,  320432.,  349744.,  263204.,  285956.,  191064.,  206744.,
      103500.,  111596.,  99754.,   110554.,  220724.,  243092.,  363678.,
      398382.,  529384.,  577192.,  596392.,  645736.,  663400.,  714280.,
      730408.,  782824.,  588462.,  628926.,  419924.,  447668.,  224026.,
      238282.,  211224.,  228440.,  456368.,  491824.,  736456.,  791176.,
      1052512., 1127520., 1150048., 1227104., 1247584., 1326688., 1345120.,
      1426272., 1071496., 1133896., 756784.,  799408.,  399960.,  421784.,
      371160.,  391960.,  783408.,  826032.,  1237768., 1303240., 1735264.,
      1824608., 1832800., 1924192., 1930336., 2023776., 2027872., 2123360.,
      1594312., 1667464., 1112496., 1162288., 581400.,  606808.,  531096.,
      555480.,  1110448., 1160240., 1739080., 1815304., 2418016., 2521696.,
      2515552., 2621280., 2613088., 2720864., 2710624., 2820448., 2117128.,
      2201032., 1468208., 1525168., 762840.,  791832.,  691032.,  719000.,
      1437488., 1494448., 2240392., 2327368., 3100768., 3218784., 3198304.,
      3318368., 3295840., 3417952., 3393376., 3517536., 2639944., 2734600.,
      1823920., 1888048., 944280.,  976856.,  645034.,  668122.,  1335860.,
      1382804., 2073246., 2144814., 2857960., 2954920., 2937256., 3035752.,
      3016552., 3116584., 3095848., 3197416., 2399406., 2476734., 1651796.,
      1704116., 852250.,  878794.,  519308.,  536108.,  1071960., 1106072.,
      1658468., 1710404., 2279344., 2349616., 2336304., 2407600., 2393264.,
      2465584., 2450224., 2523568., 1893572., 1949348., 1299992., 1337688.,
      668972.,  688076.,  306686.,  315790.,  631452.,  649916.,  974554.,
      1002634., 1336248., 1374200., 1366776., 1405240., 1397304., 1436280.,
      1427832., 1467320., 1100938., 1130938., 754172.,  774428.,  387278.,
      397534.,  2590.,    6830.,    13532.,   22268.,   33082.,   46570.,
      61496.,   79992.,   96120.,   115128.,  130744.,  150264.,  165368.,
      185400.,  139498.,  154906.,  103484.,  114012.,  57070.,   62462.,
      63404.,   73292.,   146328.,  166616.,  249284.,  280484.,  372784.,
      415408.,  446128.,  489776.,  519472.,  564144.,  592816.,  638512.,
      479780.,  514820.,  343640.,  367512.,  183884.,  196076.,  189610.,
      206554.,  412724.,  447380.,  670110.,  723246.,  962536.,  1034920.,
      1078696., 1152616., 1194856., 1270312., 1311016., 1388008., 1042350.,
      1101246., 734804.,  774836.,  387610.,  408010.,  388376.,  413784.,
      827056.,  878896.,  1317064., 1396360., 1859424., 1967200., 2022496.,
      2132320., 2185568., 2297440., 2348640., 2462560., 1848712., 1935688.,
      1291312., 1350320., 675416.,  705432.,  663000.,  691992.,  1383472.,
      1442480., 2162440., 2252488., 3000928., 3123040., 3164000., 3288160.,
      3327072., 3453280., 3490144., 3618400., 2715592., 2813320., 1876400.,
      1942576., 971544.,  1005144., 937624.,  970200.,  1939888., 2006064.,
      3007816., 3108616., 4142432., 4278880., 4305504., 4444000., 4468576.,
      4609120., 4631648., 4774240., 3582472., 3690952., 2461488., 2534832.,
      1267672., 1304856., 1212248., 1248408., 2496304., 2569648., 3853192.,
      3964744., 5283936., 5434720., 5447008., 5599840., 5610080., 5764960.,
      5773152., 5930080., 4449352., 4568584., 3046576., 3127088., 1563800.,
      1604568., 1078954., 1108186., 2215988., 2275220., 3411870., 3501870.,
      4667368., 4788904., 4795816., 4918888., 4924264., 5048872., 5052712.,
      5178856., 3885486., 3981246., 2654804., 2719412., 1359898., 1392586.,
      837260.,  858156.,  1716056., 1758360., 2636900., 2701124., 3600304.,
      3686960., 3690032., 3777712., 3779760., 3868464., 3869488., 3959216.,
      2970308., 3038372., 2026008., 2071896., 1036076., 1059276., 479998.,
      491150.,  982172.,  1004732., 1506778., 1541002., 2054072., 2100216.,
      2100984., 2147640., 2147896., 2195064., 2194808., 2242488., 1682314.,
      1718458., 1145852., 1170204., 585166.,  597470.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 2}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      29808.,   31680.,   33584.,   35520.,   41740.,   44160.,   46620.,
      49120.,   55592.,   58592.,   61640.,   64736.,   71428.,   75040.,
      78708.,   82432.,   77588.,   81312.,   85092.,   88928.,   83748.,
      87584.,   91476.,   95424.,   89908.,   93856.,   97860.,   101920.,
      84296.,   87776.,   91304.,   94880.,   76380.,   79360.,   82380.,
      85440.,   66096.,   68544.,   71024.,   73536.,   64420.,   67440.,
      70500.,   73600.,   87825.,   91700.,   95625.,   99600.,   114310.,
      119080.,  123910.,  128800.,  143955.,  149660.,  155435.,  161280.,
      153615.,  159460.,  165375.,  171360.,  163275.,  169260.,  175315.,
      181440.,  172935.,  179060.,  185255.,  191520.,  159310.,  164680.,
      170110.,  175600.,  142125.,  146700.,  151325.,  156000.,  121300.,
      125040.,  128820.,  132640.,  118856.,  123296.,  127784.,  132320.,
      159370.,  165040.,  170770.,  176560.,  204396.,  211344.,  218364.,
      225456.,  254030.,  262304.,  270662.,  279104.,  267974.,  276416.,
      284942.,  293552.,  281918.,  290528.,  299222.,  308000.,  295862.,
      304640.,  313502.,  322448.,  269340.,  277008.,  284748.,  292560.,
      237730.,  244240.,  250810.,  257440.,  200936.,  206240.,  211592.,
      216992.,  197596.,  203728.,  209916.,  216160.,  261975.,  269780.,
      277655.,  285600.,  332570.,  342104.,  351722.,  361424.,  409493.,
      420812.,  432229.,  443744.,  428505.,  440020.,  451633.,  463344.,
      447517.,  459228.,  471037.,  482944.,  466529.,  478436.,  490441.,
      502544.,  421106.,  431480.,  441938.,  452480.,  368795.,  377580.,
      386435.,  395360.,  309484.,  316624.,  323820.,  331072.,  299516.,
      306768.,  314076.,  321440.,  392175.,  401380.,  410655.,  420000.,
      492170.,  503384.,  514682.,  526064.,  599613.,  612892.,  626269.,
      639744.,  618625.,  632100.,  645673.,  659344.,  637637.,  651308.,
      665077.,  678944.,  656649.,  670516.,  684481.,  698544.,  587426.,
      599480.,  611618.,  623840.,  510195.,  520380.,  530635.,  540960.,
      424844.,  433104.,  441420.,  449792.,  401436.,  409808.,  418236.,
      426720.,  522375.,  532980.,  543655.,  554400.,  651770.,  664664.,
      677642.,  690704.,  789733.,  804972.,  820309.,  835744.,  808745.,
      824180.,  839713.,  855344.,  827757.,  843388.,  859117.,  874944.,
      846769.,  862596.,  878521.,  894544.,  753746.,  767480.,  781298.,
      795200.,  651595.,  663180.,  674835.,  686560.,  540204.,  549584.,
      559020.,  568512.,  503356.,  512848.,  522396.,  532000.,  652575.,
      664580.,  676655.,  688800.,  811370.,  825944.,  840602.,  855344.,
      979853.,  997052.,  1014349., 1031744., 998865.,  1016260., 1033753.,
      1051344., 1017877., 1035468., 1053157., 1070944., 1036889., 1054676.,
      1072561., 1090544., 920066.,  935480.,  950978.,  966560.,  792995.,
      805980.,  819035.,  832160.,  655564.,  666064.,  676620.,  687232.,
      593960.,  602912.,  611912.,  620960.,  764530.,  775840.,  787210.,
      798640.,  944124.,  957840.,  971628.,  985488.,  1132838., 1149008.,
      1165262., 1181600., 1151486., 1167824., 1184246., 1200752., 1170134.,
      1186640., 1203230., 1219904., 1188782., 1205456., 1222214., 1239056.,
      1048236., 1062672., 1077180., 1091760., 898090.,  910240.,  922450.,
      934720.,  738248.,  748064.,  757928.,  767840.,  637860.,  646000.,
      654180.,  662400.,  817425.,  827700.,  838025.,  848400.,  1005190.,
      1017640., 1030150., 1042720., 1201235., 1215900., 1230635., 1245440.,
      1218735., 1233540., 1248415., 1263360., 1236235., 1251180., 1266195.,
      1281280., 1253735., 1268820., 1283975., 1299200., 1101070., 1114120.,
      1127230., 1140400., 939725.,  950700.,  961725.,  972800.,  769620.,
      778480.,  787380.,  796320.,  630576.,  637632.,  644720.,  651840.,
      805660.,  814560.,  823500.,  832480.,  987848.,  998624.,  1009448.,
      1020320., 1177204., 1189888., 1202628., 1215424., 1192772., 1205568.,
      1218420., 1231328., 1208340., 1221248., 1234212., 1247232., 1223908.,
      1236928., 1250004., 1263136., 1071848., 1083104., 1094408., 1105760.,
      912300.,  921760.,  931260.,  940800.,  745200.,  752832.,  760496.,
      768192.,  343408.,  351680.,  359984.,  368320.,  449740.,  460160.,
      470620.,  481120.,  564392.,  576992.,  589640.,  602336.,  687428.,
      702240.,  717108.,  732032.,  693588.,  708512.,  723492.,  738528.,
      699748.,  714784.,  729876.,  745024.,  705908.,  721056.,  736260.,
      751520.,  631496.,  644576.,  657704.,  670880.,  548380.,  559360.,
      570380.,  581440.,  456496.,  465344.,  474224.,  483136.,  568420.,
      579440.,  590500.,  601600.,  737825.,  751700.,  765625.,  779600.,
      918310.,  935080.,  951910.,  968800.,  1109955., 1129660., 1149435.,
      1169280., 1119615., 1139460., 1159375., 1179360., 1129275., 1149260.,
      1169315., 1189440., 1138935., 1159060., 1179255., 1199520., 1011310.,
      1028680., 1046110., 1063600., 872125.,  886700.,  901325.,  916000.,
      721300.,  733040.,  744820.,  756640.,  858056.,  872096.,  886184.,
      900320.,  1107370., 1125040., 1142770., 1160560., 1370796., 1392144.,
      1413564., 1435056., 1648430., 1673504., 1698662., 1723904., 1662374.,
      1687616., 1712942., 1738352., 1676318., 1701728., 1727222., 1752800.,
      1690262., 1715840., 1741502., 1767248., 1493340., 1515408., 1537548.,
      1559760., 1281730., 1300240., 1318810., 1337440., 1055336., 1070240.,
      1085192., 1100192., 1216796., 1234128., 1251516., 1268960., 1563975.,
      1585780., 1607655., 1629600., 1928570., 1954904., 1981322., 2007824.,
      2310693., 2341612., 2372629., 2403744., 2329705., 2360820., 2392033.,
      2423344., 2348717., 2380028., 2411437., 2442944., 2367729., 2399236.,
      2430841., 2462544., 2084306., 2111480., 2138738., 2166080., 1782795.,
      1805580., 1828435., 1851360., 1463084., 1481424., 1499820., 1518272.,
      1318716., 1337168., 1355676., 1374240., 1694175., 1717380., 1740655.,
      1764000., 2088170., 2116184., 2144282., 2172464., 2500813., 2533692.,
      2566669., 2599744., 2519825., 2552900., 2586073., 2619344., 2538837.,
      2572108., 2605477., 2638944., 2557849., 2591316., 2624881., 2658544.,
      2250626., 2279480., 2308418., 2337440., 1924195., 1948380., 1972635.,
      1996960., 1578444., 1597904., 1617420., 1636992., 1420636., 1440208.,
      1459836., 1479520., 1824375., 1848980., 1873655., 1898400., 2247770.,
      2277464., 2307242., 2337104., 2690933., 2725772., 2760709., 2795744.,
      2709945., 2744980., 2780113., 2815344., 2728957., 2764188., 2799517.,
      2834944., 2747969., 2783396., 2818921., 2854544., 2416946., 2447480.,
      2478098., 2508800., 2065595., 2091180., 2116835., 2142560., 1693804.,
      1714384., 1735020., 1755712., 1522556., 1543248., 1563996., 1584800.,
      1954575., 1980580., 2006655., 2032800., 2407370., 2438744., 2470202.,
      2501744., 2881053., 2917852., 2954749., 2991744., 2900065., 2937060.,
      2974153., 3011344., 2919077., 2956268., 2993557., 3030944., 2938089.,
      2975476., 3012961., 3050544., 2583266., 2615480., 2647778., 2680160.,
      2206995., 2233980., 2261035., 2288160., 1809164., 1830864., 1852620.,
      1874432., 1601960., 1620512., 1639112., 1657760., 2048530., 2071840.,
      2095210., 2118640., 2513724., 2541840., 2570028., 2598288., 2997638.,
      3030608., 3063662., 3096800., 3016286., 3049424., 3082646., 3115952.,
      3034934., 3068240., 3101630., 3135104., 3053582., 3087056., 3120614.,
      3154256., 2675436., 2704272., 2733180., 2762160., 2278090., 2302240.,
      2326450., 2350720., 1861448., 1880864., 1900328., 1919840., 1589860.,
      1606000., 1622180., 1638400., 2027425., 2047700., 2068025., 2088400.,
      2481190., 2505640., 2530150., 2554720., 2951235., 2979900., 3008635.,
      3037440., 2968735., 2997540., 3026415., 3055360., 2986235., 3015180.,
      3044195., 3073280., 3003735., 3032820., 3061975., 3091200., 2625070.,
      2650120., 2675230., 2700400., 2229725., 2250700., 2271725., 2292800.,
      1817620., 1834480., 1851380., 1868320., 1481776., 1495232., 1508720.,
      1522240., 1885660., 1902560., 1919500., 1936480., 2303048., 2323424.,
      2343848., 2364320., 2734004., 2757888., 2781828., 2805824., 2749572.,
      2773568., 2797620., 2821728., 2765140., 2789248., 2813412., 2837632.,
      2780708., 2804928., 2829204., 2853536., 2425448., 2446304., 2467208.,
      2488160., 2056300., 2073760., 2091260., 2108800., 1673200., 1687232.,
      1701296., 1715392., 657008.,  671680.,  686384.,  701120.,  857740.,
      876160.,  894620.,  913120.,  1073192., 1095392., 1117640., 1139936.,
      1303428., 1329440., 1355508., 1381632., 1309588., 1335712., 1361892.,
      1388128., 1315748., 1341984., 1368276., 1394624., 1321908., 1348256.,
      1374660., 1401120., 1178696., 1201376., 1224104., 1246880., 1020380.,
      1039360., 1058380., 1077440., 846896.,  862144.,  877424.,  892736.,
      1072420., 1091440., 1110500., 1129600., 1387825., 1411700., 1435625.,
      1459600., 1722310., 1751080., 1779910., 1808800., 2075955., 2109660.,
      2143435., 2177280., 2085615., 2119460., 2153375., 2187360., 2095275.,
      2129260., 2163315., 2197440., 2104935., 2139060., 2173255., 2207520.,
      1863310., 1892680., 1922110., 1951600., 1602125., 1626700., 1651325.,
      1676000., 1321300., 1341040., 1360820., 1380640., 1597256., 1620896.,
      1644584., 1668320., 2055370., 2085040., 2114770., 2144560., 2537196.,
      2572944., 2608764., 2644656., 3042830., 3084704., 3126662., 3168704.,
      3056774., 3098816., 3140942., 3183152., 3070718., 3112928., 3155222.,
      3197600., 3084662., 3127040., 3169502., 3212048., 2717340., 2753808.,
      2790348., 2826960., 2325730., 2356240., 2386810., 2417440., 1909736.,
      1934240., 1958792., 1983392., 2235996., 2264528., 2293116., 2321760.,
      2865975., 2901780., 2937655., 2973600., 3524570., 3567704., 3610922.,
      3654224., 4211893., 4262412., 4313029., 4363744., 4230905., 4281620.,
      4332433., 4383344., 4249917., 4300828., 4351837., 4402944., 4268929.,
      4320036., 4371241., 4422544., 3747506., 3791480., 3835538., 3879680.,
      3196795., 3233580., 3270435., 3307360., 2616684., 2646224., 2675820.,
      2705472., 2337916., 2367568., 2397276., 2427040., 2996175., 3033380.,
      3070655., 3108000., 3684170., 3728984., 3773882., 3818864., 4402013.,
      4454492., 4507069., 4559744., 4421025., 4473700., 4526473., 4579344.,
      4440037., 4492908., 4545877., 4598944., 4459049., 4512116., 4565281.,
      4618544., 3913826., 3959480., 4005218., 4051040., 3338195., 3376380.,
      3414635., 3452960., 2732044., 2762704., 2793420., 2824192., 2439836.,
      2470608., 2501436., 2532320., 3126375., 3164980., 3203655., 3242400.,
      3843770., 3890264., 3936842., 3983504., 4592133., 4646572., 4701109.,
      4755744., 4611145., 4665780., 4720513., 4775344., 4630157., 4684988.,
      4739917., 4794944., 4649169., 4704196., 4759321., 4814544., 4080146.,
      4127480., 4174898., 4222400., 3479595., 3519180., 3558835., 3598560.,
      2847404., 2879184., 2911020., 2942912., 2541756., 2573648., 2605596.,
      2637600., 3256575., 3296580., 3336655., 3376800., 4003370., 4051544.,
      4099802., 4148144., 4782253., 4838652., 4895149., 4951744., 4801265.,
      4857860., 4914553., 4971344., 4820277., 4877068., 4933957., 4990944.,
      4839289., 4896276., 4953361., 5010544., 4246466., 4295480., 4344578.,
      4393760., 3620995., 3661980., 3703035., 3744160., 2962764., 2995664.,
      3028620., 3061632., 2609960., 2638112., 2666312., 2694560., 3332530.,
      3367840., 3403210., 3438640., 4083324., 4125840., 4168428., 4211088.,
      4862438., 4912208., 4962062., 5012000., 4881086., 4931024., 4981046.,
      5031152., 4899734., 4949840., 5000030., 5050304., 4918382., 4968656.,
      5019014., 5069456., 4302636., 4345872., 4389180., 4432560., 3658090.,
      3694240., 3730450., 3766720., 2984648., 3013664., 3042728., 3071840.,
      2541860., 2566000., 2590180., 2614400., 3237425., 3267700., 3298025.,
      3328400., 3957190., 3993640., 4030150., 4066720., 4701235., 4743900.,
      4786635., 4829440., 4718735., 4761540., 4804415., 4847360., 4736235.,
      4779180., 4822195., 4865280., 4753735., 4796820., 4839975., 4883200.,
      4149070., 4186120., 4223230., 4260400., 3519725., 3550700., 3581725.,
      3612800., 2865620., 2890480., 2915380., 2940320., 2332976., 2352832.,
      2372720., 2392640., 2965660., 2990560., 3015500., 3040480., 3618248.,
      3648224., 3678248., 3708320., 4290804., 4325888., 4361028., 4396224.,
      4306372., 4341568., 4376820., 4412128., 4321940., 4357248., 4392612.,
      4428032., 4337508., 4372928., 4408404., 4443936., 3779048., 3809504.,
      3840008., 3870560., 3200300., 3225760., 3251260., 3276800., 2601200.,
      2621632., 2642096., 2662592.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,      4.,      9.,      16.,     10.,     24.,     42.,     64.,
      43.,     76.,     115.,    160.,    116.,    176.,    244.,    320.,
      228.,    304.,    388.,    480.,    340.,    432.,    532.,    640.,
      452.,    560.,    676.,    800.,    535.,    628.,    727.,    832.,
      498.,    568.,    642.,    720.,    325.,    364.,    405.,    448.,
      46.,     96.,     150.,    208.,    284.,    400.,    524.,    656.,
      746.,    944.,    1154.,   1376.,   1464.,   1760.,   2072.,   2400.,
      1944.,   2272.,   2616.,   2976.,   2424.,   2784.,   3160.,   3552.,
      2904.,   3296.,   3704.,   4128.,   2834.,   3152.,   3482.,   3824.,
      2348.,   2576.,   2812.,   3056.,   1414.,   1536.,   1662.,   1792.,
      583.,    724.,    871.,    1024.,   1718.,   2024.,   2342.,   2672.,
      3453.,   3948.,   4461.,   4992.,   5836.,   6544.,   7276.,   8032.,
      6940.,   7696.,   8476.,   9280.,   8044.,   8848.,   9676.,   10528.,
      9148.,   10000.,  10876.,  11776.,  8241.,   8916.,   9609.,   10320.,
      6446.,   6920.,   7406.,   7904.,   3715.,   3964.,   4219.,   4480.,
      2060.,   2336.,   2620.,   2912.,   5208.,   5792.,   6392.,   7008.,
      9508.,   10432.,  11380.,  12352.,  15024.,  16320.,  17648.,  19008.,
      17008.,  18368.,  19760.,  21184.,  18992.,  20416.,  21872.,  23360.,
      20976.,  22464.,  23984.,  25536.,  18100.,  19264.,  20452.,  21664.,
      13688.,  14496.,  15320.,  16160.,  7676.,   8096.,   8524.,   8960.,
      4860.,   5248.,   5644.,   6048.,   11256.,  12064.,  12888.,  13728.,
      19252.,  20512.,  21796.,  23104.,  28912.,  30656.,  32432.,  34240.,
      30896.,  32704.,  34544.,  36416.,  32880.,  34752.,  36656.,  38592.,
      34864.,  36800.,  38768.,  40768.,  29188.,  30688.,  32212.,  33760.,
      21528.,  22560.,  23608.,  24672.,  11820.,  12352.,  12892.,  13440.,
      7660.,   8160.,   8668.,   9184.,   17304.,  18336.,  19384.,  20448.,
      28996.,  30592.,  32212.,  33856.,  42800.,  44992.,  47216.,  49472.,
      44784.,  47040.,  49328.,  51648.,  46768.,  49088.,  51440.,  53824.,
      48752.,  51136.,  53552.,  56000.,  40276.,  42112.,  43972.,  45856.,
      29368.,  30624.,  31896.,  33184.,  15964.,  16608.,  17260.,  17920.,
      10460.,  11072.,  11692.,  12320.,  23352.,  24608.,  25880.,  27168.,
      38740.,  40672.,  42628.,  44608.,  56688.,  59328.,  62000.,  64704.,
      58672.,  61376.,  64112.,  66880.,  60656.,  63424.,  66224.,  69056.,
      62640.,  65472.,  68336.,  71232.,  51364.,  53536.,  55732.,  57952.,
      37208.,  38688.,  40184.,  41696.,  20108.,  20864.,  21628.,  22400.,
      13063.,  13588.,  14119.,  14656.,  28214.,  29288.,  30374.,  31472.,
      45501.,  47148.,  48813.,  50496.,  64972.,  67216.,  69484.,  71776.,
      66844.,  69136.,  71452.,  73792.,  68716.,  71056.,  73420.,  75808.,
      70588.,  72976.,  75388.,  77824.,  56625.,  58452.,  60297.,  62160.,
      40238.,  41480.,  42734.,  44000.,  21379.,  22012.,  22651.,  23296.,
      12486.,  12880.,  13278.,  13680.,  26540.,  27344.,  28156.,  28976.,
      42194.,  43424.,  44666.,  45920.,  59480.,  61152.,  62840.,  64544.,
      60984.,  62688.,  64408.,  66144.,  62488.,  64224.,  65976.,  67744.,
      63992.,  65760.,  67544.,  69344.,  50714.,  52064.,  53426.,  54800.,
      35644.,  36560.,  37484.,  38416.,  18750.,  19216.,  19686.,  20160.,
      8281.,   8500.,   8721.,   8944.,   17434.,  17880.,  18330.,  18784.,
      27475.,  28156.,  28843.,  29536.,  38420.,  39344.,  40276.,  41216.,
      39300.,  40240.,  41188.,  42144.,  40180.,  41136.,  42100.,  43072.,
      41060.,  42032.,  43012.,  44000.,  32287.,  33028.,  33775.,  34528.,
      22530.,  23032.,  23538.,  24048.,  11773.,  12028.,  12285.,  12544.,
      65.,     132.,    201.,    272.,    394.,    536.,    682.,    832.,
      1003.,   1228.,   1459.,   1696.,   1908.,   2224.,   2548.,   2880.,
      3044.,   3376.,   3716.,   4064.,   4180.,   4528.,   4884.,   5248.,
      5316.,   5680.,   6052.,   6432.,   4567.,   4852.,   5143.,   5440.,
      3442.,   3640.,   3842.,   4048.,   1925.,   2028.,   2133.,   2240.,
      1966.,   2144.,   2326.,   2512.,   4636.,   5008.,   5388.,   5776.,
      8042.,   8624.,   9218.,   9824.,   12216.,  13024.,  13848.,  14688.,
      14744.,  15584.,  16440.,  17312.,  17272.,  18144.,  19032.,  19936.,
      19800.,  20704.,  21624.,  22560.,  16274.,  16976.,  17690.,  18416.,
      11820.,  12304.,  12796.,  13296.,  6406.,   6656.,   6910.,   7168.,
      6151.,   6484.,   6823.,   7168.,   13622.,  14312.,  15014.,  15728.,
      22461.,  23532.,  24621.,  25728.,  32716.,  34192.,  35692.,  37216.,
      36892.,  38416.,  39964.,  41536.,  41068.,  42640.,  44236.,  45856.,
      45244.,  46864.,  48508.,  50176.,  36465.,  37716.,  38985.,  40272.,
      26030.,  26888.,  27758.,  28640.,  13891.,  14332.,  14779.,  15232.,
      13068.,  13600.,  14140.,  14688.,  28248.,  29344.,  30456.,  31584.,
      45604.,  47296.,  49012.,  50752.,  65200.,  67520.,  69872.,  72256.,
      71280.,  73664.,  76080.,  78528.,  77360.,  79808.,  82288.,  84800.,
      83440.,  85952.,  88496.,  91072.,  66484.,  68416.,  70372.,  72352.,
      46968.,  48288.,  49624.,  50976.,  24828.,  25504.,  26188.,  26880.,
      23036.,  23680.,  24332.,  24992.,  48632.,  49952.,  51288.,  52640.,
      76852.,  78880.,  80932.,  83008.,  107760., 110528., 113328., 116160.,
      113840., 116672., 119536., 122432., 119920., 122816., 125744., 128704.,
      126000., 128960., 131952., 134976., 99076.,  101344., 103636., 105952.,
      69144.,  70688.,  72248.,  73824.,  36140.,  36928.,  37724.,  38528.,
      33004.,  33760.,  34524.,  35296.,  69016.,  70560.,  72120.,  73696.,
      108100., 110464., 112852., 115264., 150320., 153536., 156784., 160064.,
      156400., 159680., 162992., 166336., 162480., 165824., 169200., 172608.,
      168560., 171968., 175408., 178880., 131668., 134272., 136900., 139552.,
      91320.,  93088.,  94872.,  96672.,  47452.,  48352.,  49260.,  50176.,
      42972.,  43840.,  44716.,  45600.,  89400.,  91168.,  92952.,  94752.,
      139348., 142048., 144772., 147520., 192880., 196544., 200240., 203968.,
      198960., 202688., 206448., 210240., 205040., 208832., 212656., 216512.,
      211120., 214976., 218864., 222784., 164260., 167200., 170164., 173152.,
      113496., 115488., 117496., 119520., 58764.,  59776.,  60796.,  61824.,
      40135.,  40852.,  41575.,  42304.,  83126.,  84584.,  86054.,  87536.,
      129021., 131244., 133485., 135744., 177868., 180880., 183916., 186976.,
      182812., 185872., 188956., 192064., 187756., 190864., 193996., 197152.,
      192700., 195856., 199036., 202240., 149361., 151764., 154185., 156624.,
      102830., 104456., 106094., 107744., 53059.,  53884.,  54715.,  55552.,
      32326.,  32848.,  33374.,  33904.,  66732.,  67792.,  68860.,  69936.,
      103250., 104864., 106490., 108128., 141912., 144096., 146296., 148512.,
      145464., 147680., 149912., 152160., 149016., 151264., 153528., 155808.,
      152568., 154848., 157144., 159456., 117914., 119648., 121394., 123152.,
      80956.,  82128.,  83308.,  84496.,  41662.,  42256.,  42854.,  43456.,
      19097.,  19380.,  19665.,  19952.,  39322.,  39896.,  40474.,  41056.,
      60691.,  61564.,  62443.,  63328.,  83220.,  84400.,  85588.,  86784.,
      85124.,  86320.,  87524.,  88736.,  87028.,  88240.,  89460.,  90688.,
      88932.,  90160.,  91396.,  92640.,  68575.,  69508.,  70447.,  71392.,
      46978.,  47608.,  48242.,  48880.,  24125.,  24444.,  24765.,  25088.,
      129.,    260.,    393.,    528.,    778.,    1048.,   1322.,   1600.,
      1963.,   2380.,   2803.,   3232.,   3700.,   4272.,   4852.,   5440.,
      5860.,   6448.,   7044.,   7648.,   8020.,   8624.,   9236.,   9856.,
      10180.,  10800.,  11428.,  12064.,  8599.,   9076.,   9559.,   10048.,
      6386.,   6712.,   7042.,   7376.,   3525.,   3692.,   3861.,   4032.,
      3886.,   4192.,   4502.,   4816.,   8988.,   9616.,   10252.,  10896.,
      15338.,  16304.,  17282.,  18272.,  22968.,  24288.,  25624.,  26976.,
      27544.,  28896.,  30264.,  31648.,  32120.,  33504.,  34904.,  36320.,
      36696.,  38112.,  39544.,  40992.,  29714.,  30800.,  31898.,  33008.,
      21292.,  22032.,  22780.,  23536.,  11398.,  11776.,  12158.,  12544.,
      11719.,  12244.,  12775.,  13312.,  25526.,  26600.,  27686.,  28784.,
      41469.,  43116.,  44781.,  46464.,  59596.,  61840.,  64108.,  66400.,
      66844.,  69136.,  71452.,  73792.,  74092.,  76432.,  78796.,  81184.,
      81340.,  83728.,  86140.,  88576.,  64689.,  66516.,  68361.,  70224.,
      45614.,  46856.,  48110.,  49376.,  24067.,  24700.,  25339.,  25984.,
      24076.,  24864.,  25660.,  26464.,  51288.,  52896.,  54520.,  56160.,
      81700.,  84160.,  86644.,  89152.,  115376., 118720., 122096., 125504.,
      125552., 128960., 132400., 135872., 135728., 139200., 142704., 146240.,
      145904., 149440., 153008., 156608., 114868., 117568., 120292., 123040.,
      80248.,  82080.,  83928.,  85792.,  41980.,  42912.,  43852.,  44800.,
      41212.,  42112.,  43020.,  43936.,  86008.,  87840.,  89688.,  91552.,
      134452., 137248., 140068., 142912., 186608., 190400., 194224., 198080.,
      196784., 200640., 204528., 208448., 206960., 210880., 214832., 218816.,
      217136., 221120., 225136., 229184., 168964., 172000., 175060., 178144.,
      116760., 118816., 120888., 122976., 60460.,  61504.,  62556.,  63616.,
      58348.,  59360.,  60380.,  61408.,  120728., 122784., 124856., 126944.,
      187204., 190336., 193492., 196672., 257840., 262080., 266352., 270656.,
      268016., 272320., 276656., 281024., 278192., 282560., 286960., 291392.,
      288368., 292800., 297264., 301760., 223060., 226432., 229828., 233248.,
      153272., 155552., 157848., 160160., 78940.,  80096.,  81260.,  82432.,
      75484.,  76608.,  77740.,  78880.,  155448., 157728., 160024., 162336.,
      239956., 243424., 246916., 250432., 329072., 333760., 338480., 343232.,
      339248., 344000., 348784., 353600., 349424., 354240., 359088., 363968.,
      359600., 364480., 369392., 374336., 277156., 280864., 284596., 288352.,
      189784., 192288., 194808., 197344., 97420.,  98688.,  99964.,  101248.,
      67207.,  68116.,  69031.,  69952.,  138038., 139880., 141734., 143600.,
      212541., 215340., 218157., 220992., 290764., 294544., 298348., 302176.,
      298780., 302608., 306460., 310336., 306796., 310672., 314572., 318496.,
      314812., 318736., 322684., 326656., 242097., 245076., 248073., 251088.,
      165422., 167432., 169454., 171488., 84739.,  85756.,  86779.,  87808.,
      52166.,  52816.,  53470.,  54128.,  106924., 108240., 109564., 110896.,
      164306., 166304., 168314., 170336., 224344., 227040., 229752., 232480.,
      229944., 232672., 235416., 238176., 235544., 238304., 241080., 243872.,
      241144., 243936., 246744., 249568., 185114., 187232., 189362., 191504.,
      126268., 127696., 129132., 130576., 64574.,  65296.,  66022.,  66752.,
      29913.,  30260.,  30609.,  30960.,  61210.,  61912.,  62618.,  63328.,
      93907.,  94972.,  96043.,  97120.,  128020., 129456., 130900., 132352.,
      130948., 132400., 133860., 135328., 133876., 135344., 136820., 138304.,
      136804., 138288., 139780., 141280., 104863., 105988., 107119., 108256.,
      71426.,  72184.,  72946.,  73712.,  36477.,  36860.,  37245.,  37632.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 4}};
  const int multiplier = 1;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      234768.,   249680.,   264848.,   280272.,   329140.,   348420.,
      368020.,   387940.,   438808.,   462712.,   487000.,   511672.,
      564284.,   593068.,   622300.,   651980.,   613340.,   643020.,
      673148.,   703724.,   662396.,   692972.,   723996.,   755468.,
      711452.,   742924.,   774844.,   807212.,   667480.,   695224.,
      723352.,   751864.,   605140.,   628900.,   652980.,   677380.,
      523920.,   543440.,   563216.,   583248.,   509380.,   533460.,
      557860.,   582580.,   694925.,   725825.,   757125.,   788825.,
      905030.,   943070.,   981590.,   1020590.,  1140335.,  1185835.,
      1231895.,  1278515.,  1217335.,  1263955.,  1311135.,  1358875.,
      1294335.,  1342075.,  1390375.,  1439235.,  1371335.,  1420195.,
      1469615.,  1519595.,  1263830.,  1306670.,  1349990.,  1393790.,
      1127925.,  1164425.,  1201325.,  1238625.,  962980.,   992820.,
      1022980.,  1053460.,  942040.,   977464.,   1013272.,  1049464.,
      1263710.,  1308950.,  1354670.,  1400870.,  1621380.,  1676820.,
      1732836.,  1789428.,  2015818.,  2081842.,  2148538.,  2215906.,
      2127034.,  2194402.,  2262442.,  2331154.,  2238250.,  2306962.,
      2376346.,  2446402.,  2349466.,  2419522.,  2490250.,  2561650.,
      2139492.,  2200692.,  2262468.,  2324820.,  1888910.,  1940870.,
      1993310.,  2046230.,  1596952.,  1639288.,  1682008.,  1725112.,
      1568588.,  1617532.,  1666924.,  1716764.,  2080295.,  2142595.,
      2205455.,  2268875.,  2641618.,  2717722.,  2794498.,  2871946.,
      3253453.,  3343809.,  3434949.,  3526873.,  3405157.,  3497081.,
      3589789.,  3683281.,  3556861.,  3650353.,  3744629.,  3839689.,
      3708565.,  3803625.,  3899469.,  3996097.,  3348226.,  3431050.,
      3514546.,  3598714.,  2932895.,  3003035.,  3073735.,  3144995.,
      2461676.,  2518684.,  2576140.,  2634044.,  2381708.,  2439612.,
      2497964.,  2556764.,  3119095.,  3192595.,  3266655.,  3341275.,
      3915058.,  4004602.,  4094818.,  4185706.,  4770493.,  4876529.,
      4983349.,  5090953.,  4922197.,  5029801.,  5138189.,  5247361.,
      5073901.,  5183073.,  5293029.,  5403769.,  5225605.,  5336345.,
      5447869.,  5560177.,  4675426.,  4771690.,  4868626.,  4966234.,
      4061295.,  4142635.,  4224535.,  4306995.,  3382316.,  3448284.,
      3514700.,  3581564.,  3194828.,  3261692.,  3329004.,  3396764.,
      4157895.,  4242595.,  4327855.,  4413675.,  5188498.,  5291482.,
      5395138.,  5499466.,  6287533.,  6409249.,  6531749.,  6655033.,
      6439237.,  6562521.,  6686589.,  6811441.,  6590941.,  6715793.,
      6841429.,  6967849.,  6742645.,  6869065.,  6996269.,  7124257.,
      6002626.,  6112330.,  6222706.,  6333754.,  5189695.,  5282235.,
      5375335.,  5468995.,  4302956.,  4377884.,  4453260.,  4529084.,
      4007948.,  4083772.,  4160044.,  4236764.,  5196695.,  5292595.,
      5389055.,  5486075.,  6461938.,  6578362.,  6695458.,  6813226.,
      7804573.,  7941969.,  8080149.,  8219113.,  7956277.,  8095241.,
      8234989.,  8375521.,  8107981.,  8248513.,  8389829.,  8531929.,
      8259685.,  8401785.,  8544669.,  8688337.,  7329826.,  7452970.,
      7576786.,  7701274.,  6318095.,  6421835.,  6526135.,  6630995.,
      5223596.,  5307484.,  5391820.,  5476604.,  4733848.,  4805368.,
      4877272.,  4949560.,  6093710.,  6184070.,  6274910.,  6366230.,
      7525668.,  7635252.,  7745412.,  7856148.,  9030490.,  9159682.,
      9289546.,  9420082.,  9179338.,  9309874.,  9441082.,  9572962.,
      9328186.,  9460066.,  9592618.,  9725842.,  9477034.,  9610258.,
      9744154.,  9878722.,  8357124.,  8472468.,  8588388.,  8704884.,
      7160510.,  7257590.,  7355150.,  7453190.,  5886424.,  5964856.,
      6043672.,  6122872.,  5086660.,  5151700.,  5217060.,  5282740.,
      6518925.,  6601025.,  6683525.,  6766425.,  8016710.,  8116190.,
      8216150.,  8316590.,  9580655.,  9697835.,  9815575.,  9933875.,
      9720375.,  9838675.,  9957535.,  10076955., 9860095.,  9979515.,
      10099495., 10220035., 9999815.,  10120355., 10241455., 10363115.,
      8782550.,  8886830.,  8991590.,  9096830.,  7495925.,  7583625.,
      7671725.,  7760225.,  6139300.,  6210100.,  6281220.,  6352660.,
      5030544.,  5086928.,  5143568.,  5200464.,  6427540.,  6498660.,
      6570100.,  6641860.,  7881304.,  7967416.,  8053912.,  8140792.,
      9392348.,  9493708.,  9595516.,  9697772.,  9516668.,  9618924.,
      9721628.,  9824780.,  9640988.,  9744140.,  9847740.,  9951788.,
      9765308.,  9869356.,  9973852.,  10078796., 8552344.,  8642296.,
      8732632.,  8823352.,  7279540.,  7355140.,  7431060.,  7507300.,
      5946384.,  6007376.,  6068624.,  6130128.,  2620176.,  2669904.,
      2719888.,  2770128.,  3397940.,  3460740.,  3523860.,  3587300.,
      4225816.,  4301944.,  4378456.,  4455352.,  5104316.,  5194028.,
      5284188.,  5374796.,  5153372.,  5243980.,  5335036.,  5426540.,
      5084668.,  5172076.,  5259932.,  5348236.,  4999580.,  5083788.,
      5168444.,  5253548.,  4378712.,  4450488.,  4522648.,  4595192.,
      3704660.,  3763748.,  3823156.,  3882884.,  2976912.,  3023056.,
      3069456.,  3116112.,  3845444.,  3900756.,  3956388.,  4012340.,
      4943085.,  5013025.,  5083365.,  5154105.,  6096518.,  6181406.,
      6266774.,  6352622.,  7306383.,  7406539.,  7507255.,  7608531.,
      7383383.,  7484659.,  7586495.,  7688891.,  7227935.,  7326235.,
      7425095.,  7524515.,  7056103.,  7151427.,  7247311.,  7343755.,
      6128662.,  6210158.,  6292134.,  6374590.,  5141589.,  5208937.,
      5276685.,  5344833.,  4094244.,  4147124.,  4200324.,  4253844.,
      5128408.,  5191480.,  5254936.,  5318776.,  6565790.,  6645590.,
      6725870.,  6806630.,  8066820.,  8163732.,  8261220.,  8359284.,
      9632266.,  9746674.,  9861754.,  9977506.,  9743482.,  9859234.,
      9975658.,  10092754., 9507562.,  9620562.,  9734234.,  9848578.,
      9255258.,  9365506.,  9476426.,  9588018.,  8007396.,  8101876.,
      8196932.,  8292564.,  6691278.,  6769606.,  6848414.,  6927702.,
      5306136.,  5367928.,  5430104.,  5492664.,  6504908.,  6577916.,
      6651372.,  6725276.,  8310855.,  8403235.,  8496175.,  8589675.,
      10190482., 10302682., 10415554., 10529098., 12144685., 12277153.,
      12410405., 12544441., 12296389., 12430425., 12565245., 12700849.,
      11986269., 12117777., 12250069., 12383145., 11659765., 11788745.,
      11918509., 12049057., 10068674., 10179402., 10290802., 10402874.,
      8398527.,  8490555.,  8583143.,  8676291.,  6648428.,  6721308.,
      6794636.,  6868412.,  5372428.,  5438012.,  5504044.,  5570524.,
      6876695.,  6959795.,  7043455.,  7127675.,  8447218.,  8548282.,
      8650018.,  8752426.,  10084893., 10204369., 10324629., 10445673.,
      10236597., 10357641., 10479469., 10602081., 9811789.,  9930305.,
      10049605., 10169689., 9370597.,  9486585.,  9603357.,  9720913.,
      8051490.,  8151082.,  8251346.,  8352282.,  6660751.,  6743499.,
      6826807.,  6910675.,  5197484.,  5262940.,  5328844.,  5395196.,
      3781196.,  3839356.,  3897964.,  3957020.,  4869095.,  4942915.,
      5017295.,  5092235.,  6015826.,  6105754.,  6196354.,  6287626.,
      7222285.,  7328769.,  7436037.,  7544089.,  7373989.,  7482041.,
      7590877.,  7700497.,  6834493.,  6940017.,  7046325.,  7153417.,
      6278613.,  6381609.,  6485389.,  6589953.,  5346178.,  5434634.,
      5523762.,  5613562.,  4349535.,  4423003.,  4497031.,  4571619.,
      3287788.,  3345820.,  3404300.,  3463228.,  1731212.,  1781948.,
      1833132.,  1884764.,  2288055.,  2352595.,  2417695.,  2483355.,
      2896306.,  2975098.,  3054562.,  3134698.,  3556861.,  3650353.,
      3744629.,  3839689.,  3708565.,  3803625.,  3899469.,  3996097.,
      3860269.,  3956897.,  4054309.,  4152505.,  4011973.,  4110169.,
      4209149.,  4308913.,  3613666.,  3699178.,  3785362.,  3872218.,
      3158575.,  3230955.,  3303895.,  3377395.,  2645804.,  2704604.,
      2763852.,  2823548.,  2481304.,  2531320.,  2581720.,  2632504.,
      3224270.,  3287750.,  3351710.,  3416150.,  4017828.,  4095156.,
      4173060.,  4251540.,  4862746.,  4954306.,  5046538.,  5139442.,
      5011594.,  5104498.,  5198074.,  5292322.,  5160442.,  5254690.,
      5349610.,  5445202.,  5309290.,  5404882.,  5501146.,  5598082.,
      4720260.,  4803348.,  4887012.,  4971252.,  4076030.,  4146230.,
      4216910.,  4288070.,  3375832.,  3432760.,  3490072.,  3547768.,
      2958660.,  3005780.,  3053220.,  3100980.,  3814125.,  3873825.,
      3933925.,  3994425.,  4717190.,  4789790.,  4862870.,  4936430.,
      5668495.,  5754315.,  5840695.,  5927635.,  5808215.,  5895155.,
      5982655.,  6070715.,  5947935.,  6035995.,  6124615.,  6213795.,
      6087655.,  6176835.,  6266575.,  6356875.,  5375510.,  5452910.,
      5530790.,  5609150.,  4611925.,  4677225.,  4742925.,  4809025.,
      3796260.,  3849140.,  3902340.,  3955860.,  3127440.,  3169488.,
      3211792.,  3254352.,  4012820.,  4066020.,  4119540.,  4173380.,
      4940632.,  5005240.,  5070232.,  5135608.,  5911388.,  5987660.,
      6064380.,  6141548.,  6035708.,  6112876.,  6190492.,  6268556.,
      6160028.,  6238092.,  6316604.,  6395564.,  6284348.,  6363308.,
      6442716.,  6522572.,  5525656.,  5594104.,  5662936.,  5732152.,
      4721460.,  4779140.,  4837140.,  4895460.,  3871248.,  3917904.,
      3964816.,  4011984.,  2031888.,  2083664.,  2135696.,  2187984.,
      2667700.,  2733060.,  2798740.,  2864740.,  3355672.,  3434872.,
      3514456.,  3594424.,  4096316.,  4189612.,  4283356.,  4377548.,
      4145372.,  4239564.,  4334204.,  4429292.,  4194428.,  4289516.,
      4385052.,  4481036.,  4243484.,  4339468.,  4435900.,  4532780.,
      3805528.,  3888568.,  3971992.,  4055800.,  3312340.,  3382180.,
      3452340.,  3522820.,  2763408.,  2819792.,  2876432.,  2933328.,
      3400900.,  3471060.,  3541540.,  3612340.,  4424525.,  4513025.,
      4601925.,  4691225.,  5518790.,  5625950.,  5733590.,  5841710.,
      6684335.,  6810475.,  6937175.,  7064435.,  6761335.,  6888595.,
      7016415.,  7144795.,  6838335.,  6966715.,  7095655.,  7225155.,
      6915335.,  7044835.,  7174895.,  7305515.,  6154070.,  6266030.,
      6378470.,  6491390.,  5318325.,  5412425.,  5506925.,  5601825.,
      4407460.,  4483380.,  4559620.,  4636180.,  5186008.,  5276728.,
      5367832.,  5459320.,  6706910.,  6821270.,  6936110.,  7051430.,
      8319108.,  8457492.,  8596452.,  8735988.,  10020298., 10178994.,
      10338362., 10498402., 10112058., 10268002., 10424618., 10581906.,
      10187434., 10340626., 10494490., 10649026., 10246426., 10396866.,
      10547978., 10699762., 8992868.,  9120628.,  9248964.,  9377876.,
      7643406.,  7748102.,  7853278.,  7958934.,  6197272.,  6278520.,
      6360152.,  6442168.,  7312460.,  7409532.,  7507052.,  7605020.,
      9380455.,  9502915.,  9625935.,  9749515.,  11546194., 11694490.,
      11843458., 11993098., 13692813., 13863297., 14034565., 14206617.,
      13710373., 13878329., 14047069., 14216593., 13711549., 13876977.,
      14043189., 14210185., 13696341., 13859241., 14022925., 14187393.,
      11906690., 12045322., 12184626., 12324602., 10013919., 10127835.,
      10242311., 10357347., 8017132.,  8105884.,  8195084.,  8284732.,
      7556236.,  7645884.,  7735980.,  7826524.,  9666615.,  9779795.,
      9893535.,  10007835., 11867314., 12004474., 12142306., 12280810.,
      13926781., 14084273., 14242549., 14401609., 13829653., 13984617.,
      14140365., 14296897., 13716141., 13868577., 14021797., 14175801.,
      13586245., 13736153., 13886845., 14038321., 11724514., 11852010.,
      11980178., 12109018., 9767087.,  9871723.,  9976919.,  10082675.,
      7713068.,  7794396.,  7876172.,  7958396.,  7341260.,  7423484.,
      7506156.,  7589276.,  9379335.,  9483235.,  9587695.,  9692715.,
      11500306., 11626330., 11753026., 11880394., 13357933., 13502433.,
      13647717., 13793785., 13146117., 13288089., 13430845., 13574385.,
      12917917., 13057361., 13197589., 13338601., 12673333., 12810249.,
      12947949., 13086433., 10854210., 10970570., 11087602., 11205306.,
      8946815.,  9042171.,  9138087.,  9234563.,  6950252.,  7024156.,
      7098508.,  7173308.,  6667532.,  6742332.,  6817580.,  6893276.,
      8518615.,  8613235.,  8708415.,  8804155.,  10445170., 10560058.,
      10675618., 10791850., 11986269., 12117777., 12250069., 12383145.,
      11659765., 11788745., 11918509., 12049057., 11316877., 11443329.,
      11570565., 11698585., 10957605., 11081529., 11206237., 11331729.,
      9295778.,  9401002.,  9506898.,  9613466.,  7553103.,  7639179.,
      7725815.,  7813011.,  5728684.,  5795164.,  5862092.,  5929468.,
      5496216.,  5557496.,  5619160.,  5681208.,  7021070.,  7098630.,
      7176670.,  7255190.,  8607780.,  8702004.,  8796804.,  8892180.,
      9680602.,  9787778.,  9895626.,  10004146., 9236554.,  9340978.,
      9446074.,  9551842.,  8776122.,  8877794.,  8980138.,  9083154.,
      8299306.,  8398226.,  8497818.,  8598082.,  6907908.,  6991508.,
      7075684.,  7160436.,  5450046.,  5517942.,  5586318.,  5655174.,
      3924952.,  3976760.,  4028952.,  4081528.,  3693764.,  3739348.,
      3785252.,  3831476.,  4729165.,  4786945.,  4845125.,  4903705.,
      5810630.,  5880926.,  5951702.,  6022958.,  6247599.,  6326635.,
      6406231.,  6486387.,  5679735.,  5755795.,  5832415.,  5909595.,
      5095487.,  5168571.,  5242215.,  5316419.,  4494855.,  4564963.,
      4635631.,  4706859.,  3531094.,  3589806.,  3648998.,  3708670.,
      2517429.,  2564425.,  2611821.,  2659617.,  1453220.,  1488180.,
      1523460.,  1559060.,  1224336.,  1252048.,  1280016.,  1308240.,
      1598100.,  1633380.,  1668980.,  1704900.,  1999960.,  2043064.,
      2086552.,  2130424.,  2430428.,  2481612.,  2533244.,  2585324.,
      2554748.,  2606828.,  2659356.,  2712332.,  2679068.,  2732044.,
      2785468.,  2839340.,  2803388.,  2857260.,  2911580.,  2966348.,
      2498968.,  2545912.,  2593240.,  2640952.,  2163380.,  2203140.,
      2243220.,  2283620.,  1796112.,  1828432.,  1861008.,  1893840.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 1024.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      5.,       25.,      61.,      113.,     58.,      162.,     298.,
      466.,     287.,     539.,     839.,     1187.,    820.,     1284.,
      1812.,    2404.,    1684.,    2276.,    2932.,    3652.,    2548.,
      3268.,    4052.,    4900.,    3412.,    4260.,    5172.,    6148.,
      4103.,    4835.,    5615.,    6443.,    3850.,    4402.,    4986.,
      5602.,    2525.,    2833.,    3157.,    3497.,    274.,     666.,
      1090.,    1546.,    2052.,    2964.,    3940.,    4980.,    5590.,
      7150.,    8806.,    10558.,   11144.,   13480.,   15944.,   18536.,
      14920.,   17512.,   20232.,   23080.,   18696.,   21544.,   24520.,
      27624.,   22472.,   25576.,   28808.,   32168.,   22054.,   24574.,
      27190.,   29902.,   18340.,   20148.,   22020.,   23956.,   11074.,
      12042.,   13042.,   14074.,   4391.,    5507.,    6671.,    7883.,
      13150.,   15574.,   18094.,   20710.,   26661.,   30585.,   34653.,
      38865.,   45308.,   50924.,   56732.,   62732.,   54044.,   60044.,
      66236.,   72620.,   62780.,   69164.,   75740.,   82508.,   71516.,
      78284.,   85244.,   92396.,   64605.,   69969.,   75477.,   81129.,
      50638.,   54406.,   58270.,   62230.,   29231.,   31211.,   33239.,
      35315.,   15940.,   18132.,   20388.,   22708.,   40520.,   45160.,
      49928.,   54824.,   74252.,   81596.,   89132.,   96860.,   117648.,
      127952.,  138512.,  149328.,  133392.,  144208.,  155280.,  166608.,
      149136.,  160464.,  172048.,  183888.,  164880.,  176720.,  188816.,
      201168.,  142508.,  151772.,  161228.,  170876.,  107912.,  114344.,
      120904.,  127592.,  60580.,   63924.,   67332.,   70804.,   38116.,
      41204.,   44356.,   47572.,   88456.,   94888.,   101448.,  108136.,
      151532.,  161564.,  171788.,  182204.,  227856.,  241744.,  255888.,
      270288.,  243600.,  258000.,  272656.,  287568.,  259344.,  274256.,
      289424.,  304848.,  275088.,  290512.,  306192.,  322128.,  230540.,
      242492.,  254636.,  266972.,  170184.,  178408.,  186760.,  195240.,
      93508.,   97748.,   102052.,  106420.,  60292.,   64276.,   68324.,
      72436.,   136392.,  144616.,  152968.,  161448.,  228812.,  241532.,
      254444.,  267548.,  338064.,  355536.,  373264.,  391248.,  353808.,
      371792.,  390032.,  408528.,  369552.,  388048.,  406800.,  425808.,
      385296.,  404304.,  423568.,  443088.,  318572.,  333212.,  348044.,
      363068.,  232456.,  242472.,  252616.,  262888.,  126436.,  131572.,
      136772.,  142036.,  82468.,   87348.,   92292.,   97300.,   184328.,
      194344.,  204488.,  214760.,  306092.,  321500.,  337100.,  352892.,
      448272.,  469328.,  490640.,  512208.,  464016.,  485584.,  507408.,
      529488.,  479760.,  501840.,  524176.,  546768.,  495504.,  518096.,
      540944.,  564048.,  406604.,  423932.,  441452.,  459164.,  294728.,
      306536.,  318472.,  330536.,  159364.,  165396.,  171492.,  177652.,
      103463.,  107651.,  111887.,  116171.,  223582.,  232150.,  240814.,
      249574.,  360741.,  373881.,  387165.,  400593.,  515324.,  533228.,
      551324.,  569612.,  530204.,  548492.,  566972.,  585644.,  545084.,
      563756.,  582620.,  601676.,  559964.,  579020.,  598268.,  617708.,
      449373.,  463953.,  478677.,  493545.,  319438.,  329350.,  339358.,
      349462.,  169775.,  174827.,  179927.,  185075.,  99106.,   102250.,
      105426.,  108634.,  210724.,  217140.,  223620.,  230164.,  335110.,
      344926.,  354838.,  364846.,  472520.,  485864.,  499336.,  512936.,
      484488.,  498088.,  511816.,  525672.,  496456.,  510312.,  524296.,
      538408.,  508424.,  522536.,  536776.,  551144.,  403030.,  413806.,
      424678.,  435646.,  283332.,  290644.,  298020.,  305460.,  149074.,
      152794.,  156546.,  160330.,  65813.,   67561.,   69325.,   71105.,
      138586.,  142146.,  145738.,  149362.,  218447.,  223883.,  229367.,
      234899.,  305524.,  312900.,  320340.,  327844.,  312532.,  320036.,
      327604.,  335236.,  319540.,  327172.,  334868.,  342628.,  326548.,
      334308.,  342132.,  350020.,  256823.,  262739.,  268703.,  274715.,
      179242.,  183250.,  187290.,  191362.,  93677.,   95713.,   97765.,
      99833.,   389.,     921.,     1469.,    2033.,    2874.,    4002.,
      5162.,    6354.,    7583.,    9371.,    11207.,   13091.,   14644.,
      17156.,   19732.,   22372.,   23700.,   26340.,   29044.,   31812.,
      32756.,   35524.,   38356.,   41252.,   41812.,   44708.,   47668.,
      50692.,   35975.,   38243.,   40559.,   42923.,   27146.,   28722.,
      30330.,   31970.,   15197.,   16017.,   16853.,   17705.,   15378.,
      16794.,   18242.,   19722.,   36356.,   39316.,   42340.,   45428.,
      63190.,   67822.,   72550.,   77374.,   96136.,   102568.,  109128.,
      115816.,  116296.,  122984.,  129800.,  136744.,  136456.,  143400.,
      150472.,  157672.,  156616.,  163816.,  171144.,  178600.,  128806.,
      134398.,  140086.,  145870.,  93604.,   97460.,   101380.,  105364.,
      50754.,   52746.,   54770.,   56826.,   48551.,   51203.,   53903.,
      56651.,   107614.,  113110.,  118702.,  124390.,  177573.,  186105.,
      194781.,  203601.,  258812.,  270572.,  282524.,  294668.,  292124.,
      304268.,  316604.,  329132.,  325436.,  337964.,  350684.,  363596.,
      358748.,  371660.,  384764.,  398060.,  289245.,  299217.,  309333.,
      319593.,  206542.,  213382.,  220318.,  227350.,  110255.,  113771.,
      117335.,  120947.,  103492.,  107732.,  112036.,  116404.,  223816.,
      232552.,  241416.,  250408.,  361484.,  374972.,  388652.,  402524.,
      517008.,  535504.,  554256.,  573264.,  565520.,  584528.,  603792.,
      623312.,  614032.,  633552.,  653328.,  673360.,  662544.,  682576.,
      702864.,  723408.,  528044.,  543452.,  559052.,  574844.,  373128.,
      383656.,  394312.,  405096.,  197284.,  202676.,  208132.,  213652.,
      183012.,  188148.,  193348.,  198612.,  386440.,  396968.,  407624.,
      418408.,  610796.,  626972.,  643340.,  659900.,  856592.,  878672.,
      901008.,  923600.,  905104.,  927696.,  950544.,  973648.,  953616.,
      976720.,  1000080., 1023696., 1002128., 1025744., 1049616., 1073744.,
      788108.,  806204.,  824492.,  842972.,  550088.,  562408.,  574856.,
      587432.,  287556.,  293844.,  300196.,  306612.,  262532.,  268564.,
      274660.,  280820.,  549064.,  561384.,  573832.,  586408.,  860108.,
      878972.,  898028.,  917276.,  1196176., 1221840., 1247760., 1273936.,
      1244688., 1270864., 1297296., 1323984., 1293200., 1319888., 1346832.,
      1374032., 1341712., 1368912., 1396368., 1424080., 1048172., 1068956.,
      1089932., 1111100., 727048.,  741160.,  755400.,  769768.,  377828.,
      385012.,  392260.,  399572.,  342052.,  348980.,  355972.,  363028.,
      711688.,  725800.,  740040.,  754408.,  1109420., 1130972., 1152716.,
      1174652., 1535760., 1565008., 1594512., 1624272., 1584272., 1614032.,
      1644048., 1674320., 1632784., 1663056., 1693584., 1724368., 1681296.,
      1712080., 1743120., 1774416., 1308236., 1331708., 1355372., 1379228.,
      904008.,  919912.,  935944.,  952104.,  468100.,  476180.,  484324.,
      492532.,  319655.,  325379.,  331151.,  336971.,  662110.,  673750.,
      685486.,  697318.,  1027749., 1045497., 1063389., 1081425., 1416956.,
      1441004., 1465244., 1489676., 1456412., 1480844., 1505468., 1530284.,
      1495868., 1520684., 1545692., 1570892., 1535324., 1560524., 1585916.,
      1611500., 1190109., 1209297., 1228629., 1248105., 819406.,  832390.,
      845470.,  858646.,  422831.,  429419.,  436055.,  442739.,  257570.,
      261738.,  265938.,  270170.,  531748.,  540212.,  548740.,  557332.,
      822790.,  835678.,  848662.,  861742.,  1130952., 1148392., 1165960.,
      1183656., 1159304., 1177000., 1194824., 1212776., 1187656., 1205608.,
      1223688., 1241896., 1216008., 1234216., 1252552., 1271016., 939862.,
      953710.,  967654.,  981694.,  645316.,  654676.,  664100.,  673588.,
      332114.,  336858.,  341634.,  346442.,  152213.,  154473.,  156749.,
      159041.,  313434.,  318018.,  322634.,  327282.,  483791.,  490763.,
      497783.,  504851.,  663412.,  672836.,  682324.,  691876.,  678612.,
      688164.,  697780.,  707460.,  693812.,  703492.,  713236.,  723044.,
      709012.,  718820.,  728692.,  738628.,  546743.,  554195.,  561695.,
      569243.,  374570.,  379602.,  384666.,  389762.,  192365.,  194913.,
      197477.,  200057.,  773.,     1817.,    2877.,    3953.,    5690.,
      7842.,    10026.,   12242.,   14879.,   18203.,   21575.,   24995.,
      28468.,   33028.,   37652.,   42340.,   45716.,   50404.,   55156.,
      59972.,   62964.,   67780.,   72660.,   77604.,   80212.,   85156.,
      90164.,   95236.,   67847.,   71651.,   75503.,   79403.,   50442.,
      53042.,   55674.,   58338.,   27869.,   29201.,   30549.,   31913.,
      30482.,   32922.,   35394.,   37898.,   70660.,   75668.,   80740.,
      85876.,   120790.,  128494.,  136294.,  144190.,  181128.,  191656.,
      202312.,  213096.,  217672.,  228456.,  239368.,  250408.,  254216.,
      265256.,  276424.,  287720.,  290760.,  302056.,  313480.,  325032.,
      235558.,  244222.,  252982.,  261838.,  168868.,  174772.,  180740.,
      186772.,  90434.,   93450.,   96498.,   99578.,   92711.,   96899.,
      101135.,  105419.,  202078.,  210646.,  219310.,  228070.,  328485.,
      341625.,  354909.,  368337.,  472316.,  490220.,  508316.,  526604.,
      530204.,  548492.,  566972.,  585644.,  588092.,  606764.,  625628.,
      644684.,  645980.,  665036.,  684284.,  703724.,  513885.,  528465.,
      543189.,  558057.,  362446.,  372358.,  382366.,  392470.,  191279.,
      196331.,  201431.,  206579.,  191044.,  197332.,  203684.,  210100.,
      407112.,  419944.,  432904.,  445992.,  648716.,  668348.,  688172.,
      708188.,  916368.,  943056.,  970000.,  997200.,  997648.,  1024848.,
      1052304., 1080016., 1078928., 1106640., 1134608., 1162832., 1160208.,
      1188432., 1216912., 1245648., 913580.,  935132.,  956876.,  978812.,
      638344.,  652968.,  667720.,  682600.,  333988.,  341428.,  348932.,
      356500.,  327908.,  335092.,  342340.,  349652.,  684424.,  699048.,
      713800.,  728680.,  1070060., 1092380., 1114892., 1137596., 1485328.,
      1515600., 1546128., 1576912., 1566608., 1597392., 1628432., 1659728.,
      1647888., 1679184., 1710736., 1742544., 1729168., 1760976., 1793040.,
      1825360., 1345676., 1369916., 1394348., 1418972., 929992.,  946408.,
      962952.,  979624.,  481604.,  489940.,  498340.,  506804.,  464772.,
      472852.,  480996.,  489204.,  961736.,  978152.,  994696.,  1011368.,
      1491404., 1516412., 1541612., 1567004., 2054288., 2088144., 2122256.,
      2156624., 2135568., 2169936., 2204560., 2239440., 2216848., 2251728.,
      2286864., 2322256., 2298128., 2333520., 2369168., 2405072., 1777772.,
      1804700., 1831820., 1859132., 1221640., 1239848., 1258184., 1276648.,
      629220.,  638452.,  647748.,  657108.,  601636.,  610612.,  619652.,
      628756.,  1239048., 1257256., 1275592., 1294056., 1912748., 1940444.,
      1968332., 1996412., 2623248., 2660688., 2698384., 2736336., 2704528.,
      2742480., 2780688., 2819152., 2785808., 2824272., 2862992., 2901968.,
      2867088., 2906064., 2945296., 2984784., 2209868., 2239484., 2269292.,
      2299292., 1513288., 1533288., 1553416., 1573672., 776836.,  786964.,
      797156.,  807412.,  535847.,  543107.,  550415.,  557771.,  1100638.,
      1115350., 1130158., 1145062., 1694757., 1717113., 1739613., 1762257.,
      2318588., 2348780., 2379164., 2409740., 2382620., 2413196., 2443964.,
      2474924., 2446652., 2477612., 2508764., 2540108., 2510684., 2542028.,
      2573564., 2605292., 1930845., 1954641., 1978581., 2002665., 1319374.,
      1335430., 1351582., 1367830., 675887.,  684011.,  692183.,  700403.,
      416034.,  421226.,  426450.,  431706.,  852772.,  863284.,  873860.,
      884500.,  1310470., 1326430., 1342486., 1358638., 1789384., 1810920.,
      1832584., 1854376., 1834120., 1855912., 1877832., 1899880., 1878856.,
      1900904., 1923080., 1945384., 1923592., 1945896., 1968328., 1990888.,
      1476694., 1493614., 1510630., 1527742., 1007300., 1018708., 1030180.,
      1041716., 515154.,  520922.,  526722.,  532554.,  238613.,  241385.,
      244173.,  246977.,  488282.,  493890.,  499530.,  505202.,  749135.,
      757643.,  766199.,  774803.,  1021300., 1032772., 1044308., 1055908.,
      1044692., 1056292., 1067956., 1079684., 1068084., 1079812., 1091604.,
      1103460., 1091476., 1103332., 1115252., 1127236., 836663.,  845651.,
      854687.,  863771.,  569898.,  575954.,  582042.,  588162.,  291053.,
      294113.,  297189.,  300281.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 4}};
  const int multiplier = 2;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 2048.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, SAME3x10x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1820384.,  1923040.,  2027744.,  2134496.,  2500376.,  2629720.,
      2761624.,  2896088.,  3269712.,  3427792.,  3588944.,  3753168.,
      4132488.,  4321352.,  4513800.,  4709832.,  4355080.,  4542920.,
      4734344.,  4929352.,  4544904.,  4731720.,  4922120.,  5116104.,
      4936456.,  5130440.,  5328008.,  5529160.,  4593488.,  4765904.,
      4941392.,  5119952.,  4136600.,  4285400.,  4436760.,  4590680.,
      3561696.,  3684832.,  3810016.,  3937248.,  3332312.,  3475480.,
      3621208.,  3769496.,  4368558.,  4541630.,  4717902.,  4897374.,
      5502660.,  5708196.,  5917572.,  6130788.,  6739738.,  6980298.,
      7225338.,  7474858.,  6857978.,  7099306.,  7345114.,  7595402.,
      6943450.,  7185546.,  7432122.,  7683178.,  7460026.,  7711082.,
      7966618.,  8226634.,  6747268.,  6966628.,  7189828.,  7416868.,
      5873166.,  6058270.,  6246574.,  6438078.,  4832600.,  4980888.,
      5131736.,  5285144.,  4971856.,  5140176.,  5311568.,  5486032.,
      6035300.,  6241092.,  6450724.,  6664196.,  7222520.,  7468856.,
      7719800.,  7975352.,  8539660.,  8829612.,  9124940.,  9425644.,
      8472652.,  8765164.,  9063052.,  9366316.,  8372876.,  8667948.,
      8968396.,  9274220.,  8933580.,  9239404.,  9550604.,  9867180.,
      7971192.,  8239032.,  8511480.,  8788536.,  6815396.,  7042180.,
      7272804.,  7507268.,  5460048.,  5642704.,  5828432.,  6017232.,
      5932104.,  6142984.,  6357448.,  6575496.,  6891322.,  7143402.,
      7399962.,  7661002.,  7984876.,  8281740.,  8583980.,  8891596.,
      9219934.,  9565166.,  9916670.,  10274446., 8914430.,  9255822.,
      9603486.,  9957422.,  8543390.,  8880942.,  9224766.,  9574862.,
      9029438.,  9371342.,  9719518.,  10073966., 7795244.,  8088524.,
      8387180.,  8691212.,  6552666.,  6801930.,  7055674.,  7313898.,
      5092808.,  5294472.,  5499720.,  5708552.,  6161224.,  6378248.,
      6598856.,  6823048.,  6521338.,  6781098.,  7045338.,  7314058.,
      7021932.,  7328012.,  7639468.,  7956300.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      9221854.,  9570158.,  9924734.,  10285582., 9478526.,  9831182.,
      10190110., 10555310., 8310956.,  8613452.,  8921324.,  9234572.,
      7358234.,  7615178.,  7876602.,  8142506.,  6182088.,  6389896.,
      6601288.,  6816264.,  6652488.,  6875656.,  7102408.,  7332744.,
      8051898.,  8319338.,  8591258.,  8867658.,  9597932.,  9913228.,
      10233900., 10559948., 11297758., 11664494., 12037502., 12416782.,
      11123326., 11486222., 11855390., 12230830., 10883358., 11242414.,
      11607742., 11979342., 10910654., 11274062., 11643742., 12019694.,
      9219884.,  9531596.,  9848684.,  10171148., 7967194.,  8231818.,
      8500922.,  8774506.,  6484936.,  6698888.,  6916424.,  7137544.,
      7405896.,  7635208.,  7868104.,  8104584.,  8337274.,  8612394.,
      8891994.,  9176074.,  9421420.,  9745932.,  10075820., 10411084.,
      10660382., 11029678., 11405246., 11787086., 9989310.,  10346574.,
      10710110., 11079918., 9219934.,  9565166.,  9916670.,  10274446.,
      8914430.,  9255822.,  9603486.,  9957422.,  7028140.,  7316300.,
      7609836.,  7908748.,  5803162.,  6042698.,  6286714.,  6535210.,
      4342472.,  4529800.,  4720712.,  4915208.,  7231056.,  7442384.,
      7656784.,  7874256.,  7702692.,  7958148.,  8217444.,  8480580.,
      8324728.,  8627384.,  8934648.,  9246520.,  8868812.,  9213548.,
      9563660.,  9919148.,  8213004.,  8552108.,  8896588.,  9246444.,
      8540236.,  8873708.,  9212556.,  9556780.,  8801932.,  9129772.,
      9462988.,  9801580.,  7781112.,  8056120.,  8335736.,  8619960.,
      6610916.,  6838212.,  7069348.,  7304324.,  5214544.,  5391056.,
      5570640.,  5753296.,  5820632.,  6012952.,  6207832.,  6405272.,
      7435438.,  7665854.,  7899470.,  8136286.,  9180868.,  9451940.,
      9726852.,  10005604., 10598170., 10904266., 11214842., 11529898.,
      10459386., 10758058., 11061210., 11368842., 10255066., 10546314.,
      10842042., 11142250., 9985210.,  10269034., 10557338., 10850122.,
      8244356.,  8480100.,  8719684.,  8963108.,  6609422.,  6802718.,
      6999214.,  7198910.,  4775256.,  4923544.,  5074392.,  5227800.,
      6252768.,  6408672.,  6566624.,  6726624.,  7330712.,  7514328.,
      7700504.,  7889240.,  8502096.,  8715472.,  8931920.,  9151440.,
      9077768.,  9314760.,  9555336.,  9799496.,  8357256.,  8585032.,
      8816392.,  9051336.,  7571208.,  7789768.,  8011912.,  8237640.,
      6719624.,  6928968.,  7141896.,  7358408.,  4842064.,  5012432.,
      5185872.,  5362384.,  3343128.,  3480664.,  3620760.,  3763416.,
      1689312.,  1791968.,  1896672.,  2003424.,  2442976.,  2545632.,
      2650336.,  2757088.,  3297560.,  3431000.,  3567000.,  3705560.,
      4257872.,  4424144.,  4593488.,  4765904.,  5328008.,  5529160.,
      5733896.,  5942216.,  5719560.,  5927880.,  6139784.,  6355272.,
      5876616.,  6083912.,  6294792.,  6509256.,  6000904.,  6207176.,
      6417032.,  6630472.,  5417808.,  5598416.,  5782096.,  5968848.,
      4704408.,  4857304.,  5012760.,  5170776.,  3856608.,  3979744.,
      4104928.,  4232160.,  3982040.,  4129304.,  4279128.,  4431512.,
      5193518.,  5375806.,  5561294.,  5749982.,  6523332.,  6743204.,
      6966916.,  7194468.,  7976602.,  8236618.,  8501114.,  8770090.,
      8493178.,  8762154.,  9035610.,  9313546.,  8545882.,  8815626.,
      9089850.,  9368554.,  8565818.,  8836330.,  9111322.,  9390794.,
      7497604.,  7731300.,  7968836.,  8210212.,  6247566.,  6441886.,
      6639406.,  6840126.,  4810584.,  4962968.,  5117912.,  5275416.,
      5239120.,  5415632.,  5595216.,  5777872.,  6507108.,  6727236.,
      6951204.,  7179012.,  7923448.,  8190264.,  8461688.,  8737720.,
      9494284.,  9810860.,  10132812., 10460140., 10054988., 10382316.,
      10715020., 11053100., 9922444.,  10252332., 10587596., 10928236.,
      9757132.,  10089580., 10427404., 10770604., 8426360.,  8714680.,
      9007608.,  9305144.,  6877604.,  7118724.,  7363684.,  7612484.,
      5104720.,  5295568.,  5489488.,  5686480.,  5714504.,  5904904.,
      6098888.,  6296456.,  6805178.,  7043946.,  7287194.,  7534922.,
      8058860.,  8349580.,  8645676.,  8947148.,  9482718.,  9828974.,
      10181502., 10540302., 10137726., 10496526., 10861598., 11232942.,
      9870110.,  10233262., 10602686., 10978382., 9569726.,  9937230.,
      10311006., 10691054., 8127276.,  8447180.,  8772460.,  9103116.,
      6446042.,  6714762.,  6987962.,  7265642.,  5567432.,  5781384.,
      5998920.,  6220040.,  4567368.,  4763912.,  4964040.,  5167752.,
      6107514.,  6353962.,  6604890.,  6860298.,  7816812.,  8116748.,
      8422060.,  8732748.,  9702430.,  10059438., 10422718., 10792270.,
      10357438., 10726990., 11102814., 11484910., 10909022., 11282926.,
      11663102., 12049550., 11427838., 11806094., 12190622., 12581422.,
      10281388., 10610508., 10945004., 11284876., 8890010.,  9166410.,
      9447290.,  9732650.,  7246536.,  7466632.,  7690312.,  7917576.,
      5779528.,  5982216.,  6188488.,  6398344.,  7310394.,  7564522.,
      7823130.,  8086218.,  9016556.,  9325708.,  9640236.,  9960140.,
      10905182., 11272942., 11646974., 12027278., 11560190., 11940494.,
      12327070., 12719918., 11882398., 12267054., 12657982., 13055182.,
      12171838., 12560846., 12956126., 13357678., 10731564., 11069900.,
      11413612., 11762700., 9040218.,  9324298.,  9612858.,  9905898.,
      7090632.,  7316872.,  7546696.,  7780104.,  5113672.,  5306120.,
      5502152.,  5701768.,  6105850.,  6343082.,  6584794.,  6830986.,
      7246700.,  7532300.,  7823276.,  8119628.,  8543390.,  8880942.,
      9224766.,  9574862.,  9029438.,  9371342.,  9719518.,  10073966.,
      9482718.,  9828974.,  10181502., 10540302., 10137726., 10496526.,
      10861598., 11232942., 8933036.,  9247820.,  9567980.,  9893516.,
      7503898.,  7771082.,  8042746.,  8318890.,  5843144.,  6059144.,
      6278728.,  6501896.,  4364880.,  4551632.,  4741456.,  4934352.,
      5765028.,  5993860.,  6226532.,  6463044.,  7307384.,  7581368.,
      7859960.,  8143160.,  8998092.,  9320300.,  9647884.,  9980844.,
      9232140.,  9556908.,  9887052.,  10222572., 9433420.,  9760748.,
      10093452., 10431532., 10065804., 10403884., 10747340., 11096172.,
      9137400.,  9432888.,  9732984.,  10037688., 7997156.,  8246980.,
      8500644.,  8758148.,  6638928.,  6840016.,  7044176.,  7251408.,
      5630680.,  5794328.,  5960536.,  6129304.,  6850350.,  7049022.,
      7250894.,  7455966.,  8188356.,  8424612.,  8664708.,  8908644.,
      9649818.,  9926218.,  10207098., 10492458., 9581690.,  9858858.,
      10140506., 10426634., 9480794.,  9758730.,  10041146., 10328042.,
      10040378., 10327274., 10618650., 10914506., 8880004.,  9130084.,
      9384004.,  9641764.,  7537806.,  7748510.,  7962414.,  8179518.,
      6008664.,  6177432.,  6348760.,  6522648.,  4430048.,  4553184.,
      4678368.,  4805600.,  4809112.,  4955864.,  5105176.,  5257048.,
      5265232.,  5437648.,  5613136.,  5791696.,  5802504.,  6002632.,
      6206344.,  6413640.,  5382024.,  5581128.,  5783816.,  5990088.,
      4928776.,  5126856.,  5328520.,  5533768.,  5365384.,  5570632.,
      5779464.,  5991880.,  4585040.,  4763600.,  4945232.,  5129936.,
      3670296.,  3820120.,  3972504.,  4127448.,  2617056.,  2736096.,
      2857184.,  2980320.,  3239648.,  3358688.,  3479776.,  3602912.,
      4099864.,  4245592.,  4393880.,  4544728.,  5049424.,  5223888.,
      5401424.,  5582032.,  6092424.,  6297672.,  6506504.,  6718920.,
      6151176.,  6355400.,  6563208.,  6774600.,  6177160.,  6380360.,
      6587144.,  6797512.,  6170376.,  6372552.,  6578312.,  6787656.,
      5281616.,  5454032.,  5629520.,  5808080.,  4710040.,  4858840.,
      5010200.,  5164120.,  4020448.,  4143584.,  4268768.,  4396000.,
      5264600.,  5432344.,  5602648.,  5775512.,  6252974.,  6452670.,
      6655566.,  6861662.,  7347396.,  7581604.,  7819652.,  8061540.,
      8552986.,  8824266.,  9100026.,  9380266.,  8507386.,  8779434.,
      9055962.,  9336970.,  8429018.,  8701834.,  8979130.,  9260906.,
      8317882.,  8591466.,  8869530.,  9152074.,  6828676.,  7060324.,
      7295812.,  7535140.,  5830414.,  6025758.,  6224302.,  6426046.,
      4657496.,  4813976.,  4973016.,  5134616.,  6597968.,  6799056.,
      7003216.,  7210448.,  7442788.,  7685444.,  7931940.,  8182276.,
      8427768.,  8715064.,  9006968.,  9303480.,  9553932.,  9880748.,
      10212940., 10550508., 9285196.,  9606380.,  9932940.,  10264876.,
      8950924.,  9266476.,  9587404.,  9913708.,  8551116.,  8861036.,
      9176332.,  9497004.,  6655352.,  6915000.,  7179256.,  7448120.,
      5439652.,  5654148.,  5872484.,  6094660.,  4008016.,  4174288.,
      4343632.,  4516048.,  7264328.,  7483400.,  7706056.,  7932296.,
      7760442.,  8026858.,  8297754.,  8573130.,  8415468.,  8732812.,
      9055532.,  9383628.,  9002078.,  9365742.,  9735678.,  10111886.,
      8368894.,  8728718.,  9094814.,  9467182.,  8718750.,  9074734.,
      9436990.,  9805518.,  9003070.,  9355214.,  9713630.,  10078318.,
      8002604.,  8299980.,  8602732.,  8910860.,  6838106.,  7085322.,
      7337018.,  7593194.,  5431752.,  5625224.,  5822280.,  6022920.,
      6117192.,  6342408.,  6571208.,  6803592.,  7881978.,  8156074.,
      8434650.,  8717706.,  9811820.,  10138380., 10470316., 10807628.,
      11450014., 11824430., 12205118., 12592078., 11406654., 11777230.,
      12154078., 12537198., 11297758., 11664494., 12037502., 12416782.,
      11123326., 11486222., 11855390., 12230830., 9370284.,  9676876.,
      9988844.,  10306188., 7676442.,  7931338.,  8190714.,  8454570.,
      5734600.,  5934216.,  6137416.,  6344200.,  7329352.,  7560712.,
      7795656.,  8034184.,  8855482.,  9137258.,  9423514.,  9714250.,
      10552812., 10888588., 11229740., 11576268., 11735262., 12120430.,
      12511870., 12909582., 11233150., 11614478., 12002078., 12395950.,
      10660382., 11029678., 11405246., 11787086., 9989310.,  10346574.,
      10710110., 11079918., 7876908.,  8176332.,  8481132.,  8791308.,
      6046938.,  6293130.,  6543802.,  6798954.,  3962824.,  4152200.,
      4345160.,  4541704.,  6489416.,  6694152.,  6902472.,  7114376.,
      7744122.,  8000810.,  8261978.,  8527626.,  9176172.,  9488396.,
      9805996.,  10128972., 9870110.,  10233262., 10602686., 10978382.,
      9569726.,  9937230.,  10311006., 10691054., 9002078.,  9365742.,
      9735678.,  10111886., 8368894.,  8728718.,  9094814.,  9467182.,
      7671724.,  7980364.,  8294380.,  8613772.,  6721434.,  6975306.,
      7233658.,  7496490.,  5510856.,  5706376.,  5905480.,  6108168.,
      5254736.,  5449680.,  5647696.,  5848784.,  6900388.,  7143556.,
      7390564.,  7641412.,  8712824.,  9007288.,  9306360.,  9610040.,
      10594764., 10935404., 11281420., 11632812., 11090956., 11434156.,
      11782732., 12136684., 11090508., 11428076., 11771020., 12119340.,
      11024524., 11356460., 11693772., 12036460., 9555704.,  9838904.,
      10126712., 10419128., 7850468.,  8081860.,  8317092.,  8556164.,
      5902672.,  6079184.,  6258768.,  6441424.,  5919960.,  6087704.,
      6258008.,  6430872.,  7339438.,  7547326.,  7758414.,  7972702.,
      8897732.,  9148324.,  9402756.,  9661028.,  10267162., 10554826.,
      10846970., 11143594., 10461178., 10749610., 11042522., 11339914.,
      9929178.,  10210186., 10495674., 10785642., 9331642.,  9605226.,
      9883290.,  10165834., 7660164.,  7891812.,  8127300.,  8366628.,
      5786382.,  5973534.,  6163886.,  6357438.,  3705176.,  3845272.,
      3987928.,  4133144.,  4004064.,  4127200.,  4252384.,  4379616.,
      4508568.,  4659416.,  4812824.,  4968792.,  5106512.,  5287120.,
      5470800.,  5657552.,  5801992.,  6014408.,  6230408.,  6449992.,
      6238600.,  6458184.,  6681352.,  6908104.,  5752584.,  5971144.,
      6193288.,  6419016.,  5233800.,  5451336.,  5672456.,  5897160.,
      4131408.,  4318160.,  4507984.,  4700880.,  2878232.,  3032152.,
      3188632.,  3347672.,  2518752.,  2637792.,  2758880.,  2882016.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::SAME;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
TYPED_TEST(InputBackpropWindow7Stride1, VALID3x10x10x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      30.,      174.,     446.,     846.,     380.,     1180.,    2236.,
      3548.,    2074.,    4042.,    6394.,    9130.,    6136.,    9784.,
      13944.,   18616.,   12920.,   17592.,   22776.,   28472.,   19704.,
      25400.,   31608.,   38328.,   26488.,   33208.,   40440.,   48184.,
      32122.,   37930.,   44122.,   50698.,   30268.,   34652.,   39292.,
      44188.,   19902.,   22350.,   24926.,   27630.,   1820.,    4924.,
      8284.,    11900.,   15544.,   22776.,   30520.,   38776.,   43220.,
      55604.,   68756.,   82676.,   86896.,   105456.,  125040.,  145648.,
      116848.,  137456.,  159088.,  181744.,  146800.,  169456.,  193136.,
      217840.,  176752.,  201456.,  227184.,  253936.,  173972.,  194036.,
      214868.,  236468.,  144952.,  159352.,  174264.,  189688.,  87644.,
      95356.,   103324.,  111548.,  34042.,   42922.,   52186.,   61834.,
      102836.,  122132.,  142196.,  163028.,  209454.,  240702.,  273102.,
      306654.,  356968.,  401704.,  447976.,  495784.,  426472.,  474280.,
      523624.,  574504.,  495976.,  546856.,  599272.,  653224.,  565480.,
      619432.,  674920.,  731944.,  511566.,  554334.,  598254.,  643326.,
      401396.,  431444.,  462260.,  493844.,  231898.,  247690.,  263866.,
      280426.,  125368.,  142840.,  160824.,  179320.,  319600.,  356592.,
      394608.,  433648.,  586792.,  645352.,  705448.,  767080.,  931040.,
      1013216., 1097440., 1183712., 1056480., 1142752., 1231072., 1321440.,
      1181920., 1272288., 1364704., 1459168., 1307360., 1401824., 1498336.,
      1596896., 1130920., 1204840., 1280296., 1357288., 856944.,  908272.,
      960624.,  1014000., 481336.,  508024.,  535224.,  562936.,  301880.,
      326520.,  351672.,  377336.,  701296.,  752624.,  804976.,  858352.,
      1202344., 1282408., 1364008., 1447144., 1809120., 1919968., 2032864.,
      2147808., 1929440., 2036192., 2144992., 2255840., 2016992., 2119648.,
      2224352., 2331104., 2071776., 2170336., 2270944., 2373600., 1620520.,
      1691368., 1763752., 1837672., 1179248., 1228528., 1278832., 1330160.,
      640440.,  666104.,  692280.,  718968.,  473272.,  496888.,  521016.,
      545656.,  1039984., 1089264., 1139568., 1190896., 1704232., 1781224.,
      1859752., 1939816., 2470112., 2576864., 2685664., 2796512., 2459360.,
      2562016., 2666720., 2773472., 2415840., 2514400., 2615008., 2717664.,
      2339552., 2434016., 2530528., 2629088., 1716904., 1784680., 1853992.,
      1924840., 1239408., 1286640., 1334896., 1384176., 668472.,  693112.,
      718264.,  743928.,  513592.,  536184.,  559288.,  582904.,  1116528.,
      1163760., 1212016., 1261296., 1812904., 1886824., 1962280., 2039272.,
      2606816., 2709472., 2814176., 2920928., 2464992., 2563552., 2664160.,
      2766816., 2290400., 2384864., 2481376., 2579936., 2083040., 2173408.,
      2265824., 2360288., 1420072., 1484776., 1551016., 1618792., 1037424.,
      1082608., 1128816., 1176048., 565432.,  589048.,  613176.,  637816.,
      420090.,  437162.,  454618.,  472458.,  907700.,  943380.,  979828.,
      1017044., 1465902., 1521726., 1578702., 1636830., 2097768., 2175272.,
      2254312., 2334888., 1818088., 1890472., 1964392., 2039848., 1505640.,
      1572904., 1641704., 1712040., 1160424., 1222568., 1286248., 1351464.,
      585294.,  628062.,  671982.,  717054.,  450548.,  480596.,  511412.,
      542996.,  256474.,  272266.,  288442.,  305002.,  124124.,  132860.,
      141852.,  151100.,  282680.,  301176.,  320184.,  339704.,  477716.,
      506996.,  537044.,  567860.,  711280.,  752368.,  794480.,  837616.,
      806768.,  849904.,  894064.,  939248.,  902256.,  947440.,  993648.,
      1040880., 997744.,  1044976., 1093232., 1142512., 823508.,  860468.,
      898196.,  936692.,  600504.,  626168.,  652344.,  679032.,  326684.,
      340028.,  353628.,  367484.,  126430.,  132206.,  138110.,  144142.,
      275708.,  287772.,  300092.,  312668.,  448858.,  467722.,  486970.,
      506602.,  646904.,  673080.,  699768.,  726968.,  702840.,  730040.,
      757752.,  785976.,  758776.,  787000.,  815736.,  844984.,  814712.,
      843960.,  873720.,  903992.,  657082.,  679786.,  702874.,  726346.,
      469436.,  485084.,  500988.,  517148.,  250750.,  258830.,  267038.,
      275374.,  2590.,    6830.,    11198.,   15694.,   21884.,   30876.,
      40124.,   49628.,   58906.,   73162.,   87802.,   102826.,  114680.,
      134712.,  155256.,  176312.,  187000.,  208056.,  229624.,  251704.,
      259320.,  281400.,  303992.,  327096.,  331640.,  354744.,  378360.,
      402488.,  285562.,  303658.,  322138.,  341002.,  215612.,  228188.,
      241020.,  254108.,  120766.,  127310.,  133982.,  140782.,  121628.,
      132924.,  144476.,  156284.,  287928.,  311544.,  335672.,  360312.,
      500948.,  537908.,  575636.,  614132.,  762736.,  814064.,  866416.,
      919792.,  923760.,  977136.,  1031536., 1086960., 1084784., 1140208.,
      1196656., 1254128., 1245808., 1303280., 1361776., 1421296., 1024916.,
      1069556., 1114964., 1161140., 745016.,  775800.,  807096.,  838904.,
      404060.,  419964.,  436124.,  452540.,  385786.,  406954.,  428506.,
      450442.,  855476.,  899348.,  943988.,  989396.,  1412142., 1480254.,
      1549518., 1619934., 2058856., 2152744., 2248168., 2345128., 2324968.,
      2421928., 2520424., 2620456., 2591080., 2691112., 2792680., 2895784.,
      2857192., 2960296., 3064936., 3171112., 2304078., 2383710., 2464494.,
      2546430., 1645556., 1700180., 1755572., 1811732., 878554.,  906634.,
      935098.,  963946.,  823736.,  857592.,  891960.,  926840.,  1781872.,
      1851632., 1922416., 1994224., 2878504., 2986216., 3095464., 3206248.,
      4117728., 4265440., 4415200., 4567008., 4505312., 4657120., 4810976.,
      4966880., 4892896., 5048800., 5206752., 5366752., 5280480., 5440480.,
      5602528., 5766624., 4209064., 4332136., 4456744., 4582888., 2974576.,
      3058672., 3143792., 3229936., 1572920., 1615992., 1659576., 1703672.,
      1459000., 1500024., 1541560., 1583608., 3081072., 3165168., 3250288.,
      3336432., 4870312., 4999528., 5130280., 5262568., 6830816., 7007200.,
      7185632., 7366112., 6688992., 6861280., 7035616., 7212000., 6514400.,
      6682592., 6852832., 7025120., 6307040., 6471136., 6637280., 6805472.,
      4502056., 4622056., 4743592., 4866664., 3165808., 3247856., 3330928.,
      3415024., 1666488., 1708536., 1751096., 1794168., 1564856., 1604856.,
      1645368., 1686392., 3288688., 3370736., 3453808., 3537904., 5175592.,
      5301736., 5429416., 5558632., 7229664., 7401952., 7576288., 7752672.,
      6956768., 7124960., 7295200., 7467488., 6651104., 6815200., 6981344.,
      7149536., 6312672., 6472672., 6634720., 6798816., 4401832., 4518760.,
      4637224., 4757224., 3094896., 3174896., 3255920., 3337968., 1628984.,
      1670008., 1711544., 1753592., 1539640., 1578616., 1618104., 1658104.,
      3234160., 3314160., 3395184., 3477232., 5087656., 5210728., 5335336.,
      5461480., 7104224., 7272416., 7442656., 7614944., 6700256., 6864352.,
      7030496., 7198688., 6263520., 6423520., 6585568., 6749664., 5794016.,
      5949920., 6107872., 6267872., 3908392., 4022248., 4137640., 4254568.,
      2761840., 2839792., 2918768., 2998768., 1460408., 1500408., 1540920.,
      1581944., 1099514., 1128874., 1158618., 1188746., 2315700., 2375956.,
      2436980., 2498772., 3651630., 3744318., 3838158., 3933150., 5110376.,
      5237032., 5365224., 5494952., 4503016., 4624552., 4747624., 4872232.,
      3862888., 3979304., 4097256., 4216744., 3189992., 3301288., 3414120.,
      3528488., 1787982., 1867614., 1948398., 2030334., 1301492., 1356116.,
      1411508., 1467668., 706522.,  734602.,  763066.,  791914.,  342236.,
      359164.,  376348.,  393788.,  751672.,  786552.,  821944.,  857848.,
      1230356., 1284212., 1338836., 1394228., 1780336., 1854192., 1929072.,
      2004976., 2006896., 2082800., 2159728., 2237680., 2233456., 2311408.,
      2390384., 2470384., 2460016., 2540016., 2621040., 2703088., 1969364.,
      2030900., 2093204., 2156276., 1397176., 1439224., 1481784., 1524856.,
      741404.,  762940.,  784732.,  806780.,  292830.,  302702.,  312702.,
      322830.,  624892.,  645148.,  665660.,  686428.,  997210.,  1028362.,
      1059898., 1091818., 1410808., 1453368., 1496440., 1540024., 1532280.,
      1575864., 1619960., 1664568., 1653752., 1698360., 1743480., 1789112.,
      1775224., 1820856., 1867000., 1913656., 1402042., 1437034., 1472410.,
      1508170., 982460.,  1006300., 1030396., 1054748., 515454.,  527630.,
      539934.,  552366.,  30.,      174.,     446.,     846.,     380.,
      1180.,    2236.,    3548.,    2074.,    4042.,    6394.,    9130.,
      6136.,    9784.,    13944.,   18616.,   12920.,   17592.,   22776.,
      28472.,   19704.,   25400.,   31608.,   38328.,   26488.,   33208.,
      40440.,   48184.,   32122.,   37930.,   44122.,   50698.,   30268.,
      34652.,   39292.,   44188.,   19902.,   22350.,   24926.,   27630.,
      1820.,    4924.,    8284.,    11900.,   15544.,   22776.,   30520.,
      38776.,   43220.,   55604.,   68756.,   82676.,   86896.,   105456.,
      125040.,  145648.,  116848.,  137456.,  159088.,  181744.,  146800.,
      169456.,  193136.,  217840.,  176752.,  201456.,  227184.,  253936.,
      173972.,  194036.,  214868.,  236468.,  144952.,  159352.,  174264.,
      189688.,  87644.,   95356.,   103324.,  111548.,  34042.,   42922.,
      52186.,   61834.,   102836.,  122132.,  142196.,  163028.,  209454.,
      240702.,  273102.,  306654.,  356968.,  401704.,  447976.,  495784.,
      426472.,  474280.,  523624.,  574504.,  495976.,  546856.,  599272.,
      653224.,  565480.,  619432.,  674920.,  731944.,  511566.,  554334.,
      598254.,  643326.,  401396.,  431444.,  462260.,  493844.,  231898.,
      247690.,  263866.,  280426.,  125368.,  142840.,  160824.,  179320.,
      319600.,  356592.,  394608.,  433648.,  586792.,  645352.,  705448.,
      767080.,  931040.,  1013216., 1097440., 1183712., 1056480., 1142752.,
      1231072., 1321440., 1181920., 1272288., 1364704., 1459168., 1307360.,
      1401824., 1498336., 1596896., 1130920., 1204840., 1280296., 1357288.,
      856944.,  908272.,  960624.,  1014000., 481336.,  508024.,  535224.,
      562936.,  301880.,  326520.,  351672.,  377336.,  701296.,  752624.,
      804976.,  858352.,  1202344., 1282408., 1364008., 1447144., 1809120.,
      1919968., 2032864., 2147808., 1929440., 2036192., 2144992., 2255840.,
      2016992., 2119648., 2224352., 2331104., 2071776., 2170336., 2270944.,
      2373600., 1620520., 1691368., 1763752., 1837672., 1179248., 1228528.,
      1278832., 1330160., 640440.,  666104.,  692280.,  718968.,  473272.,
      496888.,  521016.,  545656.,  1039984., 1089264., 1139568., 1190896.,
      1704232., 1781224., 1859752., 1939816., 2470112., 2576864., 2685664.,
      2796512., 2459360., 2562016., 2666720., 2773472., 2415840., 2514400.,
      2615008., 2717664., 2339552., 2434016., 2530528., 2629088., 1716904.,
      1784680., 1853992., 1924840., 1239408., 1286640., 1334896., 1384176.,
      668472.,  693112.,  718264.,  743928.,  513592.,  536184.,  559288.,
      582904.,  1116528., 1163760., 1212016., 1261296., 1812904., 1886824.,
      1962280., 2039272., 2606816., 2709472., 2814176., 2920928., 2464992.,
      2563552., 2664160., 2766816., 2290400., 2384864., 2481376., 2579936.,
      2083040., 2173408., 2265824., 2360288., 1420072., 1484776., 1551016.,
      1618792., 1037424., 1082608., 1128816., 1176048., 565432.,  589048.,
      613176.,  637816.,  420090.,  437162.,  454618.,  472458.,  907700.,
      943380.,  979828.,  1017044., 1465902., 1521726., 1578702., 1636830.,
      2097768., 2175272., 2254312., 2334888., 1818088., 1890472., 1964392.,
      2039848., 1505640., 1572904., 1641704., 1712040., 1160424., 1222568.,
      1286248., 1351464., 585294.,  628062.,  671982.,  717054.,  450548.,
      480596.,  511412.,  542996.,  256474.,  272266.,  288442.,  305002.,
      124124.,  132860.,  141852.,  151100.,  282680.,  301176.,  320184.,
      339704.,  477716.,  506996.,  537044.,  567860.,  711280.,  752368.,
      794480.,  837616.,  806768.,  849904.,  894064.,  939248.,  902256.,
      947440.,  993648.,  1040880., 997744.,  1044976., 1093232., 1142512.,
      823508.,  860468.,  898196.,  936692.,  600504.,  626168.,  652344.,
      679032.,  326684.,  340028.,  353628.,  367484.,  126430.,  132206.,
      138110.,  144142.,  275708.,  287772.,  300092.,  312668.,  448858.,
      467722.,  486970.,  506602.,  646904.,  673080.,  699768.,  726968.,
      702840.,  730040.,  757752.,  785976.,  758776.,  787000.,  815736.,
      844984.,  814712.,  843960.,  873720.,  903992.,  657082.,  679786.,
      702874.,  726346.,  469436.,  485084.,  500988.,  517148.,  250750.,
      258830.,  267038.,  275374.};
  const std::array<int, 4> in_shape = {{3, 10, 10, 4}};
  const int multiplier = 4;
  const auto padding = sycldnn::PaddingMode::VALID;
  const DataType max_input_val = 512.0;
  this->run_input_backprop_test(exp_out, in_shape, multiplier, padding,
                                max_input_val);
}
